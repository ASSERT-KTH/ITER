bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules.get(i  +  1);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules.get(i  +  1);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  RuleRule>  mRules  =  mRules.get(i  +  1);	  Format    <    String,    RuleRule>    mRules    =    mRules.get(i);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
2	[BUG]  [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules.get(format);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules.get(format);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  RuleRule>  mRules  =  mRules.get(format);	  Format    <    String,    RuleRule>    mRules    =    mRules.get(i);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
3	[BUG]  [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules.get(mStyle);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules.get(mStyle);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  RuleRule>  mRules  =  mRules.get(mStyle);	  Format    <    String,    RuleRule>    mRules    =    mRules.get(i);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
4	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.SHORT,  emptyFormat);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.SHORT,  emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.SHORT,  emptyFormat);	  format    =    new    FastDateFormat(FastDateFormat.SHORT);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
5	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone.getDefault(),  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone.getDefault(),  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone.getDefault(),  locale);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
6	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone.getValue(),  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone.getValue(),  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone.getValue(),  locale);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
7	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone.getType(),  locale);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone.getType(),  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone.getType(),  locale);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
8	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone.getTime(),  locale);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone.getTime(),  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone.getTime(),  locale);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
9	[BUG]  [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.remove(format);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.remove(format);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =(FastDateFormat)cInstanceCache.remove(format);	  Format    format    =(FastDateFormat)cInstanceCache.get(format);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
10	[BUG]  [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(0);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(0);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =(FastDateFormat)cInstanceCache.get(0);	  Format    format    =(FastDateFormat)cInstanceCache.get(format);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
11	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  true);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  true);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.class,  true);	  format    =    new    FastDateFormat(FastDateFormat.class,    false);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
12	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  false,  true);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  false,  true);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.class,  false,  true);	  format    =    new    FastDateFormat(FastDateFormat.class,    false);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
13	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  false,  cInstanceCache);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  false,  cInstanceCache);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.class,  false,  cInstanceCache);	  format    =    new    FastDateFormat(FastDateFormat.class,    false);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
14	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  false,  null);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  false,  null);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.class,  false,  null);	  format    =    new    FastDateFormat(FastDateFormat.class,    false);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
15	[BUG]  [BUGGY]  Format  format  =  getInstance(pattern,  timeZone,  locale,  false);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  getInstance(pattern,  timeZone,  locale,  false);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  getInstance(pattern,  timeZone,  locale,  false);	  Format    format    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
16	[BUG]  [BUGGY]  Format  format  =  getInstance(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  getInstance(pattern,  timeZone,  locale,  true);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  getInstance(pattern,  timeZone,  locale,  true);	  Format    format    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
17	[BUG]  [BUGGY]  Format  format  =  getInstance(pattern,  timeZone,  locale,  mLocale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  getInstance(pattern,  timeZone,  locale,  mLocale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  getInstance(pattern,  timeZone,  locale,  mLocale);	  Format    format    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
18	[BUG]  [BUGGY]  Format  <  Rule>  mRules  =  mRules.get(mStyle);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule>  mRules  =  mRules.get(mStyle);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule>  mRules  =  mRules.get(mStyle);	  Format    <    Rule>    mRules    =    mRules.get(i);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
19	[BUG]  [BUGGY]  Format  <  Rule>  mRules  =  mRules.get(i  +  1);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule>  mRules  =  mRules.get(i  +  1);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule>  mRules  =  mRules.get(i  +  1);	  Format    <    Rule>    mRules    =    mRules.get(i);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
20	[BUG]  [BUGGY]  Format  <  Rule>  mRules  =  mRules.get(0);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule>  mRules  =  mRules.get(0);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule>  mRules  =  mRules.get(0);	  Format    <    Rule>    mRules    =    mRules.get(i);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
21	[BUG]  [BUGGY]  format  =  cInstanceCache.getInstance(null);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.getInstance(null);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.getInstance(null);	  format    =    cInstanceCache.getInstance();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
22	[BUG]  [BUGGY]  format  =  cInstanceCache.getInstance(false);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.getInstance(false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.getInstance(false);	  format    =    cInstanceCache.getInstance();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
23	[BUG]  [BUGGY]  format  =  cInstanceCache.getInstance(timeZone);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.getInstance(timeZone);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.getInstance(timeZone);	  format    =    cInstanceCache.getInstance();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
24	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  TimeZone,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  TimeZone,  timeZone,  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  TimeZone,  timeZone,  locale);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    TimeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
25	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(format,  TimeZone,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(format,  TimeZone,  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(format,  TimeZone,  locale);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    TimeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
26	[BUG]  [BUGGY]  format  =  new  FastDateFormat(true,  false);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(true,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(true,  false);	  format    =    new    FastDateFormat(false,    true);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
27	[BUG]  [BUGGY]  format  =  new  FastDateFormat(true,  true);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(true,  true);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(true,  true);	  format    =    new    FastDateFormat(false,    true);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
28	[BUG]  [BUGGY]  format  =  new  FastDateFormat(false,  true,  false);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(false,  true,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(false,  true,  false);	  format    =    new    FastDateFormat(false,    true);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
29	[BUG]  [BUGGY]  format  =  new  FastDateFormat(LONG,  MEDIUM);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(LONG,  MEDIUM);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(LONG,  MEDIUM);	  format    =    new    FastDateFormat(LONG);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
30	[BUG]  [BUGGY]  format  =  new  FastDateFormat(LONG,  FORMAT);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(LONG,  FORMAT);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(LONG,  FORMAT);	  format    =    new    FastDateFormat(LONG);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
31	[BUG]  [BUGGY]  format  =  new  FastDateFormat(LONG,  false);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(LONG,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(LONG,  false);	  format    =    new    FastDateFormat(LONG);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
32	[BUG]  [BUGGY]  format  =  new  FastDateFormat(LONG,  1);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(LONG,  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(LONG,  1);	  format    =    new    FastDateFormat(LONG);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
33	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mSize);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mSize);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mSize);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale,    mTimeZone);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
34	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mStandard);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mStandard);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mStandard);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale,    mTimeZone);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
35	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  mStyle,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  mStyle,  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  mStyle,  locale);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale,    mMaxLengthEstimate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
36	[BUG]  [BUGGY]  format  =  cInstanceCache.getInstance(mStyle,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.getInstance(mStyle,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.getInstance(mStyle,  locale);	  format    =    format.getInstance();    	non-compiled	[CE]  <identifier>  expected	102	None	replace
37	[BUG]  [BUGGY]  format  =  cInstanceCache.getInstance(mValues,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.getInstance(mValues,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.getInstance(mValues,  locale);	  format    =    format.getInstance();    	non-compiled	[CE]  <identifier>  expected	102	None	replace
38	[BUG]  [BUGGY]  format  =  new  FastDateFormat(true,  cInstanceCache);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(true,  cInstanceCache);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(true,  cInstanceCache);	  format    =    new    FastDateFormat(false,    cInstanceCache);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
39	[BUG]  [BUGGY]  format  =  new  FastDateFormat(false,  emptyFormat);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(false,  emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(false,  emptyFormat);	  format    =    new    FastDateFormat(false,    cInstanceCache);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
40	[BUG]  [BUGGY]  format  =  new  FastDateFormat(false,  cInstanceCache,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(false,  cInstanceCache,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(false,  cInstanceCache,  locale);	  format    =    new    FastDateFormat(false,    cInstanceCache);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
41	[BUG]  [BUGGY]  Format  <  String,  RuleRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  false);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  RuleRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  false);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  RuleRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  false);	  Format    <    String,    RuleRule>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
42	[BUG]  [BUGGY]  Format  <  String,  RuleRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  RuleRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  true);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  RuleRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  true);	  Format    <    String,    RuleRule>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
43	[BUG]  [BUGGY]  Format  <  String,  RuleRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  format);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  RuleRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  format);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  RuleRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  format);	  Format    <    String,    RuleRule>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
44	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  emptyFormat,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  emptyFormat,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  emptyFormat,  locale);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
45	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  emptyFormat,  cInstanceCache);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  emptyFormat,  cInstanceCache);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  emptyFormat,  cInstanceCache);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
46	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  emptyFormat,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  emptyFormat,  mMaxLengthEstimate);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  emptyFormat,  mMaxLengthEstimate);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
47	[BUG]  [BUGGY]  format  =  new  FastDateFormat(pattern,  FORMAT);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(pattern,  FORMAT);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(pattern,  FORMAT);	  format    =    new    FastDateFormat(emptyFormat,    FORMAT);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
48	[BUG]  [BUGGY]  format  =  new  FastDateFormat(format,  FORMAT);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(format,  FORMAT);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(format,  FORMAT);	  format    =    new    FastDateFormat(emptyFormat,    FORMAT);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
49	[BUG]  [BUGGY]  format  =  new  FastDateFormat(false,  FORMAT);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(false,  FORMAT);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(false,  FORMAT);	  format    =    new    FastDateFormat(emptyFormat,    FORMAT);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
50	[BUG]  [BUGGY]  format  =  emptyFormat.newInstance();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  emptyFormat.newInstance();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  emptyFormat.newInstance();	  format    =    emptyFormat.clone();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
51	[BUG]  [BUGGY]  format  =  emptyFormat.get();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  emptyFormat.get();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  emptyFormat.get();	  format    =    emptyFormat.clone();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
52	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  true);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  true);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  true);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    false);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
53	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  false,  true);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  false,  true);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  false,  true);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    false);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
54	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  null);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  null);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  null);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    false);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
55	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  false,  0);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  false,  0);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  false,  0);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    false);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
56	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  true);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  true);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NONE,  true);	  format    =    new    FastDateFormat(FastDateFormat.NONE,    false);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
57	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  false,  true);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  false,  true);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NONE,  false,  true);	  format    =    new    FastDateFormat(FastDateFormat.NONE,    false);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
58	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  null);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  null);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NONE,  null);	  format    =    new    FastDateFormat(FastDateFormat.NONE,    false);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
59	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  false,  0);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  false,  0);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NONE,  false,  0);	  format    =    new    FastDateFormat(FastDateFormat.NONE,    false);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
60	[BUG]  [BUGGY]  cInstanceCache.put(emptyFormat,  values);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  cInstanceCache.put(emptyFormat,  values);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	cInstanceCache.put(emptyFormat,  values);	  cInstanceCache.put(values,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
61	[BUG]  [BUGGY]  format  =  emptyFormat.createInstance();  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  emptyFormat.createInstance();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  emptyFormat.createInstance();	  format    =    emptyFormat.create();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
62	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale  -  1);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale  -  1);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale  -  1);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale    +    1);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
63	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  2);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  2);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  2);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale    +    1);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
64	[BUG]  [BUGGY]  format  =  cInstanceCache.getInstance(format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.getInstance(format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.getInstance(format);	  format    =    cInstanceCache.getInstance(emptyFormat);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
65	[BUG]  [BUGGY]  format  =  cInstanceCache.getInstance(format,  emptyFormat);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.getInstance(format,  emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.getInstance(format,  emptyFormat);	  format    =    cInstanceCache.getInstance(emptyFormat);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
66	[BUG]  [BUGGY]  format  =  cInstanceCache.getInstance(pattern);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.getInstance(pattern);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.getInstance(pattern);	  format    =    cInstanceCache.getInstance(emptyFormat);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
67	[BUG]  [BUGGY]  Format  >>  null)  {  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  emptyFormat.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  >>  null)  {  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  emptyFormat.put(i,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  >>  null)  {  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  emptyFormat.put(i,  format);  }	  Format!=    null)    {    for(int    i    =    0;    i    <    rules.size();    ++i)    {    emptyFormat.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
68	[BUG]  [BUGGY]  Format  >=  null)  {  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  emptyFormat.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  >=  null)  {  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  emptyFormat.put(i,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  >=  null)  {  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  emptyFormat.put(i,  format);  }	  Format!=    null)    {    for(int    i    =    0;    i    <    rules.size();    ++i)    {    emptyFormat.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
69	[BUG]  [BUGGY]  format  =  emptyFormat.cloneTree(this,  pattern);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  emptyFormat.cloneTree(this,  pattern);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  emptyFormat.cloneTree(this,  pattern);	  format    =    emptyFormat.cloneTree(this);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
70	[BUG]  [BUGGY]  format  =  emptyFormat.cloneTree(this,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  emptyFormat.cloneTree(this,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  emptyFormat.cloneTree(this,  locale);	  format    =    emptyFormat.cloneTree(this);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
71	[BUG]  [BUGGY]  format  =  emptyFormat.cloneTree(this,  false);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  emptyFormat.cloneTree(this,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  emptyFormat.cloneTree(this,  false);	  format    =    emptyFormat.cloneTree(this);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
72	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  [Delete]  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	[Delete]	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
73	[BUG]  [BUGGY]  >>  [Delete]  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  >>  [Delete]  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	>>  [Delete]	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
74	[BUG]  [BUGGY]  ==  [Delete]  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  ==  [Delete]  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	==  [Delete]	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
75	[BUG]  [BUGGY]  >=  [Delete]  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  >=  [Delete]  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	>=  [Delete]	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
76	[BUG]  [BUGGY]  cInstanceCache.put(emptyFormat,  null);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  cInstanceCache.put(emptyFormat,  null);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	cInstanceCache.put(emptyFormat,  null);	  cInstanceCache.put(format,    null);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
77	[BUG]  [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(new  FastDateFormat(pattern,  timeZone,  locale));  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(new  FastDateFormat(pattern,  timeZone,  locale));  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =(FastDateFormat)cInstanceCache.get(new  FastDateFormat(pattern,  timeZone,  locale));	  Format    format    =(FastDateFormat)cInstanceCache.get(emptyFormat);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
78	[BUG]  [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(defaultPattern);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(defaultPattern);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =(FastDateFormat)cInstanceCache.get(defaultPattern);	  Format    format    =(FastDateFormat)cInstanceCache.get(emptyFormat);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
79	[BUG]  [BUGGY]  Format  <  String,String>  mRules  =  cInstanceCache.get(mValues);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,String>  mRules  =  cInstanceCache.get(mValues);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,String>  mRules  =  cInstanceCache.get(mValues);	  Format    <    String,String>    mRules    =    cInstanceCache.get(values);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
80	[BUG]  [BUGGY]  Format  <  String,String>  mRules  =  cInstanceCache.get(emptyFormat);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,String>  mRules  =  cInstanceCache.get(emptyFormat);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,String>  mRules  =  cInstanceCache.get(emptyFormat);	  Format    <    String,String>    mRules    =    cInstanceCache.get(values);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
81	[BUG]  [BUGGY]  Format  <  String,String>  mRules  =  cInstanceCache.get(mRules);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,String>  mRules  =  cInstanceCache.get(mRules);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,String>  mRules  =  cInstanceCache.get(mRules);	  Format    <    String,String>    mRules    =    cInstanceCache.get(values);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
82	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  Locale.getDefault());  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  Locale.getDefault());  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(pattern,  Locale.getDefault());	  Format    format    =    new    FastDateFormat(format,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	83	None	replace
83	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  Locale.getDefault(),  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(format,  Locale.getDefault(),  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(format,  Locale.getDefault(),  locale);	  Format    format    =    new    FastDateFormat(format,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	83	None	replace
84	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(format,  locale.getDefault());  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(format,  locale.getDefault());  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(format,  locale.getDefault());	  Format    format    =    new    FastDateFormat(format,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	83	None	replace
85	[BUG]  [BUGGY]  format  =  new  FastDateFormat(emptyFormat,  null);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(emptyFormat,  null);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(emptyFormat,  null);	  format    =    new    FastDateFormat(null,    null);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
86	[BUG]  [BUGGY]  format  =  new  FastDateFormat(null,  emptyFormat);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(null,  emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(null,  emptyFormat);	  format    =    new    FastDateFormat(null,    null);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
87	[BUG]  [BUGGY]  format  =  new  FastDateFormat(null,  null,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(null,  null,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(null,  null,  locale);	  format    =    new    FastDateFormat(null,    null);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
88	[BUG]  [BUGGY]  format  =  new  FastDateFormat(null,  null,  false);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(null,  null,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(null,  null,  false);	  format    =    new    FastDateFormat(null,    null);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
89	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mLocale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mLocale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mLocale);	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
90	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  false);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  false);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  false);	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
91	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  true);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  true);	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
92	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  cInstanceCache.put(emptyFormat,  null);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  cInstanceCache.put(emptyFormat,  null);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  cInstanceCache.put(emptyFormat,  null);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    cInstanceCache.put(format,    null);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
93	[BUG]  [BUGGY]  mRules  =  new  RuleRule(mValues[i],  pattern,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  mRules  =  new  RuleRule(mValues[i],  pattern,  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	mRules  =  new  RuleRule(mValues[i],  pattern,  locale);	  mRules    =    new    RuleRule(mValues[i],    locale);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
94	[BUG]  [BUGGY]  mRules  =  new  RuleRule(mValues[i],  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  mRules  =  new  RuleRule(mValues[i],  timeZone,  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	mRules  =  new  RuleRule(mValues[i],  timeZone,  locale);	  mRules    =    new    RuleRule(mValues[i],    locale);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
95	[BUG]  [BUGGY]  mRules  =  new  RuleRule(mValues[0],  locale);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  mRules  =  new  RuleRule(mValues[0],  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	mRules  =  new  RuleRule(mValues[0],  locale);	  mRules    =    new    RuleRule(mValues[i],    locale);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
96	[BUG]  [BUGGY]  mRules  =  new  RuleRule(mValues[i],  style,  locale);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  mRules  =  new  RuleRule(mValues[i],  style,  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	mRules  =  new  RuleRule(mValues[i],  style,  locale);	  mRules    =    new    RuleRule(mValues[i],    locale);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
97	[BUG]  [BUGGY]  format  =  new  FastDateFormat(LONG,  LONG,  MEDIUM);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(LONG,  LONG,  MEDIUM);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(LONG,  LONG,  MEDIUM);	  format    =    new    FastDateFormat(LONG,    LONG);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
98	[BUG]  [BUGGY]  format  =  new  FastDateFormat(LONG,  INSTANCE);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(LONG,  INSTANCE);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(LONG,  INSTANCE);	  format    =    new    FastDateFormat(LONG,    LONG);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
99	[BUG]  [BUGGY]  this.format  =  new  FastDateFormat(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  this.format  =  new  FastDateFormat(pattern,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	this.format  =  new  FastDateFormat(pattern,  timeZone,  locale);	  format    =    new    FastDateFormat(format,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
100	[BUG]  [BUGGY]  cInstanceCache.put(format,  INSTANCE);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  cInstanceCache.put(format,  INSTANCE);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	cInstanceCache.put(format,  INSTANCE);	  cInstanceCache.put(format,    format);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
101	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mPattern);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mPattern);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mPattern);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale,    mDaylight);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
102	[BUG]  [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules.toArray(new  RuleRule[mRules.size()  ]);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules.toArray(new  RuleRule[mRules.size()  ]);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  RuleRule>  mRules  =  mRules.toArray(new  RuleRule[mRules.size()  ]);	  Format    <    String,    RuleRule>    mRules    =    mRules.values();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
103	[BUG]  [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules.toArray();  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules.toArray();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  RuleRule>  mRules  =  mRules.toArray();	  Format    <    String,    RuleRule>    mRules    =    mRules.values();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
104	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.EMPTY,  emptyFormat);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.EMPTY,  emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.EMPTY,  emptyFormat);	  format    =    new    FastDateFormat(FastDateFormat.EMPTY);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
105	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.EMPTY,  false);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.EMPTY,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.EMPTY,  false);	  format    =    new    FastDateFormat(FastDateFormat.EMPTY);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
106	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.EMPTY,  true);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.EMPTY,  true);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.EMPTY,  true);	  format    =    new    FastDateFormat(FastDateFormat.EMPTY);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
107	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  mRules.size();  ++i)  {  for(int  i  =  0;  i  <  mRules.length;  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  For(int  i  =  0;  i  <  mRules.size();  ++i)  {  for(int  i  =  0;  i  <  mRules.length;  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	For(int  i  =  0;  i  <  mRules.size();  ++i)  {  for(int  i  =  0;  i  <  mRules.length;  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  }	  For(int    i    =    0;    i    <    mRules.size();    ++i)    {    for(int    i    =    0;    i    <    mRules.length;    ++i)    {    mRules[i]    =    new    RuleRule(mValues[i],    	non-compiled	[CE]  <identifier>  expected	60	None	replace
108	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	for(int  i  =  0;  i  <  mRules.size();  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],	  For(int    i    =    0;    i    <    mRules.size();    ++i)    {    for(int    i    =    0;    i    <    mRules.length;    ++i)    {    mRules[i]    =    new    RuleRule(mValues[i],    	non-compiled	[CE]  <identifier>  expected	60	None	replace
109	[BUG]  [BUGGY]  Format  <  String,  Object>  emptyFormat  =  format.initialize();  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  Object>  emptyFormat  =  format.initialize();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  Object>  emptyFormat  =  format.initialize();	  Format    <    String,    Object>    emptyFormat    =    format.init();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
110	[BUG]  [BUGGY]  Format  <  String,  Object>  emptyFormat  =  format.get();  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  Object>  emptyFormat  =  format.get();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  Object>  emptyFormat  =  format.get();	  Format    <    String,    Object>    emptyFormat    =    format.init();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
111	[BUG]  [BUGGY]  Format  <  String,  Object>  emptyFormat  =  format.instance();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  Object>  emptyFormat  =  format.instance();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  Object>  emptyFormat  =  format.instance();	  Format    <    String,    Object>    emptyFormat    =    format.init();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
112	[BUG]  [BUGGY]  cInstanceCache.put(format,  values);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  cInstanceCache.put(format,  values);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	cInstanceCache.put(format,  values);	  cInstanceCache.put(values,    format);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
113	[BUG]  [BUGGY]  if(format!=  null)  {  cInstanceCache.put(values,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  if(format!=  null)  {  cInstanceCache.put(values,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	if(format!=  null)  {  cInstanceCache.put(values,  format);  }	  cInstanceCache.put(values,    format);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
114	[BUG]  [BUGGY]  if(format!=  null)  {  cInstanceCache.put(values,  format);  }  else  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  cInstanceCache.put(values[i],  format);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  if(format!=  null)  {  cInstanceCache.put(values,  format);  }  else  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  cInstanceCache.put(values[i],  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	if(format!=  null)  {  cInstanceCache.put(values,  format);  }  else  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  cInstanceCache.put(values[i],  format);  }	  cInstanceCache.put(values,    format);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
115	[BUG]  [BUGGY]  if(format!=  null)  {  cInstanceCache.put(values,  format);  }  else  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  cInstanceCache.put(values[i]  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  if(format!=  null)  {  cInstanceCache.put(values,  format);  }  else  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  cInstanceCache.put(values[i]  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	if(format!=  null)  {  cInstanceCache.put(values,  format);  }  else  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  cInstanceCache.put(values[i]	  cInstanceCache.put(values,    format);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
116	[BUG]  [BUGGY]  cInstanceCache.put(emptyFormat,  new  FastDateFormat(pattern,  timeZone,  locale));  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  cInstanceCache.put(emptyFormat,  new  FastDateFormat(pattern,  timeZone,  locale));  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	cInstanceCache.put(emptyFormat,  new  FastDateFormat(pattern,  timeZone,  locale));	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    cInstanceCache.put(format,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
117	[BUG]  [BUGGY]  format  =  new  FastDateFormat(null,  false);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(null,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(null,  false);	  format    =    new    FastDateFormat(null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
118	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  emptyFormat.setLocale(true);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  emptyFormat.setLocale(true);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  emptyFormat.setLocale(true);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    emptyFormat.setLocale(false);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
119	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  emptyFormat,  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  emptyFormat,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.class,  emptyFormat,  locale);	  format    =    new    FastDateFormat(FastDateFormat.class,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
120	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  emptyFormat,  cInstanceCache);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  emptyFormat,  cInstanceCache);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.class,  emptyFormat,  cInstanceCache);	  format    =    new    FastDateFormat(FastDateFormat.class,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
121	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  emptyFormat,  false);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  emptyFormat,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.class,  emptyFormat,  false);	  format    =    new    FastDateFormat(FastDateFormat.class,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
122	[BUG]  [BUGGY]  List  <  String>  emptyRules  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  List  <  String>  emptyRules  =  Sets.newHashSet();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	List  <  String>  emptyRules  =  Sets.newHashSet();	  Set    <    String>    emptyRules    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
123	[BUG]  [BUGGY]  ArrayList  <  String>  emptyRules  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  ArrayList  <  String>  emptyRules  =  Sets.newHashSet();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	ArrayList  <  String>  emptyRules  =  Sets.newHashSet();	  Set    <    String>    emptyRules    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
124	[BUG]  [BUGGY]  Collection  <  String>  emptyRules  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Collection  <  String>  emptyRules  =  Sets.newHashSet();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Collection  <  String>  emptyRules  =  Sets.newHashSet();	  Set    <    String>    emptyRules    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
125	[BUG]  [BUGGY]  format  =  emptyFormat.cloneTree(true);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  emptyFormat.cloneTree(true);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  emptyFormat.cloneTree(true);	  format    =    emptyFormat.cloneTree(false);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
126	[BUG]  [BUGGY]  format  =  emptyFormat.cloneTree(false,  true);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  emptyFormat.cloneTree(false,  true);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  emptyFormat.cloneTree(false,  true);	  format    =    emptyFormat.cloneTree(false);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
127	[BUG]  [BUGGY]  format  =  emptyFormat.cloneTree(false,  false);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  emptyFormat.cloneTree(false,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  emptyFormat.cloneTree(false,  false);	  format    =    emptyFormat.cloneTree(false);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
128	[BUG]  [BUGGY]  if(cInstanceCache!=  null)  {  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  cInstanceCache.put(emptyFormat,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  if(cInstanceCache!=  null)  {  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  cInstanceCache.put(emptyFormat,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	if(cInstanceCache!=  null)  {  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  cInstanceCache.put(emptyFormat,  format);  }	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    cInstanceCache.put(emptyFormat,    format);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
129	[BUG]  [BUGGY]  format  =  new  FastDateFormat(Long.MAX_VALUE,  Long.MAX_VALUE  +  1);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(Long.MAX_VALUE,  Long.MAX_VALUE  +  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(Long.MAX_VALUE,  Long.MAX_VALUE  +  1);	  format    =    new    FastDateFormat(Long.MAX_VALUE,    Long.MAX_VALUE);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
130	[BUG]  [BUGGY]  format  =  new  FastDateFormat(Long.MAX_VALUE,  Long.MAX_VALUE  -  1);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(Long.MAX_VALUE,  Long.MAX_VALUE  -  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(Long.MAX_VALUE,  Long.MAX_VALUE  -  1);	  format    =    new    FastDateFormat(Long.MAX_VALUE,    Long.MAX_VALUE);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
131	[BUG]  [BUGGY]  format  =  new  FastDateFormat(Long.MIN_VALUE,  Long.MAX_VALUE);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(Long.MIN_VALUE,  Long.MAX_VALUE);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(Long.MIN_VALUE,  Long.MAX_VALUE);	  format    =    new    FastDateFormat(Long.MAX_VALUE,    Long.MAX_VALUE);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
132	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(mDaylight);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(mDaylight);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(mDaylight);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale).setTimeZone(timeZone);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
133	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(mLocale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(mLocale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(mLocale);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale).setTimeZone(timeZone);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
134	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(mSize);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(mSize);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(mSize);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale).setTimeZone(timeZone);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
135	[BUG]  [BUGGY]  format  =  new  FastDateFormat(pattern,  format);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(pattern,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(pattern,  format);	  format    =    new    FastDateFormat(format);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
136	[BUG]  [BUGGY]  format  =  new  FastDateFormat(null,  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(null,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(null,  format);	  format    =    new    FastDateFormat(format);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
137	[BUG]  [BUGGY]  Format  <  String,  Object>  cInstanceCache.put(format,  mValue);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  Object>  cInstanceCache.put(format,  mValue);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  Object>  cInstanceCache.put(format,  mValue);	  Format    <    String,    Object>    cInstanceCache.put(mValue,    format);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
138	[BUG]  [BUGGY]  Format  <  String,  Object>  cInstanceCache.put(format,  format);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  Object>  cInstanceCache.put(format,  format);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  Object>  cInstanceCache.put(format,  format);	  Format    <    String,    Object>    cInstanceCache.put(mValue,    format);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
139	[BUG]  [BUGGY]  Format  <  String,  Object>  cInstanceCache.put(format,  mValues);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  Object>  cInstanceCache.put(format,  mValues);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  Object>  cInstanceCache.put(format,  mValues);	  Format    <    String,    Object>    cInstanceCache.put(mValue,    format);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
140	[BUG]  [BUGGY]  Format  >=  null)  {  for(int  i  =  0;  i  <  this.mRules.size();  ++i)  {  emptyFormat.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  >=  null)  {  for(int  i  =  0;  i  <  this.mRules.size();  ++i)  {  emptyFormat.put(i,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  >=  null)  {  for(int  i  =  0;  i  <  this.mRules.size();  ++i)  {  emptyFormat.put(i,  format);  }	  Format!=    null)    {    for(int    i    =    0;    i    <    this.mRules.size();    ++i)    {    emptyFormat.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
141	[BUG]  [BUGGY]  Format  >>  null)  {  for(int  i  =  0;  i  <  this.mRules.size();  ++i)  {  emptyFormat.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  >>  null)  {  for(int  i  =  0;  i  <  this.mRules.size();  ++i)  {  emptyFormat.put(i,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  >>  null)  {  for(int  i  =  0;  i  <  this.mRules.size();  ++i)  {  emptyFormat.put(i,  format);  }	  Format!=    null)    {    for(int    i    =    0;    i    <    this.mRules.size();    ++i)    {    emptyFormat.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
142	[BUG]  [BUGGY]  Format!=  null  &&  this.mRules!=  null)  {  for(int  i  =  0;  i  <  this.mRules.size();  ++i)  {  emptyFormat.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format!=  null  &&  this.mRules!=  null)  {  for(int  i  =  0;  i  <  this.mRules.size();  ++i)  {  emptyFormat.put(i,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format!=  null  &&  this.mRules!=  null)  {  for(int  i  =  0;  i  <  this.mRules.size();  ++i)  {  emptyFormat.put(i,  format);  }	  Format!=    null)    {    for(int    i    =    0;    i    <    this.mRules.size();    ++i)    {    emptyFormat.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
143	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  MEDIUM);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  MEDIUM);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  MEDIUM);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    LONG);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
144	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  LONG,  MEDIUM);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  LONG,  MEDIUM);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  LONG,  MEDIUM);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    LONG);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
145	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  FULL);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  FULL);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  FULL);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    LONG);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
146	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  1);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  1);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    LONG);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
147	[BUG]  [BUGGY]  mRules[i]  =  new  RuleRule(mValues[i],  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  mRules[i]  =  new  RuleRule(mValues[i],  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	mRules[i]  =  new  RuleRule(mValues[i],  locale);	  For(int    i    =    0;    i    <    mRules.size();    ++i)    {    mRules[i]    =    new    RuleRule(mValues[i],    locale);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
148	[BUG]  [BUGGY]  Integer  i  =  mRules.size();  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  locale);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Integer  i  =  mRules.size();  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  locale);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Integer  i  =  mRules.size();  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  locale);  }	  For(int    i    =    0;    i    <    mRules.size();    ++i)    {    mRules[i]    =    new    RuleRule(mValues[i],    locale);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
149	[BUG]  [BUGGY]  Format  <  Object>  emptyFormat  =  getInstance(pattern,  timeZone,  locale,  false);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Object>  emptyFormat  =  getInstance(pattern,  timeZone,  locale,  false);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Object>  emptyFormat  =  getInstance(pattern,  timeZone,  locale,  false);	  Format    <    Object>    emptyFormat    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
150	[BUG]  [BUGGY]  Format  <  Object>  emptyFormat  =  getInstance(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Object>  emptyFormat  =  getInstance(pattern,  timeZone,  locale,  true);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Object>  emptyFormat  =  getInstance(pattern,  timeZone,  locale,  true);	  Format    <    Object>    emptyFormat    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
151	[BUG]  [BUGGY]  Format  <  Object>  emptyFormat  =  getInstance(pattern,  timeZone,  locale,  null);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Object>  emptyFormat  =  getInstance(pattern,  timeZone,  locale,  null);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Object>  emptyFormat  =  getInstance(pattern,  timeZone,  locale,  null);	  Format    <    Object>    emptyFormat    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
152	[BUG]  [BUGGY]  Iterator  <  String>  values  =  mValues.iterator();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Iterator  <  String>  values  =  mValues.iterator();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Iterator  <  String>  values  =  mValues.iterator();	  Iterator    <    String>    values    =    cInstanceCache.values().iterator();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
153	[BUG]  [BUGGY]  Iterator  <  String>  values  =  this.mValues.iterator();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Iterator  <  String>  values  =  this.mValues.iterator();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Iterator  <  String>  values  =  this.mValues.iterator();	  Iterator    <    String>    values    =    cInstanceCache.values().iterator();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
154	[BUG]  [BUGGY]  if(format!=  null)  {  cInstanceCache.put(value,  format);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  if(format!=  null)  {  cInstanceCache.put(value,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	if(format!=  null)  {  cInstanceCache.put(value,  format);  }	  cInstanceCache.put(value,    format);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
155	[BUG]  [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(value,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(value,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	if(format  ==  null)  {  cInstanceCache.put(value,  format);  }	  cInstanceCache.put(value,    format);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
156	[BUG]  [BUGGY]  if(format!=  null)  {  cInstanceCache.put(value,  format);  }  else  {  emptyFormat  =  new  FastDateFormat(format,  locale);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  if(format!=  null)  {  cInstanceCache.put(value,  format);  }  else  {  emptyFormat  =  new  FastDateFormat(format,  locale);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	if(format!=  null)  {  cInstanceCache.put(value,  format);  }  else  {  emptyFormat  =  new  FastDateFormat(format,  locale);  }	  cInstanceCache.put(value,    format);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
157	[BUG]  [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(emptyFormat);  }  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  if(format  ==  null)  {  cInstanceCache.put(emptyFormat);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	if(format  ==  null)  {  cInstanceCache.put(emptyFormat);  }	  cInstanceCache.put(emptyFormat);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
158	[BUG]  [BUGGY]  format  =  new  FastDateFormat(pattern,  Locale.getDefault());  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(pattern,  Locale.getDefault());  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(pattern,  Locale.getDefault());	  format    =    new    FastDateFormat(emptyFormat,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
159	[BUG]  [BUGGY]  format  =  new  FastDateFormat(format,  Locale.getDefault());  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(format,  Locale.getDefault());  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(format,  Locale.getDefault());	  format    =    new    FastDateFormat(emptyFormat,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
160	[BUG]  [BUGGY]  format  =  new  FastDateFormat(mDaylight,  Locale.getDefault());  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(mDaylight,  Locale.getDefault());  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(mDaylight,  Locale.getDefault());	  format    =    new    FastDateFormat(emptyFormat,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
161	[BUG]  [BUGGY]  format  =  new  FastDateFormat(mRules,  Locale.getDefault());  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(mRules,  Locale.getDefault());  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(mRules,  Locale.getDefault());	  format    =    new    FastDateFormat(emptyFormat,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
162	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache.put(locale,  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache.put(locale,  format);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache.put(locale,  format);	  Format    <    String,Locale>    cInstanceCache.put(locale,    locale);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
163	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache.put(locale,  emptyFormat);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache.put(locale,  emptyFormat);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache.put(locale,  emptyFormat);	  Format    <    String,Locale>    cInstanceCache.put(locale,    locale);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
164	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache.put(mValue,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache.put(mValue,  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache.put(mValue,  locale);	  Format    <    String,Locale>    cInstanceCache.put(locale,    locale);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
165	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  fillFormat);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  fillFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.class,  fillFormat);	  format    =    new    FastDateFormat(FastDateFormat.class,    format);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
166	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.newInstance(),  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.newInstance(),  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.newInstance(),  format);	  format    =    new    FastDateFormat(FastDateFormat.class,    format);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
167	[BUG]  [BUGGY]  Format  >>  null)  {  for(int  i  =  0;  i  <  cInstanceCache.size();  ++i)  {  emptyFormat.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  >>  null)  {  for(int  i  =  0;  i  <  cInstanceCache.size();  ++i)  {  emptyFormat.put(i,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  >>  null)  {  for(int  i  =  0;  i  <  cInstanceCache.size();  ++i)  {  emptyFormat.put(i,  format);  }	  Format!=    null)    {    for(int    i    =    0;    i    <    cInstanceCache.size();    ++i)    {    emptyFormat.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
168	[BUG]  [BUGGY]  Format  >=  null)  {  for(int  i  =  0;  i  <  cInstanceCache.size();  ++i)  {  emptyFormat.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  >=  null)  {  for(int  i  =  0;  i  <  cInstanceCache.size();  ++i)  {  emptyFormat.put(i,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  >=  null)  {  for(int  i  =  0;  i  <  cInstanceCache.size();  ++i)  {  emptyFormat.put(i,  format);  }	  Format!=    null)    {    for(int    i    =    0;    i    <    cInstanceCache.size();    ++i)    {    emptyFormat.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
169	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.MILLIS,  emptyFormat);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.MILLIS,  emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.MILLIS,  emptyFormat);	  format    =    new    FastDateFormat(FastDateFormat.MILLIS);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
170	[BUG]  [BUGGY]  format  =  new  FastDateFormat(pattern,  timeZone,  location);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(pattern,  timeZone,  location);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(pattern,  timeZone,  location);	  format    =    new    FastDateFormat(pattern,    location);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
171	[BUG]  [BUGGY]  Set  <  String>  values  =  Sets.newHashSet(mValues);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Set  <  String>  values  =  Sets.newHashSet(mValues);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Set  <  String>  values  =  Sets.newHashSet(mValues);	  Set    <    String>    values    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
172	[BUG]  [BUGGY]  List  <  String>  values  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  List  <  String>  values  =  Sets.newHashSet();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	List  <  String>  values  =  Sets.newHashSet();	  Set    <    String>    values    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
173	[BUG]  [BUGGY]  ArrayList  <  String>  values  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  ArrayList  <  String>  values  =  Sets.newHashSet();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	ArrayList  <  String>  values  =  Sets.newHashSet();	  Set    <    String>    values    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
174	[BUG]  [BUGGY]  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mLocale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mLocale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mLocale);	  format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
175	[BUG]  [BUGGY]  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  false);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(pattern,  timeZone,  locale,  false);	  format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
176	[BUG]  [BUGGY]  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mDaylight);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mDaylight);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mDaylight);	  format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
177	[BUG]  [BUGGY]  Format  <  Rule>  cInstanceCache  =  cInstanceCache.get(mValues,  format);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule>  cInstanceCache  =  cInstanceCache.get(mValues,  format);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule>  cInstanceCache  =  cInstanceCache.get(mValues,  format);	  Format    <    Rule>    cInstanceCache    =    cInstanceCache.get(mValues);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
178	[BUG]  [BUGGY]  Format  <  Rule>  cInstanceCache  =  cInstanceCache.get(mValues,  false);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule>  cInstanceCache  =  cInstanceCache.get(mValues,  false);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule>  cInstanceCache  =  cInstanceCache.get(mValues,  false);	  Format    <    Rule>    cInstanceCache    =    cInstanceCache.get(mValues);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
179	[BUG]  [BUGGY]  Format  <  Rule>  cInstanceCache  =  cInstanceCache.get(mValues,  locale);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule>  cInstanceCache  =  cInstanceCache.get(mValues,  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule>  cInstanceCache  =  cInstanceCache.get(mValues,  locale);	  Format    <    Rule>    cInstanceCache    =    cInstanceCache.get(mValues);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
180	[BUG]  [BUGGY]  format  =  new  FastDateFormat(pattern,  timeZone,  emptyFormat);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(pattern,  timeZone,  emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(pattern,  timeZone,  emptyFormat);	  format    =    new    FastDateFormat(pattern,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
181	[BUG]  [BUGGY]  format  =  new  FastDateFormat(emptyFormat,  pattern);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(emptyFormat,  pattern);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(emptyFormat,  pattern);	  format    =    new    FastDateFormat(pattern,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
182	[BUG]  [BUGGY]  format  =  new  FastDateFormat(mDaylight,  emptyFormat);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(mDaylight,  emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(mDaylight,  emptyFormat);	  format    =    new    FastDateFormat(pattern,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
183	[BUG]  [BUGGY]  format  =  new  FastDateFormat(fillingFormat,  pattern);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(fillingFormat,  pattern);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(fillingFormat,  pattern);	  format    =    new    FastDateFormat(pattern,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
184	[BUG]  [BUGGY]  fastDateFormat  =  new  FastDateFormat(format,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  fastDateFormat  =  new  FastDateFormat(format,  timeZone,  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	fastDateFormat  =  new  FastDateFormat(format,  timeZone,  locale);	  fastDateFormat    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
185	[BUG]  [BUGGY]  fastDateFormat  =  new  FastDateFormat(pattern,  timeZone,  locale,  mMaxLengthEstimate);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  fastDateFormat  =  new  FastDateFormat(pattern,  timeZone,  locale,  mMaxLengthEstimate);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	fastDateFormat  =  new  FastDateFormat(pattern,  timeZone,  locale,  mMaxLengthEstimate);	  fastDateFormat    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
186	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.MILLIS,  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.MILLIS,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.MILLIS,  format);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    format);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
187	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  fillFormat);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  fillFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  fillFormat);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    format);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
188	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.MINUTE,  format);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.MINUTE,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.MINUTE,  format);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    format);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
189	[BUG]  [BUGGY]  Iterator  <  String>  values  =  this.cInstanceCache.keySet().iterator();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Iterator  <  String>  values  =  this.cInstanceCache.keySet().iterator();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Iterator  <  String>  values  =  this.cInstanceCache.keySet().iterator();	  Iterator    <    String>    values    =    cInstanceCache.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	66	None	replace
190	[BUG]  [BUGGY]  Iterator  <  String>  values  =  cInstanceCache.iterator();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Iterator  <  String>  values  =  cInstanceCache.iterator();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Iterator  <  String>  values  =  cInstanceCache.iterator();	  Iterator    <    String>    values    =    cInstanceCache.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	66	None	replace
191	[BUG]  [BUGGY]  format  =  new  FastDateFormat(LONG,  Locale.getDefault(),  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(LONG,  Locale.getDefault(),  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(LONG,  Locale.getDefault(),  locale);	  format    =    new    FastDateFormat(LONG,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	113	None	replace
192	[BUG]  [BUGGY]  format  =  new  FastDateFormat(LONG,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(LONG,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(LONG,  locale);	  format    =    new    FastDateFormat(LONG,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	113	None	replace
193	[BUG]  [BUGGY]  format  =  new  FastDateFormat(LONG,  locale.getValue());  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(LONG,  locale.getValue());  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(LONG,  locale.getValue());	  format    =    new    FastDateFormat(LONG,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	113	None	replace
194	[BUG]  [BUGGY]  format  =  new  FastDateFormat(true,  null);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(true,  null);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(true,  null);	  format    =    new    FastDateFormat(false,    null);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
195	[BUG]  [BUGGY]  format  =  new  FastDateFormat(false,  null,  false);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(false,  null,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(false,  null,  false);	  format    =    new    FastDateFormat(false,    null);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
196	[BUG]  [BUGGY]  format  =  emptyFormat.getInstance(locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  emptyFormat.getInstance(locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  emptyFormat.getInstance(locale);	  format    =    emptyFormat.getInstanceUTC();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
197	[BUG]  [BUGGY]  format  =  emptyFormat.getInstanceURI();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  emptyFormat.getInstanceURI();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  emptyFormat.getInstanceURI();	  format    =    emptyFormat.getInstanceUTC();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
198	[BUG]  [BUGGY]  format  =  new  FastDateFormat(pattern,  instance);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(pattern,  instance);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(pattern,  instance);	  format    =    new    FastDateFormat(instance);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
199	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache.put(locale,  format.getDefault());  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache.put(locale,  format.getDefault());  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache.put(locale,  format.getDefault());	  Format    <    String,Locale>    cInstanceCache.put(locale,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	111	None	replace
200	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache.put(locale,  locale.getValue());  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache.put(locale,  locale.getValue());  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache.put(locale,  locale.getValue());	  Format    <    String,Locale>    cInstanceCache.put(locale,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	111	None	replace
201	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache.put(locale,  locale.getDefault());  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache.put(locale,  locale.getDefault());  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache.put(locale,  locale.getDefault());	  Format    <    String,Locale>    cInstanceCache.put(locale,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	111	None	replace
202	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache.put(locale,  locale.get(0));  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache.put(locale,  locale.get(0));  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache.put(locale,  locale.get(0));	  Format    <    String,Locale>    cInstanceCache.put(locale,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	111	None	replace
203	[BUG]  [BUGGY]  format  =  new  FastDateFormat(value,  value,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(value,  value,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(value,  value,  locale);	  format    =    new    FastDateFormat(pattern,    value,    locale);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
204	[BUG]  [BUGGY]  format  =  new  FastDateFormat(mValue,  value,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(mValue,  value,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(mValue,  value,  locale);	  format    =    new    FastDateFormat(pattern,    value,    locale);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
205	[BUG]  [BUGGY]  format  =  new  FastDateFormat(pattern,  value,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(pattern,  value,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(pattern,  value,  timeZone,  locale);	  format    =    new    FastDateFormat(pattern,    value,    locale);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
206	[BUG]  [BUGGY]  format  =  new  FastDateFormat(pattern,  TimeZone.getDefault(),  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(pattern,  TimeZone.getDefault(),  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(pattern,  TimeZone.getDefault(),  locale);	  format    =    new    FastDateFormat(pattern,    location,    locale);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
207	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(pattern,  locale);	  Format    format    =    new    FastDateFormat(format,    locale);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
208	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  location);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  location);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(pattern,  location);	  Format    format    =    new    FastDateFormat(format,    locale);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
209	[BUG]  [BUGGY]  format  =  cInstanceCache.getInstanceCache();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.getInstanceCache();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.getInstanceCache();	  format    =    emptyFormat.getInstanceCache();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
210	[BUG]  [BUGGY]  format  =  emptyFormat.getFastDateFormat();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  emptyFormat.getFastDateFormat();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  emptyFormat.getFastDateFormat();	  format    =    emptyFormat.getInstanceCache();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
211	[BUG]  [BUGGY]  format  =  emptyFormat.getFastDate();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  emptyFormat.getFastDate();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  emptyFormat.getFastDate();	  format    =    emptyFormat.getInstanceCache();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
212	[BUG]  [BUGGY]  format  =  new  FastDateFormat(format,  emptyFormat);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(format,  emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(format,  emptyFormat);	  format    =    new    FastDateFormat(emptyFormat,    format);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
213	[BUG]  [BUGGY]  format  =  new  FastDateFormat(format,  null);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(format,  null);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(format,  null);	  format    =    new    FastDateFormat(emptyFormat,    format);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
214	[BUG]  [BUGGY]  format  =  new  FastDateFormat(format,  INSTANCE);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(format,  INSTANCE);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(format,  INSTANCE);	  format    =    new    FastDateFormat(emptyFormat,    format);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
215	[BUG]  [BUGGY]  fastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mLocale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  fastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mLocale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	fastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mLocale);	  fastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
216	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  false);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  false);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  false);	  Format    <    String,Locale>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
217	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  true);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  true);	  Format    <    String,Locale>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
218	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  format);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  format);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale,  format);	  Format    <    String,Locale>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
219	[BUG]  [BUGGY]  format  =  new  FastDateFormat(timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(timeZone,  locale);	  format    =    new    FastDateFormat(pattern,    locale);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
220	[BUG]  [BUGGY]  Format  <  Rule>  mRules  =  mRules.toArray(new  Rule[mRules.size()  ]);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule>  mRules  =  mRules.toArray(new  Rule[mRules.size()  ]);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule>  mRules  =  mRules.toArray(new  Rule[mRules.size()  ]);	  Format    <    Rule>    mRules    =    mRules.values();    	non-compiled	[CE]  <identifier>  expected	123	None	replace
221	[BUG]  [BUGGY]  Format  <  Rule>  mRules  =  mRules.get(mValues);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule>  mRules  =  mRules.get(mValues);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule>  mRules  =  mRules.get(mValues);	  Format    <    Rule>    mRules    =    mRules.values();    	non-compiled	[CE]  <identifier>  expected	123	None	replace
222	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.LONG,  emptyFormat);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.LONG,  emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.LONG,  emptyFormat);	  format    =    new    FastDateFormat(FastDateFormat.LONG);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
223	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.UNKNOWN,  emptyFormat);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.UNKNOWN,  emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.UNKNOWN,  emptyFormat);	  format    =    new    FastDateFormat(FastDateFormat.UNKNOWN);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
224	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  true);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  true);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  true);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
225	[BUG]  [BUGGY]  format  =  new  FastDateFormat(pattern,  timeZone);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(pattern,  timeZone);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(pattern,  timeZone);	  format    =    new    FastDateFormat(pattern);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
226	[BUG]  [BUGGY]  format  =  new  FastDateFormat(new  String[]  {  pattern  }  );  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(new  String[]  {  pattern  }  );  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(new  String[]  {  pattern  }  );	  format    =    new    FastDateFormat(pattern);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
227	[BUG]  [BUGGY]  format  =  new  FastDateFormat(Long.MAX_VALUE,  Locale.getDefault(),  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(Long.MAX_VALUE,  Locale.getDefault(),  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(Long.MAX_VALUE,  Locale.getDefault(),  locale);	  format    =    new    FastDateFormat(Long.MAX_VALUE,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
228	[BUG]  [BUGGY]  format  =  new  FastDateFormat(Long.MAX_VALUE,  locale.getValue());  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(Long.MAX_VALUE,  locale.getValue());  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(Long.MAX_VALUE,  locale.getValue());	  format    =    new    FastDateFormat(Long.MAX_VALUE,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
229	[BUG]  [BUGGY]  format  =  new  FastDateFormat(Long.MAX_VALUE,  Locale.getDefault()  +  1);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(Long.MAX_VALUE,  Locale.getDefault()  +  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(Long.MAX_VALUE,  Locale.getDefault()  +  1);	  format    =    new    FastDateFormat(Long.MAX_VALUE,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
230	[BUG]  [BUGGY]  Format  <  String,String>  mRules  =  cInstanceCache.get(mValues[i]);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,String>  mRules  =  cInstanceCache.get(mValues[i]);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,String>  mRules  =  cInstanceCache.get(mValues[i]);	  Format    <    String,String>    mRules    =    cInstanceCache.get(values[i]);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
231	[BUG]  [BUGGY]  Format  <  String,String>  mRules  =  cInstanceCache.get(mValues[i],  locale);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,String>  mRules  =  cInstanceCache.get(mValues[i],  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,String>  mRules  =  cInstanceCache.get(mValues[i],  locale);	  Format    <    String,String>    mRules    =    cInstanceCache.get(values[i]);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
232	[BUG]  [BUGGY]  Format  <  String,String>  mRules  =  cInstanceCache.get(values[0]);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,String>  mRules  =  cInstanceCache.get(values[0]);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,String>  mRules  =  cInstanceCache.get(values[0]);	  Format    <    String,String>    mRules    =    cInstanceCache.get(values[i]);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
233	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  NUMBER  +  1);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  NUMBER  +  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  NUMBER  +  1);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    NUMBER);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
234	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  SHORT);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  SHORT);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  SHORT);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    NUMBER);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
235	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  format);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NONE,  format);	  format    =    new    FastDateFormat(FastDateFormat.NONE,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
236	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  emptyFormat,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  emptyFormat,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NONE,  emptyFormat,  locale);	  format    =    new    FastDateFormat(FastDateFormat.NONE,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
237	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  emptyFormat,  cInstanceCache);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  emptyFormat,  cInstanceCache);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NONE,  emptyFormat,  cInstanceCache);	  format    =    new    FastDateFormat(FastDateFormat.NONE,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
238	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  cInstanceCache);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  cInstanceCache);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NONE,  cInstanceCache);	  format    =    new    FastDateFormat(FastDateFormat.NONE,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
239	[BUG]  [BUGGY]  format  =  cInstanceCache.clone();  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.clone();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.clone();	  format    =    cInstanceCache.cloneTree();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
240	[BUG]  [BUGGY]  format  =  cInstanceCache.get(emptyFormat);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.get(emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.get(emptyFormat);	  format    =    cInstanceCache.cloneTree();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
241	[BUG]  [BUGGY]  format  =  cInstanceCache.get(mValue);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.get(mValue);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.get(mValue);	  format    =    cInstanceCache.cloneTree();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
242	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.get(emptyFormat);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  cInstanceCache.get(emptyFormat);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  cInstanceCache.get(emptyFormat);	  Format    format    =    cInstanceCache.get(format);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
243	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.get(null);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  cInstanceCache.get(null);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  cInstanceCache.get(null);	  Format    format    =    cInstanceCache.get(format);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
244	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.get(mValue);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  cInstanceCache.get(mValue);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  cInstanceCache.get(mValue);	  Format    format    =    cInstanceCache.get(format);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
245	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.get(format,  locale);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  cInstanceCache.get(format,  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  cInstanceCache.get(format,  locale);	  Format    format    =    cInstanceCache.get(format);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
246	[BUG]  [BUGGY]  format  =  mRules.cloneTree();  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  mRules.cloneTree();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  mRules.cloneTree();	  format    =    format.cloneTree();    	non-compiled	[CE]  <identifier>  expected	81	None	replace
247	[BUG]  [BUGGY]  Format  format  =  emptyFormat.cloneTree();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  emptyFormat.cloneTree();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  emptyFormat.cloneTree();	  format    =    format.cloneTree();    	non-compiled	[CE]  <identifier>  expected	81	None	replace
248	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.get();  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <?>  emptyFormat  =  format.get();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <?>  emptyFormat  =  format.get();	  Format    <?>    emptyFormat    =    format.init();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
249	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.initialize();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <?>  emptyFormat  =  format.initialize();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <?>  emptyFormat  =  format.initialize();	  Format    <?>    emptyFormat    =    format.init();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
250	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.instance();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <?>  emptyFormat  =  format.instance();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <?>  emptyFormat  =  format.instance();	  Format    <?>    emptyFormat    =    format.init();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
251	[BUG]  [BUGGY]  Format  <  Rule,Rule>  mRules  =  mRules.get(format);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule,Rule>  mRules  =  mRules.get(format);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule,Rule>  mRules  =  mRules.get(format);	  Format    <    Rule,Rule>    mRules    =    mRules.get(i);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
252	[BUG]  [BUGGY]  Format  <  Rule,Rule>  mRules  =  mRules.get(i  +  1);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule,Rule>  mRules  =  mRules.get(i  +  1);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule,Rule>  mRules  =  mRules.get(i  +  1);	  Format    <    Rule,Rule>    mRules    =    mRules.get(i);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
253	[BUG]  [BUGGY]  Format  <  Rule,Rule>  mRules  =  mRules.get(mStyle);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule,Rule>  mRules  =  mRules.get(mStyle);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule,Rule>  mRules  =  mRules.get(mStyle);	  Format    <    Rule,Rule>    mRules    =    mRules.get(i);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
254	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  new  FastDateFormat  <  String,Locale>(format);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  new  FastDateFormat  <  String,Locale>(format);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache  =  new  FastDateFormat  <  String,Locale>(format);	  Format    <    String,Locale>    cInstanceCache    =    new    FastDateFormat    <    String,Locale>();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
255	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  new  FastDateFormat  <  String,Locale>(0);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  new  FastDateFormat  <  String,Locale>(0);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache  =  new  FastDateFormat  <  String,Locale>(0);	  Format    <    String,Locale>    cInstanceCache    =    new    FastDateFormat    <    String,Locale>();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
256	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  new  FastDateFormat  <  String,Locale>(1);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  new  FastDateFormat  <  String,Locale>(1);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache  =  new  FastDateFormat  <  String,Locale>(1);	  Format    <    String,Locale>    cInstanceCache    =    new    FastDateFormat    <    String,Locale>();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
257	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  emptyFormat.setDaylight(timeZone);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  emptyFormat.setDaylight(timeZone);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  emptyFormat.setDaylight(timeZone);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    emptyFormat.setTimeZone(timeZone);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
258	[BUG]  [BUGGY]  Format!=  null  &&  mRules.size()  >  0)  {  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  emptyFormat.put(i,  format);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format!=  null  &&  mRules.size()  >  0)  {  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  emptyFormat.put(i,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format!=  null  &&  mRules.size()  >  0)  {  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  emptyFormat.put(i,  format);  }	  Format!=    null)    {    for(int    i    =    0;    i    <    mRules.size();    ++i)    {    emptyFormat.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
259	[BUG]  [BUGGY]  Format  emptyFormat  =  format.initialize();  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  emptyFormat  =  format.initialize();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  emptyFormat  =  format.initialize();	  Format    emptyFormat    =    format.init();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
260	[BUG]  [BUGGY]  Format  emptyFormat  =  format.get();  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  emptyFormat  =  format.get();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  emptyFormat  =  format.get();	  Format    emptyFormat    =    format.init();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
261	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.BOTH,  emptyFormat);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.BOTH,  emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.BOTH,  emptyFormat);	  format    =    new    FastDateFormat(FastDateFormat.BOTH);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
262	[BUG]  [BUGGY]  format  =  new  FastDateFormat(Long.parseLong(mValue)+  1);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(Long.parseLong(mValue)+  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(Long.parseLong(mValue)+  1);	  format    =    new    FastDateFormat(Long.parseLong(mValue));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
263	[BUG]  [BUGGY]  format  =  new  FastDateFormat(Long.parseLong(mValue),  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(Long.parseLong(mValue),  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(Long.parseLong(mValue),  locale);	  format    =    new    FastDateFormat(Long.parseLong(mValue));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
264	[BUG]  [BUGGY]  format  =  new  FastDateFormat(Long.parseLong(mValue),  false);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(Long.parseLong(mValue),  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(Long.parseLong(mValue),  false);	  format    =    new    FastDateFormat(Long.parseLong(mValue));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
265	[BUG]  [BUGGY]  Format  <  String,String>  mRules  =  cInstanceCache.get(oldFormat);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,String>  mRules  =  cInstanceCache.get(oldFormat);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,String>  mRules  =  cInstanceCache.get(oldFormat);	  Format    <    String,String>    mRules    =    cInstanceCache.get(values);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
266	[BUG]  [BUGGY]  format  =  new  FastDateFormat(value,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(value,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(value,  timeZone,  locale);	  format    =    new    FastDateFormat(pattern,    value,    locale);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
267	[BUG]  [BUGGY]  format  =  cInstanceCache.getFormat();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.getFormat();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.getFormat();	  format    =    cInstanceCache.getInstance();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
268	[BUG]  [BUGGY]  Iterator  <  String>  values  =  mValues.values().iterator();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Iterator  <  String>  values  =  mValues.values().iterator();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Iterator  <  String>  values  =  mValues.values().iterator();	  Iterator    <    String>    values    =    cInstanceCache.values().iterator();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
269	[BUG]  [BUGGY]  Format  <  Object>  emptyFormat  =  getInstance(pattern,  timeZone,  locale  +  1);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Object>  emptyFormat  =  getInstance(pattern,  timeZone,  locale  +  1);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Object>  emptyFormat  =  getInstance(pattern,  timeZone,  locale  +  1);	  Format    <    Object>    emptyFormat    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
270	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  emptyFormat,  mLocale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  emptyFormat,  mLocale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  emptyFormat,  mLocale);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
271	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  emptyFormat,  INSTANCE);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  emptyFormat,  INSTANCE);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  emptyFormat,  INSTANCE);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
272	[BUG]  [BUGGY]  format  =  new  FastDateFormat(emptyFormat,  Locale.getDefault(),  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(emptyFormat,  Locale.getDefault(),  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(emptyFormat,  Locale.getDefault(),  locale);	  format    =    new    FastDateFormat(emptyFormat,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
273	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(Locale.getDefault());  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(Locale.getDefault());  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(Locale.getDefault());	  Format    format    =    new    FastDateFormat(format,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	83	None	replace
274	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  for(int  i  =  0;  i  <  mRules.length;  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  locale  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  for(int  i  =  0;  i  <  mRules.length;  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  locale  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	for(int  i  =  0;  i  <  mRules.size();  ++i)  {  for(int  i  =  0;  i  <  mRules.length;  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  locale	  For(int    i    =    0;    i    <    mRules.size();    ++i)    {    for(int    i    =    0;    i    <    mRules.length;    ++i)    {    mRules[i]    =    new    RuleRule(mValues[i],    locale    	non-compiled	[CE]  <identifier>  expected	61	None	replace
275	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  for(int  i  =  0;  i  <  mRules.length;  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  for(int  i  =  0;  i  <  mRules.length;  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	for(int  i  =  0;  i  <  mRules.size();  ++i)  {  for(int  i  =  0;  i  <  mRules.length;  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],	  For(int    i    =    0;    i    <    mRules.size();    ++i)    {    for(int    i    =    0;    i    <    mRules.length;    ++i)    {    mRules[i]    =    new    RuleRule(mValues[i],    locale    	non-compiled	[CE]  <identifier>  expected	61	None	replace
276	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mMinuteLengthEstimate);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mMinuteLengthEstimate);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mMinuteLengthEstimate);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale,    mMaxLengthEstimate);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
277	[BUG]  [BUGGY]  format  =  new  FastDateFormat(Long.MAX_VALUE,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(Long.MAX_VALUE,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(Long.MAX_VALUE,  locale);	  format    =    new    FastDateFormat(Long.MAX_VALUE,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
278	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  LONG  +  1);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  LONG  +  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  LONG  +  1);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    LONG);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
279	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale)+  1;  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale)+  1;  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale)+  1;	  Format    <    String,Locale>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
280	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale  +  1);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale  +  1);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale  +  1);	  Format    <    String,Locale>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
281	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale).withUTC();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale).withUTC();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale).withUTC();	  Format    <    String,Locale>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
282	[BUG]  [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules  ==  null?  null  :  mRules.values();  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules  ==  null?  null  :  mRules.values();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  RuleRule>  mRules  =  mRules  ==  null?  null  :  mRules.values();	  Format    <    String,    RuleRule>    mRules    =    mRules.values();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
283	[BUG]  [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules.get(mField);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules.get(mField);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  RuleRule>  mRules  =  mRules.get(mField);	  Format    <    String,    RuleRule>    mRules    =    mRules.values();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
284	[BUG]  [BUGGY]  format  =  new  FastDateFormat(false,  cInstanceCache.get(emptyFormat));  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(false,  cInstanceCache.get(emptyFormat));  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(false,  cInstanceCache.get(emptyFormat));	  format    =    new    FastDateFormat(false,    cInstanceCache);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
285	[BUG]  [BUGGY]  format  =  new  FastDateFormat(false,  cInstanceCache.size());  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(false,  cInstanceCache.size());  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(false,  cInstanceCache.size());	  format    =    new    FastDateFormat(false,    cInstanceCache);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
286	[BUG]  [BUGGY]  Format  <  Rule>  mRules  =  mRules.get(rule);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule>  mRules  =  mRules.get(rule);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule>  mRules  =  mRules.get(rule);	  Format    <    Rule>    mRules    =    mRules.get(i);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
287	[BUG]  [BUGGY]  Format  <  Rule>  mRules  =  mRules.get(mField);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule>  mRules  =  mRules.get(mField);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule>  mRules  =  mRules.get(mField);	  Format    <    Rule>    mRules    =    mRules.get(i);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
288	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  null,  false);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  null,  false);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  null,  false);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
289	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.UNQUOTED);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.UNQUOTED);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.UNQUOTED);	  format    =    new    FastDateFormat(FastDateFormat.LONG);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
290	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(timeZone,  TimeZone,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(timeZone,  TimeZone,  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(timeZone,  TimeZone,  locale);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    TimeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
291	[BUG]  [BUGGY]  format  =  cInstanceCache.getInstance(emptyFormat,  false);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.getInstance(emptyFormat,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.getInstance(emptyFormat,  false);	  format    =    cInstanceCache.getInstance(emptyFormat);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
292	[BUG]  [BUGGY]  format  =  new  FastDateFormat(instance,  false);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(instance,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(instance,  false);	  format    =    new    FastDateFormat(instance);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
293	[BUG]  [BUGGY]  format  =  new  FastDateFormat(instance,  true);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(instance,  true);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(instance,  true);	  format    =    new    FastDateFormat(instance);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
294	[BUG]  [BUGGY]  format  =  new  FastDateFormat(injectables);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(injectables);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(injectables);	  format    =    new    FastDateFormat(instance);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
295	[BUG]  [BUGGY]  if(cInstanceCache!=  null)  {  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  cInstanceCache.put(format,  emptyFormat);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  if(cInstanceCache!=  null)  {  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  cInstanceCache.put(format,  emptyFormat);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	if(cInstanceCache!=  null)  {  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  cInstanceCache.put(format,  emptyFormat);  }	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    cInstanceCache.put(format,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
296	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(mTimeZone);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(mTimeZone);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(mTimeZone);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale).setTimeZone(timeZone);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
297	[BUG]  [BUGGY]  mRules  =  new  RuleRule(mValues[i],  format);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  mRules  =  new  RuleRule(mValues[i],  format);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	mRules  =  new  RuleRule(mValues[i],  format);	  mRules    =    new    RuleRule(mValues[i],    locale);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
298	[BUG]  [BUGGY]  mRules  =  new  RuleRule(mValues[i],  timeZone);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  mRules  =  new  RuleRule(mValues[i],  timeZone);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	mRules  =  new  RuleRule(mValues[i],  timeZone);	  mRules    =    new    RuleRule(mValues[i],    locale);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
299	[BUG]  [BUGGY]  format  =  new  FastDateFormat(format,  timeZone);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(format,  timeZone);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(format,  timeZone);	  format    =    new    FastDateFormat(pattern);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
300	[BUG]  [BUGGY]  Format  emptyFormat  =  format.init(null);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  emptyFormat  =  format.init(null);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  emptyFormat  =  format.init(null);	  Format    emptyFormat    =    format.init();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
301	[BUG]  [BUGGY]  Set  <  String>  values  =  Sets.newHashSetWithValues(mValues);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Set  <  String>  values  =  Sets.newHashSetWithValues(mValues);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Set  <  String>  values  =  Sets.newHashSetWithValues(mValues);	  Set    <    String>    values    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
302	[BUG]  [BUGGY]  Set  <  String>  values  =  Sets.newHashSetWithValues();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Set  <  String>  values  =  Sets.newHashSetWithValues();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Set  <  String>  values  =  Sets.newHashSetWithValues();	  Set    <    String>    values    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
303	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale  /  1);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale  /  1);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale  /  1);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale    +    1);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
304	[BUG]  [BUGGY]  >>  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  >>  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	>>	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    else    {    cInstanceCache.put(format,    format);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
305	[BUG]  [BUGGY]  format  =  format.create();  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  format.create();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  format.create();	  format    =    emptyFormat.create();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
306	[BUG]  [BUGGY]  format  =  cInstanceCache.create();  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.create();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.create();	  format    =    emptyFormat.create();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
307	[BUG]  [BUGGY]  format  =  new  FastDateFormat(emptyFormat.create());  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(emptyFormat.create());  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(emptyFormat.create());	  format    =    emptyFormat.create();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
308	[BUG]  [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(new  FastDateFormat(emptyFormat),  locale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(new  FastDateFormat(emptyFormat),  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =(FastDateFormat)cInstanceCache.get(new  FastDateFormat(emptyFormat),  locale);	  Format    format    =(FastDateFormat)cInstanceCache.get(format);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
309	[BUG]  [BUGGY]  format  =  new  FastDateFormat(pattern,  TimeZone.getDefault());  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(pattern,  TimeZone.getDefault());  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(pattern,  TimeZone.getDefault());	  format    =    new    FastDateFormat(pattern,    location);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
310	[BUG]  [BUGGY]  format  =  new  FastDateFormat(timeZone,  location);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(timeZone,  location);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(timeZone,  location);	  format    =    new    FastDateFormat(pattern,    location);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
311	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setTimeZone(timeZone);	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
312	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
313	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale  -  1);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale  -  1);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale  -  1);	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
314	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.BOTH  +  1);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.BOTH  +  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.BOTH  +  1);	  format    =    new    FastDateFormat(FastDateFormat.BOTH);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
315	[BUG]  [BUGGY]  cInstanceCache.put(emptyFormat,  this);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  cInstanceCache.put(emptyFormat,  this);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	cInstanceCache.put(emptyFormat,  this);	  cInstanceCache.put(format,    this);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
316	[BUG]  [BUGGY]  cInstanceCache.put(emptyFormat,  value);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  cInstanceCache.put(emptyFormat,  value);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	cInstanceCache.put(emptyFormat,  value);	  cInstanceCache.put(format,    value);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
317	[BUG]  [BUGGY]  format  =  new  FastDateFormat(null,  cInstanceCache);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(null,  cInstanceCache);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(null,  cInstanceCache);	  format    =    new    FastDateFormat(null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
318	[BUG]  [BUGGY]  Format!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  emptyFormat.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  emptyFormat.put(i,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  emptyFormat.put(i,  format);  }	  Format!=    null)    {    for(int    i    =    0;    i    <    rules.size();    ++i)    {    emptyFormat.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
319	[BUG]  [BUGGY]  Format!=  null)  {  for(int  i  =  0;  i  <  rules.size();  ++i)  {  format.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format!=  null)  {  for(int  i  =  0;  i  <  rules.size();  ++i)  {  format.put(i,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format!=  null)  {  for(int  i  =  0;  i  <  rules.size();  ++i)  {  format.put(i,  format);  }	  Format!=    null)    {    for(int    i    =    0;    i    <    rules.size();    ++i)    {    emptyFormat.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
320	[BUG]  [BUGGY]  Format  format  =  cInstanceCache.get(index);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  cInstanceCache.get(index);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  cInstanceCache.get(index);	  Format    format    =    cInstanceCache.get(format);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
321	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.EMPTY,  cInstanceCache);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.EMPTY,  cInstanceCache);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.EMPTY,  cInstanceCache);	  format    =    new    FastDateFormat(FastDateFormat.EMPTY);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
322	[BUG]  [BUGGY]  format  =  format.cloneTree(this);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  format.cloneTree(this);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  format.cloneTree(this);	  format    =    emptyFormat.cloneTree(this);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
323	[BUG]  [BUGGY]  format  =  cInstanceCache.cloneTree(this);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.cloneTree(this);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.cloneTree(this);	  format    =    emptyFormat.cloneTree(this);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
324	[BUG]  [BUGGY]  format  =  this.emptyFormat.cloneTree(this);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  this.emptyFormat.cloneTree(this);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  this.emptyFormat.cloneTree(this);	  format    =    emptyFormat.cloneTree(this);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
325	[BUG]  [BUGGY]  Format!=  null)  {  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  format.put(i,  format);  }  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format!=  null)  {  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  format.put(i,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format!=  null)  {  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  format.put(i,  format);  }	  Format!=    null)    {    for(int    i    =    0;    i    <    mRules.size();    ++i)    {    emptyFormat.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
326	[BUG]  [BUGGY]  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(pattern,  timeZone,  locale  +  1);	  format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
327	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  INSTANCE);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  INSTANCE);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  INSTANCE);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    NUMBER);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
328	[BUG]  [BUGGY]  Format  <  Rule>  mRules  =  rule.values();  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule>  mRules  =  rule.values();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule>  mRules  =  rule.values();	  Format    <    Rule>    mRules    =    mRules.values();    	non-compiled	[CE]  <identifier>  expected	123	None	replace
329	[BUG]  [BUGGY]  format  =  new  FastDateFormat(LONG,  Locale.getDefault()  +  1);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(LONG,  Locale.getDefault()  +  1);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(LONG,  Locale.getDefault()  +  1);	  format    =    new    FastDateFormat(LONG,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	113	None	replace
330	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  daylight);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  daylight);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  daylight);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale,    mDaylight);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
331	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  3);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  3);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  3);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale,    mDaylight);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
332	[BUG]  [BUGGY]  format  =  new  FastDateFormat(format,  NEW);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(format,  NEW);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(format,  NEW);	  format    =    new    FastDateFormat(emptyFormat,    format);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
333	[BUG]  [BUGGY]  format  =  new  FastDateFormat(timeZone,  location,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(timeZone,  location,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(timeZone,  location,  locale);	  format    =    new    FastDateFormat(pattern,    location,    locale);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
334	[BUG]  [BUGGY]  format  =  new  FastDateFormat(format,  location,  locale);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(format,  location,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(format,  location,  locale);	  format    =    new    FastDateFormat(pattern,    location,    locale);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
335	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  TimeZone.getDefault(),  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  TimeZone.getDefault(),  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(pattern,  TimeZone.getDefault(),  locale);	  Format    format    =    new    FastDateFormat(format,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
336	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  TimeZone.getDefault(),  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  TimeZone.getDefault(),  timeZone,  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  TimeZone.getDefault(),  timeZone,  locale);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
337	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(timeZone,  TimeZone.getDefault(),  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(timeZone,  TimeZone.getDefault(),  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(timeZone,  TimeZone.getDefault(),  locale);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    TimeZone.getDefault(),    locale);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
338	[BUG]  [BUGGY]  format  =  cInstanceCache.getInstanceUTC();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.getInstanceUTC();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.getInstanceUTC();	  format    =    emptyFormat.getInstanceUTC();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
339	[BUG]  [BUGGY]  format  =  format.getInstanceUTC();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  format.getInstanceUTC();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  format.getInstanceUTC();	  format    =    emptyFormat.getInstanceUTC();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
340	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.init(null);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <?>  emptyFormat  =  format.init(null);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <?>  emptyFormat  =  format.init(null);	  Format    <?>    emptyFormat    =    format.init();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
341	[BUG]  [BUGGY]  Format  <?>  emptyFormat  =  format.init(this);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <?>  emptyFormat  =  format.init(this);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <?>  emptyFormat  =  format.init(this);	  Format    <?>    emptyFormat    =    format.init();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
342	[BUG]  [BUGGY]  format  =  cInstanceCache.get(null);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.get(null);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.get(null);	  format    =    cInstanceCache.cloneTree();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
343	[BUG]  [BUGGY]  format  =  cInstanceCache.clone(emptyFormat);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.clone(emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.clone(emptyFormat);	  format    =    cInstanceCache.cloneTree();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
344	[BUG]  [BUGGY]  Format  <  String,  Object>  cInstanceCache.put(format,  value);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  Object>  cInstanceCache.put(format,  value);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  Object>  cInstanceCache.put(format,  value);	  Format    <    String,    Object>    cInstanceCache.put(mValue,    format);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
345	[BUG]  [BUGGY]  Set  <  String>  emptyRules  =  Sets.newHashSet(emptyFormat);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Set  <  String>  emptyRules  =  Sets.newHashSet(emptyFormat);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Set  <  String>  emptyRules  =  Sets.newHashSet(emptyFormat);	  Set    <    String>    emptyRules    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
346	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.instance,  format);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.instance,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.instance,  format);	  format    =    new    FastDateFormat(FastDateFormat.class,    format);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
347	[BUG]  [BUGGY]  format  =  new  FastDateFormat(Long.MAX_VALUE,  Long.MIN_VALUE);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(Long.MAX_VALUE,  Long.MIN_VALUE);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(Long.MAX_VALUE,  Long.MIN_VALUE);	  format    =    new    FastDateFormat(Long.MAX_VALUE,    Long.MAX_VALUE);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
348	[BUG]  [BUGGY]  if(format  ==  null)  {  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  cInstanceCache.put(emptyFormat,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  if(format  ==  null)  {  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  cInstanceCache.put(emptyFormat,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	if(format  ==  null)  {  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  cInstanceCache.put(emptyFormat,  format);  }	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    cInstanceCache.put(emptyFormat,    format);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
349	[BUG]  [BUGGY]  Format  <  String,  RuleRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale)+  1;  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  RuleRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale)+  1;  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  RuleRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale)+  1;	  Format    <    String,    RuleRule>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
350	[BUG]  [BUGGY]  Format  <  String,  RuleRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale  +  1);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  RuleRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale  +  1);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  RuleRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale  +  1);	  Format    <    String,    RuleRule>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
351	[BUG]  [BUGGY]  Format  <  String,  RuleRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale).withUTC();  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  RuleRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale).withUTC();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  RuleRule>  cInstanceCache  =  getInstance(pattern,  timeZone,  locale).withUTC();	  Format    <    String,    RuleRule>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
352	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.BOTH,  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.BOTH,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.BOTH,  format);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    format);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
353	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NULL,  format);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NULL,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NULL,  format);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    format);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
354	[BUG]  [BUGGY]  cInstanceCache.put(values,  mValue);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  cInstanceCache.put(values,  mValue);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	cInstanceCache.put(values,  mValue);	  cInstanceCache.put(emptyFormat,    mValue);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
355	[BUG]  [BUGGY]  format  =  new  FastDateFormat(LONG,  NUMBER);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(LONG,  NUMBER);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(LONG,  NUMBER);	  format    =    new    FastDateFormat(LONG,    LONG);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
356	[BUG]  [BUGGY]  format  =  getInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  getInstance(pattern,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  getInstance(pattern,  timeZone,  locale);	  format    =    format.getInstance();    	non-compiled	[CE]  <identifier>  expected	102	None	replace
357	[BUG]  [BUGGY]  readInstantiation(format);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  readInstantiation(format);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	readInstantiation(format);	  if(format    ==    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
358	[BUG]  [BUGGY]  readInstantiator();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  readInstantiator();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	readInstantiator();	  if(format    ==    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
359	[BUG]  [BUGGY]  readInstantiation();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  readInstantiation();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	readInstantiation();	  if(format    ==    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
360	[BUG]  [BUGGY]  Format  <  String,  Object>  emptyFormat  =  format.init(null);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  Object>  emptyFormat  =  format.init(null);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  Object>  emptyFormat  =  format.init(null);	  Format    <    String,    Object>    emptyFormat    =    format.init();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
361	[BUG]  [BUGGY]  Format  <  String,  Object>  emptyFormat  =  format.init(this);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  Object>  emptyFormat  =  format.init(this);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  Object>  emptyFormat  =  format.init(this);	  Format    <    String,    Object>    emptyFormat    =    format.init();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
362	[BUG]  [BUGGY]  format  =  format.cloneTree(false);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  format.cloneTree(false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  format.cloneTree(false);	  format    =    emptyFormat.cloneTree(false);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
363	[BUG]  [BUGGY]  format  =  format.cloneTree(true);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  format.cloneTree(true);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  format.cloneTree(true);	  format    =    emptyFormat.cloneTree(false);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
364	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  location,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  location,  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(pattern,  location,  locale);	  Format    format    =    new    FastDateFormat(format,    locale);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
365	[BUG]  [BUGGY]  format  =  new  FastDateFormat(false,  null,  cInstanceCache);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(false,  null,  cInstanceCache);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(false,  null,  cInstanceCache);	  format    =    new    FastDateFormat(false,    null);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
366	[BUG]  [BUGGY]  Format  format  =  getInstance(pattern,  timeZone,  locale,  mDaylight);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  getInstance(pattern,  timeZone,  locale,  mDaylight);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  getInstance(pattern,  timeZone,  locale,  mDaylight);	  Format    format    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
367	[BUG]  [BUGGY]  format  =  format.clone();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  format.clone();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  format.clone();	  format    =    emptyFormat.clone();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
368	[BUG]  [BUGGY]  format  =  emptyFormat.withLocale(locale);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  emptyFormat.withLocale(locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  emptyFormat.withLocale(locale);	  format    =    emptyFormat.clone();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
369	[BUG]  [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules.get(false);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules.get(false);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  RuleRule>  mRules  =  mRules.get(false);	  Format    <    String,    RuleRule>    mRules    =    mRules.get(i);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
370	[BUG]  [BUGGY]  format  =  new  FastDateFormat(instance,  FORMAT);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(instance,  FORMAT);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(instance,  FORMAT);	  format    =    new    FastDateFormat(emptyFormat,    FORMAT);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
371	[BUG]  [BUGGY]  format  =  new  FastDateFormat(MEDIUM);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(MEDIUM);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(MEDIUM);	  format    =    new    FastDateFormat(LONG);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
372	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  emptyFormat,  mLocale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  emptyFormat,  mLocale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.class,  emptyFormat,  mLocale);	  format    =    new    FastDateFormat(FastDateFormat.class,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
373	[BUG]  [BUGGY]  Iterator  <  String>  values  =  this.mValues.keySet().iterator();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Iterator  <  String>  values  =  this.mValues.keySet().iterator();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Iterator  <  String>  values  =  this.mValues.keySet().iterator();	  Iterator    <    String>    values    =    cInstanceCache.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	66	None	replace
374	[BUG]  [BUGGY]  Iterator  <  String>  values  =  mValues.keySet().iterator();  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Iterator  <  String>  values  =  mValues.keySet().iterator();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Iterator  <  String>  values  =  mValues.keySet().iterator();	  Iterator    <    String>    values    =    cInstanceCache.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	66	None	replace
375	[BUG]  [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(emptyFormat,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(emptyFormat,  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =(FastDateFormat)cInstanceCache.get(emptyFormat,  locale);	  Format    format    =(FastDateFormat)cInstanceCache.get(emptyFormat);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
376	[BUG]  [BUGGY]  cast(format);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  cast(format);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	cast(format);	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
377	[BUG]  [BUGGY]  Format  <  Rule>  cInstanceCache  =  cInstanceCache.get(emptyFormat);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule>  cInstanceCache  =  cInstanceCache.get(emptyFormat);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule>  cInstanceCache  =  cInstanceCache.get(emptyFormat);	  Format    <    Rule>    cInstanceCache    =    cInstanceCache.get(mValues);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
378	[BUG]  [BUGGY]  Format  <  Rule>  cInstanceCache  =  cInstanceCache.get(mRules);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule>  cInstanceCache  =  cInstanceCache.get(mRules);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule>  cInstanceCache  =  cInstanceCache.get(mRules);	  Format    <    Rule>    cInstanceCache    =    cInstanceCache.get(mValues);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
379	[BUG]  [BUGGY]  Format  <  Rule>  cInstanceCache  =  cInstanceCache.get(mValues  +  1);  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule>  cInstanceCache  =  cInstanceCache.get(mValues  +  1);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule>  cInstanceCache  =  cInstanceCache.get(mValues  +  1);	  Format    <    Rule>    cInstanceCache    =    cInstanceCache.get(mValues);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
380	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  locale);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  for(int  i  =  0;  i  <  mRules.size();  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  locale);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	for(int  i  =  0;  i  <  mRules.size();  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  locale);  }	  For(int    i    =    0;    i    <    mRules.size();    ++i)    {    mRules[i]    =    new    RuleRule(mValues[i],    locale);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
381	[BUG]  [BUGGY]  Integer  i  =  0;  mRules.size()  >  0;  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  locale);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Integer  i  =  0;  mRules.size()  >  0;  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  locale);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Integer  i  =  0;  mRules.size()  >  0;  ++i)  {  mRules[i]  =  new  RuleRule(mValues[i],  locale);  }	  For(int    i    =    0;    i    <    mRules.size();    ++i)    {    mRules[i]    =    new    RuleRule(mValues[i],    locale);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
382	[BUG]  [BUGGY]  Format  <  Rule,Rule>  mRules  =  mRules.get(mField);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule,Rule>  mRules  =  mRules.get(mField);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule,Rule>  mRules  =  mRules.get(mField);	  Format    <    Rule,Rule>    mRules    =    mRules.get(i);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
383	[BUG]  [BUGGY]  Format  <  Rule,Rule>  mRules  =  cInstanceCache.get(i);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule,Rule>  mRules  =  cInstanceCache.get(i);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule,Rule>  mRules  =  cInstanceCache.get(i);	  Format    <    Rule,Rule>    mRules    =    mRules.get(i);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
384	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  emptyFormat.setLocale(0);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  emptyFormat.setLocale(0);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale);  emptyFormat.setLocale(0);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    emptyFormat.setLocale(false);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
385	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache.put(locale,  null);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache.put(locale,  null);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache.put(locale,  null);	  Format    <    String,Locale>    cInstanceCache.put(locale,    locale);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
386	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache.put(timeZone,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache.put(timeZone,  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache.put(timeZone,  locale);	  Format    <    String,Locale>    cInstanceCache.put(locale,    locale);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
387	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.instance(),  format);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.instance(),  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.instance(),  format);	  format    =    new    FastDateFormat(FastDateFormat.class,    format);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
388	[BUG]  [BUGGY]  format  =  new  FastDateFormat(format,  value,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(format,  value,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(format,  value,  locale);	  format    =    new    FastDateFormat(pattern,    value,    locale);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
389	[BUG]  [BUGGY]  cInstanceCache.put(value,  emptyFormat);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  cInstanceCache.put(value,  emptyFormat);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	cInstanceCache.put(value,  emptyFormat);	  cInstanceCache.put(emptyFormat,    mValue);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
390	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NULL,  emptyFormat);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NULL,  emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NULL,  emptyFormat);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
391	[BUG]  [BUGGY]  format  =  new  FastDateFormat(false,  cInstanceCache,  false);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(false,  cInstanceCache,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(false,  cInstanceCache,  false);	  format    =    new    FastDateFormat(false,    cInstanceCache);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
392	[BUG]  [BUGGY]  {  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  {  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	{	  if(format!=    null)    {    cInstanceCache.put(emptyFormat,    format);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
393	[BUG]  [BUGGY]  format  =  this.format.getInstance();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  this.format.getInstance();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  this.format.getInstance();	  format    =    format.getInstance();    	non-compiled	[CE]  <identifier>  expected	102	None	replace
394	[BUG]  [BUGGY]  format  =  mRules.getInstance();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  mRules.getInstance();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  mRules.getInstance();	  format    =    format.getInstance();    	non-compiled	[CE]  <identifier>  expected	102	None	replace
395	[BUG]  [BUGGY]  fastDateFormat  =  new  FastDateFormat(pattern,  timeZone,  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  fastDateFormat  =  new  FastDateFormat(pattern,  timeZone,  format);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	fastDateFormat  =  new  FastDateFormat(pattern,  timeZone,  format);	  fastDateFormat    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
396	[BUG]  [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules.toArray(new  Rule[mRules.size()  ]);  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules.toArray(new  Rule[mRules.size()  ]);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  RuleRule>  mRules  =  mRules.toArray(new  Rule[mRules.size()  ]);	  Format    <    String,    RuleRule>    mRules    =    mRules.values();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
397	[BUG]  [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules!=  null?  mRules.values()  :  Collections.emptySet();  [CE]  <identifier>  expected  [FE]                          SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  RuleRule>  mRules  =  mRules!=  null?  mRules.values()  :  Collections.emptySet();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  RuleRule>  mRules  =  mRules!=  null?  mRules.values()  :  Collections.emptySet();	  Format    <    String,    RuleRule>    mRules    =    mRules.values();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
398	[BUG]  [BUGGY]  format  =  new  FastDateFormat(Long.parseLong(mValue),  cDefaultPattern);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(Long.parseLong(mValue),  cDefaultPattern);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(Long.parseLong(mValue),  cDefaultPattern);	  format    =    new    FastDateFormat(Long.parseLong(mValue));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
399	[BUG]  [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(emptyFormat,  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(emptyFormat,  format);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =(FastDateFormat)cInstanceCache.get(emptyFormat,  format);	  Format    format    =(FastDateFormat)cInstanceCache.get(emptyFormat);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
400	[BUG]  [BUGGY]  cInstanceCache.put(null,  format);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  cInstanceCache.put(null,  format);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	cInstanceCache.put(null,  format);	  cInstanceCache.put(format,    mValue);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
401	[BUG]  [BUGGY]  format  =  new  FastDateFormat(pattern,  TimeZone,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(pattern,  TimeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(pattern,  TimeZone,  locale);	  format    =    new    FastDateFormat(mTimeZone,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
402	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  null);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  null);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.class,  null);	  format    =    new    FastDateFormat(FastDateFormat.class,    false);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
403	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  mRules.size();  ++i)  {  for(int  i  =  0;  i  <  mRules.length;  ++i)  {  mRules[i]  =  new  RuleRule(mValues[  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  For(int  i  =  0;  i  <  mRules.size();  ++i)  {  for(int  i  =  0;  i  <  mRules.length;  ++i)  {  mRules[i]  =  new  RuleRule(mValues[  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	For(int  i  =  0;  i  <  mRules.size();  ++i)  {  for(int  i  =  0;  i  <  mRules.length;  ++i)  {  mRules[i]  =  new  RuleRule(mValues[	  For(int    i    =    0;    i    <    mRules.size();    ++i)    {    for(int    i    =    0;    i    <    mRules.length;    ++i)    {    mRules[i]    =    new    RuleRule(mValues[i],    	non-compiled	[CE]  <identifier>  expected	60	None	replace
404	[BUG]  [BUGGY]  format  =  new  FastDateFormat(false,  mStyle);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(false,  mStyle);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(false,  mStyle);	  format    =    new    FastDateFormat(true);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
405	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale),  true);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale),  true);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale),  true);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale,    false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
406	[BUG]  [BUGGY]  format  =  cInstanceCache.getInstance(mDaylight);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.getInstance(mDaylight);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.getInstance(mDaylight);	  format    =    cInstanceCache.getInstance();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
407	[BUG]  [BUGGY]  format  =  new  FastDateFormat(format,  cInstanceCache);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(format,  cInstanceCache);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(format,  cInstanceCache);	  format    =    new    FastDateFormat(format);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
408	[BUG]  [BUGGY]  format  =  new  FastDateFormat(format,  false);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(format,  false);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(format,  false);	  format    =    new    FastDateFormat(format);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
409	[BUG]  [BUGGY]  format  =  new  FastDateFormat(false,  format);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(false,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(false,  format);	  format    =    new    FastDateFormat(emptyFormat,    format);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
410	[BUG]  [BUGGY]  Format  <  String,String>  mRules  =  cInstanceCache.get(mStyle);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,String>  mRules  =  cInstanceCache.get(mStyle);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,String>  mRules  =  cInstanceCache.get(mStyle);	  Format    <    String,String>    mRules    =    cInstanceCache.get(values);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
411	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  false,  cInstanceCache);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  false,  cInstanceCache);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  false,  cInstanceCache);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    false);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
412	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  true);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  true);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  true);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    false);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
413	[BUG]  [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(format,  emptyFormat);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =(FastDateFormat)cInstanceCache.get(format,  emptyFormat);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =(FastDateFormat)cInstanceCache.get(format,  emptyFormat);	  Format    format    =(FastDateFormat)cInstanceCache.get(format);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
414	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  emptyFormat,  cLocale);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.class,  emptyFormat,  cLocale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.class,  emptyFormat,  cLocale);	  format    =    new    FastDateFormat(FastDateFormat.class,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
415	[BUG]  [BUGGY]  Format  <  String,  Object>  cInstanceCache.put(format,  this);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,  Object>  cInstanceCache.put(format,  this);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,  Object>  cInstanceCache.put(format,  this);	  Format    <    String,    Object>    cInstanceCache.put(mValue,    format);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
416	[BUG]  [BUGGY]  format  =  new  FastDateFormat(LONG,  emptyFormat);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(LONG,  emptyFormat);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(LONG,  emptyFormat);	  format    =    new    FastDateFormat(LONG);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
417	[BUG]  [BUGGY]  format  =  new  FastDateFormat(LONG,  format);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(LONG,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(LONG,  format);	  format    =    new    FastDateFormat(LONG);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
418	[BUG]  [BUGGY]  format  =  new  FastDateFormat(mDaylight);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(mDaylight);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(mDaylight);	  format    =    new    FastDateFormat(pattern);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
419	[BUG]  [BUGGY]  format  =  new  FastDateFormat(mValues);  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(mValues);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(mValues);	  format    =    new    FastDateFormat(pattern);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
420	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  emptyFormat,  cLocale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  emptyFormat,  cLocale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NONE,  emptyFormat,  cLocale);	  format    =    new    FastDateFormat(FastDateFormat.NONE,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
421	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(FastDateFormat.NONE,  format);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(FastDateFormat.NONE,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(FastDateFormat.NONE,  format);	  format    =    new    FastDateFormat(FastDateFormat.NONE,    emptyFormat);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
422	[BUG]  [BUGGY]  [Delete]  else  if(format!=  null)  {  cInstanceCache.put(mValues,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  [Delete]  else  if(format!=  null)  {  cInstanceCache.put(mValues,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	[Delete]  else  if(format!=  null)  {  cInstanceCache.put(mValues,  format);  }	  if(format!=    null)    {    cInstanceCache.put(mValues,    format);    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
423	[BUG]  [BUGGY]  >>  [Delete]  else  if(format!=  null)  {  cInstanceCache.put(mValues,  format);  }  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  >>  [Delete]  else  if(format!=  null)  {  cInstanceCache.put(mValues,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	>>  [Delete]  else  if(format!=  null)  {  cInstanceCache.put(mValues,  format);  }	  if(format!=    null)    {    cInstanceCache.put(mValues,    format);    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
424	[BUG]  [BUGGY]  [Delete]  else  if(format.isEmpty())  {  cInstanceCache.put(mValues,  format);  }  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  [Delete]  else  if(format.isEmpty())  {  cInstanceCache.put(mValues,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	[Delete]  else  if(format.isEmpty())  {  cInstanceCache.put(mValues,  format);  }	  if(format!=    null)    {    cInstanceCache.put(mValues,    format);    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
425	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mDaylight);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mDaylight);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(pattern,  timeZone,  locale,  mDaylight);	  Format    format    =    new    FastDateFormat(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
426	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.LONG,  format);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.LONG,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.LONG,  format);	  format    =    new    FastDateFormat(FastDateFormat.LONG);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
427	[BUG]  [BUGGY]  format  =  format.getInstanceCache();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  format.getInstanceCache();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  format.getInstanceCache();	  format    =    emptyFormat.getInstanceCache();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
428	[BUG]  [BUGGY]  Format  emptyFormat  =  format.initialise();  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  emptyFormat  =  format.initialise();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  emptyFormat  =  format.initialise();	  Format    emptyFormat    =    format.init();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
429	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setLocale(locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setLocale(locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  timeZone,  locale).setLocale(locale);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    timeZone,    locale).setTimeZone(timeZone);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
430	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  mRules.size();  ++i)  {  for(int  i  =  0;  i  <  mRules.length;  ++i)  {  mRules[i]  =  new  RuleRule(mValues  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  For(int  i  =  0;  i  <  mRules.size();  ++i)  {  for(int  i  =  0;  i  <  mRules.length;  ++i)  {  mRules[i]  =  new  RuleRule(mValues  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	For(int  i  =  0;  i  <  mRules.size();  ++i)  {  for(int  i  =  0;  i  <  mRules.length;  ++i)  {  mRules[i]  =  new  RuleRule(mValues	  For(int    i    =    0;    i    <    mRules.size();    ++i)    {    for(int    i    =    0;    i    <    mRules.length;    ++i)    {    mRules[i]    =    new    RuleRule(mValues[i],    locale    	non-compiled	[CE]  <identifier>  expected	61	None	replace
431	[BUG]  [BUGGY]  cInstanceCache.remove(emptyFormat);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  cInstanceCache.remove(emptyFormat);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	cInstanceCache.remove(emptyFormat);	  cInstanceCache.put(emptyFormat);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
432	[BUG]  [BUGGY]  format  =  new  FastDateFormat(pattern,  null);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(pattern,  null);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(pattern,  null);	  format    =    new    FastDateFormat(null,    null);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
433	[BUG]  [BUGGY]  Iterator  <  String>  values  =  cInstanceCache.get(mValues).iterator();  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Iterator  <  String>  values  =  cInstanceCache.get(mValues).iterator();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Iterator  <  String>  values  =  cInstanceCache.get(mValues).iterator();	  Iterator    <    String>    values    =    cInstanceCache.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	66	None	replace
434	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  NUMBER,  LONG);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  NUMBER,  LONG);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  NUMBER,  LONG);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    NUMBER);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
435	[BUG]  [BUGGY]  format  =  new  FastDateFormat(mRules,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(mRules,  timeZone,  locale);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(mRules,  timeZone,  locale);	  format    =    new    FastDateFormat(pattern,    location,    locale);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
436	[BUG]  [BUGGY]  if(format!=  null)  {  cInstanceCache.put(value,  format);  }  else  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  FormatUtils.setValue(mValue,  values[i]);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  if(format!=  null)  {  cInstanceCache.put(value,  format);  }  else  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  FormatUtils.setValue(mValue,  values[i]);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	if(format!=  null)  {  cInstanceCache.put(value,  format);  }  else  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  FormatUtils.setValue(mValue,  values[i]);  }	  cInstanceCache.put(value,    format);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
437	[BUG]  [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  TimeZone,  mLocale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  FastDateFormat  format  =  new  FastDateFormat(pattern,  TimeZone,  mLocale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	FastDateFormat  format  =  new  FastDateFormat(pattern,  TimeZone,  mLocale);	  FastDateFormat    format    =    new    FastDateFormat(pattern,    TimeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
438	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  TimeZone,  locale);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(pattern,  TimeZone,  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(pattern,  TimeZone,  locale);	  Format    format    =    new    FastDateFormat(format,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
439	[BUG]  [BUGGY]  format  =  cInstanceCache.getInstance(emptyFormat,  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  cInstanceCache.getInstance(emptyFormat,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  cInstanceCache.getInstance(emptyFormat,  format);	  format    =    cInstanceCache.getInstance(emptyFormat);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
440	[BUG]  [BUGGY]  Format!=  null)  {  for(int  i  =  0;  i  <  cInstanceCache.size();  ++i)  {  emptyFormat.put(format,  format);  }  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format!=  null)  {  for(int  i  =  0;  i  <  cInstanceCache.size();  ++i)  {  emptyFormat.put(format,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format!=  null)  {  for(int  i  =  0;  i  <  cInstanceCache.size();  ++i)  {  emptyFormat.put(format,  format);  }	  Format!=    null)    {    for(int    i    =    0;    i    <    cInstanceCache.size();    ++i)    {    emptyFormat.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
441	[BUG]  [BUGGY]  Format!=  null)  {  for(int  i  =  0;  i  <  this.cInstanceCache.size();  ++i)  {  emptyFormat.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format!=  null)  {  for(int  i  =  0;  i  <  this.cInstanceCache.size();  ++i)  {  emptyFormat.put(i,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format!=  null)  {  for(int  i  =  0;  i  <  this.cInstanceCache.size();  ++i)  {  emptyFormat.put(i,  format);  }	  Format!=    null)    {    for(int    i    =    0;    i    <    cInstanceCache.size();    ++i)    {    emptyFormat.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
442	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  LONG,  FORMAT);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NUMBER,  LONG,  FORMAT);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NUMBER,  LONG,  FORMAT);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    LONG);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
443	[BUG]  [BUGGY]  format  =  this.format.cloneTree();  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  this.format.cloneTree();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  this.format.cloneTree();	  format    =    format.cloneTree();    	non-compiled	[CE]  <identifier>  expected	81	None	replace
444	[BUG]  [BUGGY]  format  =  mRules.clone();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  mRules.clone();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  mRules.clone();	  format    =    format.cloneTree();    	non-compiled	[CE]  <identifier>  expected	81	None	replace
445	[BUG]  [BUGGY]  Format  format  =  getInstance(pattern,  timeZone,  locale,  mStandard);  [CE]  <identifier>  expected  [FE]            SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  getInstance(pattern,  timeZone,  locale,  mStandard);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  getInstance(pattern,  timeZone,  locale,  mStandard);	  Format    format    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
446	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  false,  cInstanceCache);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.NONE,  false,  cInstanceCache);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.NONE,  false,  cInstanceCache);	  format    =    new    FastDateFormat(FastDateFormat.NONE,    false);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
447	[BUG]  [BUGGY]  Format  format  =  new  FastDateFormat(FastDateFormat.NONE,  true);  [CE]  <identifier>  expected  [FE]                      SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  format  =  new  FastDateFormat(FastDateFormat.NONE,  true);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  format  =  new  FastDateFormat(FastDateFormat.NONE,  true);	  format    =    new    FastDateFormat(FastDateFormat.NONE,    false);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
448	[BUG]  [BUGGY]  format  =  this.emptyFormat.getInstanceUTC();  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  this.emptyFormat.getInstanceUTC();  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  this.emptyFormat.getInstanceUTC();	  format    =    emptyFormat.getInstanceUTC();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
449	[BUG]  [BUGGY]  Format  <  Rule,Rule>  mRules  =  mRules.get(false);  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule,Rule>  mRules  =  mRules.get(false);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule,Rule>  mRules  =  mRules.get(false);	  Format    <    Rule,Rule>    mRules    =    mRules.get(i);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
450	[BUG]  [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.UNQUOTED,  format);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(FastDateFormat.UNQUOTED,  format);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(FastDateFormat.UNQUOTED,  format);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    format);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
451	[BUG]  [BUGGY]  format  =  new  FastDateFormat(format,  FastDateFormat.NUMBER);  [CE]  <identifier>  expected  [FE]                  SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(format,  FastDateFormat.NUMBER);  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(format,  FastDateFormat.NUMBER);	  format    =    new    FastDateFormat(FastDateFormat.NUMBER,    format);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
452	[BUG]  [BUGGY]  Format!=  null)  {  for(int  i  =  0;  i  <  this.rules.size();  ++i)  {  emptyFormat.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                    SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format!=  null)  {  for(int  i  =  0;  i  <  this.rules.size();  ++i)  {  emptyFormat.put(i,  format);  }  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format!=  null)  {  for(int  i  =  0;  i  <  this.rules.size();  ++i)  {  emptyFormat.put(i,  format);  }	  Format!=    null)    {    for(int    i    =    0;    i    <    rules.size();    ++i)    {    emptyFormat.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
453	[BUG]  [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  createInstance(pattern,  timeZone,  locale);  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  String,Locale>  cInstanceCache  =  createInstance(pattern,  timeZone,  locale);  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  String,Locale>  cInstanceCache  =  createInstance(pattern,  timeZone,  locale);	  Format    <    String,Locale>    cInstanceCache    =    getInstance(pattern,    timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
454	[BUG]  [BUGGY]  Format  <  Rule>  mRules  =  mRules.clone();  [CE]  <identifier>  expected  [FE]                        SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  Format  <  Rule>  mRules  =  mRules.clone();  [BUGGY]      format  =  emptyFormat;  format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	Format  <  Rule>  mRules  =  mRules.clone();	  Format    <    Rule>    mRules    =    mRules.values();    	non-compiled	[CE]  <identifier>  expected	123	None	replace
455	[BUG]  [BUGGY]  format  =  new  FastDateFormat(Long.MAX_VALUE,  Long.MAX_VALUE)+  1;  [CE]  <identifier>  expected  [FE]                SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(Long.MAX_VALUE,  Long.MAX_VALUE)+  1;  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(Long.MAX_VALUE,  Long.MAX_VALUE)+  1;	  format    =    new    FastDateFormat(Long.MAX_VALUE,    Long.MAX_VALUE);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
456	[BUG]  [BUGGY]  format  =  new  FastDateFormat(false,  Locale.getDefault());  [CE]  <identifier>  expected  [FE]              SerializationException      [CONTEXT]      public  static  synchronized  FastDateFormat  getInstance(String  pattern,  TimeZone  timeZone,  Locale  locale)  {  FastDateFormat  emptyFormat  =  new  FastDateFormat(pattern,  timeZone,  locale);  FastDateFormat  format  =  (FastDateFormat)  cInstanceCache.get(emptyFormat);  if  (format  ==  null)  {      [BUGGY]  format  =  new  FastDateFormat(false,  Locale.getDefault());  [BUGGY]      format.init();//  convert  shell  format  into  usable  one  cInstanceCache.put(format,  format);//  this  is  OK!  }  return  format;  }  [CLASS]  FastDateFormat  CharacterLiteral  StringLiteral  TextField  UnpaddedNumberField  UnpaddedMonthField  PaddedNumberField  TwoDigitNumberField  TwoDigitYearField  TwoDigitMonthField  TwelveHourField  TwentyFourHourField  TimeZoneNameRule  TimeZoneNumberRule  TimeZoneDisplayKey  Pair  [METHOD]  getInstance  [RETURN_TYPE]  FastDateFormat  String  pattern  TimeZone  timeZone  Locale  locale  [VARIABLES]  Locale  locale  mLocale  TimeZoneNumberRule  INSTANCE_COLON  INSTANCE_NO_COLON  TwoDigitYearField  INSTANCE  FastDateFormat  emptyFormat  format  String  cDefaultPattern  mDaylight  mPattern  mStandard  mValue  pattern  value  String[]  mValues  values  UnpaddedNumberField  INSTANCE_YEAR  long  serialVersionUID  int  FULL  LONG  MEDIUM  SHORT  field  mField  mMaxLengthEstimate  mSize  mStyle  size  style  Rule[]  mRules  TimeZone  mTimeZone  timeZone  boolean  colon  daylight  mColon  mLocaleForced  mTimeZoneForced  timeZoneForced  NumberRule  mRule  rule  char  mValue  value  TwoDigitMonthField  INSTANCE  UnpaddedMonthField  INSTANCE  Object  mObj1  mObj2  obj1  obj2  Map  cDateInstanceCache  cDateTimeInstanceCache  cInstanceCache  cTimeInstanceCache  cTimeZoneDisplayCache  	projects/Lang56/src/java/org/apache/commons/lang/time/FastDateFormat.java	0.31622776601683794	216	216	1	replace	format  =  new  FastDateFormat(false,  Locale.getDefault());	  format    =    new    FastDateFormat(emptyFormat,    Locale.getDefault());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
