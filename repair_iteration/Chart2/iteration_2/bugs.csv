bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
621	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue))  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  lvalue  =  intervalXYData.getEndXValue(series,  item);  }  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	add	if(!Double.isNaN(lvalue))  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  lvalue  =  intervalXYData.getEndXValue(series,  item);  }	  	compilable	  [FE]  NullPointerException	104	2
622	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue))  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  lvalue  =  intervalXYData.getEndXValue(series,  item);  }  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue))  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  lvalue  =  intervalXYData.getEndXValue(series,  item);  }  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	replace	if(!Double.isNaN(lvalue))  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  lvalue  =  intervalXYData.getEndXValue(series,  item);  }	  	compilable	  [FE]  NullPointerException	104	2
2102	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Math.max(0.0,  1.0);  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Math.max(0.0,  1.0);	  double    maximum    =    Math.max(0.0,    0.0);    	compilable	  [FE]  NullPointerException	351	2
2103	[BUG]  [BUGGY]  double  maximum  =  Math.max(0.0,  1.0);  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Math.max(0.0,  1.0);  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Math.max(0.0,  1.0);	  double    maximum    =    Math.max(0.0,    0.0);    	compilable	  [FE]  NullPointerException	351	2
733	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isNaN(seriesCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)||  Double.isNaN(seriesCount))  {	  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))    {    	compilable	  [FE]  NullPointerException	123	2
734	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isNaN(seriesCount))  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isNaN(seriesCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)||  Double.isNaN(seriesCount))  {	  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))    {    	compilable	  [FE]  NullPointerException	123	2
734	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {	  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))    {    	compilable	  [FE]  NullPointerException	123	2
735	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {	  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))    {    	compilable	  [FE]  NullPointerException	123	2
1951	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {  throw  new  IllegalArgumentException( "Null  'dataset'  argument.   ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'dataset'  argument.   ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	add	if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {  throw  new  IllegalArgumentException( "Null  'dataset'  argument.   ");  }	  	compilable	  [FE]  NullPointerException	326	2
1952	[BUG]  [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {  throw  new  IllegalArgumentException( "Null  'dataset'  argument.   ");  }  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {  throw  new  IllegalArgumentException( "Null  'dataset'  argument.   ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'dataset'  argument.   ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	replace	if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {  throw  new  IllegalArgumentException( "Null  'dataset'  argument.   ");  }	  	compilable	  [FE]  NullPointerException	326	2
728	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(lvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isInfinite(lvalue))  {	  if(!Double.isNaN(uvalue)||    Double.isInfinite(uvalue))    {    	compilable	  [FE]  NullPointerException	122	2
729	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(lvalue))  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(lvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isInfinite(lvalue))  {	  if(!Double.isNaN(uvalue)||    Double.isInfinite(uvalue))    {    	compilable	  [FE]  NullPointerException	122	2
1736	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {  OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	  if(!Double.isNaN(uvalue)||    Double.isInfinite(uvalue))    {    	compilable	  [FE]  NullPointerException	290	2
1737	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {  OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	  if(!Double.isNaN(uvalue)||    Double.isInfinite(uvalue))    {    	compilable	  [FE]  NullPointerException	290	2
950	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  /  1;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	add	double  minimum  =  Double.POSITIVE_INFINITY  /  1;	  double    minimum    =    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  NullPointerException	159	2
951	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  /  1;  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  /  1;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  /  1;	  double    minimum    =    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  NullPointerException	159	2
14	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  throw  new  NullPointerException( "  - ");  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	add	throw  new  NullPointerException( "  - ");	  return    new    Range(minimum,    maximum);    	compilable	  [FE]  NullPointerException	3	2
15	[BUG]  [BUGGY]  throw  new  NullPointerException( "  - ");  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  throw  new  NullPointerException( "  - ");  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	replace	throw  new  NullPointerException( "  - ");	  return    new    Range(minimum,    maximum);    	compilable	  [FE]  NullPointerException	3	2
733	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {	  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))    {    	compilable	  [FE]  NullPointerException	123	2
734	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {	  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))    {    	compilable	  [FE]  NullPointerException	123	2
1741	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {  OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(includeInterval  &&!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {	  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))    {    	compilable	  [FE]  NullPointerException	291	2
1742	[BUG]  [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {  OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(includeInterval  &&!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {	  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))    {    	compilable	  [FE]  NullPointerException	291	2
1741	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {  OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(includeInterval  &&!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))    {    	compilable	  [FE]  NullPointerException	291	2
1742	[BUG]  [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {  OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(includeInterval  &&!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))    {    	compilable	  [FE]  NullPointerException	291	2
1742	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {  OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {	  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))    {    	compilable	  [FE]  NullPointerException	291	2
1743	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {  OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {	  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))    {    	compilable	  [FE]  NullPointerException	291	2
9	[BUG]  [BUGGY]  [FE]  double)  [CONTEXT]      [BUGGY]  if(minimum  >  maximum)  {  return  new  Range(minimum,  maximum);  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	add	if(minimum  >  maximum)  {  return  new  Range(minimum,  maximum);  }	  	compilable	  [FE]    double)	2	2
10	[BUG]  [BUGGY]  if(minimum  >  maximum)  {  return  new  Range(minimum,  maximum);  }  [FE]  double)  [CONTEXT]      [BUGGY]  if(minimum  >  maximum)  {  return  new  Range(minimum,  maximum);  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	replace	if(minimum  >  maximum)  {  return  new  Range(minimum,  maximum);  }	  	compilable	  [FE]    double)	2	2
728	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(seriesCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isInfinite(seriesCount))  {	  if(!Double.isNaN(uvalue)||    Double.isInfinite(uvalue))    {    	compilable	  [FE]  NullPointerException	122	2
729	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(seriesCount))  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(seriesCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isInfinite(seriesCount))  {	  if(!Double.isNaN(uvalue)||    Double.isInfinite(uvalue))    {    	compilable	  [FE]  NullPointerException	122	2
2030	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  /  1;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	add	double  minimum  =  Double.POSITIVE_INFINITY  /  1;	  double    minimum    =    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  NullPointerException	339	2
2031	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  /  1;  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  /  1;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  /  1;	  double    minimum    =    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  NullPointerException	339	2
14	[BUG]  [BUGGY]  [FE]  double)  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  new  Range(minimum,  maximum);  }  else  {  return  new  Range(maximum,  minimum);  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	add	if(includeInterval)  {  return  new  Range(minimum,  maximum);  }  else  {  return  new  Range(maximum,  minimum);  }	  return    new    Range(minimum,    maximum);    	compilable	  [FE]    double)	3	2
15	[BUG]  [BUGGY]  if(includeInterval)  {  return  new  Range(minimum,  maximum);  }  else  {  return  new  Range(maximum,  minimum);  }  [FE]  double)  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  new  Range(minimum,  maximum);  }  else  {  return  new  Range(maximum,  minimum);  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	replace	if(includeInterval)  {  return  new  Range(minimum,  maximum);  }  else  {  return  new  Range(maximum,  minimum);  }	  return    new    Range(minimum,    maximum);    	compilable	  [FE]    double)	3	2
7	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  throw  new  NullPointerException( " ");  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	add	if(includeInterval)  {  throw  new  NullPointerException( " ");  }	  	compilable	  [FE]  NullPointerException	2	2
8	[BUG]  [BUGGY]  if(includeInterval)  {  throw  new  NullPointerException( " ");  }  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  throw  new  NullPointerException( " ");  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	replace	if(includeInterval)  {  throw  new  NullPointerException( " ");  }	  	compilable	  [FE]  NullPointerException	2	2
8	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!includeInterval)  {  throw  new  NullPointerException( " ");  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	add	if(!includeInterval)  {  throw  new  NullPointerException( " ");  }	  	compilable	  [FE]  NullPointerException	2	2
9	[BUG]  [BUGGY]  if(!includeInterval)  {  throw  new  NullPointerException( " ");  }  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!includeInterval)  {  throw  new  NullPointerException( " ");  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	replace	if(!includeInterval)  {  throw  new  NullPointerException( " ");  }	  	compilable	  [FE]  NullPointerException	2	2
1957	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <  1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'dataset'  argument.   ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	add	if(dataset  ==  null  ||  dataset.getSeriesCount()  <  1)  {	  if(dataset    ==    null    ||    dataset.getSeriesCount()    <    0)    {    	compilable	  [FE]  NullPointerException	327	2
1958	[BUG]  [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <  1)  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <  1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'dataset'  argument.   ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	replace	if(dataset  ==  null  ||  dataset.getSeriesCount()  <  1)  {	  if(dataset    ==    null    ||    dataset.getSeriesCount()    <    0)    {    	compilable	  [FE]  NullPointerException	327	2
727	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(uvalue  >  maximum)  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(uvalue  >  maximum)  {	  if(!Double.isNaN(uvalue)||    Double.isInfinite(uvalue))    {    	compilable	  [FE]  NullPointerException	122	2
728	[BUG]  [BUGGY]  if(uvalue  >  maximum)  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(uvalue  >  maximum)  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(uvalue  >  maximum)  {	  if(!Double.isNaN(uvalue)||    Double.isInfinite(uvalue))    {    	compilable	  [FE]  NullPointerException	122	2
734	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(uvalue  >  0.0)  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(uvalue  >  0.0)  {	  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))    {    	compilable	  [FE]  NullPointerException	123	2
735	[BUG]  [BUGGY]  if(uvalue  >  0.0)  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(uvalue  >  0.0)  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(uvalue  >  0.0)  {	  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))    {    	compilable	  [FE]  NullPointerException	123	2
950	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  /  2;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	add	double  minimum  =  Double.POSITIVE_INFINITY  /  2;	  double    minimum    =    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  NullPointerException	159	2
951	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  /  2;  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  /  2;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  /  2;	  double    minimum    =    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  NullPointerException	159	2
1741	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {  OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {	  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))    {    	compilable	  [FE]  NullPointerException	291	2
1742	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {  OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {	  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))    {    	compilable	  [FE]  NullPointerException	291	2
661	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))    {    	compilable	  [FE]  NullPointerException	111	2
662	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))    {    	compilable	  [FE]  NullPointerException	111	2
949	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  /  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	add	double  minimum  =  Double.POSITIVE_INFINITY  /  Integer.MAX_VALUE;	  double    minimum    =    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  NullPointerException	159	2
950	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  /  Integer.MAX_VALUE;  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  /  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  /  Integer.MAX_VALUE;	  double    minimum    =    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  NullPointerException	159	2
1670	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))    {    	compilable	  [FE]  NullPointerException	279	2
1671	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))    {    	compilable	  [FE]  NullPointerException	279	2
620	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	add	if(includeInterval)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }	  	compilable	  [FE]  NullPointerException	104	2
621	[BUG]  [BUGGY]  if(includeInterval)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	replace	if(includeInterval)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }	  	compilable	  [FE]  NullPointerException	104	2
621	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  break;  }  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	add	if(includeInterval)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  break;  }	  	compilable	  [FE]  NullPointerException	104	2
622	[BUG]  [BUGGY]  if(includeInterval)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  break;  }  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  break;  }  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	replace	if(includeInterval)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  break;  }	  	compilable	  [FE]  NullPointerException	104	2
2030	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  /  2;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	add	double  minimum  =  Double.POSITIVE_INFINITY  /  2;	  double    minimum    =    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  NullPointerException	339	2
2031	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  /  2;  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  /  2;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  /  2;	  double    minimum    =    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  NullPointerException	339	2
2102	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Math.max(2.0,  0.0);  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Math.max(2.0,  0.0);	  double    maximum    =    Math.max(0.0,    0.0);    	compilable	  [FE]  NullPointerException	351	2
2103	[BUG]  [BUGGY]  double  maximum  =  Math.max(2.0,  0.0);  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Math.max(2.0,  0.0);  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Math.max(2.0,  0.0);	  double    maximum    =    Math.max(0.0,    0.0);    	compilable	  [FE]  NullPointerException	351	2
1886	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(maximum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {	  if(minimum    ==    Double.POSITIVE_INFINITY    ||    maximum    ==    Double.POSITIVE_INFINITY)    {    	compilable	  [FE]  NullPointerException	315	2
1887	[BUG]  [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(maximum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {	  if(minimum    ==    Double.POSITIVE_INFINITY    ||    maximum    ==    Double.POSITIVE_INFINITY)    {    	compilable	  [FE]  NullPointerException	315	2
1886	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >  Double.POSITIVE_INFINITY)  {	  if(minimum    ==    Double.POSITIVE_INFINITY    ||    maximum    ==    Double.POSITIVE_INFINITY)    {    	compilable	  [FE]  NullPointerException	315	2
1887	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >  Double.POSITIVE_INFINITY)  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >  Double.POSITIVE_INFINITY)  {	  if(minimum    ==    Double.POSITIVE_INFINITY    ||    maximum    ==    Double.POSITIVE_INFINITY)    {    	compilable	  [FE]  NullPointerException	315	2
727	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	  if(!Double.isNaN(uvalue)||    Double.isInfinite(uvalue))    {    	compilable	  [FE]  NullPointerException	122	2
728	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	  if(!Double.isNaN(uvalue)||    Double.isInfinite(uvalue))    {    	compilable	  [FE]  NullPointerException	122	2
734	[BUG]  [BUGGY]  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||!Double.isNaN(lvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)||!Double.isNaN(lvalue))  {	  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))    {    	compilable	  [FE]  NullPointerException	123	2
735	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||!Double.isNaN(lvalue))  {  [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||!Double.isNaN(lvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)||!Double.isNaN(lvalue))  {	  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))    {    	compilable	  [FE]  NullPointerException	123	2
