compilation error,1231,add,[CE] variable minimum is already defined in method iterateRangeBounds(XYDataset,boolean), ,double minimum = Double.POSITIVE_INFINITY * 2;
compilation error,756,add,[CE] 'else' without 'if', ,lvalue = intervalXYData.getStartXValue(series, item); if(!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if(!Double.isNaN(uvalue)) {
patch is same with buggy,756,replace,, if(!Double.isNaN(lvalue))  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  lvalue  =  intervalXYData.getEndXValue(series,  item);  }  ,if(!Double.isNaN(lvalue)) { lvalue = intervalXYData.getStartXValue(series, item); } else { lvalue = intervalXYData.getEndXValue(series, item); }
patch is same with buggy,756,replace,, if(!Double.isNaN(lvalue))  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  lvalue  =  intervalXYData.getEndXValue(series,  item);  }  ,if(!Double.isNaN(lvalue)) { lvalue = intervalXYData.getStartXValue(series, item); } else { lvalue = intervalXYData.getEndXValue(series, item); }
compilation error,760,add,[CE] 'else' without 'if', ,if(Double.isNaN(uvalue)&&!Double.isInfinite(lvalue)) {
patch is same with buggy,780,replace,, if(includeInterval)  {  throw  new  NullPointerException( " ");  }  ,if(includeInterval) { throw new NullPointerException(" "); }
patch is same with buggy,780,replace,, if(includeInterval)  {  throw  new  NullPointerException( " ");  }  , 
compilation error,760,add,[CE] 'else' without 'if', ,if(uvalue > maximal) {
compilation error,1283,add,[CE] illegal start of expression, ,if(minimum == Double.POSITIVE_INFINITY || minimum == Double.POSITIVE_INFINITY) {
compilation error,746,add,[CE] variable minimum is already defined in method iterateDomainBounds(XYDataset,boolean), ,double minimum = Math.min(0.0, 1.0);
compilation error,746,add,[CE] variable minimum is already defined in method iterateDomainBounds(XYDataset,boolean), ,double minimum = Math.max(0.0, 1.0);
increase failing tests,1247,replace, [FE] NullPointerException, if(includeInterval  &&!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  ,if(includeInterval &&!Double.isNaN(uvalue)|| Double.isNaN(uvalue)) {
compilation error,756,add,[CE] ')' expected, ,uvalue = intervalXYData.getStartXValue(series, item); if(!Double.isNaN(lvalue)) { lvalue = intervalXYData.getStartXValue(series, item); } else { lvalue = intervalXYData.getEndXValue(
compilation error,756,add,[CE] ';' expected, ,uvalue = intervalXYData.getStartXValue(series, item); if(!Double.isNaN(lvalue)) { lvalue = intervalXYData.getStartXValue(series, item); } else { lvalue = intervalXYData.getEn
patch is same with buggy,1283,replace,, if(maximum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {  ,if(maximum == Double.POSITIVE_INFINITY || minimum == Double.POSITIVE_INFINITY) {
patch is same with buggy,757,replace,, if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  ,if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue)) {
patch is same with buggy,1247,replace,, if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  , 
compilation error,1283,add,[CE] illegal start of expression, ,if(minimum!= Double.POSITIVE_INFINITY || maximum > Double.POSITIVE_INFINITY) {
compilation error,1283,add,[CE] illegal start of expression, ,if(minimum < Double.POSITIVE_INFINITY || maximum > Double.POSITIVE_INFINITY) {
increase failing tests,1247,replace, [FE]  double), if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {  ,if(!Double.isNaN(uvalue)&& Double.isNaN(maximum)) {
patch is same with buggy,1247,replace,, if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {  ,if(!Double.isNaN(uvalue)|| Double.isNaN(maximum)) {
increase failing tests,760,replace, [FE] NullPointerException, if(!Double.isNaN(uvalue)||  Double.isNaN(seriesCount))  {  ,if(uvalue < 0.0) {
compilation error,1231,add,[CE] variable minimum is already defined in method iterateRangeBounds(XYDataset,boolean), ,double minimum = Double.POSITIVE_INFINITY / Integer.MIN_VALUE;
patch is same with buggy,1244,replace,, if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  ,if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue)) {
compilation error,780,add,[CE] unreachable statement, ,if(includeInterval) { return new Range(minimum, maximum); } else { return new Range(maximum, maximum); }
patch is same with buggy,780,replace,, throw  new  NullPointerException( "  - ");  ,throw new NullPointerException(" -");
patch is same with buggy,780,replace,, throw  new  NullPointerException( "  - ");  , 
compilation error,1247,add,[CE] 'else' without 'if', ,if(includeInterval &&!Double.isNaN(uvalue)|| Double.isNaN(maximum)) {
compilation error,1247,add,[CE] 'else' without 'if', ,if(includeInterval &&!Double.isNaN(maximum)&&!Double.isNaN(minimum)) {
patch is same with buggy,760,replace,, if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  ,if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount)) {
compilation error,760,add,[CE] 'else' without 'if', ,if(!Double.isNaN(uvalue)&& Double.isNaN(maximum)) {
compilation error,760,add,[CE] 'else' without 'if', ,if(Double.isNaN(uvalue)&&!Double.isInfinite(uvalue)) {
patch is same with buggy,746,replace,, double  maximum  =  Math.max(0.0,  1.0);  ,double maximum = Math.max(0.0, 1.0);
compilation error,780,add,[CE] illegal start of expression, ,if(minimum > maximum) } return new Range(minimum, maximum); }
compilation error,780,add,[CE] illegal start of expression, ,if(minimum > maximum) { return new Range(minimum, maximum); >>
patch is same with buggy,742,replace,, if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {  throw  new  IllegalArgumentException( "Null  'dataset'  argument.   ");  }  ,if(dataset == null || dataset.getSeriesCount() < 0) { throw new IllegalArgumentException("Null 'dataset' argument. "); }
compilation error,1231,add,[CE] variable minimum is already defined in method iterateRangeBounds(XYDataset,boolean), ,double minimum = Double.POSITIVE_INFINITY * 1;
increase failing tests,742,add, [FE] IllegalArgumentException, ,if(dataset == null || dataset.getSeriesCount() > 1) { throw new IllegalArgumentException("Null 'dataset' argument. "); }
patch is same with buggy,780,replace,, if(minimum  >  maximum)  {  return  new  Range(minimum,  maximum);  }  ,if(minimum > maximum) { return new Range(minimum, maximum); }
patch is same with buggy,780,replace,, if(minimum  >  maximum)  {  return  new  Range(minimum,  maximum);  }  ,if(minimum > maximum) { return new Range(minimum, maximum); }
compilation error,760,add,[CE] 'else' without 'if', ,if(!Double.isNaN(uvalue)&& Double.isNaN(seriesCount)) {
increase failing tests,1247,replace, [FE] AssertionFailedError, if(includeInterval  &&!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  ,if(includeInterval ||!Double.isNaN(uvalue)&&!Double.isNaN(maximum)) {
patch is same with buggy,742,replace,, if(dataset  ==  null  ||  dataset.getSeriesCount()  <  1)  {  ,if(dataset == null || dataset.getSeriesCount() < 1) {
increase failing tests,742,replace, [FE] IllegalArgumentException, if(dataset  ==  null  ||  dataset.getSeriesCount()  <  1)  {  ,if(dataset == null || dataset.getSeriesCount() > 1) {
compilation error,756,replace,[CE] 'else' without 'if', if(!Double.isNaN(lvalue))  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  lvalue  =  intervalXYData.getEndXValue(series,  item);  }  ,lvalue = intervalXYData.getStartXValue(series, item); } else { break;
patch is same with buggy,760,replace,, if(!Double.isNaN(uvalue)||  Double.isNaN(seriesCount))  {  ,if(!Double.isNaN(uvalue)|| Double.isNaN(seriesCount)) {
patch is same with buggy,760,replace,, if(!Double.isNaN(uvalue)&&!Double.isInfinite(lvalue))  {  ,if(!Double.isNaN(uvalue)&&!Double.isInfinite(lvalue)) {
compilation error,746,add,[CE] variable minimum is already defined in method iterateDomainBounds(XYDataset,boolean), ,double minimum = Math.max(2.0, 0.0);
compilation error,760,add,[CE] 'else' without 'if', ,if(uvalue!= null) { if(!Double.isNaN(uvalue)&&!Double.isInfinite(lvalue)) {
compilation error,760,add,[CE] 'else' without 'if', ,if(Double.isNaN(uvalue)|| Double.isInfinite(lvalue)) {
compilation error,1247,add,[CE] 'else' without 'if', ,if(!Double.isNaN(uvalue)&&!Double.isNaN(range)) {
compilation error,1247,add,[CE] 'else' without 'if', ,if(!Double.isNaN(uvalue)&&!Double.isNaN(expCase(uvalue))) {
compilation error,760,add,[CE] 'else' without 'if', ,if(!Double.isNaN(uvalue)||!Double.isInfinite(uvalue)) {
compilation error,1283,add,[CE] illegal start of expression, ,if(minimum == Double.POSITIVE_INFINITY || maximum!= Double.POSITIVE_INFINITY) {
compilation error,780,replace,[CE] illegal start of expression, if(minimum  >  maximum)  {  return  new  Range(minimum,  maximum);  }  ,[Delete]
patch is same with buggy,780,replace,, if(minimum  >  maximum)  {  return  new  Range(minimum,  maximum);  }  ,if(minimum > maximum) { return new Range(minimum, maximum); }
compilation error,756,add,[CE] variable includeInterval is already defined in method iterateDomainBounds(XYDataset,boolean), ,boolean includeInterval = intervalXYData.isIncludeInterval(series, item);
compilation error,760,add,[CE] 'else' without 'if', ,if(uvalue > max) {
patch is same with buggy,760,replace,, if(!Double.isNaN(uvalue)||  Double.isNaN(seriesCount))  {  ,if(!Double.isNaN(uvalue)|| Double.isNaN(seriesCount)) {
patch is same with buggy,742,replace,, if(dataset  ==  null  ||  dataset.getSeriesCount()  <  1)  {  ,if(dataset == null || dataset.getSeriesCount() < 1) {
increase failing tests,742,replace, [FE] IllegalArgumentException, if(dataset  ==  null  ||  dataset.getSeriesCount()  <  1)  {  ,if(dataset == null || dataset.getSeriesCount() <= 1) {
compilation error,742,replace,[CE] illegal start of expression, if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {  throw  new  IllegalArgumentException( "Null  'dataset'  argument.   ");  }  ,[Delete]
patch is same with buggy,742,replace,, if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {  throw  new  IllegalArgumentException( "Null  'dataset'  argument.   ");  }  , 
compilation error,780,replace,[CE] illegal start of type, throw  new  NullPointerException( "  - ");  ,}
compilation error,1247,add,[CE] 'else' without 'if', ,if(!Double.isNaN(uvalue)||!Double.isInfinite(uvalue)) {
compilation error,1247,add,[CE] 'else' without 'if', ,if(includeInterval ||!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue)) {
patch is same with buggy,1244,replace,, if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  ,if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue)) {
increase failing tests,760,replace, [FE] AssertionFailedError, if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  ,if(!Double.isNaN(uvalue)||!Double.isNaN(itemCount)) {
patch is same with buggy,760,replace,, if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  , 
compilation error,1244,add,[CE] 'else' without 'if', ,if(includeInterval) { if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue)) {
compilation error,756,replace,[CE] illegal start of expression, if(!Double.isNaN(lvalue))  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  lvalue  =  intervalXYData.getEndXValue(series,  item);  }  ,[Delete]
compilation error,756,replace,[CE] variable uvalue might not have been initialized, if(!Double.isNaN(lvalue))  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  lvalue  =  intervalXYData.getEndXValue(series,  item);  }  ,if(!includeInterval) { lvalue = intervalXYData.getStartXValue(series, item); } else { break; }
compilation error,756,replace,[CE] illegal start of type, if(!Double.isNaN(lvalue))  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  lvalue  =  intervalXYData.getEndXValue(series,  item);  }  ,}
compilation error,746,add,[CE] cannot find symbol, ,double maximum = dataset.getMaximumNumber();
compilation error,780,add,[CE] illegal start of expression, ,if(!includeInterval) { if(includeInterval) { throw new NullPointerException(""); }
compilation error,780,replace,[CE] incompatible types, throw  new  NullPointerException( "  - ");  ,return new NullPointerException(" -");
compilation error,780,replace,[CE] missing return statement, throw  new  NullPointerException( "  - ");  ,if(includeInterval) { throw new NullPointerException(" -"); }
compilation error,745,add,[CE] variable seriesCount is already defined in method iterateDomainBounds(XYDataset,boolean), ,int seriesCount = dataset.getSeriesCount() / 2;
patch is same with buggy,1247,replace,, if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  ,if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue)) {
compilation error,780,replace,[CE] incompatible types, if(includeInterval)  {  throw  new  NullPointerException( " ");  }  ,if(!includeInterval) { return new NullPointerException(""); }
patch is same with buggy,780,replace,, if(includeInterval)  {  throw  new  NullPointerException( " ");  }  , 
increase failing tests,1247,replace, [FE] NullPointerException, if(includeInterval  &&!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  ,if(includeInterval ||!Double.isNaN(uvalue)||!Double.isNaN(uvalue)) {
increase failing tests,1247,replace, [FE] NullPointerException, if(includeInterval  &&!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  ,if(!includeInterval &&!Double.isNaN(uvalue)&&!Double.isNaN(maximum)) {
compilation error,742,add,[CE] illegal start of expression, ,if(dataset == null || dataset.getSeriesCount() < 1) { throw new IllegalArgumentException("Null 'dataset' argument. ");
compilation error,756,add,[CE] 'else' without 'if', ,if(includeInterval) { if(!Double.isNaN(lvalue)) { lvalue = intervalXYData.getStartXValue(series, item); }
compilation error,756,add,[CE] ')' expected, ,if(includeInterval) { if(!Double.isNaN(lvalue)) { lvalue = intervalXYData.getStartXValue(series, item); if(!Double.isNaN(uvalue)) { minimum = Math.min(minimum, l
compilation error,756,add,[CE] ')' expected, ,if(includeInterval) { if(!Double.isNaN(lvalue)) { lvalue = intervalXYData.getStartXValue(series, item); if(!Double.isNaN(uvalue)) { minimum = Math.min(minimum,
patch is same with buggy,1247,replace,, if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {  ,if(!Double.isNaN(uvalue)|| Double.isNaN(maximum)) {
compilation error,780,add,[CE] illegal start of expression, ,<<
increase failing tests,760,replace, [FE] AssertionFailedError, if(!Double.isNaN(uvalue)&&!Double.isInfinite(lvalue))  {  ,if(!Double.isNaN(uvalue)||!Double.isInfinite(seriesCount)) {
compilation error,1247,add,[CE] 'else' without 'if', ,if(uvalue!= null) {
compilation error,1231,add,[CE] cannot find symbol, ,int seriesCount = dataset.getRangeCount() / 2;
compilation error,780,add,[CE] illegal start of expression, ,if(includeInterval) { if(includeInterval) { return new Range(minimum, maximum); }
compilation error,780,add,[CE] illegal start of expression, ,if(includeInterval) { if(includeInterval) { return new Range(minimum, minimum); }
compilation error,780,add,[CE] variable includeInterval is already defined in method iterateDomainBounds(XYDataset,boolean), ,boolean includeInterval = isInterval();
compilation error,760,add,[CE] 'else' without 'if', ,if(uvalue!= null) {
compilation error,757,add,[CE] 'else' without 'if', ,if(lvalue < 0.0) { if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue)) {
compilation error,780,add,[CE] illegal start of expression, ,if(minimum < maximum) { if(minimum > maximum) { return new Range(minimum, maximum); }
compilation error,780,add,[CE] illegal start of expression, ,if(minimum > maximum) { if(minimum < upper) { return new Range(minimum, maximum); }
patch is same with buggy,757,replace,, if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  ,if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue)) {
compilation error,742,add,[CE] bad operand types for binary operator , ,if(dataset == null || dataset.getSeriesCount() >> 0) { throw new IllegalArgumentException("Null 'dataset' argument. "); }
compilation error,756,add,[CE] cannot find symbol, ,boolean includesInterval = intervalXYData.isAllowMillis();
patch is same with buggy,746,replace,, double  maximum  =  Math.max(0.0,  1.0);  ,double maximum = Math.max(0.0, 1.0);
increase failing tests,756,add, [FE] NullPointerException, ,lvalue = intervalXYData.getXValue(series, item);
compilation error,756,add,[CE] 'else' without 'if', ,if(includeInterval) { lvalue = intervalXYData.getXValue(series, item); if(!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); }
patch is same with buggy,742,replace,, if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {  throw  new  IllegalArgumentException( "Null  'dataset'  argument.   ");  }  ,if(dataset == null || dataset.getSeriesCount() < 0) { throw new IllegalArgumentException("Null 'dataset' argument. "); }
patch is same with buggy,742,replace,, if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {  throw  new  IllegalArgumentException( "Null  'dataset'  argument.   ");  }  , 
increase failing tests,756,add, [FE] AssertionFailedError, ,if(includeInterval) { lvalue = intervalXYData.getEndXValue(series, item); }
compilation error,756,add,[CE] 'else' without 'if', ,if(includeInterval) { lvalue = intervalXYData.getStartXValue(series, item); if(!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); }
compilation error,780,replace,[CE] not a statement, throw  new  NullPointerException( "  - ");  ,if(includeInterval) { return new Range(minimum, maximum); Afterward else { return new Range(maximum, minimum); }
compilation error,780,replace,[CE] '(' expected, throw  new  NullPointerException( "  - ");  ,if(includeInterval) { return new Range(minimum, maximum); if else { return new Range(maximum, minimum); }
compilation error,1244,add,[CE] 'else' without 'if', ,if(!Double.isNaN(minimum, lvalue)) {
compilation error,1231,add,[CE] method doubleToLongBits in class Double cannot be applied to given types;, ,double minimum = Math.min(Double.doubleToLongBits(0.0, 0.0));
compilation error,780,add,[CE] , ,if(!includeInterval) { throw new NullPointerException(" "); else if(includeInterval) { return new Range(minimum, maximum, maximum); }
compilation error,756,add,[CE] 'else' without 'if', ,if(!Double.isNaN(lvalue)) { lvalue = intervalXYData.getStartXValue(series, item); if(!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); }
compilation error,756,add,[CE] 'else' without 'if', ,if(includeInterval) { if(!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); }
compilation error,756,add,[CE] 'else' without 'if', ,if(!Double.isNaN(lvalue)) { lvalue = intervalXYData.getStartXValue(series, item); if(!Double.isNaN(lvalue)) { min = Math.min(min, lvalue); }
patch is same with buggy,1247,replace,, if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  ,if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue)) {
compilation error,757,add,[CE] 'else' without 'if', ,if(!Double.isNaN(minimum)&&!Double.isNaN(uvalue)) {
increase failing tests,760,replace, [FE] AssertionFailedError, if(!Double.isNaN(uvalue)&&!Double.isInfinite(lvalue))  {  ,if(!Double.isNaN(uvalue)||!Double.isInfinite(lvalue)) {
patch is same with buggy,760,replace,, if(!Double.isNaN(uvalue)&&!Double.isInfinite(lvalue))  {  , 
compilation error,742,add,[CE] illegal start of expression, ,if(dataset == null || dataset.getSeriesCount()!= 1) {
compilation error,1231,add,[CE] cannot find symbol MAX_VALUE, ,double minimum = Math.min(Double.doubleToLongBits(MAX_VALUE));
compilation error,780,add,[CE] unreachable statement, ,if(includeInterval) { return new Range(minimum, minimum); } else { return new Range(maximum, maximum); }
compilation error,780,add,[CE] illegal start of expression, ,if(includeInterval) { if(includeInterval) { return new Range(minimum, maximum); } else { return new Range(maximum, minimum); }
compilation error,780,replace,[CE] missing return statement, if(minimum  >  maximum)  {  return  new  Range(minimum,  maximum);  }  ,if(minimum < maximum) { return new Range(minimum, maximum); }
compilation error,780,replace,[CE] missing return statement, if(minimum  >  maximum)  {  return  new  Range(minimum,  maximum);  }  ,if(minimum <= maximum) { return new Range(minimum, maximum); }
compilation error,1247,add,[CE] 'else' without 'if', ,if(includeInterval ||!Double.isNaN(uvalue)&&!Double.isNaN(uvalue)) {
compilation error,760,add,[CE] 'else' without 'if', ,if(Double.isNaN(uvalue)|| Double.isNaN(maximum)) {
compilation error,780,add,[CE] illegal start of expression, ,if(minimum > maximum) { if(minimum > maximum) { return new Range(minimum, maximum); }
compilation error,780,add,[CE] unreachable statement, ,if(minimum > maximum) { return new Range(minimum, maximum); } else { return new Range(minimum, maximum); }
compilation error,745,add,[CE] method doubleToLongBits in class Double cannot be applied to given types;, ,double minimum = Math.min(Double.doubleToLongBits(0.0, 0.0));
patch is same with buggy,742,replace,, if(dataset  ==  null  ||  dataset.getSeriesCount()  <  1)  {  ,if(dataset == null || dataset.getSeriesCount() < 1) {
patch is same with buggy,760,replace,, if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  , 
patch is same with buggy,746,replace,, double  maximum  =  Math.max(0.0,  1.0);  ,double maximum = Math.max(0.0, 1.0);
patch is same with buggy,1247,replace,, if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {  , 
compilation error,746,add,[CE] cannot find symbol, ,double maximum = dataset.getDomainBounds();
compilation error,756,replace,[CE] 'else' without 'if', if(!Double.isNaN(lvalue))  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  lvalue  =  intervalXYData.getEndXValue(series,  item);  }  ,if(includeInterval) { lvalue = intervalXYData.getStartXValue(series, item); if(!Double.isNaN(lvalue)) { break; }
compilation error,756,replace,[CE] 'else' without 'if', if(!Double.isNaN(lvalue))  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  lvalue  =  intervalXYData.getEndXValue(series,  item);  }  ,if(includeInterval) { lvalue = intervalXYData.getStartXValue(series, item); if(!Double.isNaN(lvalue)) {
compilation error,1247,add,[CE] 'else' without 'if', ,if(Double.isNaN(uvalue)&&!Double.isInfinite(uvalue)) {
compilation error,760,add,[CE] 'else' without 'if', ,if(Double.isNaN(uvalue)|| Double.isNaN(seriesCount)) {
patch is same with buggy,780,replace,, throw  new  NullPointerException( "  - ");  ,throw new NullPointerException(" -");
compilation error,756,replace,[CE] not a statement, if(!Double.isNaN(lvalue))  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  lvalue  =  intervalXYData.getEndXValue(series,  item);  }  ,if(!Double.isNaN(lvalue)) { lvalue = intervalXYData.getStartXValue(series, item); Afterward else { lvalue = intervalXYData.getEndXValue(series, item); }
compilation error,756,replace,[CE] illegal start of expression, if(!Double.isNaN(lvalue))  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  }  else  {  lvalue  =  intervalXYData.getEndXValue(series,  item);  }  ,if(!Double.isNaN(lvalue)) { lvalue = intervalXYData.getStartXValue(series, item); if( else { lvalue = intervalXYData.getEndXValue(series, item); }
compilation error,757,replace,[CE] no suitable method found for isNaN(double,double), if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  ,if(!Double.isNaN(minimum, lvalue)&&!Double.isNaN(uvalue)) {
patch is same with buggy,780,replace,, if(includeInterval)  {  throw  new  NullPointerException( " ");  }  ,if(includeInterval) { throw new NullPointerException(" "); }
patch is same with buggy,780,replace,, if(includeInterval)  {  throw  new  NullPointerException( " ");  }  , 
patch is same with buggy,760,replace,, if(!Double.isNaN(uvalue)||  Double.isNaN(seriesCount))  {  ,if(!Double.isNaN(uvalue)|| Double.isNaN(seriesCount)) {
