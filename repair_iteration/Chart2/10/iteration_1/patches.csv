bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Lvalue  lvalue  =  dataset.getValue(series,  1);  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Lvalue  lvalue  =  dataset.getValue(series,  1);  [BUGGY]    if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  dataset.getValue(series,  1);	      Lvalue    lvalue    =    dataset.getValue(series,    0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(series,  0);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(series,  0);  [BUGGY]    if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  this.dataset.getValue(series,  0);	      Lvalue    lvalue    =    dataset.getValue(series,    0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  if(lvalue!=  null)  {  [CE]  bad  operand  types  for  binary  operator  '!='  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  if(lvalue!=  null)  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(lvalue!=  null)  {	  if(!Double.isNaN(minimum))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '!='	5	None	replace
4	[BUG]  [BUGGY]  Lvalue  lvalue  =  dataset.getValue(Range.class,  Dataset.class);  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Lvalue  lvalue  =  dataset.getValue(Range.class,  Dataset.class);  [BUGGY]    if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  dataset.getValue(Range.class,  Dataset.class);	      Lvalue    lvalue    =    dataset.getValue(Range.class);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  Lvalue  lvalue  =  dataset.getColumnCount();  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Lvalue  lvalue  =  dataset.getColumnCount();  [BUGGY]    if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  dataset.getColumnCount();	      lvalue    =    dataset.getColumnCount();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
6	[BUG]  [BUGGY]  if(!Double.isNaN(minimum))  {  lvalue  =  Math.min(minimum,  lvalue);  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  if(!Double.isNaN(minimum))  {  lvalue  =  Math.min(minimum,  lvalue);  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(minimum))    {    lvalue  =  Math.min(minimum,  lvalue);	  	non-compiled	[CE]  'else'  without  'if'	4	None	add
7	[BUG]  [BUGGY]  if(!Double.isNaN(minimum))  {  Integer  lvalue  =  getIntValue();  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]  if(!Double.isNaN(minimum))  {  Integer  lvalue  =  getIntValue();  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(minimum))    {    Integer  lvalue  =  getIntValue();	  	non-compiled	[CE]  'else'  without  'if'	4	None	add
8	[BUG]  [BUGGY]  if(!Double.isNaN(minimum))  {  int  lvalue  =  dataset.getColumnCount();  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  if(!Double.isNaN(minimum))  {  int  lvalue  =  dataset.getColumnCount();  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(minimum))    {    int  lvalue  =  dataset.getColumnCount();	  	non-compiled	[CE]  'else'  without  'if'	4	None	add
9	[BUG]  [BUGGY]  Lvalue  lvalue  =  dataset.getColumnBounds(0,  0,  0);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Lvalue  lvalue  =  dataset.getColumnBounds(0,  0,  0);  [BUGGY]    if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  dataset.getColumnBounds(0,  0,  0);	      lvalue    =    dataset.getColumnBounds(0,    0,    0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
10	[BUG]  [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(id);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(id);  [BUGGY]    if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  this.dataset.getValue(id);	      Lvalue    lvalue    =    dataset.getValue(id);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
11	[BUG]  [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(series);  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(series);  [BUGGY]    if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  this.dataset.getValue(series);	      Lvalue    lvalue    =    dataset.getValue(series);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
12	[BUG]  [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(this,  series);  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(this,  series);  [BUGGY]    if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  this.dataset.getValue(this,  series);	      Lvalue    lvalue    =    dataset.getValue(this,    series);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  Lvalue  lvalue  =  dataset.getValue(this,  series,  dataset);  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Lvalue  lvalue  =  dataset.getValue(this,  series,  dataset);  [BUGGY]    if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  dataset.getValue(this,  series,  dataset);	      Lvalue    lvalue    =    dataset.getValue(this,    series);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  if(!Double.isInfinite(lvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isInfinite(lvalue))  {	  if(!Double.isNaN(minimum))    {    	compilable	  [FE]  AssertionFailedError  	5	4	replace
15	[BUG]  [BUGGY]  if(!Double.isInfinite(lvalue))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  if(!Double.isInfinite(lvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isInfinite(lvalue))  {	  if(!Double.isNaN(minimum))    {    	compilable	  [FE]  AssertionFailedError  	5	4	replace
16	[BUG]  [BUGGY]  if(!Double.isNaN(minimum))  {  Integer  lvalue  =  getInt(series);  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  if(!Double.isNaN(minimum))  {  Integer  lvalue  =  getInt(series);  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(minimum))    {    Integer  lvalue  =  getInt(series);	  	non-compiled	[CE]  'else'  without  'if'	4	None	add
17	[BUG]  [BUGGY]  if(!Double.isNaN(minimum))  {  Integer  lvalue  =  dataset.getInt(series);  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]  if(!Double.isNaN(minimum))  {  Integer  lvalue  =  dataset.getInt(series);  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(minimum))    {    Integer  lvalue  =  dataset.getInt(series);	  	non-compiled	[CE]  'else'  without  'if'	4	None	add
18	[BUG]  [BUGGY]  Lvalue  lvalue  =  dataset.getValue(Range.class,  Range.class);  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Lvalue  lvalue  =  dataset.getValue(Range.class,  Range.class);  [BUGGY]    if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  dataset.getValue(Range.class,  Range.class);	      Lvalue    lvalue    =    dataset.getValue(Range.class);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  lvalue  =  this.dataset.getColumnBounds(0,  0,  0);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  lvalue  =  this.dataset.getColumnBounds(0,  0,  0);  [BUGGY]    if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	lvalue  =  this.dataset.getColumnBounds(0,  0,  0);	      lvalue    =    dataset.getColumnBounds(0,    0,    0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
20	[BUG]  [BUGGY]  lvalue  =  dataset.getRowCount();  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  lvalue  =  dataset.getRowCount();  [BUGGY]    if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	lvalue  =  dataset.getRowCount();	      lvalue    =    dataset.getColumnCount();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
21	[BUG]  [BUGGY]  if(!Double.isNaN(minimum))  {  if(!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  if(!Double.isNaN(minimum))  {  if(!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(minimum))    {    if(!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }	  	non-compiled	[CE]  'else'  without  'if'	4	None	add
22	[BUG]  [BUGGY]  if(!Double.isNaN(minimum))  {  if(!Double.isNaN(lvalue))  {  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]  if(!Double.isNaN(minimum))  {  if(!Double.isNaN(lvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(minimum))    {    if(!Double.isNaN(lvalue))  {	  	non-compiled	[CE]  'else'  without  'if'	4	None	add
23	[BUG]  [BUGGY]  if(!Double.isNaN(minimum))  {  if(!Double.isNaN(lvalue))  {  minimal  =  Math.min(minimum,  lvalue);  }  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  if(!Double.isNaN(minimum))  {  if(!Double.isNaN(lvalue))  {  minimal  =  Math.min(minimum,  lvalue);  }  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(minimum))    {    if(!Double.isNaN(lvalue))  {  minimal  =  Math.min(minimum,  lvalue);  }	  	non-compiled	[CE]  'else'  without  'if'	4	None	add
