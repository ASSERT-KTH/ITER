bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  lvalue  =  dataset.getInt(series);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  lvalue  =  dataset.getInt(series);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Integer  lvalue  =  dataset.getInt(series);	  if(!Double.isNaN(minimum))    {    Integer    lvalue    =    dataset.getInt(series);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
2	[BUG]  [BUGGY]  ||!Double.isNaN(minimum))  {  Integer  lvalue  =  dataset.getInt(series);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  ||!Double.isNaN(minimum))  {  Integer  lvalue  =  dataset.getInt(series);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	||!Double.isNaN(minimum))  {  Integer  lvalue  =  dataset.getInt(series);	  if(!Double.isNaN(minimum))    {    Integer    lvalue    =    dataset.getInt(series);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
3	[BUG]  [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(series,  series);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(series,  series);  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  this.dataset.getValue(series,  series);	  Lvalue    lvalue    =    this.dataset.getValue(this,    series);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
4	[BUG]  [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(this,  series,  1);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(this,  series,  1);  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  this.dataset.getValue(this,  series,  1);	  Lvalue    lvalue    =    this.dataset.getValue(this,    series);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
5	[BUG]  [BUGGY]  if(!Double.isInfinite(lvalue))  {  AssertionFailedError  <  Minimum>  lvalue  =  Math.min(minimum,  lvalue);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  if(!Double.isInfinite(lvalue))  {  AssertionFailedError  <  Minimum>  lvalue  =  Math.min(minimum,  lvalue);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isInfinite(lvalue))    {    AssertionFailedError  <  Minimum>  lvalue  =  Math.min(minimum,  lvalue);	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	14	None	add
6	[BUG]  [BUGGY]  if(!Double.isInfinite(lvalue))  {  AssertionFailedError  <  Minimum>  lvalue  =  Math.max(minimum,  lvalue);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  if(!Double.isInfinite(lvalue))  {  AssertionFailedError  <  Minimum>  lvalue  =  Math.max(minimum,  lvalue);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isInfinite(lvalue))    {    AssertionFailedError  <  Minimum>  lvalue  =  Math.max(minimum,  lvalue);	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	14	None	add
7	[BUG]  [BUGGY]  if(!Double.isInfinite(lvalue))  {  AssertionFailedError.warning( "msg.invalid.lvalue ",  lvalue);  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  if(!Double.isInfinite(lvalue))  {  AssertionFailedError.warning( "msg.invalid.lvalue ",  lvalue);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isInfinite(lvalue))    {    AssertionFailedError.warning( "msg.invalid.lvalue ",  lvalue);	  	non-compiled	[CE]  'else'  without  'if'	14	None	add
8	[BUG]  [BUGGY]  int  lvalue  =  dataset.getColumnCount();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  int  lvalue  =  dataset.getColumnCount();  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	int  lvalue  =  dataset.getColumnCount();	  if(!Double.isNaN(minimum))    {    int    lvalue    =    dataset.getColumnCount();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  Integer  lvalue  =  dataset.getColumnCount();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  lvalue  =  dataset.getColumnCount();  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Integer  lvalue  =  dataset.getColumnCount();	  if(!Double.isNaN(minimum))    {    int    lvalue    =    dataset.getColumnCount();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
10	[BUG]  [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(series,  1);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(series,  1);  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  this.dataset.getValue(series,  1);	  Lvalue    lvalue    =    this.dataset.getValue(series,    0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  lvalue  =  this.dataset.getRowBounds(0,  0,  0);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  lvalue  =  this.dataset.getRowBounds(0,  0,  0);  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	lvalue  =  this.dataset.getRowBounds(0,  0,  0);	  lvalue    =    this.dataset.getColumnBounds(0,    0,    0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
12	[BUG]  [BUGGY]  Lvalue  lvalue  =  dataset.getRowCount();  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Lvalue  lvalue  =  dataset.getRowCount();  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  dataset.getRowCount();	  Lvalue    lvalue    =    dataset.getColumnCount();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  Lvalue  lvalue  =  dataset.getColumnCount()  -  1;  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Lvalue  lvalue  =  dataset.getColumnCount()  -  1;  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  dataset.getColumnCount()  -  1;	  Lvalue    lvalue    =    dataset.getColumnCount();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  Lvalue  lvalue  =  dataset.getColumnBounds(0,  0,  1);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Lvalue  lvalue  =  dataset.getColumnBounds(0,  0,  1);  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  dataset.getColumnBounds(0,  0,  1);	  Lvalue    lvalue    =    dataset.getColumnBounds(0,    0,    0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  Lvalue  lvalue  =  dataset.getRowBounds(0,  0,  0);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Lvalue  lvalue  =  dataset.getRowBounds(0,  0,  0);  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  dataset.getRowBounds(0,  0,  0);	  Lvalue    lvalue    =    dataset.getColumnBounds(0,    0,    0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
16	[BUG]  [BUGGY]  Lvalue  lvalue  =  dataset.getValue(this,  series,  seriesCount);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Lvalue  lvalue  =  dataset.getValue(this,  series,  seriesCount);  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  dataset.getValue(this,  series,  seriesCount);	  Lvalue    lvalue    =    dataset.getValue(this,    series,    dataset);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
17	[BUG]  [BUGGY]  Lvalue  lvalue  =  dataset.getValue(this,  series,  this.seriesCount);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Lvalue  lvalue  =  dataset.getValue(this,  series,  this.seriesCount);  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  dataset.getValue(this,  series,  this.seriesCount);	  Lvalue    lvalue    =    dataset.getValue(this,    series,    dataset);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
18	[BUG]  [BUGGY]  Lvalue  lvalue  =  dataset.getValue(Range.class,  Range.class,  Dataset.class);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Lvalue  lvalue  =  dataset.getValue(Range.class,  Range.class,  Dataset.class);  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  dataset.getValue(Range.class,  Range.class,  Dataset.class);	  Lvalue    lvalue    =    dataset.getValue(Range.class,    Dataset.class);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  Lvalue  lvalue  =  dataset.getValue(Range.class,  Range.class,  true);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Lvalue  lvalue  =  dataset.getValue(Range.class,  Range.class,  true);  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  dataset.getValue(Range.class,  Range.class,  true);	  Lvalue    lvalue    =    dataset.getValue(Range.class,    Range.class);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
20	[BUG]  [BUGGY]  'else'  without  'if'  [CE]  unclosed  character  literal  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  'else'  without  'if'  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	'else'  without  'if'	  if(!Double.isNaN(minimum))    {    if(!Double.isNaN(lvalue))    {    	non-compiled	[CE]  unclosed  character  literal	22	None	replace
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isInfinite(lvalue))  {  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)||!Double.isInfinite(lvalue))  {	  if(!Double.isInfinite(lvalue))    {    	compilable	  [FE]  AssertionFailedError  	15	4	replace
22	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isInfinite(lvalue))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isInfinite(lvalue))  {  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)||!Double.isInfinite(lvalue))  {	  if(!Double.isInfinite(lvalue))    {    	compilable	  [FE]  AssertionFailedError  	15	4	replace
23	[BUG]  [BUGGY]  if(lvalue  ==  null)  {  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  if(lvalue  ==  null)  {  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(lvalue  ==  null)  {	  if(lvalue!=    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	3	None	replace
24	[BUG]  [BUGGY]  minimise  =  Math.min(minimum,  lvalue);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  minimise  =  Math.min(minimum,  lvalue);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	minimise  =  Math.min(minimum,  lvalue);	  if(!Double.isNaN(minimum))    {    if(!Double.isNaN(lvalue))    {    minimal    =    Math.min(minimum,    lvalue);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
25	[BUG]  [BUGGY]  minimise  =  Math.max(minimum,  lvalue);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  minimise  =  Math.max(minimum,  lvalue);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	minimise  =  Math.max(minimum,  lvalue);	  if(!Double.isNaN(minimum))    {    if(!Double.isNaN(lvalue))    {    minimal    =    Math.min(minimum,    lvalue);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
26	[BUG]  [BUGGY]  lvalue  =  Math.min(minimum,  lvalue);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  lvalue  =  Math.min(minimum,  lvalue);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	lvalue  =  Math.min(minimum,  lvalue);	  if(!Double.isNaN(minimum))    {    lvalue    =    Math.min(minimum,    lvalue);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
27	[BUG]  [BUGGY]  lvalue  =  Math.max(minimum,  lvalue);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  lvalue  =  Math.max(minimum,  lvalue);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	lvalue  =  Math.max(minimum,  lvalue);	  if(!Double.isNaN(minimum))    {    lvalue    =    Math.min(minimum,    lvalue);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
28	[BUG]  [BUGGY]  degree  =  Math.max(degree,  lvalue);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  degree  =  Math.max(degree,  lvalue);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	degree  =  Math.max(degree,  lvalue);	  if(!Double.isNaN(minimum))    {    if(!Double.isNaN(lvalue))    {    minimum    =    Math.min(minimum,    lvalue);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
29	[BUG]  [BUGGY]  degree  =  Math.max(degree,  uvalue);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  degree  =  Math.max(degree,  uvalue);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	degree  =  Math.max(degree,  uvalue);	  if(!Double.isNaN(minimum))    {    if(!Double.isNaN(lvalue))    {    minimum    =    Math.min(minimum,    lvalue);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
30	[BUG]  [BUGGY]  Lvalue  lvalue  =  dataset.getValue(series,  3);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Lvalue  lvalue  =  dataset.getValue(series,  3);  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  dataset.getValue(series,  3);	  Lvalue    lvalue    =    dataset.getValue(series,    1);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
31	[BUG]  [BUGGY]  Integer  lvalue  =  getIntValue();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  lvalue  =  getIntValue();  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Integer  lvalue  =  getIntValue();	  if(!Double.isNaN(minimum))    {    Integer    lvalue    =    getIntValue();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  ||!Double.isNaN(minimum))  {  Integer  lvalue  =  getIntValue();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  ||!Double.isNaN(minimum))  {  Integer  lvalue  =  getIntValue();  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	||!Double.isNaN(minimum))  {  Integer  lvalue  =  getIntValue();	  if(!Double.isNaN(minimum))    {    Integer    lvalue    =    getIntValue();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  Integer  lvalue  =  getInt(series);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  lvalue  =  getInt(series);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Integer  lvalue  =  getInt(series);	  if(!Double.isNaN(minimum))    {    Integer    lvalue    =    getInt(series);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
34	[BUG]  [BUGGY]  ||!Double.isNaN(minimum))  {  Integer  lvalue  =  getInt(series);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  ||!Double.isNaN(minimum))  {  Integer  lvalue  =  getInt(series);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	||!Double.isNaN(minimum))  {  Integer  lvalue  =  getInt(series);	  if(!Double.isNaN(minimum))    {    Integer    lvalue    =    getInt(series);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
35	[BUG]  [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(this,  series  +  1);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(this,  series  +  1);  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  this.dataset.getValue(this,  series  +  1);	  Lvalue    lvalue    =    this.dataset.getValue(this,    series);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  if(includeInterval  &&!Double.isInfinite(lvalue))  {  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(includeInterval  &&!Double.isInfinite(lvalue))  {	  if(!Double.isInfinite(lvalue))    {    	compilable	  [FE]  AssertionFailedError  	15	4	replace
37	[BUG]  [BUGGY]  if(includeInterval  &&!Double.isInfinite(lvalue))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  if(includeInterval  &&!Double.isInfinite(lvalue))  {  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(includeInterval  &&!Double.isInfinite(lvalue))  {	  if(!Double.isInfinite(lvalue))    {    	compilable	  [FE]  AssertionFailedError  	15	4	replace
38	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue))  {  Integer  uvalue  =  dataset.getInt(series);  [CE]  variable  uvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  if(!Double.isNaN(lvalue))  {  Integer  uvalue  =  dataset.getInt(series);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue))  {  Integer  uvalue  =  dataset.getInt(series);	  if(!Double.isNaN(minimum))    {    Integer    lvalue    =    dataset.getInt(series);    	non-compiled	[CE]  variable  uvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)	17	None	replace
39	[BUG]  [BUGGY]  ||!Double.isNaN(lvalue))  {  lvalue  =  Math.min(minimum,  lvalue);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  ||!Double.isNaN(lvalue))  {  lvalue  =  Math.min(minimum,  lvalue);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	||!Double.isNaN(lvalue))  {  lvalue  =  Math.min(minimum,  lvalue);	  if(!Double.isNaN(minimum))    {    lvalue    =    Math.min(minimum,    lvalue);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  if(!Double.isNaN(uvalue))  {  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(uvalue))  {	  if(!Double.isNaN(minimum))    {    if(!Double.isNaN(lvalue))    {    	compilable	  [FE]  NullPointerException  	22	2	replace
41	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue))  {  [FE]  NullPointerException  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  if(!Double.isNaN(uvalue))  {  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(uvalue))  {	  if(!Double.isNaN(minimum))    {    if(!Double.isNaN(lvalue))    {    	compilable	  [FE]  NullPointerException  	22	2	replace
42	[BUG]  [BUGGY]  ||!Double.isNaN(lvalue))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  ||!Double.isNaN(lvalue))  {  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	||!Double.isNaN(lvalue))  {	  if(!Double.isNaN(minimum))    {    Integer    lvalue    =    getIntValue();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
43	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue))  {  Integer  uvalue  =  getInt(series);  [CE]  variable  uvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  if(!Double.isNaN(lvalue))  {  Integer  uvalue  =  getInt(series);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue))  {  Integer  uvalue  =  getInt(series);	  if(!Double.isNaN(minimum))    {    Integer    lvalue    =    getInt(series);    	non-compiled	[CE]  variable  uvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)	16	None	replace
44	[BUG]  [BUGGY]  Lvalue  lvalue  =  dataset.getValue(Range.class,  Range.class,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Lvalue  lvalue  =  dataset.getValue(Range.class,  Range.class,  Double.POSITIVE_INFINITY);  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  dataset.getValue(Range.class,  Range.class,  Double.POSITIVE_INFINITY);	  Lvalue    lvalue    =    dataset.getValue(Range.class,    Range.class);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
45	[BUG]  [BUGGY]  if(!Double.isInfinite(lvalue))  {  AssertionFailedError.warning( "mismatch ",  lvalue);  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  if(!Double.isInfinite(lvalue))  {  AssertionFailedError.warning( "mismatch ",  lvalue);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isInfinite(lvalue))    {    AssertionFailedError.warning( "mismatch ",  lvalue);	  	non-compiled	[CE]  'else'  without  'if'	14	None	add
46	[BUG]  [BUGGY]  if(!Double.isInfinite(lvalue))  {  AssertionFailedError.warning( "mismatch  for  variable  ' "  +  lvalue  + "' ");  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  if(!Double.isInfinite(lvalue))  {  AssertionFailedError.warning( "mismatch  for  variable  ' "  +  lvalue  + "' ");  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isInfinite(lvalue))    {    AssertionFailedError.warning( "mismatch  for  variable  ' "  +  lvalue  + "' ");	  	non-compiled	[CE]  'else'  without  'if'	14	None	add
47	[BUG]  [BUGGY]  if(!Double.isInfinite(lvalue))  {  AssertionFailedError.warning( "Missing  lvalue  for  column: "  +  lvalue);  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  if(!Double.isInfinite(lvalue))  {  AssertionFailedError.warning( "Missing  lvalue  for  column: "  +  lvalue);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isInfinite(lvalue))    {    AssertionFailedError.warning( "Missing  lvalue  for  column: "  +  lvalue);	  	non-compiled	[CE]  'else'  without  'if'	14	None	add
48	[BUG]  [BUGGY]  ettyPrinter.this.reportError( "msg.illegal.character ");  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  ettyPrinter.this.reportError( "msg.illegal.character ");  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	ettyPrinter.this.reportError( "msg.illegal.character ");	  if(!Double.isNaN(minimum))    {    if(!Double.isNaN(lvalue))    {    minimal    =    Math.min(minimum,    lvalue);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
49	[BUG]  [BUGGY]  Lvalue  lvalue  =  dataset.getValue(this,  series,  series);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Lvalue  lvalue  =  dataset.getValue(this,  series,  series);  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  dataset.getValue(this,  series,  series);	  Lvalue    lvalue    =    dataset.getValue(this,    series,    dataset);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
50	[BUG]  [BUGGY]  safely(Double.isInfinite(lvalue)))  {  minimum  =  Math.max(minimum,  lvalue);  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  safely(Double.isInfinite(lvalue)))  {  minimum  =  Math.max(minimum,  lvalue);  }  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	safely(Double.isInfinite(lvalue)))  {  minimum  =  Math.max(minimum,  lvalue);  }	  if(!Double.isNaN(minimum))    {    if(!Double.isNaN(lvalue))    {    minimum    =    Math.min(minimum,    lvalue);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
51	[BUG]  [BUGGY]  ||!Double.isNaN(lvalue))  {  Integer  lvalue  =  getIntValue();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  ||!Double.isNaN(lvalue))  {  Integer  lvalue  =  getIntValue();  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	||!Double.isNaN(lvalue))  {  Integer  lvalue  =  getIntValue();	  if(!Double.isNaN(minimum))    {    Integer    lvalue    =    getIntValue();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
52	[BUG]  [BUGGY]  Lvalue  lvalue  =  dataset.getValue(this,  series,  series  +  1);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Lvalue  lvalue  =  dataset.getValue(this,  series,  series  +  1);  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  dataset.getValue(this,  series,  series  +  1);	  Lvalue    lvalue    =    dataset.getValue(this,    series,    dataset);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
53	[BUG]  [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(series,  index);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(series,  index);  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  this.dataset.getValue(series,  index);	  Lvalue    lvalue    =    this.dataset.getValue(series);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
54	[BUG]  [BUGGY]  if(!Double.isInfinite(lvalue))  {  AssertionFailedError  lvalue  =(AssertionFailedError)this.data.get(lvalue);  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  if(!Double.isInfinite(lvalue))  {  AssertionFailedError  lvalue  =(AssertionFailedError)this.data.get(lvalue);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isInfinite(lvalue))    {    AssertionFailedError  lvalue  =(AssertionFailedError)this.data.get(lvalue);	  	non-compiled	[CE]  'else'  without  'if'	14	None	add
55	[BUG]  [BUGGY]  if(!Double.isInfinite(lvalue))  {  if(!Double.isNaN(lvalue))  {  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  if(!Double.isInfinite(lvalue))  {  if(!Double.isNaN(lvalue))  {  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isInfinite(lvalue))    {    if(!Double.isNaN(lvalue))  {	  	non-compiled	[CE]  'else'  without  'if'	14	None	add
56	[BUG]  [BUGGY]  if(!Double.isInfinite(lvalue))  {  AssertionFailedError  lvalue  =(AssertionFailedError)this.data.getObject();  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  if(!Double.isInfinite(lvalue))  {  AssertionFailedError  lvalue  =(AssertionFailedError)this.data.getObject();  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isInfinite(lvalue))    {    AssertionFailedError  lvalue  =(AssertionFailedError)this.data.getObject();	  	non-compiled	[CE]  'else'  without  'if'	14	None	add
57	[BUG]  [BUGGY]  degree  =  Math.min(minimum,  lvalue);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  degree  =  Math.min(minimum,  lvalue);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	degree  =  Math.min(minimum,  lvalue);	  if(!Double.isNaN(minimum))    {    if(!Double.isNaN(lvalue))    {    minimum    =    Math.min(minimum,    lvalue);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
58	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue))  {  int  lvalue  =  dataset.getRowCount();  [CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  if(!Double.isNaN(lvalue))  {  int  lvalue  =  dataset.getRowCount();  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue))  {  int  lvalue  =  dataset.getRowCount();	  if(!Double.isNaN(minimum))    {    int    lvalue    =    dataset.getColumnCount();    	non-compiled	[CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)	8	None	replace
59	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  if(!Double.isNaN(minimum)||!Double.isNaN(lvalue))  {  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(minimum)||!Double.isNaN(lvalue))  {	  if(!Double.isNaN(minimum))    {    if(!Double.isNaN(lvalue))    {    	compilable	  [FE]  AssertionFailedError  	22	4	replace
60	[BUG]  [BUGGY]  if(!Double.isNaN(minimum)||!Double.isNaN(lvalue))  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  if(!Double.isNaN(minimum)||!Double.isNaN(lvalue))  {  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(minimum)||!Double.isNaN(lvalue))  {	  if(!Double.isNaN(minimum))    {    if(!Double.isNaN(lvalue))    {    	compilable	  [FE]  AssertionFailedError  	22	4	replace
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  if(!Double.isNaN(minimum)||!Double.isInfinite(lvalue))  {  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(minimum)||!Double.isInfinite(lvalue))  {	  if(!Double.isNaN(minimum))    {    if(!Double.isNaN(lvalue))    {    	compilable	  [FE]  AssertionFailedError  	22	4	replace
62	[BUG]  [BUGGY]  if(!Double.isNaN(minimum)||!Double.isInfinite(lvalue))  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  if(!Double.isNaN(minimum)||!Double.isInfinite(lvalue))  {  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(minimum)||!Double.isInfinite(lvalue))  {	  if(!Double.isNaN(minimum))    {    if(!Double.isNaN(lvalue))    {    	compilable	  [FE]  AssertionFailedError  	22	4	replace
63	[BUG]  [BUGGY]  if(lvalue!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  bad  operand  types  for  binary  operator  '!='  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  if(lvalue!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(lvalue!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(lvalue!=    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '!='	3	None	replace
64	[BUG]  [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(this,  series,  series);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Lvalue  lvalue  =  this.dataset.getValue(this,  series,  series);  [BUGGY]      if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	Lvalue  lvalue  =  this.dataset.getValue(this,  series,  series);	  Lvalue    lvalue    =    this.dataset.getValue(this,    series);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
65	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue))  {  Integer  lvalue  =  getInt(series);  [CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  if(!Double.isNaN(lvalue))  {  Integer  lvalue  =  getInt(series);  [BUGGY]      minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue))  {  Integer  lvalue  =  getInt(series);	  if(!Double.isNaN(minimum))    {    Integer    lvalue    =    getInt(series);    	non-compiled	[CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)	16	None	replace
