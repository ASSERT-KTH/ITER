bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(Double.isNaN(uvalue))  {	  if    (Double.isNaN(lvalue))    {    	compilable	  [FE]  NullPointerException  	8	6	replace
2	[BUG]  [BUGGY]  if(Double.isNaN(uvalue))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(Double.isNaN(uvalue))  {	  if    (Double.isNaN(lvalue))    {    	compilable	  [FE]  NullPointerException  	8	6	replace
3	[BUG]  [BUGGY]  if  (Double.isNaN(lvalue))  {  uvalue  =  Math.max(maximum,  lvalue);  [CE]  'else'  without  'if'  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if  (Double.isNaN(lvalue))  {  uvalue  =  Math.max(maximum,  lvalue);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if    (Double.isNaN(lvalue))    {    uvalue  =  Math.max(maximum,  lvalue);	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
4	[BUG]  [BUGGY]  if  (Double.isNaN(lvalue))  {  Double  uvalue  =  Math.max(maximum,  uvalue);  [CE]  'else'  without  'if'  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  if  (Double.isNaN(lvalue))  {  Double  uvalue  =  Math.max(maximum,  uvalue);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if    (Double.isNaN(lvalue))    {    Double  uvalue  =  Math.max(maximum,  uvalue);	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
5	[BUG]  [BUGGY]  if  (Double.isNaN(lvalue))  {  int  uvalue  =  dataset.getXValue(series,  0);  [CE]  'else'  without  'if'  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if  (Double.isNaN(lvalue))  {  int  uvalue  =  dataset.getXValue(series,  0);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if    (Double.isNaN(lvalue))    {    int  uvalue  =  dataset.getXValue(series,  0);	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
6	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(lvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(includeInterval  &&!Double.isNaN(lvalue))  {	  if(includeInterval    &&!Double.isNaN(uvalue))    {    	compilable	  [FE]  NullPointerException  	14	2	replace
7	[BUG]  [BUGGY]  if(includeInterval  &&!Double.isNaN(lvalue))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(lvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(includeInterval  &&!Double.isNaN(lvalue))  {	  if(includeInterval    &&!Double.isNaN(uvalue))    {    	compilable	  [FE]  NullPointerException  	14	2	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  if(includeInterval  ||!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(includeInterval  ||!Double.isNaN(uvalue))  {	  if(includeInterval    &&!Double.isNaN(uvalue))    {    	compilable	  [FE]  AssertionFailedError  	14	4	replace
9	[BUG]  [BUGGY]  if(includeInterval  ||!Double.isNaN(uvalue))  {  [FE]  AssertionFailedError  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  if(includeInterval  ||!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(includeInterval  ||!Double.isNaN(uvalue))  {	  if(includeInterval    &&!Double.isNaN(uvalue))    {    	compilable	  [FE]  AssertionFailedError  	14	4	replace
10	[BUG]  [BUGGY]  uvalue  =  dataset.getXValue(series,  item,  lvalue);  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  uvalue  =  dataset.getXValue(series,  item,  lvalue);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	uvalue  =  dataset.getXValue(series,  item,  lvalue);	      uvalue    =    dataset.getXValue(series,    lvalue);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
11	[BUG]  [BUGGY]  int  lvalue  =  dataset.getXValue(series,  item);  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  lvalue  =  dataset.getXValue(series,  item);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	int  lvalue  =  dataset.getXValue(series,  item);	      int    uvalue    =    dataset.getXValue(series,    item);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  Integer  uvalue  =  dataset.getXValue(series,  item,  lvalue);  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Integer  uvalue  =  dataset.getXValue(series,  item,  lvalue);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	Integer  uvalue  =  dataset.getXValue(series,  item,  lvalue);	      Integer    uvalue    =    dataset.getXValue(series,    item);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
13	[BUG]  [BUGGY]  if  (!Double.isNaN(lvalue))  {  uvalue  =  Math.max(maximum,  lvalue);  [CE]  'else'  without  'if'  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if  (!Double.isNaN(lvalue))  {  uvalue  =  Math.max(maximum,  lvalue);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if    (!Double.isNaN(lvalue))    {    uvalue  =  Math.max(maximum,  lvalue);	  	non-compiled	[CE]  'else'  without  'if'	5	None	add
14	[BUG]  [BUGGY]  if  (!Double.isNaN(lvalue))  {  Double  uvalue  =  Math.max(maximum,  uvalue);  [CE]  'else'  without  'if'  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  if  (!Double.isNaN(lvalue))  {  Double  uvalue  =  Math.max(maximum,  uvalue);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if    (!Double.isNaN(lvalue))    {    Double  uvalue  =  Math.max(maximum,  uvalue);	  	non-compiled	[CE]  'else'  without  'if'	5	None	add
15	[BUG]  [BUGGY]  if  (!Double.isNaN(lvalue))  {  int  uvalue  =  dataset.getXValue(series,  0);  [CE]  'else'  without  'if'  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if  (!Double.isNaN(lvalue))  {  int  uvalue  =  dataset.getXValue(series,  0);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if    (!Double.isNaN(lvalue))    {    int  uvalue  =  dataset.getXValue(series,  0);	  	non-compiled	[CE]  'else'  without  'if'	5	None	add
16	[BUG]  [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {  uvalue  =  dataset.getXValue(series,  lvalue);  [CE]  'else'  without  'if'  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {  uvalue  =  dataset.getXValue(series,  lvalue);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(includeInterval    &&!Double.isNaN(uvalue))    {    uvalue  =  dataset.getXValue(series,  lvalue);	  	non-compiled	[CE]  'else'  without  'if'	13	None	add
17	[BUG]  [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {  uvalue  =  dataset.getXValue(series,  0);  [CE]  'else'  without  'if'  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {  uvalue  =  dataset.getXValue(series,  0);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(includeInterval    &&!Double.isNaN(uvalue))    {    uvalue  =  dataset.getXValue(series,  0);	  	non-compiled	[CE]  'else'  without  'if'	13	None	add
18	[BUG]  [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {  int  uvalue  =  dataset.getDoubleValue(series,  item);  [CE]  'else'  without  'if'  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {  int  uvalue  =  dataset.getDoubleValue(series,  item);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(includeInterval    &&!Double.isNaN(uvalue))    {    int  uvalue  =  dataset.getDoubleValue(series,  item);	  	non-compiled	[CE]  'else'  without  'if'	13	None	add
19	[BUG]  [BUGGY]  uvalue  =  dataset.getYValue(series,  item);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  uvalue  =  dataset.getYValue(series,  item);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	uvalue  =  dataset.getYValue(series,  item);	      uvalue    =    dataset.getXValue(series,    item);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
20	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]      uvalue  =  dataset.getXValue(series,  0);  uvalue  =  dataset.getXValue(series,  0);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	        uvalue    =    dataset.getXValue(series,    0);    uvalue  =  dataset.getXValue(series,  0);	  	compilable	  [FE]  NullPointerException  	2	6	add
21	[BUG]  [BUGGY]      uvalue  =  dataset.getXValue(series,  0);  uvalue  =  dataset.getXValue(series,  0);  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]      uvalue  =  dataset.getXValue(series,  0);  uvalue  =  dataset.getXValue(series,  0);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	        uvalue    =    dataset.getXValue(series,    0);    uvalue  =  dataset.getXValue(series,  0);	  	compilable	  [FE]  NullPointerException  	2	6	add
22	[BUG]  [BUGGY]      uvalue  =  dataset.getXValue(series,  0);  Integer  lvalue  =  dataset.getLowerCase(series,  0);  [CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]      uvalue  =  dataset.getXValue(series,  0);  Integer  lvalue  =  dataset.getLowerCase(series,  0);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	        uvalue    =    dataset.getXValue(series,    0);    Integer  lvalue  =  dataset.getLowerCase(series,  0);	  	non-compiled	[CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)	2	None	add
23	[BUG]  [BUGGY]      uvalue  =  dataset.getXValue(series,  0);  Integer  lvalue  =  dataset.getLValue(series,  item);  [CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]      uvalue  =  dataset.getXValue(series,  0);  Integer  lvalue  =  dataset.getLValue(series,  item);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	        uvalue    =    dataset.getXValue(series,    0);    Integer  lvalue  =  dataset.getLValue(series,  item);	  	non-compiled	[CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)	2	None	add
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]      uvalue  =  dataset.getXValue(series,  item);  lvalue  =  dataset.getXValue(series,  item);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	        uvalue    =    dataset.getXValue(series,    item);    lvalue  =  dataset.getXValue(series,  item);	  	compilable	  [FE]  AssertionFailedError  	11	5	add
25	[BUG]  [BUGGY]      uvalue  =  dataset.getXValue(series,  item);  lvalue  =  dataset.getXValue(series,  item);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]      uvalue  =  dataset.getXValue(series,  item);  lvalue  =  dataset.getXValue(series,  item);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	        uvalue    =    dataset.getXValue(series,    item);    lvalue  =  dataset.getXValue(series,  item);	  	compilable	  [FE]  AssertionFailedError  	11	5	add
26	[BUG]  [BUGGY]      uvalue  =  dataset.getXValue(series,  item);  Integer  lvalue  =  dataset.getLValue(series,  item);  [CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]      uvalue  =  dataset.getXValue(series,  item);  Integer  lvalue  =  dataset.getLValue(series,  item);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	        uvalue    =    dataset.getXValue(series,    item);    Integer  lvalue  =  dataset.getLValue(series,  item);	  	non-compiled	[CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)	11	None	add
27	[BUG]  [BUGGY]      uvalue  =  dataset.getXValue(series,  item);  Integer  lvalue  =  dataset.getLowerCase(series,  item);  [CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]      uvalue  =  dataset.getXValue(series,  item);  Integer  lvalue  =  dataset.getLowerCase(series,  item);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	        uvalue    =    dataset.getXValue(series,    item);    Integer  lvalue  =  dataset.getLowerCase(series,  item);	  	non-compiled	[CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)	11	None	add
28	[BUG]  [BUGGY]  Integer  uvalue  =  dataset.getYValue(series,  item);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Integer  uvalue  =  dataset.getYValue(series,  item);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	Integer  uvalue  =  dataset.getYValue(series,  item);	      Integer    lvalue    =    dataset.getXValue(series,    item);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  if  (Double.isNaN(lvalue))  {  uvalue  =  Math.min(maximum,  lvalue);  [CE]  'else'  without  'if'  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if  (Double.isNaN(lvalue))  {  uvalue  =  Math.min(maximum,  lvalue);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if    (Double.isNaN(lvalue))    {    uvalue  =  Math.min(maximum,  lvalue);	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
30	[BUG]  [BUGGY]  if  (Double.isNaN(lvalue))  {  uvalue  =  Math.min(maximum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  [CE]  'else'  without  'if'  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  if  (Double.isNaN(lvalue))  {  uvalue  =  Math.min(maximum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if    (Double.isNaN(lvalue))    {    uvalue  =  Math.min(maximum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
31	[BUG]  [BUGGY]  if  (!Double.isNaN(lvalue))  {  int  uvalue  =  dataset.getXValue(series,  item);  [CE]  'else'  without  'if'  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if  (!Double.isNaN(lvalue))  {  int  uvalue  =  dataset.getXValue(series,  item);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if    (!Double.isNaN(lvalue))    {    int  uvalue  =  dataset.getXValue(series,  item);	  	non-compiled	[CE]  'else'  without  'if'	5	None	add
32	[BUG]  [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  [CE]  'else'  without  'if'  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(includeInterval    &&!Double.isNaN(uvalue))    {    maximum  =  Math.max(maximum,  uvalue);	  	non-compiled	[CE]  'else'  without  'if'	13	None	add
33	[BUG]  [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {  int  uvalue  =  dataset.getXValue(series,  item);  [CE]  'else'  without  'if'  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {  int  uvalue  =  dataset.getXValue(series,  item);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(includeInterval    &&!Double.isNaN(uvalue))    {    int  uvalue  =  dataset.getXValue(series,  item);	  	non-compiled	[CE]  'else'  without  'if'	13	None	add
34	[BUG]  [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {  int  uvalue  =  dataset.getXValue(series,  0);  [CE]  'else'  without  'if'  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {  int  uvalue  =  dataset.getXValue(series,  0);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(includeInterval    &&!Double.isNaN(uvalue))    {    int  uvalue  =  dataset.getXValue(series,  0);	  	non-compiled	[CE]  'else'  without  'if'	13	None	add
35	[BUG]  [BUGGY]      uvalue  =  dataset.getXValue(series,  0);  Integer  lvalue  =  dataset.getXValue(series,  0);  [CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]      uvalue  =  dataset.getXValue(series,  0);  Integer  lvalue  =  dataset.getXValue(series,  0);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	        uvalue    =    dataset.getXValue(series,    0);    Integer  lvalue  =  dataset.getXValue(series,  0);	  	non-compiled	[CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)	2	None	add
36	[BUG]  [BUGGY]      uvalue  =  dataset.getXValue(series,  0);  int  lvalue  =  dataset.getXValue(series,  0);  [CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]      uvalue  =  dataset.getXValue(series,  0);  int  lvalue  =  dataset.getXValue(series,  0);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	        uvalue    =    dataset.getXValue(series,    0);    int  lvalue  =  dataset.getXValue(series,  0);	  	non-compiled	[CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)	2	None	add
37	[BUG]  [BUGGY]      uvalue  =  dataset.getXValue(series,  0);  Integer  lvalue  =  dataset.getXValue(series,  1);  [CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]      uvalue  =  dataset.getXValue(series,  0);  Integer  lvalue  =  dataset.getXValue(series,  1);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	        uvalue    =    dataset.getXValue(series,    0);    Integer  lvalue  =  dataset.getXValue(series,  1);	  	non-compiled	[CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)	2	None	add
38	[BUG]  [BUGGY]      uvalue  =  dataset.getXValue(series,  item);  Integer  lvalue  =  dataset.getXValue(series,  item);  [CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]      uvalue  =  dataset.getXValue(series,  item);  Integer  lvalue  =  dataset.getXValue(series,  item);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	        uvalue    =    dataset.getXValue(series,    item);    Integer  lvalue  =  dataset.getXValue(series,  item);	  	non-compiled	[CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)	11	None	add
39	[BUG]  [BUGGY]      uvalue  =  dataset.getXValue(series,  item);  int  lvalue  =  dataset.getXValue(series,  item);  [CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]      uvalue  =  dataset.getXValue(series,  item);  int  lvalue  =  dataset.getXValue(series,  item);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	        uvalue    =    dataset.getXValue(series,    item);    int  lvalue  =  dataset.getXValue(series,  item);	  	non-compiled	[CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)	11	None	add
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(includeInterval  &&!Double.isNaN(maximum))  {	  if(includeInterval    &&!Double.isNaN(uvalue))    {    	compilable	  [FE]  AssertionFailedError  	14	4	replace
41	[BUG]  [BUGGY]  if(includeInterval  &&!Double.isNaN(maximum))  {  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(includeInterval  &&!Double.isNaN(maximum))  {	  if(includeInterval    &&!Double.isNaN(uvalue))    {    	compilable	  [FE]  AssertionFailedError  	14	4	replace
42	[BUG]  [BUGGY]  if  (Double.isNaN(lvalue))  {  uvalue  =  dataset.getXValue(series,  0);  [CE]  'else'  without  'if'  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if  (Double.isNaN(lvalue))  {  uvalue  =  dataset.getXValue(series,  0);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if    (Double.isNaN(lvalue))    {    uvalue  =  dataset.getXValue(series,  0);	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
43	[BUG]  [BUGGY]  if  (Double.isNaN(lvalue))  {  uvalue  =  dataset.getXValue(series,  item);  [CE]  'else'  without  'if'  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  if  (Double.isNaN(lvalue))  {  uvalue  =  dataset.getXValue(series,  item);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if    (Double.isNaN(lvalue))    {    uvalue  =  dataset.getXValue(series,  item);	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
44	[BUG]  [BUGGY]      uvalue  =  dataset.getXValue(series,  0);  Integer  lvalue  =  dataset.getXValue(series,  item);  [CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]      uvalue  =  dataset.getXValue(series,  0);  Integer  lvalue  =  dataset.getXValue(series,  item);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	        uvalue    =    dataset.getXValue(series,    0);    Integer  lvalue  =  dataset.getXValue(series,  item);	  	non-compiled	[CE]  variable  lvalue  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)	2	None	add
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]      uvalue  =  dataset.getXValue(series,  0);  uvalue  =  dataset.getXValue(series,  item);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	        uvalue    =    dataset.getXValue(series,    0);    uvalue  =  dataset.getXValue(series,  item);	  	compilable	  [FE]  AssertionFailedError  	2	5	add
46	[BUG]  [BUGGY]      uvalue  =  dataset.getXValue(series,  0);  uvalue  =  dataset.getXValue(series,  item);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]      uvalue  =  dataset.getXValue(series,  0);  uvalue  =  dataset.getXValue(series,  item);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	        uvalue    =    dataset.getXValue(series,    0);    uvalue  =  dataset.getXValue(series,  item);	  	compilable	  [FE]  AssertionFailedError  	2	5	add
47	[BUG]  [BUGGY]  if  (!Double.isNaN(lvalue))  {  uvalue  =  dataset.getXValue(series,  0);  [CE]  'else'  without  'if'  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if  (!Double.isNaN(lvalue))  {  uvalue  =  dataset.getXValue(series,  0);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if    (!Double.isNaN(lvalue))    {    uvalue  =  dataset.getXValue(series,  0);	  	non-compiled	[CE]  'else'  without  'if'	5	None	add
48	[BUG]  [BUGGY]  if  (!Double.isNaN(lvalue))  {  uvalue  =  dataset.getXValue(series,  item);  [CE]  'else'  without  'if'  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  if  (!Double.isNaN(lvalue))  {  uvalue  =  dataset.getXValue(series,  item);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if    (!Double.isNaN(lvalue))    {    uvalue  =  dataset.getXValue(series,  item);	  	non-compiled	[CE]  'else'  without  'if'	5	None	add
49	[BUG]  [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {  uvalue  =  dataset.getXValue(series,  item);  [CE]  'else'  without  'if'  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {  uvalue  =  dataset.getXValue(series,  item);  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(includeInterval    &&!Double.isNaN(uvalue))    {    uvalue  =  dataset.getXValue(series,  item);	  	non-compiled	[CE]  'else'  without  'if'	13	None	add
50	[BUG]  [BUGGY]      uvalue  =  dataset.getXValue(series,  item);  int  itemCount  =  dataset.getItemCount(series);  [CE]  variable  itemCount  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]      uvalue  =  dataset.getXValue(series,  item);  int  itemCount  =  dataset.getItemCount(series);  [BUGGY]    if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	        uvalue    =    dataset.getXValue(series,    item);    int  itemCount  =  dataset.getItemCount(series);	  	non-compiled	[CE]  variable  itemCount  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)	11	None	add
