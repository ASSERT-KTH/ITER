bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    NullPointerException.printStackTrace();  [CE]  non-static  method  printStackTrace()  cannot  be  referenced  from  a  static  context  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    NullPointerException.printStackTrace();  [BUGGY]  if  (minimum  >  maximum)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	    NullPointerException.printStackTrace();		non-compiled	[CE]  non-static  method  printStackTrace()  cannot  be  referenced  from  a  static  context	66	None	add
2	[BUG]  [BUGGY]    NullPointerException.println( "IncludeInterval: "  +  maximum);  [CE]  cannot  find  symbol  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    NullPointerException.println( "IncludeInterval: "  +  maximum);  [BUGGY]  if  (minimum  >  maximum)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	    NullPointerException.println( "IncludeInterval: "  +  maximum);		non-compiled	[CE]  cannot  find  symbol	66	None	add
3	[BUG]  [BUGGY]    NullPointerException.println( "Unknown  range: "  +  maximum);  [CE]  cannot  find  symbol  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    NullPointerException.println( "Unknown  range: "  +  maximum);  [BUGGY]  if  (minimum  >  maximum)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	    NullPointerException.println( "Unknown  range: "  +  maximum);		non-compiled	[CE]  cannot  find  symbol	66	None	add
4	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  if(maximum  >  minimum)  {  [BUGGY]  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	add	if(maximum  >  minimum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	65	8	replace
5	[BUG]  [BUGGY]  if(maximum  >  minimum)  {  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  if(maximum  >  minimum)  {  [BUGGY]  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	if(maximum  >  minimum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	65	8	replace
6	[BUG]  [BUGGY]    minimum  =  dataset.getMinimumValue();  maximum  =  dataset.getMaximumValue();  [CE]  cannot  find  symbol  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    minimum  =  dataset.getMinimumValue();  maximum  =  dataset.getMaximumValue();  [BUGGY]  if  (minimum  >  maximum)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	    minimum  =  dataset.getMinimumValue();  maximum  =  dataset.getMaximumValue();		non-compiled	[CE]  cannot  find  symbol	66	None	add
7	[BUG]  [BUGGY]    minimum  =  dataset.getMinimumValue();  maximum  =  dataset.getMaximumValue(minimum);  [CE]  cannot  find  symbol  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    minimum  =  dataset.getMinimumValue();  maximum  =  dataset.getMaximumValue(minimum);  [BUGGY]  if  (minimum  >  maximum)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	    minimum  =  dataset.getMinimumValue();  maximum  =  dataset.getMaximumValue(minimum);		non-compiled	[CE]  cannot  find  symbol	66	None	add
8	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  if(minimum  <  maximum)  {  [BUGGY]  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	add	if(minimum  <  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  NullPointerException  	65	8	replace
9	[BUG]  [BUGGY]  if(minimum  <  maximum)  {  [FE]  NullPointerException  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  if(minimum  <  maximum)  {  [BUGGY]  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	if(minimum  <  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  NullPointerException  	65	8	replace
10	[BUG]  [BUGGY]    minimum  =  dataset.getMinimumDomainBounds();  maximum  =  dataset.getMaximumDomainBounds();  [CE]  cannot  find  symbol  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    minimum  =  dataset.getMinimumDomainBounds();  maximum  =  dataset.getMaximumDomainBounds();  [BUGGY]  if  (minimum  >  maximum)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	    minimum  =  dataset.getMinimumDomainBounds();  maximum  =  dataset.getMaximumDomainBounds();		non-compiled	[CE]  cannot  find  symbol	66	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    minimum  =  Math.min(minimum,  maximum);  [BUGGY]  if  (minimum  >  maximum)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	add	    minimum  =  Math.min(minimum,  maximum);		compilable	  [FE]  AssertionFailedError  	66	2	add
12	[BUG]  [BUGGY]    minimum  =  Math.min(minimum,  maximum);  [FE]  AssertionFailedError  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    minimum  =  Math.min(minimum,  maximum);  [BUGGY]  if  (minimum  >  maximum)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	    minimum  =  Math.min(minimum,  maximum);		compilable	  [FE]  AssertionFailedError  	66	2	add
