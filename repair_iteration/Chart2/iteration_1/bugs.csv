bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
570	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  -  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
571	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  -  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
10	[BUG]  [BUGGY]    [FE]    double)  [CONTEXT]      [BUGGY]  return  new  Range(minimum,  maximum);  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	add	return  new  Range(minimum,  maximum);	return  null;  	compilable	  [FE]    double)	1	2
11	[BUG]  [BUGGY]  return  new  Range(minimum,  maximum);    [FE]    double)  [CONTEXT]      [BUGGY]  return  new  Range(minimum,  maximum);  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	replace	return  new  Range(minimum,  maximum);	return  null;  	compilable	  [FE]    double)	1	2
362	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
363	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
364	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
365	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
367	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
368	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
401	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
402	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
402	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
403	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
403	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
404	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
406	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
407	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
407	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
408	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)||  Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
408	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
409	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
246	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {  [BUGGY]    lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	754	754	2	add	for(int  item  =  0;  item!=  itemCount;  item++)  {	for  (int  item  =  0;  item  <  itemCount;  item++)  {  	compilable	  [FE]  NullPointerException	13	2
247	[BUG]  [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {  [BUGGY]    lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	754	754	2	replace	for(int  item  =  0;  item!=  itemCount;  item++)  {	for  (int  item  =  0;  item  <  itemCount;  item++)  {  	compilable	  [FE]  NullPointerException	13	2
207	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  float  itemCount  =  dataset.getItemCount(series);  [BUGGY]    for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	753	753	2	add	float  itemCount  =  dataset.getItemCount(series);	int  itemCount  =  dataset.getItemCount(series);  	compilable	  [FE]  NullPointerException	11	2
208	[BUG]  [BUGGY]  float  itemCount  =  dataset.getItemCount(series);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  float  itemCount  =  dataset.getItemCount(series);  [BUGGY]    for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	753	753	2	replace	float  itemCount  =  dataset.getItemCount(series);	int  itemCount  =  dataset.getItemCount(series);  	compilable	  [FE]  NullPointerException	11	2
525	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY;  if(includeInterval)  {  double  maximum  =  Double.NEGATIVE_INFINITY;  }  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	add	double  minimum  =  Double.POSITIVE_INFINITY;  if(includeInterval)  {  double  maximum  =  Double.NEGATIVE_INFINITY;  }	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
526	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY;  if(includeInterval)  {  double  maximum  =  Double.NEGATIVE_INFINITY;  }    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY;  if(includeInterval)  {  double  maximum  =  Double.NEGATIVE_INFINITY;  }  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	replace	double  minimum  =  Double.POSITIVE_INFINITY;  if(includeInterval)  {  double  maximum  =  Double.NEGATIVE_INFINITY;  }	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
170	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  series  =  0;  series!=  seriesCount;  series++)  {  [BUGGY]    int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	752	752	2	add	for(int  series  =  0;  series!=  seriesCount;  series++)  {	for  (int  series  =  0;  series  <  seriesCount;  series++)  {  	compilable	  [FE]  NullPointerException	9	2
171	[BUG]  [BUGGY]  for(int  series  =  0;  series!=  seriesCount;  series++)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  series  =  0;  series!=  seriesCount;  series++)  {  [BUGGY]    int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	752	752	2	replace	for(int  series  =  0;  series!=  seriesCount;  series++)  {	for  (int  series  =  0;  series  <  seriesCount;  series++)  {  	compilable	  [FE]  NullPointerException	9	2
1284	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  >  maximum  ||  minimum  >  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	add	if(minimum  >  maximum  ||  minimum  >  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  NullPointerException	65	2
1285	[BUG]  [BUGGY]  if(minimum  >  maximum  ||  minimum  >  maximum)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  >  maximum  ||  minimum  >  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	if(minimum  >  maximum  ||  minimum  >  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  NullPointerException	65	2
685	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  IntervalXYDataset  ixyd  =(IntervalXYDataset)dataset,  iterateRangeBounds;  [BUGGY]    for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1238	1238	2	add	IntervalXYDataset  ixyd  =(IntervalXYDataset)dataset,  iterateRangeBounds;	IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  	compilable	  [FE]  NullPointerException	35	2
686	[BUG]  [BUGGY]  IntervalXYDataset  ixyd  =(IntervalXYDataset)dataset,  iterateRangeBounds;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  IntervalXYDataset  ixyd  =(IntervalXYDataset)dataset,  iterateRangeBounds;  [BUGGY]    for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1238	1238	2	replace	IntervalXYDataset  ixyd  =(IntervalXYDataset)dataset,  iterateRangeBounds;	IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  	compilable	  [FE]  NullPointerException	35	2
1202	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  seriesCount  =  dataset.getSeriesCount();  [BUGGY]    double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	747	747	2	add	double  seriesCount  =  dataset.getSeriesCount();	int  seriesCount  =  dataset.getSeriesCount();  	compilable	  [FE]  NullPointerException	61	2
1203	[BUG]  [BUGGY]  double  seriesCount  =  dataset.getSeriesCount();    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  seriesCount  =  dataset.getSeriesCount();  [BUGGY]    double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	747	747	2	replace	double  seriesCount  =  dataset.getSeriesCount();	int  seriesCount  =  dataset.getSeriesCount();  	compilable	  [FE]  NullPointerException	61	2
730	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  series  =  0;  series!=  seriesCount;  series++)  {  [BUGGY]    int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1239	1239	2	add	for(int  series  =  0;  series!=  seriesCount;  series++)  {	for  (int  series  =  0;  series  <  seriesCount;  series++)  {  	compilable	  [FE]  NullPointerException	37	2
731	[BUG]  [BUGGY]  for(int  series  =  0;  series!=  seriesCount;  series++)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  series  =  0;  series!=  seriesCount;  series++)  {  [BUGGY]    int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1239	1239	2	replace	for(int  series  =  0;  series!=  seriesCount;  series++)  {	for  (int  series  =  0;  series  <  seriesCount;  series++)  {  	compilable	  [FE]  NullPointerException	37	2
767	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  float  itemCount  =  dataset.getItemCount(series);  [BUGGY]    for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1240	1240	2	add	float  itemCount  =  dataset.getItemCount(series);	int  itemCount  =  dataset.getItemCount(series);  	compilable	  [FE]  NullPointerException	39	2
768	[BUG]  [BUGGY]  float  itemCount  =  dataset.getItemCount(series);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  float  itemCount  =  dataset.getItemCount(series);  [BUGGY]    for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1240	1240	2	replace	float  itemCount  =  dataset.getItemCount(series);	int  itemCount  =  dataset.getItemCount(series);  	compilable	  [FE]  NullPointerException	39	2
805	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {  [BUGGY]    double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1241	1241	2	add	for(int  item  =  0;  item!=  itemCount;  item++)  {	for  (int  item  =  0;  item  <  itemCount;  item++)  {  	compilable	  [FE]  NullPointerException	41	2
806	[BUG]  [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {  [BUGGY]    double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1241	1241	2	replace	for(int  item  =  0;  item!=  itemCount;  item++)  {	for  (int  item  =  0;  item  <  itemCount;  item++)  {  	compilable	  [FE]  NullPointerException	41	2
342	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	add	lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
343	[BUG]  [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	replace	lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
905	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  l  =  ixyd.getStartYValue(series,  item);  [BUGGY]    double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1243	1243	2	add	double  l  =  ixyd.getStartYValue(series,  item);		compilable	  [FE]  NullPointerException	46	2
906	[BUG]  [BUGGY]  double  l  =  ixyd.getStartYValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  l  =  ixyd.getStartYValue(series,  item);  [BUGGY]    double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1243	1243	2	replace	double  l  =  ixyd.getStartYValue(series,  item);		compilable	  [FE]  NullPointerException	46	2
41	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]      [BUGGY]  return  iterateDomainBounds(dataset,  false);  [BUGGY]    }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.4082482904638631	726	726	2	add	return  iterateDomainBounds(dataset,  false);	return  iterateDomainBounds(dataset,  true);  	compilable	  [FE]  AssertionFailedError	3	2
42	[BUG]  [BUGGY]  return  iterateDomainBounds(dataset,  false);    [FE]  AssertionFailedError  [CONTEXT]      [BUGGY]  return  iterateDomainBounds(dataset,  false);  [BUGGY]    }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.4082482904638631	726	726	2	replace	return  iterateDomainBounds(dataset,  false);	return  iterateDomainBounds(dataset,  true);  	compilable	  [FE]  AssertionFailedError	3	2
1163	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  -  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1164	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  -  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1164	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  *  2;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  *  2;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1165	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  *  2;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  *  2;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  *  2;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1165	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  +  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1166	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  +  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1168	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  /  2.0;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  /  2.0;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1169	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  /  2.0;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  /  2.0;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  /  2.0;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1169	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  /  2;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  /  2;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1170	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  /  2;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  /  2;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  /  2;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
922	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
923	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
926	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
927	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
927	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
928	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
1043	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1044	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1047	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1048	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >  Double.POSITIVE_INFINITY)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1050	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >=  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >=  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1051	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >=  Double.POSITIVE_INFINITY)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >=  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >=  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
961	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
962	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
962	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
963	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
964	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(includeInterval  &&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
965	[BUG]  [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(includeInterval  &&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
965	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
966	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
967	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(maximum)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(maximum)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
968	[BUG]  [BUGGY]  if(!Double.isNaN(maximum)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(maximum)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(maximum)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
970	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
971	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
610	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  float  seriesCount  =  dataset.getSeriesCount();  [BUGGY]        if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1233	1233	2	add	float  seriesCount  =  dataset.getSeriesCount();	int  seriesCount  =  dataset.getSeriesCount();  	compilable	  [FE]  NullPointerException	31	2
611	[BUG]  [BUGGY]  float  seriesCount  =  dataset.getSeriesCount();    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  float  seriesCount  =  dataset.getSeriesCount();  [BUGGY]        if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1233	1233	2	replace	float  seriesCount  =  dataset.getSeriesCount();	int  seriesCount  =  dataset.getSeriesCount();  	compilable	  [FE]  NullPointerException	31	2
1042	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1043	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
922	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
923	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
924	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
925	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
925	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
926	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(maximum))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
929	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(minimum))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)&&!Double.isNaN(minimum))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
930	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(minimum))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(minimum))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)&&!Double.isNaN(minimum))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
930	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
931	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
406	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(maximum)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(maximum)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
407	[BUG]  [BUGGY]  if(!Double.isNaN(maximum)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(maximum)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(maximum)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
408	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
409	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
963	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(maximum)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(maximum)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
964	[BUG]  [BUGGY]  if(!Double.isNaN(maximum)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(maximum)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(maximum)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
967	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(includeInterval  &&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
968	[BUG]  [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval  &&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(includeInterval  &&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
1281	[BUG]  [BUGGY]    [FE]    double)  [CONTEXT]      [BUGGY]  if(minimum  ==  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	add	if(minimum  ==  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]    double)	65	2
1282	[BUG]  [BUGGY]  if(minimum  ==  maximum)  {    [FE]    double)  [CONTEXT]      [BUGGY]  if(minimum  ==  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	if(minimum  ==  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]    double)	65	2
1284	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  >=  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	add	if(minimum  >=  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  NullPointerException	65	2
1285	[BUG]  [BUGGY]  if(minimum  >=  maximum)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  >=  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	if(minimum  >=  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  NullPointerException	65	2
362	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
363	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
364	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
365	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
365	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
366	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(maximum))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
806	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {  [BUGGY]    double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1241	1241	2	add	for(int  item  =  0;  item!=  itemCount;  item++)  {	for  (int  item  =  0;  item  <  itemCount;  item++)  {  	compilable	  [FE]  NullPointerException	41	2
807	[BUG]  [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {  [BUGGY]    double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1241	1241	2	replace	for(int  item  =  0;  item!=  itemCount;  item++)  {	for  (int  item  =  0;  item  <  itemCount;  item++)  {  	compilable	  [FE]  NullPointerException	41	2
861	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  i  =  ixyd.getStartYValue(series,  item);  [BUGGY]    double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1242	1242	2	add	double  i  =  ixyd.getStartYValue(series,  item);		compilable	  [FE]  NullPointerException	44	2
862	[BUG]  [BUGGY]  double  i  =  ixyd.getStartYValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  i  =  ixyd.getStartYValue(series,  item);  [BUGGY]    double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1242	1242	2	replace	double  i  =  ixyd.getStartYValue(series,  item);		compilable	  [FE]  NullPointerException	44	2
862	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  xyd  =  ixyd.getStartYValue(series,  item);  [BUGGY]    double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1242	1242	2	add	double  xyd  =  ixyd.getStartYValue(series,  item);		compilable	  [FE]  NullPointerException	44	2
863	[BUG]  [BUGGY]  double  xyd  =  ixyd.getStartYValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  xyd  =  ixyd.getStartYValue(series,  item);  [BUGGY]    double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1242	1242	2	replace	double  xyd  =  ixyd.getStartYValue(series,  item);		compilable	  [FE]  NullPointerException	44	2
863	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  xyd  =  ixyd.getStartXValue(series,  item);  [BUGGY]    double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1242	1242	2	add	double  xyd  =  ixyd.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	44	2
864	[BUG]  [BUGGY]  double  xyd  =  ixyd.getStartXValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  xyd  =  ixyd.getStartXValue(series,  item);  [BUGGY]    double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1242	1242	2	replace	double  xyd  =  ixyd.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	44	2
866	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  i  =  ixyd.getStartXValue(series,  item);  [BUGGY]    double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1242	1242	2	add	double  i  =  ixyd.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	44	2
867	[BUG]  [BUGGY]  double  i  =  ixyd.getStartXValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  i  =  ixyd.getStartXValue(series,  item);  [BUGGY]    double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1242	1242	2	replace	double  i  =  ixyd.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	44	2
867	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  xx  =  ixyd.getXValue(series,  item);  [BUGGY]    double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1242	1242	2	add	double  xx  =  ixyd.getXValue(series,  item);		compilable	  [FE]  NullPointerException	44	2
868	[BUG]  [BUGGY]  double  xx  =  ixyd.getXValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  xx  =  ixyd.getXValue(series,  item);  [BUGGY]    double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1242	1242	2	replace	double  xx  =  ixyd.getXValue(series,  item);		compilable	  [FE]  NullPointerException	44	2
1204	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  seriesCount  =  dataset.getSeriesCount();  [BUGGY]    double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	747	747	2	add	double  seriesCount  =  dataset.getSeriesCount();	int  seriesCount  =  dataset.getSeriesCount();  	compilable	  [FE]  NullPointerException	61	2
1205	[BUG]  [BUGGY]  double  seriesCount  =  dataset.getSeriesCount();    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  seriesCount  =  dataset.getSeriesCount();  [BUGGY]    double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	747	747	2	replace	double  seriesCount  =  dataset.getSeriesCount();	int  seriesCount  =  dataset.getSeriesCount();  	compilable	  [FE]  NullPointerException	61	2
1082	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException( "Null  'dataset'  argument. ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	add	if(dataset  ==  null  ||  dataset.getSeriesCount()  ==  0)  {	if  (dataset  ==  null)  {  	compilable	  [FE]  NullPointerException	55	2
1083	[BUG]  [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  ==  0)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException( "Null  'dataset'  argument. ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	replace	if(dataset  ==  null  ||  dataset.getSeriesCount()  ==  0)  {	if  (dataset  ==  null)  {  	compilable	  [FE]  NullPointerException	55	2
903	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  l  =  ixyd.getStartYValue(series,  item);  [BUGGY]    double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1243	1243	2	add	double  l  =  ixyd.getStartYValue(series,  item);		compilable	  [FE]  NullPointerException	46	2
904	[BUG]  [BUGGY]  double  l  =  ixyd.getStartYValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  l  =  ixyd.getStartYValue(series,  item);  [BUGGY]    double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1243	1243	2	replace	double  l  =  ixyd.getStartYValue(series,  item);		compilable	  [FE]  NullPointerException	46	2
341	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	add	lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
342	[BUG]  [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	replace	lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
343	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	add	intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
344	[BUG]  [BUGGY]  intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	replace	intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
346	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	add	intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
347	[BUG]  [BUGGY]  intervalXYData.getStartXValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	replace	intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
1127	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	add	double  minimum  =  Double.POSITIVE_INFINITY  -  1;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
1128	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  -  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  -  1;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
1129	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	add	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
1130	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
530	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	add	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
531	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
246	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {  [BUGGY]    lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	754	754	2	add	for(int  item  =  0;  item!=  itemCount;  item++)  {	for  (int  item  =  0;  item  <  itemCount;  item++)  {  	compilable	  [FE]  NullPointerException	13	2
247	[BUG]  [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {  [BUGGY]    lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	754	754	2	replace	for(int  item  =  0;  item!=  itemCount;  item++)  {	for  (int  item  =  0;  item  <  itemCount;  item++)  {  	compilable	  [FE]  NullPointerException	13	2
41	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]      [BUGGY]  return  iterateDomainBounds(dataset,  false);  [BUGGY]    }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.4082482904638631	726	726	2	add	return  iterateDomainBounds(dataset,  false);	return  iterateDomainBounds(dataset,  true);  	compilable	  [FE]  AssertionFailedError	3	2
42	[BUG]  [BUGGY]  return  iterateDomainBounds(dataset,  false);    [FE]  AssertionFailedError  [CONTEXT]      [BUGGY]  return  iterateDomainBounds(dataset,  false);  [BUGGY]    }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.4082482904638631	726	726	2	replace	return  iterateDomainBounds(dataset,  false);	return  iterateDomainBounds(dataset,  true);  	compilable	  [FE]  AssertionFailedError	3	2
564	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  -  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
565	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  -  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
566	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  +  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
567	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  +  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
567	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  +  Integer.MAX_VALUE;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
568	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  Integer.MAX_VALUE;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  +  Integer.MAX_VALUE;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
1164	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  -  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1165	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  -  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1165	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  +  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1166	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  +  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1169	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  *  2;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  *  2;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1170	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  *  2;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  *  2;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  *  2;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1282	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  >=  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	add	if(minimum  >=  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  NullPointerException	65	2
1283	[BUG]  [BUGGY]  if(minimum  >=  maximum)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  >=  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	if(minimum  >=  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  NullPointerException	65	2
1287	[BUG]  [BUGGY]    [FE]    double)  [CONTEXT]      [BUGGY]  if(minimum  ==  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	add	if(minimum  ==  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]    double)	65	2
1288	[BUG]  [BUGGY]  if(minimum  ==  maximum)  {    [FE]    double)  [CONTEXT]      [BUGGY]  if(minimum  ==  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	if(minimum  ==  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]    double)	65	2
41	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]      [BUGGY]  return  iterateDomainBounds(dataset,  false);  [BUGGY]    }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.4082482904638631	726	726	2	add	return  iterateDomainBounds(dataset,  false);	return  iterateDomainBounds(dataset,  true);  	compilable	  [FE]  AssertionFailedError	3	2
42	[BUG]  [BUGGY]  return  iterateDomainBounds(dataset,  false);    [FE]  AssertionFailedError  [CONTEXT]      [BUGGY]  return  iterateDomainBounds(dataset,  false);  [BUGGY]    }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.4082482904638631	726	726	2	replace	return  iterateDomainBounds(dataset,  false);	return  iterateDomainBounds(dataset,  true);  	compilable	  [FE]  AssertionFailedError	3	2
1125	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	add	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
1126	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
922	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
923	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
923	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
924	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
924	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
925	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
926	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
927	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
524	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	add	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
525	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
401	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
402	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
402	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
403	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
404	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(lvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(lvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
405	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(lvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(lvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(lvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
406	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(uvalue  >  maximum)  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(uvalue  >  maximum)  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
407	[BUG]  [BUGGY]  if(uvalue  >  maximum)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(uvalue  >  maximum)  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(uvalue  >  maximum)  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
408	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
409	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
1167	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  -  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1168	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  -  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1168	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  +  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1169	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  +  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1082	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException( "Null  'dataset'  argument. ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	add	if(dataset  ==  null  ||  dataset.getSeriesCount()  ==  0)  {	if  (dataset  ==  null)  {  	compilable	  [FE]  NullPointerException	55	2
1083	[BUG]  [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  ==  0)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException( "Null  'dataset'  argument. ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	replace	if(dataset  ==  null  ||  dataset.getSeriesCount()  ==  0)  {	if  (dataset  ==  null)  {  	compilable	  [FE]  NullPointerException	55	2
1084	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {  [BUGGY]    throw  new  IllegalArgumentException( "Null  'dataset'  argument. ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	add	if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {	if  (dataset  ==  null)  {  	compilable	  [FE]  NullPointerException	55	2
1085	[BUG]  [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {  [BUGGY]    throw  new  IllegalArgumentException( "Null  'dataset'  argument. ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	replace	if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {	if  (dataset  ==  null)  {  	compilable	  [FE]  NullPointerException	55	2
1087	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <=  0)  {  [BUGGY]    throw  new  IllegalArgumentException( "Null  'dataset'  argument. ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	add	if(dataset  ==  null  ||  dataset.getSeriesCount()  <=  0)  {	if  (dataset  ==  null)  {  	compilable	  [FE]  NullPointerException	55	2
1088	[BUG]  [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <=  0)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <=  0)  {  [BUGGY]    throw  new  IllegalArgumentException( "Null  'dataset'  argument. ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	replace	if(dataset  ==  null  ||  dataset.getSeriesCount()  <=  0)  {	if  (dataset  ==  null)  {  	compilable	  [FE]  NullPointerException	55	2
362	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
363	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
363	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
364	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
364	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
365	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
365	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||  Double.isInfinite(lvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)||  Double.isInfinite(lvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
366	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||  Double.isInfinite(lvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||  Double.isInfinite(lvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)||  Double.isInfinite(lvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
366	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
367	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
565	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  -  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
566	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  -  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
566	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  +  Integer.MAX_VALUE;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
567	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  Integer.MAX_VALUE;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  +  Integer.MAX_VALUE;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
569	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  +  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
570	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  +  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
961	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
962	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
963	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
964	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
964	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
965	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
965	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
966	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
966	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
967	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
1041	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1042	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1047	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(maximum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1048	[BUG]  [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(maximum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1048	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(minimum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1049	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1049	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1050	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1050	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1051	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >  Double.POSITIVE_INFINITY)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  >  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
341	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	add	lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
342	[BUG]  [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	replace	lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
346	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	add	intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
347	[BUG]  [BUGGY]  intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	replace	intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
810	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {  [BUGGY]    double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1241	1241	2	add	for(int  item  =  0;  item!=  itemCount;  item++)  {	for  (int  item  =  0;  item  <  itemCount;  item++)  {  	compilable	  [FE]  NullPointerException	41	2
811	[BUG]  [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {  [BUGGY]    double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1241	1241	2	replace	for(int  item  =  0;  item!=  itemCount;  item++)  {	for  (int  item  =  0;  item  <  itemCount;  item++)  {  	compilable	  [FE]  NullPointerException	41	2
730	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  series  =  0;  series!=  seriesCount;  series++)  {  [BUGGY]    int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1239	1239	2	add	for(int  series  =  0;  series!=  seriesCount;  series++)  {	for  (int  series  =  0;  series  <  seriesCount;  series++)  {  	compilable	  [FE]  NullPointerException	37	2
731	[BUG]  [BUGGY]  for(int  series  =  0;  series!=  seriesCount;  series++)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  series  =  0;  series!=  seriesCount;  series++)  {  [BUGGY]    int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1239	1239	2	replace	for(int  series  =  0;  series!=  seriesCount;  series++)  {	for  (int  series  =  0;  series  <  seriesCount;  series++)  {  	compilable	  [FE]  NullPointerException	37	2
41	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]      [BUGGY]  return  iterateDomainBounds(dataset,  false);  [BUGGY]    }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.4082482904638631	726	726	2	add	return  iterateDomainBounds(dataset,  false);	return  iterateDomainBounds(dataset,  true);  	compilable	  [FE]  AssertionFailedError	3	2
42	[BUG]  [BUGGY]  return  iterateDomainBounds(dataset,  false);    [FE]  AssertionFailedError  [CONTEXT]      [BUGGY]  return  iterateDomainBounds(dataset,  false);  [BUGGY]    }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.4082482904638631	726	726	2	replace	return  iterateDomainBounds(dataset,  false);	return  iterateDomainBounds(dataset,  true);  	compilable	  [FE]  AssertionFailedError	3	2
1283	[BUG]  [BUGGY]    [FE]    double)  [CONTEXT]      [BUGGY]  if(minimum  ==  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	add	if(minimum  ==  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]    double)	65	2
1284	[BUG]  [BUGGY]  if(minimum  ==  maximum)  {    [FE]    double)  [CONTEXT]      [BUGGY]  if(minimum  ==  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	if(minimum  ==  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]    double)	65	2
1284	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  >=  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	add	if(minimum  >=  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  NullPointerException	65	2
1285	[BUG]  [BUGGY]  if(minimum  >=  maximum)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  >=  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	if(minimum  >=  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  NullPointerException	65	2
170	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  series  =  0;  series!=  seriesCount;  series++)  {  [BUGGY]    int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	752	752	2	add	for(int  series  =  0;  series!=  seriesCount;  series++)  {	for  (int  series  =  0;  series  <  seriesCount;  series++)  {  	compilable	  [FE]  NullPointerException	9	2
171	[BUG]  [BUGGY]  for(int  series  =  0;  series!=  seriesCount;  series++)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  series  =  0;  series!=  seriesCount;  series++)  {  [BUGGY]    int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	752	752	2	replace	for(int  series  =  0;  series!=  seriesCount;  series++)  {	for  (int  series  =  0;  series  <  seriesCount;  series++)  {  	compilable	  [FE]  NullPointerException	9	2
362	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
363	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
363	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
364	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
367	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
368	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
368	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||(!Double.isNaN(uvalue)))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)||(!Double.isNaN(uvalue)))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
369	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||(!Double.isNaN(uvalue)))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||(!Double.isNaN(uvalue)))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)||(!Double.isNaN(uvalue)))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
7	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  System.err.println( "Unable  to  parse: "  +  dataset);  return  new  Range(minimum,  maximum);  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	add	if(includeInterval)  {  return  null;  }  else  {  System.err.println( "Unable  to  parse: "  +  dataset);  return  new  Range(minimum,  maximum);  }	return  null;  	compilable	  [FE]  NullPointerException	1	2
8	[BUG]  [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  System.err.println( "Unable  to  parse: "  +  dataset);  return  new  Range(minimum,  maximum);  }    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  System.err.println( "Unable  to  parse: "  +  dataset);  return  new  Range(minimum,  maximum);  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	replace	if(includeInterval)  {  return  null;  }  else  {  System.err.println( "Unable  to  parse: "  +  dataset);  return  new  Range(minimum,  maximum);  }	return  null;  	compilable	  [FE]  NullPointerException	1	2
84	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  System.err.println( "Unable  to  parse: "  +  dataset);  return  new  Range(minimum,  maximum);  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.35355339059327373	1284	1284	2	add	if(includeInterval)  {  return  null;  }  else  {  System.err.println( "Unable  to  parse: "  +  dataset);  return  new  Range(minimum,  maximum);  }	return  null;  	compilable	  [FE]  NullPointerException	5	2
85	[BUG]  [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  System.err.println( "Unable  to  parse: "  +  dataset);  return  new  Range(minimum,  maximum);  }    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  System.err.println( "Unable  to  parse: "  +  dataset);  return  new  Range(minimum,  maximum);  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.35355339059327373	1284	1284	2	replace	if(includeInterval)  {  return  null;  }  else  {  System.err.println( "Unable  to  parse: "  +  dataset);  return  new  Range(minimum,  maximum);  }	return  null;  	compilable	  [FE]  NullPointerException	5	2
86	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( " ");  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.35355339059327373	1284	1284	2	add	if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( " ");  }	return  null;  	compilable	  [FE]  NullPointerException	5	2
87	[BUG]  [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( " ");  }    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( " ");  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.35355339059327373	1284	1284	2	replace	if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( " ");  }	return  null;  	compilable	  [FE]  NullPointerException	5	2
1128	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	add	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
1129	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
1130	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	add	double  minimum  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
1131	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
961	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
962	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
963	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
964	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
964	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
965	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
965	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
966	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
966	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
967	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
922	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
923	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
923	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
924	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
928	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
929	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
1165	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1166	[BUG]  [BUGGY]  double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1169	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1170	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
401	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
402	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
402	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(lvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(lvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
403	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(lvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(lvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(lvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
403	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
404	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
404	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||!Double.isNaN(lvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)||!Double.isNaN(lvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
405	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||!Double.isNaN(lvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||!Double.isNaN(lvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)||!Double.isNaN(lvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
405	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||(uvalue  >  0.0))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)||(uvalue  >  0.0))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
406	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||(uvalue  >  0.0))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||(uvalue  >  0.0))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)||(uvalue  >  0.0))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
409	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
410	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
769	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  int  itemCount  =  dataset.getItemCount(series-0);  [BUGGY]    for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1240	1240	2	add	int  itemCount  =  dataset.getItemCount(series-0);	int  itemCount  =  dataset.getItemCount(series);  	compilable	  [FE]  NullPointerException	39	2
770	[BUG]  [BUGGY]  int  itemCount  =  dataset.getItemCount(series-0);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  int  itemCount  =  dataset.getItemCount(series-0);  [BUGGY]    for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1240	1240	2	replace	int  itemCount  =  dataset.getItemCount(series-0);	int  itemCount  =  dataset.getItemCount(series);  	compilable	  [FE]  NullPointerException	39	2
1042	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1043	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1044	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(minimum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1045	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1046	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1047	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
341	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	add	lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
342	[BUG]  [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	replace	lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
342	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	add	intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
343	[BUG]  [BUGGY]  intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	replace	intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
248	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {  [BUGGY]    lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	754	754	2	add	for(int  item  =  0;  item!=  itemCount;  item++)  {	for  (int  item  =  0;  item  <  itemCount;  item++)  {  	compilable	  [FE]  NullPointerException	13	2
249	[BUG]  [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {  [BUGGY]    lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	754	754	2	replace	for(int  item  =  0;  item!=  itemCount;  item++)  {	for  (int  item  =  0;  item  <  itemCount;  item++)  {  	compilable	  [FE]  NullPointerException	13	2
524	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	add	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
525	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
527	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  -  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	add	double  minimum  =  Double.POSITIVE_INFINITY  -  Integer.MAX_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
528	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  -  Integer.MAX_VALUE;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  -  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  -  Integer.MAX_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
904	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  l  =  ixyd.getStartYValue(series,  item);  [BUGGY]    double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1243	1243	2	add	double  l  =  ixyd.getStartYValue(series,  item);		compilable	  [FE]  NullPointerException	46	2
905	[BUG]  [BUGGY]  double  l  =  ixyd.getStartYValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  l  =  ixyd.getStartYValue(series,  item);  [BUGGY]    double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1243	1243	2	replace	double  l  =  ixyd.getStartYValue(series,  item);		compilable	  [FE]  NullPointerException	46	2
564	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	add	double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
565	[BUG]  [BUGGY]  double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	replace	double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
565	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
566	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
809	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {  [BUGGY]    double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1241	1241	2	add	for(int  item  =  0;  item!=  itemCount;  item++)  {	for  (int  item  =  0;  item  <  itemCount;  item++)  {  	compilable	  [FE]  NullPointerException	41	2
810	[BUG]  [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {  [BUGGY]    double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1241	1241	2	replace	for(int  item  =  0;  item!=  itemCount;  item++)  {	for  (int  item  =  0;  item  <  itemCount;  item++)  {  	compilable	  [FE]  NullPointerException	41	2
1041	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1042	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1062	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  minimum  =  Math.min(minimum,  maximum);  if(maximum  ==  Double.NEGATIVE_INFINITY)  {  return  null;  }  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	minimum  =  Math.min(minimum,  maximum);  if(maximum  ==  Double.NEGATIVE_INFINITY)  {  return  null;  }		compilable	  [FE]  NullPointerException	54	2
1063	[BUG]  [BUGGY]  minimum  =  Math.min(minimum,  maximum);  if(maximum  ==  Double.NEGATIVE_INFINITY)  {  return  null;  }    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  minimum  =  Math.min(minimum,  maximum);  if(maximum  ==  Double.NEGATIVE_INFINITY)  {  return  null;  }  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	minimum  =  Math.min(minimum,  maximum);  if(maximum  ==  Double.NEGATIVE_INFINITY)  {  return  null;  }		compilable	  [FE]  NullPointerException	54	2
2	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	add	if(includeInterval)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }	return  null;  	compilable	  [FE]  NullPointerException	1	2
3	[BUG]  [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	replace	if(includeInterval)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }	return  null;  	compilable	  [FE]  NullPointerException	1	2
6	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( " ");  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	add	if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( " ");  }	return  null;  	compilable	  [FE]  NullPointerException	1	2
7	[BUG]  [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( " ");  }    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( " ");  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	replace	if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( " ");  }	return  null;  	compilable	  [FE]  NullPointerException	1	2
7	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  throw  new  NullPointerException( " ");  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	add	throw  new  NullPointerException( " ");	return  null;  	compilable	  [FE]  NullPointerException	1	2
8	[BUG]  [BUGGY]  throw  new  NullPointerException( " ");    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  throw  new  NullPointerException( " ");  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	replace	throw  new  NullPointerException( " ");	return  null;  	compilable	  [FE]  NullPointerException	1	2
9	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( "Undefined  variable: "  +  dataset.getClass().getName());  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	add	if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( "Undefined  variable: "  +  dataset.getClass().getName());  }	return  null;  	compilable	  [FE]  NullPointerException	1	2
10	[BUG]  [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( "Undefined  variable: "  +  dataset.getClass().getName());  }    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( "Undefined  variable: "  +  dataset.getClass().getName());  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	replace	if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( "Undefined  variable: "  +  dataset.getClass().getName());  }	return  null;  	compilable	  [FE]  NullPointerException	1	2
650	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval  &&  dataset  instanceof  IntervalXYDataset  &&  dataset.getSeriesCount()  >  0)  {  [BUGGY]      IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1236	1236	2	add	if(includeInterval  &&  dataset  instanceof  IntervalXYDataset  &&  dataset.getSeriesCount()  >  0)  {	if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  	compilable	  [FE]  NullPointerException	33	2
651	[BUG]  [BUGGY]  if(includeInterval  &&  dataset  instanceof  IntervalXYDataset  &&  dataset.getSeriesCount()  >  0)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval  &&  dataset  instanceof  IntervalXYDataset  &&  dataset.getSeriesCount()  >  0)  {  [BUGGY]      IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1236	1236	2	replace	if(includeInterval  &&  dataset  instanceof  IntervalXYDataset  &&  dataset.getSeriesCount()  >  0)  {	if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  	compilable	  [FE]  NullPointerException	33	2
170	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  series  =  0;  series!=  seriesCount;  series++)  {  [BUGGY]    int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	752	752	2	add	for(int  series  =  0;  series!=  seriesCount;  series++)  {	for  (int  series  =  0;  series  <  seriesCount;  series++)  {  	compilable	  [FE]  NullPointerException	9	2
171	[BUG]  [BUGGY]  for(int  series  =  0;  series!=  seriesCount;  series++)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  series  =  0;  series!=  seriesCount;  series++)  {  [BUGGY]    int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	752	752	2	replace	for(int  series  =  0;  series!=  seriesCount;  series++)  {	for  (int  series  =  0;  series  <  seriesCount;  series++)  {  	compilable	  [FE]  NullPointerException	9	2
1166	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1167	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1168	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =(double)Double.NEGATIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =(double)Double.NEGATIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1169	[BUG]  [BUGGY]  double  maximum  =(double)Double.NEGATIVE_INFINITY;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =(double)Double.NEGATIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =(double)Double.NEGATIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1169	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1170	[BUG]  [BUGGY]  double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
249	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {  [BUGGY]    lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	754	754	2	add	for(int  item  =  0;  item!=  itemCount;  item++)  {	for  (int  item  =  0;  item  <  itemCount;  item++)  {  	compilable	  [FE]  NullPointerException	13	2
250	[BUG]  [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  item  =  0;  item!=  itemCount;  item++)  {  [BUGGY]    lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	754	754	2	replace	for(int  item  =  0;  item!=  itemCount;  item++)  {	for  (int  item  =  0;  item  <  itemCount;  item++)  {  	compilable	  [FE]  NullPointerException	13	2
730	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  series  =  0;  series!=  seriesCount;  series++)  {  [BUGGY]    int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1239	1239	2	add	for(int  series  =  0;  series!=  seriesCount;  series++)  {	for  (int  series  =  0;  series  <  seriesCount;  series++)  {  	compilable	  [FE]  NullPointerException	37	2
731	[BUG]  [BUGGY]  for(int  series  =  0;  series!=  seriesCount;  series++)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  for(int  series  =  0;  series!=  seriesCount;  series++)  {  [BUGGY]    int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  double  uvalue  =  ixyd.getEndYValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1239	1239	2	replace	for(int  series  =  0;  series!=  seriesCount;  series++)  {	for  (int  series  =  0;  series  <  seriesCount;  series++)  {  	compilable	  [FE]  NullPointerException	37	2
41	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]      [BUGGY]  return  iterateDomainBounds(dataset,  false);  [BUGGY]    }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.4082482904638631	726	726	2	add	return  iterateDomainBounds(dataset,  false);	return  iterateDomainBounds(dataset,  true);  	compilable	  [FE]  AssertionFailedError	3	2
42	[BUG]  [BUGGY]  return  iterateDomainBounds(dataset,  false);    [FE]  AssertionFailedError  [CONTEXT]      [BUGGY]  return  iterateDomainBounds(dataset,  false);  [BUGGY]    }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.4082482904638631	726	726	2	replace	return  iterateDomainBounds(dataset,  false);	return  iterateDomainBounds(dataset,  true);  	compilable	  [FE]  AssertionFailedError	3	2
341	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	add	lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
342	[BUG]  [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	replace	lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
350	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	add	intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
351	[BUG]  [BUGGY]  intervalXYData.getStartXValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	replace	intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
1248	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval  &&  dataset  instanceof  IntervalXYDataset  &&  dataset.getSeriesCount()  >  0)  {  [BUGGY]    IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	750	750	2	add	if(includeInterval  &&  dataset  instanceof  IntervalXYDataset  &&  dataset.getSeriesCount()  >  0)  {	if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  	compilable	  [FE]  NullPointerException	63	2
1249	[BUG]  [BUGGY]  if(includeInterval  &&  dataset  instanceof  IntervalXYDataset  &&  dataset.getSeriesCount()  >  0)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval  &&  dataset  instanceof  IntervalXYDataset  &&  dataset.getSeriesCount()  >  0)  {  [BUGGY]    IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	750	750	2	replace	if(includeInterval  &&  dataset  instanceof  IntervalXYDataset  &&  dataset.getSeriesCount()  >  0)  {	if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  	compilable	  [FE]  NullPointerException	63	2
401	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
402	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
402	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
403	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
404	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
405	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
405	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(uvalue  >  0.0)  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(uvalue  >  0.0)  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
406	[BUG]  [BUGGY]  if(uvalue  >  0.0)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(uvalue  >  0.0)  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(uvalue  >  0.0)  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
406	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
407	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
408	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
409	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
961	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
962	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
962	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
963	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
964	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
965	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
966	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
967	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
970	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
971	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
82	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.35355339059327373	1284	1284	2	add	if(includeInterval)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }	return  null;  	compilable	  [FE]  NullPointerException	5	2
83	[BUG]  [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.35355339059327373	1284	1284	2	replace	if(includeInterval)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }	return  null;  	compilable	  [FE]  NullPointerException	5	2
84	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  return  DatasetUtilities.iterateRangeBounds(dataset,  includeInterval);  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.35355339059327373	1284	1284	2	add	if(includeInterval)  {  return  null;  }  else  {  return  DatasetUtilities.iterateRangeBounds(dataset,  includeInterval);  }	return  null;  	compilable	  [FE]  NullPointerException	5	2
85	[BUG]  [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  return  DatasetUtilities.iterateRangeBounds(dataset,  includeInterval);  }    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  return  DatasetUtilities.iterateRangeBounds(dataset,  includeInterval);  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.35355339059327373	1284	1284	2	replace	if(includeInterval)  {  return  null;  }  else  {  return  DatasetUtilities.iterateRangeBounds(dataset,  includeInterval);  }	return  null;  	compilable	  [FE]  NullPointerException	5	2
90	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( " ");  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.35355339059327373	1284	1284	2	add	if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( " ");  }	return  null;  	compilable	  [FE]  NullPointerException	5	2
91	[BUG]  [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( " ");  }    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( " ");  }  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.35355339059327373	1284	1284	2	replace	if(includeInterval)  {  return  null;  }  else  {  throw  new  NullPointerException( " ");  }	return  null;  	compilable	  [FE]  NullPointerException	5	2
1309	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]      [BUGGY]  minimum  =  Math.min(minimum,  maximum);  [BUGGY]    if  (minimum  >  maximum)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	add	minimum  =  Math.min(minimum,  maximum);		compilable	  [FE]  AssertionFailedError	66	2
1310	[BUG]  [BUGGY]  minimum  =  Math.min(minimum,  maximum);    [FE]  AssertionFailedError  [CONTEXT]      [BUGGY]  minimum  =  Math.min(minimum,  maximum);  [BUGGY]    if  (minimum  >  maximum)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	minimum  =  Math.min(minimum,  maximum);		compilable	  [FE]  AssertionFailedError	66	2
362	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
363	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
363	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
364	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
370	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
371	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
565	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
566	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  *  Double.POSITIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
567	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	add	double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
568	[BUG]  [BUGGY]  double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	replace	double  maximum  =  Double.POSITIVE_INFINITY  *  Double.NEGATIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
569	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  -  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
570	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  -  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
570	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =(double)Double.NEGATIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	add	double  maximum  =(double)Double.NEGATIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
571	[BUG]  [BUGGY]  double  maximum  =(double)Double.NEGATIVE_INFINITY;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =(double)Double.NEGATIVE_INFINITY;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	replace	double  maximum  =(double)Double.NEGATIVE_INFINITY;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
1282	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  >=  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	add	if(minimum  >=  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  NullPointerException	65	2
1283	[BUG]  [BUGGY]  if(minimum  >=  maximum)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  >=  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	if(minimum  >=  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  NullPointerException	65	2
1284	[BUG]  [BUGGY]    [FE]    double)  [CONTEXT]      [BUGGY]  if(minimum  ==  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	add	if(minimum  ==  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]    double)	65	2
1285	[BUG]  [BUGGY]  if(minimum  ==  maximum)  {    [FE]    double)  [CONTEXT]      [BUGGY]  if(minimum  ==  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	if(minimum  ==  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]    double)	65	2
922	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
923	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
923	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
924	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
930	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
931	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)&&!Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
1123	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +(includeInterval?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY);  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	add	double  minimum  =  Double.POSITIVE_INFINITY  +(includeInterval?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY);	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
1124	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +(includeInterval?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +(includeInterval?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY);  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  +(includeInterval?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY);	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
523	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +(includeInterval?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY);  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	add	double  minimum  =  Double.POSITIVE_INFINITY  +(includeInterval?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY);	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
524	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +(includeInterval?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +(includeInterval?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY);  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  +(includeInterval?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY);	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
1070	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  minimum  =  Math.min(minimum,  maximum);  if(maximum  ==  Double.NEGATIVE_INFINITY)  {  return  null;  }  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	minimum  =  Math.min(minimum,  maximum);  if(maximum  ==  Double.NEGATIVE_INFINITY)  {  return  null;  }		compilable	  [FE]  NullPointerException	54	2
1071	[BUG]  [BUGGY]  minimum  =  Math.min(minimum,  maximum);  if(maximum  ==  Double.NEGATIVE_INFINITY)  {  return  null;  }    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  minimum  =  Math.min(minimum,  maximum);  if(maximum  ==  Double.NEGATIVE_INFINITY)  {  return  null;  }  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	minimum  =  Math.min(minimum,  maximum);  if(maximum  ==  Double.NEGATIVE_INFINITY)  {  return  null;  }		compilable	  [FE]  NullPointerException	54	2
1123	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	add	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
1124	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
1126	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	add	double  minimum  =  Double.POSITIVE_INFINITY  -  1;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
1127	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  -  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  -  1;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
1127	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE  *  Integer.MIN_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	add	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE  *  Integer.MIN_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
1128	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE  *  Integer.MIN_VALUE;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE  *  Integer.MIN_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE  *  Integer.MIN_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
1129	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MIN_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	add	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MIN_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
1130	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MIN_VALUE;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MIN_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MIN_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
362	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
363	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
363	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
364	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
41	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]      [BUGGY]  return  iterateDomainBounds(dataset,  false);  [BUGGY]    }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.4082482904638631	726	726	2	add	return  iterateDomainBounds(dataset,  false);	return  iterateDomainBounds(dataset,  true);  	compilable	  [FE]  AssertionFailedError	3	2
42	[BUG]  [BUGGY]  return  iterateDomainBounds(dataset,  false);    [FE]  AssertionFailedError  [CONTEXT]      [BUGGY]  return  iterateDomainBounds(dataset,  false);  [BUGGY]    }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.4082482904638631	726	726	2	replace	return  iterateDomainBounds(dataset,  false);	return  iterateDomainBounds(dataset,  true);  	compilable	  [FE]  AssertionFailedError	3	2
523	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	add	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
524	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MAX_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
526	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MIN_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	add	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MIN_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
527	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MIN_VALUE;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MIN_VALUE;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  +  Integer.MIN_VALUE;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
527	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	add	double  minimum  =  Double.POSITIVE_INFINITY  -  1;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
528	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  -  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  -  1;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
1041	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1042	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1048	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.NEGATIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.NEGATIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
1049	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.NEGATIVE_INFINITY)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.NEGATIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.NEGATIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException	53	2
341	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	add	lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
342	[BUG]  [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	replace	lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
343	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	add	intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
344	[BUG]  [BUGGY]  intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	replace	intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
1162	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Math.max(0.0,  Double.NEGATIVE_INFINITY);  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Math.max(0.0,  Double.NEGATIVE_INFINITY);	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1163	[BUG]  [BUGGY]  double  maximum  =  Math.max(0.0,  Double.NEGATIVE_INFINITY);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Math.max(0.0,  Double.NEGATIVE_INFINITY);  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Math.max(0.0,  Double.NEGATIVE_INFINITY);	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1166	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Math.max(0.0,  0.0);  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Math.max(0.0,  0.0);	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1167	[BUG]  [BUGGY]  double  maximum  =  Math.max(0.0,  0.0);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Math.max(0.0,  0.0);  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Math.max(0.0,  0.0);	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1169	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Math.max(2.0,  0.0);  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Math.max(2.0,  0.0);	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1170	[BUG]  [BUGGY]  double  maximum  =  Math.max(2.0,  0.0);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Math.max(2.0,  0.0);  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Math.max(2.0,  0.0);	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
1282	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  >=  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	add	if(minimum  >=  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  NullPointerException	65	2
1283	[BUG]  [BUGGY]  if(minimum  >=  maximum)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  >=  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	if(minimum  >=  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  NullPointerException	65	2
1285	[BUG]  [BUGGY]    [FE]    double)  [CONTEXT]      [BUGGY]  if(minimum  ==  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	add	if(minimum  ==  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]    double)	65	2
1286	[BUG]  [BUGGY]  if(minimum  ==  maximum)  {    [FE]    double)  [CONTEXT]      [BUGGY]  if(minimum  ==  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	if(minimum  ==  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]    double)	65	2
922	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
923	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
925	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(minimum)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(minimum)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
926	[BUG]  [BUGGY]  if(!Double.isNaN(minimum)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(minimum)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(minimum)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
927	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
928	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)||!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
402	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(seriesCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(seriesCount))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
403	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(seriesCount))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(seriesCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(seriesCount))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
404	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(uvalue  >  0.0)  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(uvalue  >  0.0)  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
405	[BUG]  [BUGGY]  if(uvalue  >  0.0)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(uvalue  >  0.0)  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(uvalue  >  0.0)  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
405	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
406	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
407	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
408	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
408	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
409	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
961	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
962	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
962	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
963	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
965	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
966	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(itemCount))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
968	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(uvalue  >  0.0)  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(uvalue  >  0.0)  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
969	[BUG]  [BUGGY]  if(uvalue  >  0.0)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(uvalue  >  0.0)  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(uvalue  >  0.0)  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
970	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(minimum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(minimum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
971	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(minimum))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(minimum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(minimum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
1082	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {  [BUGGY]    throw  new  IllegalArgumentException( "Null  'dataset'  argument. ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	add	if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {	if  (dataset  ==  null)  {  	compilable	  [FE]  NullPointerException	55	2
1083	[BUG]  [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {  [BUGGY]    throw  new  IllegalArgumentException( "Null  'dataset'  argument. ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	replace	if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {	if  (dataset  ==  null)  {  	compilable	  [FE]  NullPointerException	55	2
1084	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {  [BUGGY]    throw  new  IllegalArgumentException( "Null  'dataset'  argument. ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	add	if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {	if  (dataset  ==  null)  {  	compilable	  [FE]  NullPointerException	55	2
1085	[BUG]  [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {  [BUGGY]    throw  new  IllegalArgumentException( "Null  'dataset'  argument. ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	replace	if(dataset  ==  null  ||  dataset.getSeriesCount()  <  0)  {	if  (dataset  ==  null)  {  	compilable	  [FE]  NullPointerException	55	2
1085	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException( "Null  'dataset'  argument. ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	add	if(dataset  ==  null  ||  dataset.getSeriesCount()  ==  0)  {	if  (dataset  ==  null)  {  	compilable	  [FE]  NullPointerException	55	2
1086	[BUG]  [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  ==  0)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException( "Null  'dataset'  argument. ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	replace	if(dataset  ==  null  ||  dataset.getSeriesCount()  ==  0)  {	if  (dataset  ==  null)  {  	compilable	  [FE]  NullPointerException	55	2
1086	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <=  0)  {  [BUGGY]    throw  new  IllegalArgumentException( "Null  'dataset'  argument. ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	add	if(dataset  ==  null  ||  dataset.getSeriesCount()  <=  0)  {	if  (dataset  ==  null)  {  	compilable	  [FE]  NullPointerException	55	2
1087	[BUG]  [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <=  0)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(dataset  ==  null  ||  dataset.getSeriesCount()  <=  0)  {  [BUGGY]    throw  new  IllegalArgumentException( "Null  'dataset'  argument. ");  }  double  minimum  =  Double.POSITIVE_INFINITY;  double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	replace	if(dataset  ==  null  ||  dataset.getSeriesCount()  <=  0)  {	if  (dataset  ==  null)  {  	compilable	  [FE]  NullPointerException	55	2
