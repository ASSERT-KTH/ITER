bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  [CE]  cannot  find  symbol  Minimum  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    Minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  [BUGGY]  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	    Minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);		non-compiled	[CE]  cannot  find  symbol  Minimum	24	None	add
2	[BUG]  [BUGGY]    Minimum  =  Math.min(minimum,  lvalue);  [CE]  cannot  find  symbol  Minimum  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    Minimum  =  Math.min(minimum,  lvalue);  [BUGGY]  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	    Minimum  =  Math.min(minimum,  lvalue);		non-compiled	[CE]  cannot  find  symbol  Minimum	24	None	add
3	[BUG]  [BUGGY]    min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  [CE]  cannot  find  symbol  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  [BUGGY]  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	    min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);		non-compiled	[CE]  cannot  find  symbol	24	None	add
4	[BUG]  [BUGGY]  NullPointerException.printStackTrace();  [CE]  'else'  without  'if'  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  NullPointerException.printStackTrace();  [BUGGY]  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	NullPointerException.printStackTrace();	}  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
5	[BUG]  [BUGGY]  NullPointerException.setValue(dataset,  item);  [CE]  'else'  without  'if'  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  NullPointerException.setValue(dataset,  item);  [BUGGY]  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	NullPointerException.setValue(dataset,  item);	}  	non-compiled	[CE]  'else'  without  'if'	23	None	replace
6	[BUG]  [BUGGY]    Integer  minimum  =  Math.min(minimum,  lvalue);  [CE]  variable  minimum  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    Integer  minimum  =  Math.min(minimum,  lvalue);  [BUGGY]  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	    Integer  minimum  =  Math.min(minimum,  lvalue);		non-compiled	[CE]  variable  minimum  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)	24	None	add
7	[BUG]  [BUGGY]    Integer  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  [CE]  variable  minimum  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    Integer  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  [BUGGY]  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	    Integer  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);		non-compiled	[CE]  variable  minimum  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)	24	None	add
8	[BUG]  [BUGGY]    Integer  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  lvalue);  [CE]  variable  minimum  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    Integer  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  lvalue);  [BUGGY]  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	    Integer  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  lvalue);		non-compiled	[CE]  variable  minimum  is  already  defined  in  method  iterateDomainBounds(XYDataset,boolean)	24	None	add
9	[BUG]  [BUGGY]  if(includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  if(!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  if(includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  if(!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [BUGGY]  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	if(includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  if(!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }	}  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
10	[BUG]  [BUGGY]  if(includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  lvalue  =  dataset.getXValue(series,  item);  if(!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  [CE]  illegal  start  of  expression  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  if(includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  lvalue  =  dataset.getXValue(series,  item);  if(!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  [BUGGY]  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	if(includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  lvalue  =  dataset.getXValue(series,  item);  if(!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,	}  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
11	[BUG]  [BUGGY]    if(includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    if(includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [BUGGY]  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	    if(includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
12	[BUG]  [BUGGY]    if(includeInterval)  {  for(int  i  =  0;  i  <  itemCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    if(includeInterval)  {  for(int  i  =  0;  i  <  itemCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [BUGGY]  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	    if(includeInterval)  {  for(int  i  =  0;  i  <  itemCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
13	[BUG]  [BUGGY]    if(includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    if(includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  }  [BUGGY]  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	    if(includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  }		non-compiled	[CE]  illegal  start  of  expression	24	None	add
