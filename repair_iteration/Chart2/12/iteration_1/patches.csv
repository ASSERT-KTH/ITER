bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  minimum  =  Math.min(minimum,  uvalue);  maximum  =  Math.max(maximum,  lvalue);  [CE]  'else'  without  'if'  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Integer  minimum  =  Math.min(minimum,  uvalue);  maximum  =  Math.max(maximum,  lvalue);  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	Integer  minimum  =  Math.min(minimum,  uvalue);  maximum  =  Math.max(maximum,  lvalue);	      Integer    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    lvalue);    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
2	[BUG]  [BUGGY]  Integer  minimum  =  Math.min(minimum,  uvalue);  [CE]  'else'  without  'if'  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Integer  minimum  =  Math.min(minimum,  uvalue);  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	Integer  minimum  =  Math.min(minimum,  uvalue);	      Integer    minimum    =    Math.min(minimum,    lvalue);    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
3	[BUG]  [BUGGY]  safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }	      if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    uvalue);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
4	[BUG]  [BUGGY]  safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  maximal  =  Math.max(maximum,  uvalue);  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  maximal  =  Math.max(maximum,  uvalue);  }  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  maximal  =  Math.max(maximum,  uvalue);  }	      if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    uvalue);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
5	[BUG]  [BUGGY]  'else'  without  'if'  [CE]  unclosed  character  literal  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  'else'  without  'if'  [BUGGY]    else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	'else'  without  'if'	  NullPointerException.printStackTrace();    	non-compiled	[CE]  unclosed  character  literal	4	None	replace
6	[BUG]  [BUGGY]  ger.minor(minimum,  lvalue);  [CE]  'else'  without  'if'  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  ger.minor(minimum,  lvalue);  [BUGGY]    else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	ger.minor(minimum,  lvalue);	  if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    lvalue    =    dataset.getXValue(series,    item);    if(!Double.isNaN(lvalue))    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
7	[BUG]  [BUGGY]  ger.minor(minimum,  lvalue);  maximum  =  Math.max(maximum,  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  ger.minor(minimum,  lvalue);  maximum  =  Math.max(maximum,  [BUGGY]    else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	ger.minor(minimum,  lvalue);  maximum  =  Math.max(maximum,	  if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    lvalue    =    dataset.getXValue(series,    item);    if(!Double.isNaN(lvalue))    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
8	[BUG]  [BUGGY]  safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  itemCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  itemCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  itemCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }	      if(includeInterval)    {    for(int    i    =    0;    i    <    itemCount;    i++)    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    uvalue);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
9	[BUG]  [BUGGY]  safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  itemCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  maximal  =  Math.max(maximum,  uvalue);  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  itemCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  maximal  =  Math.max(maximum,  uvalue);  }  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  itemCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  maximal  =  Math.max(maximum,  uvalue);  }	      if(includeInterval)    {    for(int    i    =    0;    i    <    itemCount;    i++)    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    uvalue);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
10	[BUG]  [BUGGY]  safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  if(!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(max  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  if(!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(max  [BUGGY]    else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  if(!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(max	  if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    if(!Double.isNaN(lvalue))    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    uvalue);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
11	[BUG]  [BUGGY]  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  [CE]  'else'  without  'if'  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);	      min(minimum,    lvalue);    maximum    =    Math.max(maximum,    uvalue);    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
12	[BUG]  [BUGGY]  safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  }  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  minimum  =  Math.min(minimum,  lvalue);  }	      if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    minimum    =    Math.min(minimum,    lvalue);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
13	[BUG]  [BUGGY]  safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  minimum  =  Math.max(minimum,  lvalue);  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  minimum  =  Math.max(minimum,  lvalue);  }  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	safeMultiply(dataset,  includeInterval)  {  for(int  i  =  0;  i  <  seriesCount;  i++)  {  minimum  =  Math.max(minimum,  lvalue);  }	      if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    minimum    =    Math.min(minimum,    lvalue);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
14	[BUG]  [BUGGY]  NullPointerException.setValue(series,  item);  [CE]  'else'  without  'if'  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.setValue(series,  item);  [BUGGY]    else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	NullPointerException.setValue(series,  item);	  NullPointerException.setValue(dataset,    item);    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
15	[BUG]  [BUGGY]  Minimum  =  Math.min(minimum,  uvalue);  [CE]  'else'  without  'if'  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Minimum  =  Math.min(minimum,  uvalue);  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	Minimum  =  Math.min(minimum,  uvalue);	      Minimum    =    Math.min(minimum,    lvalue);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
16	[BUG]  [BUGGY]  Magimizer.checkState(Double.isInfinite(lvalue));  [CE]  'else'  without  'if'  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Magimizer.checkState(Double.isInfinite(lvalue));  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	Magimizer.checkState(Double.isInfinite(lvalue));	      if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    minimum    =    Math.min(minimum,    lvalue);    }    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
17	[BUG]  [BUGGY]  Magimizer.checkState(Double.isNaN(lvalue));  [CE]  'else'  without  'if'  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Magimizer.checkState(Double.isNaN(lvalue));  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	Magimizer.checkState(Double.isNaN(lvalue));	      if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    minimum    =    Math.min(minimum,    lvalue);    }    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
18	[BUG]  [BUGGY]  NullPointerException.start(dataset);  [CE]  'else'  without  'if'  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.start(dataset);  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	NullPointerException.start(dataset);	      if(includeInterval)    {    for(int    i    =    0;    i    <    itemCount;    i++)    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    uvalue);    }    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
19	[BUG]  [BUGGY]  security( "JSC_DEBUG_INTERVAL ");  [CE]  'else'  without  'if'  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  security( "JSC_DEBUG_INTERVAL ");  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	security( "JSC_DEBUG_INTERVAL ");	      if(includeInterval)    {    for(int    i    =    0;    i    <    itemCount;    i++)    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    uvalue);    }    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
20	[BUG]  [BUGGY]  Integer  minimum  =  Math.min(maximum,  lvalue);  [CE]  'else'  without  'if'  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Integer  minimum  =  Math.min(maximum,  lvalue);  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	Integer  minimum  =  Math.min(maximum,  lvalue);	      Integer    minimum    =    Math.min(minimum,    lvalue);    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
21	[BUG]  [BUGGY]  safeMultiply(dataset,  false));  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(dataset,  false));  [BUGGY]    else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	safeMultiply(dataset,  false));	  if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    if(!Double.isNaN(lvalue))    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    uvalue);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
22	[BUG]  [BUGGY]  NullPointerException.println( "Failed  to  initialize  expression. ");  [CE]  'else'  without  'if'  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "Failed  to  initialize  expression. ");  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	NullPointerException.println( "Failed  to  initialize  expression. ");	      if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    uvalue);    }    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
23	[BUG]  [BUGGY]  securityChecker.checkNotNull(uvalue);  [CE]  'else'  without  'if'  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  securityChecker.checkNotNull(uvalue);  [BUGGY]    else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	securityChecker.checkNotNull(uvalue);	  if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    lvalue    =    dataset.getXValue(series,    item);    if(!Double.isNaN(lvalue))    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
24	[BUG]  [BUGGY]  NullPointerException.setValue(dataset,  item,  null);  [CE]  'else'  without  'if'  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.setValue(dataset,  item,  null);  [BUGGY]    else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	NullPointerException.setValue(dataset,  item,  null);	  NullPointerException.setValue(dataset,    item);    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
25	[BUG]  [BUGGY]  Magimum  lvalue  =  dataset.getXValue(series,  i);  [CE]  'else'  without  'if'  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Magimum  lvalue  =  dataset.getXValue(series,  i);  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	Magimum  lvalue  =  dataset.getXValue(series,  i);	      if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    minimum    =    Math.min(minimum,    lvalue);    }    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
26	[BUG]  [BUGGY]  Magimum  uvalue  =  dataset.getXValue(series,  i);  [CE]  'else'  without  'if'  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Magimum  uvalue  =  dataset.getXValue(series,  i);  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	Magimum  uvalue  =  dataset.getXValue(series,  i);	      if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    minimum    =    Math.min(minimum,    lvalue);    }    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
27	[BUG]  [BUGGY]  Statistics.checkState(item!=  null);  [CE]  'else'  without  'if'  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Statistics.checkState(item!=  null);  [BUGGY]    else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	Statistics.checkState(item!=  null);	  if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    lvalue    =    dataset.getXValue(series,    item);    if(!Double.isNaN(lvalue))    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
28	[BUG]  [BUGGY]  Statistics.checkNotNull(uvalue);  [CE]  'else'  without  'if'  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Statistics.checkNotNull(uvalue);  [BUGGY]    else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	Statistics.checkNotNull(uvalue);	  if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    lvalue    =    dataset.getXValue(series,    item);    if(!Double.isNaN(lvalue))    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
29	[BUG]  [BUGGY]  Minimum  =  Math.max(minimum,  lvalue);  [CE]  'else'  without  'if'  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Minimum  =  Math.max(minimum,  lvalue);  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	Minimum  =  Math.max(minimum,  lvalue);	      Minimum    =    Math.min(minimum,    lvalue);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
30	[BUG]  [BUGGY]  Integer  minimum  =  Math.max(minimum,  lvalue);  [CE]  'else'  without  'if'  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Integer  minimum  =  Math.max(minimum,  lvalue);  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	Integer  minimum  =  Math.max(minimum,  lvalue);	      Integer    minimum    =    Math.min(minimum,    lvalue);    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
31	[BUG]  [BUGGY]  NullPointerException.fromInteger(minimum,  maximum);  [CE]  'else'  without  'if'  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.fromInteger(minimum,  maximum);  [BUGGY]    else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	NullPointerException.fromInteger(minimum,  maximum);	  if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    if(!Double.isNaN(lvalue))    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    uvalue);    }    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
32	[BUG]  [BUGGY]  NullPointerException.fromInteger(minimum,  maximum));  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.fromInteger(minimum,  maximum));  [BUGGY]    else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	NullPointerException.fromInteger(minimum,  maximum));	  if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    if(!Double.isNaN(lvalue))    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    uvalue);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
33	[BUG]  [BUGGY]  MutableCollection.checkState(lvalue!=  null);  [CE]  'else'  without  'if'  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  MutableCollection.checkState(lvalue!=  null);  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	MutableCollection.checkState(lvalue!=  null);	      if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    uvalue);    }    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
34	[BUG]  [BUGGY]  NullPointerException.fromInteger(minimum,  lvalue));  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.fromInteger(minimum,  lvalue));  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	NullPointerException.fromInteger(minimum,  lvalue));	      if(includeInterval)    {    for(int    i    =    0;    i    <    seriesCount;    i++)    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    uvalue);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
35	[BUG]  [BUGGY]  NullPointerException.fromInteger(i,  itemCount);  [CE]  'else'  without  'if'  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.fromInteger(i,  itemCount);  [BUGGY]    }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  uvalue  =  lvalue;  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  maximum  =  Math.max(maximum,  uvalue);  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	NullPointerException.fromInteger(i,  itemCount);	      if(includeInterval)    {    for(int    i    =    0;    i    <    itemCount;    i++)    {    minimum    =    Math.min(minimum,    lvalue);    maximum    =    Math.max(maximum,    uvalue);    }    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
