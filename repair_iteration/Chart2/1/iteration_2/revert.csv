projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780returnnull;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780returnthis;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(includeInterval){returnnull;}else{returnnewRange(minimum,maximum);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=dataset.getMaximum();
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=dataset.getMinimum();
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780DatasetUtilities.checkInterval(this,dataset);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=dataset.getMinimumValue();
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(includeInterval){returnnull;}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=Math.min(minimum,maximum);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=Math.min(minimum,maximum)+1;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=Math.min(minimum,maximum-1);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=Math.min(minimum,maximum+1);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780DatasetUtilities.checkInterval(this,dataset,iterateDomainBounds);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780DatasetUtilities.checkInterval(this,dataset,this.minimum);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=Math.max(minimum,maximum);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780Parchet.checkNotNull(statement);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780Parchet.checkNotNull(dataset);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(includeInterval){returnnull;}else{returnnewRange(minimum,maximum);}if(includeInterval){returnnull;}else{returnnewRange(minimum,maximum);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(includeInterval){returnnull;}else{returnnewRange(minimum,maximum);}if(includeInterval){returnnull;}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(includeInterval){returnnull;}else{returnnewRange(minimum,maximum);}NullPointerException.printStackTrace();
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780aughtExceptionHandler.handleMissingReturn(dataset,includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780aughtExceptionHandler.handleMissingInterval(dataset,includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=dataset.getMaximumValue();
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=Math.min(minimum,maximum)/1;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780Parchet.checkState(this.includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(includeInterval){returnnull;}else{returnnewRange(minimum,maximum);}NullPointerException.println("IncludeInterval:"+includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780safeMultiply(dataset,includeInterval){returnnull;}else{returnnewRange(minimum,maximum);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780safeMultiply(dataset,includeInterval){returnnull;}elseif(maximum!=null){returnnewRange(minimum,maximum);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780DatasetUtilities.checkInterval(this,dataset,includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780intminimum=Math.min(minimum,maximum);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780intminimum=dataset.getMaximum();
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780[Delete]
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780parent!=null;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(this.includeInterval){returnnull;}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(includeInterval){returnthis;}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(includeInterval){returnnull;}else{returnnewRange(minimum,maximum);}includeInterval=false;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(includeInterval){returnnewRange(minimum,maximum);}else{returnnewRange(minimum,maximum);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(includeInterval){returnnewRange(minimum,maximum);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780returnfalse;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=dataset.getMinimumNull();
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780Parchet.checkState(this.includeInterval,maximum);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=dataset.getMinimumUpperBound();
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780DatasetUtilities.handleMissingInterval(dataset,includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780expertExceptionHandler.handleMissingInterval(dataset,includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780intminimum=dataset.getMinimum();
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(includeInterval){returnnewRange(minimum,maximum);}else{returnnewRange(minimum,maximum);}if(includeInterval){returnnewRange(minimum,maximum);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(includeInterval){returnnewRange(minimum,maximum);}else{returnnewRange(minimum,maximum);}if(includeInterval){returnnewRange(minimum,maximum);}else{returnnewRange(minimum,maximum);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(includeInterval){returnnewRange(minimum,maximum);}else{returnnewRange(minimum,maximum);}java.lang.IllegalArgumentException:DatasetUtilities.checkNotNull(dataset);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780intminimum=Math.min(minimum,maximum-1);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780DatasetUtilities.checkInterval(this,dataset,minimum,includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780DatasetUtilities.checkInterval(this,dataset,this.includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(this.includeInterval){returnthis;}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780wrongfullyNull(dataset,includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780wrongfullyNull(dataset);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780safeMultiply(dataset,false){returnnull;}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780ensureCapacity(dataset,includeInterval){returnnull;}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(!includeInterval){if(includeInterval){returnnull;}else{returnnewRange(minimum,maximum);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780DatasetUtilities.checkInterval(this,dataset,maximum);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780DatasetUtilities.checkInterval(this,maximum,dataset,this.minimum);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780Parchet.checkNotNull(maximum);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780Parchet.checkState(statement==null);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780aughtException.printStackTrace();
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780returntrue;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780DatasetUtilities.checkInterval(this,dataset,minimum,iterateDomainBounds);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780DatasetUtilities.checkInterval(this,dataset,minimal,iterateDomainBounds);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780nes.add(dataset);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780parent==null;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780degrees.checkArgument(includeInterval){returnnewRange(minimum,maximum);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780degrees.checkArgument(this.includeInterval){returnnewRange(minimum,maximum);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780DatasetUtilities.handleMissingReturn(dataset,includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780enableExceptionHandler(includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780validate(dataset,includeInterval));
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780';'expected=false;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=Math.min(minimum,maximum)/2;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=Math.min(minimum,maximum-1)/1;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780angleIncludeInterval(dataset,includeInterval){returnnull;}else{returnnewRange(minimum,maximum);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780Parchet.getInstance().println("IncludeInterval:"+includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780Parchet.checkNotNull(minimum);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780Parchet.checkNotNull(dataset,minimum);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=Math.min(maximum,minimum-1);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=dataset.getMaximumNull();
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780ObjectUtilities.handleMissingInterval(dataset,includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780enableMissingInterval(dataset,includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(!includeInterval){returnthis;}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780intminimum=Math.min(minimum,this.maximum);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780ObjectUtilities.handleMissingReturn(dataset,includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780enableMissingReturn(dataset,includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(includeInterval){returnthis;}else{returnnewRange(minimum,maximum);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780Parchet.checkNotNull(dataset,maximum);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780safely(dataset,includeInterval){returnnull;}else{returnnewRange(minimum,maximum);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780safeMultiply(dataset,false){returnnull;}else{returnnewRange(minimum,false);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780safely(dataset,includeInterval){returnthis;}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780nisipToJava2D(dataset){if(includeInterval){returnnull;}else{returnnewRange(minimum,maximum);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780mutableFor(includeInterval){returnnull;}else{returnnewRange(minimum,maximum);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=Math.min(minimum,maximum)/2.0;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(includeInterval){returnnewRange(minimum,maximum);}else{returnnewRange(minimum,maximum);}java.lang.IllegalArgumentException:Range(includeInterval,maximum);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780DatasetUtilities.checkInterval(this,dataset,minimum,maximum);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780||includeInterval){returnnewRange(minimum,maximum);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780&&includeInterval){returnnewRange(minimum,maximum);}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780Parchet.checkNotNull(status);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=Math.max(maximum,minimum);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780MutableStatistics.checkNotNull(dataset);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780MutableStatistics.checkInterval(dataset,includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780this.minimum=Math.min(minimum,maximum-2);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780safeMultiply(dataset,includeInterval){returnthis;}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780parent.replaceChild(dataset,addOffset(minimum),addOffset(maximum));
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780nisipIterator();
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780if(includeInterval){returnnewRange(minimum,maximum);}else{returnnewRange(minimum,maximum);}if(includeInterval){returnnewRange(minimum,maximum);}else{returnnull;}
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780parent.reportCodeChange();
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780MutableCollection.checkState(includeInterval);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780intminimum=this.dataset.getMinimum();
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780parent!=null&&parent==this.dataset.getDomainBounds(minimum,maximum);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780parent!=null&&parent==this.dataset.getDomainBounds(minimum,maximum));
