projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java779if(minimum>maximum){
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java779if(minimum>maximum){
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java779if(minimum>maximum||minimum>maximum){
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java747intseriesCount=dataset.getSeriesCount();
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java747doubleseriesCount=dataset.getSeriesCount();
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java746doublemaximum=Double.NEGATIVE_INFINITY;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java746doublemaximum=Double.NEGATIVE_INFINITY-1;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java757if(!Double.isNaN(lvalue)){
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java757if(!Double.isNaN(lvalue)||Double.isInfinite(uvalue)){
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java1232doublemaximum=Double.NEGATIVE_INFINITY;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java1232doublemaximum=Double.NEGATIVE_INFINITY-1;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java760if(!Double.isNaN(uvalue)){
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java760if(!Double.isNaN(uvalue)||Double.isInfinite(uvalue)){
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java760if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum)){
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java1231doubleminimum=Double.POSITIVE_INFINITY;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java1231doubleminimum=Double.POSITIVE_INFINITY+1;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java1231doubleminimum=Double.POSITIVE_INFINITY-1;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java745doubleminimum=Double.POSITIVE_INFINITY;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java745doubleminimum=Double.POSITIVE_INFINITY+1;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java745doubleminimum=Double.POSITIVE_INFINITY-1;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780returnnull;
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780returnnewRange(minimum,maximum);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java726returniterateDomainBounds(dataset,true);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java726returniterateDomainBounds(dataset,false);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java1247if(!Double.isNaN(uvalue)){
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java1247if(!Double.isNaN(uvalue)||Double.isInfinite(uvalue)){
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java1247if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum)){
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java756
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java756lvalue=intervalXYData.getStartXValue(series,item);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java780thrownewNullPointerException("");
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java760if(!Double.isNaN(uvalue)&&!Double.isNaN(seriesCount)){
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java746doublemaximum=Math.max(0.0,0.0);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java746doublemaximum=Math.max(2.0,0.0);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java779if(minimum>=maximum){
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java756intervalXYData.getStartXValue(series,item);lvalue=intervalXYData.getStartXValue(series,item);
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java1247if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue)){
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java1244if(!Double.isNaN(lvalue)){
projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java1244if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue)){
