bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return null; [FE] NullPointerException [CONTEXT] [BUGGY] return null; [BUGGY] } else { return new Range(minimum, maximum); } } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	replace	
2	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] return null; } else { return new Range(minimum, maximum); } } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	add	
3	[BUG] [BUGGY] return iterateDomainBounds(dataset, true); [FE] NullPointerException [CONTEXT] [BUGGY] return iterateDomainBounds(dataset, true); [BUGGY] } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.4082482904638631	726	726	2	replace	
4	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] return iterateDomainBounds(dataset, true); } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.4082482904638631	726	726	2	add	
5	[BUG] [BUGGY] return null; [FE] NullPointerException [CONTEXT] [BUGGY] return null; [BUGGY] } else { return new Range(minimum, maximum); } } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.35355339059327373	1284	1284	2	replace	
6	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] return null; } else { return new Range(minimum, maximum); } } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.35355339059327373	1284	1284	2	add	
7	[BUG] [BUGGY] IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; [FE] NullPointerException [CONTEXT] [BUGGY] IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; [BUGGY] for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	751	751	2	replace	
8	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	751	751	2	add	
9	[BUG] [BUGGY] for (int series = 0; series < seriesCount; series++) { [FE] NullPointerException [CONTEXT] [BUGGY] for (int series = 0; series < seriesCount; series++) { [BUGGY] int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	752	752	2	replace	
10	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	752	752	2	add	
11	[BUG] [BUGGY] int itemCount = dataset.getItemCount(series); [FE] NullPointerException [CONTEXT] [BUGGY] int itemCount = dataset.getItemCount(series); [BUGGY] for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	753	753	2	replace	
12	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	753	753	2	add	
13	[BUG] [BUGGY] for (int item = 0; item < itemCount; item++) { [FE] NullPointerException [CONTEXT] [BUGGY] for (int item = 0; item < itemCount; item++) { [BUGGY] lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	754	754	2	replace	
14	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	754	754	2	add	
15	[BUG] [BUGGY] lvalue = intervalXYData.getStartXValue(series, item); [FE] NullPointerException [CONTEXT] [BUGGY] lvalue = intervalXYData.getStartXValue(series, item); [BUGGY] uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	755	755	2	replace	
16	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	755	755	2	add	
17	[BUG] [BUGGY] uvalue = intervalXYData.getEndXValue(series, item); [FE] NullPointerException [CONTEXT] [BUGGY] uvalue = intervalXYData.getEndXValue(series, item); [BUGGY] if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } else { [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	replace	
18	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } else { [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	add	
19	[BUG] [BUGGY] if (!Double.isNaN(lvalue)) { [FE] NullPointerException [CONTEXT] [BUGGY] if (!Double.isNaN(lvalue)) { [BUGGY] minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } else { for (int series = 0; series < seriesCount; series++) { [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	
20	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } else { for (int series = 0; series < seriesCount; series++) { [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	
21	[BUG] [BUGGY] if (!Double.isNaN(uvalue)) { [FE] NullPointerException [CONTEXT] [BUGGY] if (!Double.isNaN(uvalue)) { [BUGGY] maximum = Math.max(maximum, uvalue); } } } } else { for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = dataset.getXValue(series, item); [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	
22	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } else { for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = dataset.getXValue(series, item); [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	
23	[BUG] [BUGGY] } [FE] NullPointerException [CONTEXT] [BUGGY] } [BUGGY] else { for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = dataset.getXValue(series, item); uvalue = lvalue; if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); maximum = Math.max(maximum, uvalue); } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	replace	
24	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] } else { for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = dataset.getXValue(series, item); uvalue = lvalue; if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); maximum = Math.max(maximum, uvalue); } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	add	
25	[BUG] [BUGGY] return iterateRangeBounds(dataset, true); [FE] NullPointerException [CONTEXT] [BUGGY] return iterateRangeBounds(dataset, true); [BUGGY] } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	1213	1213	2	replace	
26	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] return iterateRangeBounds(dataset, true); } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	1213	1213	2	add	
27	[BUG] [BUGGY] double minimum = Double.POSITIVE_INFINITY; [FE] NullPointerException [CONTEXT] [BUGGY] double minimum = Double.POSITIVE_INFINITY; [BUGGY] double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount();  if (includeInterval && dataset instanceof IntervalXYDataset) {  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	replace	
28	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] double minimum = Double.POSITIVE_INFINITY; double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount();  if (includeInterval && dataset instanceof IntervalXYDataset) {  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	add	
29	[BUG] [BUGGY] double maximum = Double.NEGATIVE_INFINITY; [FE] NullPointerException [CONTEXT] [BUGGY] double maximum = Double.NEGATIVE_INFINITY; [BUGGY] int seriesCount = dataset.getSeriesCount();  if (includeInterval && dataset instanceof IntervalXYDataset) {  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	replace	
30	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount();  if (includeInterval && dataset instanceof IntervalXYDataset) {  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	add	
31	[BUG] [BUGGY] int seriesCount = dataset.getSeriesCount(); [FE] NullPointerException [CONTEXT] [BUGGY] int seriesCount = dataset.getSeriesCount(); [BUGGY]   if (includeInterval && dataset instanceof IntervalXYDataset) {  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1233	1233	2	replace	
32	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] int seriesCount = dataset.getSeriesCount();  if (includeInterval && dataset instanceof IntervalXYDataset) {  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1233	1233	2	add	
33	[BUG] [BUGGY] if (includeInterval && dataset instanceof IntervalXYDataset) { [FE] NullPointerException [CONTEXT] [BUGGY] if (includeInterval && dataset instanceof IntervalXYDataset) { [BUGGY]  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1236	1236	2	replace	
34	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] if (includeInterval && dataset instanceof IntervalXYDataset) {  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1236	1236	2	add	
35	[BUG] [BUGGY] IntervalXYDataset ixyd = (IntervalXYDataset) dataset; [FE] NullPointerException [CONTEXT] [BUGGY] IntervalXYDataset ixyd = (IntervalXYDataset) dataset; [BUGGY] for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1238	1238	2	replace	
36	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1238	1238	2	add	
37	[BUG] [BUGGY] for (int series = 0; series < seriesCount; series++) { [FE] NullPointerException [CONTEXT] [BUGGY] for (int series = 0; series < seriesCount; series++) { [BUGGY] int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1239	1239	2	replace	
38	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1239	1239	2	add	
39	[BUG] [BUGGY] int itemCount = dataset.getItemCount(series); [FE] NullPointerException [CONTEXT] [BUGGY] int itemCount = dataset.getItemCount(series); [BUGGY] for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1240	1240	2	replace	
40	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1240	1240	2	add	
41	[BUG] [BUGGY] for (int item = 0; item < itemCount; item++) { [FE] NullPointerException [CONTEXT] [BUGGY] for (int item = 0; item < itemCount; item++) { [BUGGY] double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1241	1241	2	replace	
42	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1241	1241	2	add	
43	[BUG] [BUGGY] double lvalue = ixyd.getStartYValue(series, item); [FE] NullPointerException [CONTEXT] [BUGGY] double lvalue = ixyd.getStartYValue(series, item); [BUGGY] double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1242	1242	2	replace	
44	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1242	1242	2	add	
45	[BUG] [BUGGY] double uvalue = ixyd.getEndYValue(series, item); [FE] NullPointerException [CONTEXT] [BUGGY] double uvalue = ixyd.getEndYValue(series, item); [BUGGY] if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } else if (includeInterval && dataset instanceof OHLCDataset) { [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1243	1243	2	replace	
46	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } else if (includeInterval && dataset instanceof OHLCDataset) { [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1243	1243	2	add	
47	[BUG] [BUGGY] if (!Double.isNaN(lvalue)) { [FE] NullPointerException [CONTEXT] [BUGGY] if (!Double.isNaN(lvalue)) { [BUGGY] minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } else if (includeInterval && dataset instanceof OHLCDataset) {  [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	
48	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } else if (includeInterval && dataset instanceof OHLCDataset) {  [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	
49	[BUG] [BUGGY] if (!Double.isNaN(uvalue)) { [FE] NullPointerException [CONTEXT] [BUGGY] if (!Double.isNaN(uvalue)) { [BUGGY] maximum = Math.max(maximum, uvalue); } } } } else if (includeInterval && dataset instanceof OHLCDataset) {  OHLCDataset ohlc = (OHLCDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	
50	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } else if (includeInterval && dataset instanceof OHLCDataset) {  OHLCDataset ohlc = (OHLCDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	
51	[BUG] [BUGGY] } [FE] NullPointerException [CONTEXT] [BUGGY] } [BUGGY] else if (includeInterval && dataset instanceof OHLCDataset) {  OHLCDataset ohlc = (OHLCDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ohlc.getLowValue(series, item); double uvalue = ohlc.getHighValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1252	1252	2	replace	
52	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] } else if (includeInterval && dataset instanceof OHLCDataset) {  OHLCDataset ohlc = (OHLCDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ohlc.getLowValue(series, item); double uvalue = ohlc.getHighValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1252	1252	2	add	
53	[BUG] [BUGGY] if (minimum == Double.POSITIVE_INFINITY) { [FE] NullPointerException [CONTEXT] [BUGGY] if (minimum == Double.POSITIVE_INFINITY) { [BUGGY] return null; } else { return new Range(minimum, maximum); } } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	
54	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] if (minimum == Double.POSITIVE_INFINITY) { return null; } else { return new Range(minimum, maximum); } } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	
55	[BUG] [BUGGY] if (dataset == null) { [FE] NullPointerException [CONTEXT] [BUGGY] if (dataset == null) { [BUGGY] throw new IllegalArgumentException("Null 'dataset' argument."); } double minimum = Double.POSITIVE_INFINITY; double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount(); double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	replace	
56	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] if (dataset == null) { throw new IllegalArgumentException("Null 'dataset' argument."); } double minimum = Double.POSITIVE_INFINITY; double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount(); double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	add	
57	[BUG] [BUGGY] double minimum = Double.POSITIVE_INFINITY; [FE] NullPointerException [CONTEXT] [BUGGY] double minimum = Double.POSITIVE_INFINITY; [BUGGY] double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount(); double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	replace	
58	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] double minimum = Double.POSITIVE_INFINITY; double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount(); double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	add	
59	[BUG] [BUGGY] double maximum = Double.NEGATIVE_INFINITY; [FE] NullPointerException [CONTEXT] [BUGGY] double maximum = Double.NEGATIVE_INFINITY; [BUGGY] int seriesCount = dataset.getSeriesCount(); double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	
60	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount(); double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	
61	[BUG] [BUGGY] int seriesCount = dataset.getSeriesCount(); [FE] NullPointerException [CONTEXT] [BUGGY] int seriesCount = dataset.getSeriesCount(); [BUGGY] double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	747	747	2	replace	
62	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] int seriesCount = dataset.getSeriesCount(); double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	747	747	2	add	
63	[BUG] [BUGGY] if (includeInterval && dataset instanceof IntervalXYDataset) { [FE] NullPointerException [CONTEXT] [BUGGY] if (includeInterval && dataset instanceof IntervalXYDataset) { [BUGGY] IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	750	750	2	replace	
64	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	750	750	2	add	
65	[BUG] [BUGGY] if (minimum > maximum) { [FE] NullPointerException [CONTEXT] [BUGGY] if (minimum > maximum) { [BUGGY] return null; } else { return new Range(minimum, maximum); } } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	
66	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] if (minimum > maximum) { return null; } else { return new Range(minimum, maximum); } } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval 	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	add	
