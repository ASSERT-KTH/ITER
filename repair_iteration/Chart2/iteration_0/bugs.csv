bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	patch
1	[BUG] [BUGGY] return null; [FE] NullPointerException [CONTEXT] lvalue = dataset.getXValue(series, item); uvalue = lvalue; if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); maximum = Math.max(maximum, uvalue); } } } } if (minimum > maximum) { [BUGGY] return null; [BUGGY] } else { return new Range(minimum, maximum); } } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] boolean includeInterval double lvalue maximum minimum uvalue IntervalXYDataset intervalXYData XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	
2	[BUG] [BUGGY] return iterateDomainBounds(dataset, true); [FE] NullPointerException [CONTEXT] public static Range iterateDomainBounds(XYDataset dataset) { [BUGGY] return iterateDomainBounds(dataset, true); [BUGGY] } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset [VARIABLES] boolean XYDataset dataset  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.4082482904638631	726	726	2	
3	[BUG] [BUGGY] return null; [FE] NullPointerException [CONTEXT] for (int item = 0; item < itemCount; item++) { double value = dataset.getYValue(series, item); if (!Double.isNaN(value)) { minimum = Math.min(minimum, value); maximum = Math.max(maximum, value); } } } } if (minimum == Double.POSITIVE_INFINITY) { [BUGGY] return null; [BUGGY] } else { return new Range(minimum, maximum); } } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] OHLCDataset ohlc boolean includeInterval double lvalue maximum minimum uvalue value IntervalXYDataset ixyd XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.35355339059327373	1284	1284	2	
4	[BUG] [BUGGY] IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; [FE] NullPointerException [CONTEXT] boolean includeInterval) { if (dataset == null) { throw new IllegalArgumentException("Null 'dataset' argument."); } double minimum = Double.POSITIVE_INFINITY; double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount(); double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { [BUGGY] IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; [BUGGY] for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] boolean includeInterval double lvalue maximum minimum uvalue IntervalXYDataset intervalXYData XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	751	751	2	
5	[BUG] [BUGGY] for (int series = 0; series < seriesCount; series++) { [FE] NullPointerException [CONTEXT] if (dataset == null) { throw new IllegalArgumentException("Null 'dataset' argument."); } double minimum = Double.POSITIVE_INFINITY; double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount(); double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; [BUGGY] for (int series = 0; series < seriesCount; series++) { [BUGGY] int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] boolean includeInterval double lvalue maximum minimum uvalue IntervalXYDataset intervalXYData XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	752	752	2	
6	[BUG] [BUGGY] int itemCount = dataset.getItemCount(series); [FE] NullPointerException [CONTEXT] throw new IllegalArgumentException("Null 'dataset' argument."); } double minimum = Double.POSITIVE_INFINITY; double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount(); double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { [BUGGY] int itemCount = dataset.getItemCount(series); [BUGGY] for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] boolean includeInterval double lvalue maximum minimum uvalue IntervalXYDataset intervalXYData XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	753	753	2	
7	[BUG] [BUGGY] for (int item = 0; item < itemCount; item++) { [FE] NullPointerException [CONTEXT] } double minimum = Double.POSITIVE_INFINITY; double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount(); double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); [BUGGY] for (int item = 0; item < itemCount; item++) { [BUGGY] lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] boolean includeInterval double lvalue maximum minimum uvalue IntervalXYDataset intervalXYData XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	754	754	2	
8	[BUG] [BUGGY] lvalue = intervalXYData.getStartXValue(series, item); [FE] NullPointerException [CONTEXT] double minimum = Double.POSITIVE_INFINITY; double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount(); double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { [BUGGY] lvalue = intervalXYData.getStartXValue(series, item); [BUGGY] uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] boolean includeInterval double lvalue maximum minimum uvalue IntervalXYDataset intervalXYData XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	755	755	2	
9	[BUG] [BUGGY] uvalue = intervalXYData.getEndXValue(series, item); [FE] NullPointerException [CONTEXT] double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount(); double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); [BUGGY] uvalue = intervalXYData.getEndXValue(series, item); [BUGGY] if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } else { [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] boolean includeInterval double lvalue maximum minimum uvalue IntervalXYDataset intervalXYData XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	
10	[BUG] [BUGGY] if (!Double.isNaN(lvalue)) { [FE] NullPointerException [CONTEXT] int seriesCount = dataset.getSeriesCount(); double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); [BUGGY] if (!Double.isNaN(lvalue)) { [BUGGY] minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } else { for (int series = 0; series < seriesCount; series++) { [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] boolean includeInterval double lvalue maximum minimum uvalue IntervalXYDataset intervalXYData XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	
11	[BUG] [BUGGY] if (!Double.isNaN(uvalue)) { [FE] NullPointerException [CONTEXT] if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } [BUGGY] if (!Double.isNaN(uvalue)) { [BUGGY] maximum = Math.max(maximum, uvalue); } } } } else { for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = dataset.getXValue(series, item); [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] boolean includeInterval double lvalue maximum minimum uvalue IntervalXYDataset intervalXYData XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	
12	[BUG] [BUGGY] } [FE] NullPointerException [CONTEXT] lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } [BUGGY] } [BUGGY] else { for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = dataset.getXValue(series, item); uvalue = lvalue; if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); maximum = Math.max(maximum, uvalue); } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] boolean includeInterval double lvalue maximum minimum uvalue IntervalXYDataset intervalXYData XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	765	765	2	
13	[BUG] [BUGGY] return iterateRangeBounds(dataset, true); [FE] NullPointerException [CONTEXT] public static Range iterateRangeBounds(XYDataset dataset) { [BUGGY] return iterateRangeBounds(dataset, true); [BUGGY] } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset [VARIABLES] boolean XYDataset dataset  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	1213	1213	2	
14	[BUG] [BUGGY] double minimum = Double.POSITIVE_INFINITY; [FE] NullPointerException [CONTEXT] boolean includeInterval) { [BUGGY] double minimum = Double.POSITIVE_INFINITY; [BUGGY] double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount();  if (includeInterval && dataset instanceof IntervalXYDataset) {  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] OHLCDataset ohlc boolean includeInterval double lvalue maximum minimum uvalue value IntervalXYDataset ixyd XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	
15	[BUG] [BUGGY] double maximum = Double.NEGATIVE_INFINITY; [FE] NullPointerException [CONTEXT] boolean includeInterval) { double minimum = Double.POSITIVE_INFINITY; [BUGGY] double maximum = Double.NEGATIVE_INFINITY; [BUGGY] int seriesCount = dataset.getSeriesCount();  if (includeInterval && dataset instanceof IntervalXYDataset) {  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] OHLCDataset ohlc boolean includeInterval double lvalue maximum minimum uvalue value IntervalXYDataset ixyd XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	
16	[BUG] [BUGGY] int seriesCount = dataset.getSeriesCount(); [FE] NullPointerException [CONTEXT] boolean includeInterval) { double minimum = Double.POSITIVE_INFINITY; double maximum = Double.NEGATIVE_INFINITY; [BUGGY] int seriesCount = dataset.getSeriesCount(); [BUGGY]   if (includeInterval && dataset instanceof IntervalXYDataset) {  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] OHLCDataset ohlc boolean includeInterval double lvalue maximum minimum uvalue value IntervalXYDataset ixyd XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1233	1233	2	
17	[BUG] [BUGGY] if (includeInterval && dataset instanceof IntervalXYDataset) { [FE] NullPointerException [CONTEXT] boolean includeInterval) { double minimum = Double.POSITIVE_INFINITY; double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount();  [BUGGY] if (includeInterval && dataset instanceof IntervalXYDataset) { [BUGGY]  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] OHLCDataset ohlc boolean includeInterval double lvalue maximum minimum uvalue value IntervalXYDataset ixyd XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1236	1236	2	
18	[BUG] [BUGGY] IntervalXYDataset ixyd = (IntervalXYDataset) dataset; [FE] NullPointerException [CONTEXT] boolean includeInterval) { double minimum = Double.POSITIVE_INFINITY; double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount();  if (includeInterval && dataset instanceof IntervalXYDataset) {  [BUGGY] IntervalXYDataset ixyd = (IntervalXYDataset) dataset; [BUGGY] for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] OHLCDataset ohlc boolean includeInterval double lvalue maximum minimum uvalue value IntervalXYDataset ixyd XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1238	1238	2	
19	[BUG] [BUGGY] for (int series = 0; series < seriesCount; series++) { [FE] NullPointerException [CONTEXT] boolean includeInterval) { double minimum = Double.POSITIVE_INFINITY; double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount();  if (includeInterval && dataset instanceof IntervalXYDataset) {  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; [BUGGY] for (int series = 0; series < seriesCount; series++) { [BUGGY] int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] OHLCDataset ohlc boolean includeInterval double lvalue maximum minimum uvalue value IntervalXYDataset ixyd XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1239	1239	2	
20	[BUG] [BUGGY] int itemCount = dataset.getItemCount(series); [FE] NullPointerException [CONTEXT] boolean includeInterval) { double minimum = Double.POSITIVE_INFINITY; double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount();  if (includeInterval && dataset instanceof IntervalXYDataset) {  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { [BUGGY] int itemCount = dataset.getItemCount(series); [BUGGY] for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] OHLCDataset ohlc boolean includeInterval double lvalue maximum minimum uvalue value IntervalXYDataset ixyd XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1240	1240	2	
21	[BUG] [BUGGY] for (int item = 0; item < itemCount; item++) { [FE] NullPointerException [CONTEXT] double minimum = Double.POSITIVE_INFINITY; double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount();  if (includeInterval && dataset instanceof IntervalXYDataset) {  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); [BUGGY] for (int item = 0; item < itemCount; item++) { [BUGGY] double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] OHLCDataset ohlc boolean includeInterval double lvalue maximum minimum uvalue value IntervalXYDataset ixyd XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1241	1241	2	
22	[BUG] [BUGGY] double lvalue = ixyd.getStartYValue(series, item); [FE] NullPointerException [CONTEXT] double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount();  if (includeInterval && dataset instanceof IntervalXYDataset) {  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { [BUGGY] double lvalue = ixyd.getStartYValue(series, item); [BUGGY] double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] OHLCDataset ohlc boolean includeInterval double lvalue maximum minimum uvalue value IntervalXYDataset ixyd XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1242	1242	2	
23	[BUG] [BUGGY] double uvalue = ixyd.getEndYValue(series, item); [FE] NullPointerException [CONTEXT] int seriesCount = dataset.getSeriesCount();  if (includeInterval && dataset instanceof IntervalXYDataset) {  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); [BUGGY] double uvalue = ixyd.getEndYValue(series, item); [BUGGY] if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } else if (includeInterval && dataset instanceof OHLCDataset) { [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] OHLCDataset ohlc boolean includeInterval double lvalue maximum minimum uvalue value IntervalXYDataset ixyd XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1243	1243	2	
24	[BUG] [BUGGY] if (!Double.isNaN(lvalue)) { [FE] NullPointerException [CONTEXT]  if (includeInterval && dataset instanceof IntervalXYDataset) {  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); [BUGGY] if (!Double.isNaN(lvalue)) { [BUGGY] minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } } else if (includeInterval && dataset instanceof OHLCDataset) {  [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] OHLCDataset ohlc boolean includeInterval double lvalue maximum minimum uvalue value IntervalXYDataset ixyd XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	
25	[BUG] [BUGGY] if (!Double.isNaN(uvalue)) { [FE] NullPointerException [CONTEXT]  IntervalXYDataset ixyd = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } [BUGGY] if (!Double.isNaN(uvalue)) { [BUGGY] maximum = Math.max(maximum, uvalue); } } } } else if (includeInterval && dataset instanceof OHLCDataset) {  OHLCDataset ohlc = (OHLCDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] OHLCDataset ohlc boolean includeInterval double lvalue maximum minimum uvalue value IntervalXYDataset ixyd XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	
26	[BUG] [BUGGY] } [FE] NullPointerException [CONTEXT] double lvalue = ixyd.getStartYValue(series, item); double uvalue = ixyd.getEndYValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { maximum = Math.max(maximum, uvalue); } } } [BUGGY] } [BUGGY] else if (includeInterval && dataset instanceof OHLCDataset) {  OHLCDataset ohlc = (OHLCDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double lvalue = ohlc.getLowValue(series, item); double uvalue = ohlc.getHighValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] OHLCDataset ohlc boolean includeInterval double lvalue maximum minimum uvalue value IntervalXYDataset ixyd XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1252	1252	2	
27	[BUG] [BUGGY] if (minimum == Double.POSITIVE_INFINITY) { [FE] NullPointerException [CONTEXT] int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { double value = dataset.getYValue(series, item); if (!Double.isNaN(value)) { minimum = Math.min(minimum, value); maximum = Math.max(maximum, value); } } } } [BUGGY] if (minimum == Double.POSITIVE_INFINITY) { [BUGGY] return null; } else { return new Range(minimum, maximum); } } [CLASS] DatasetUtilities [METHOD] iterateRangeBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] OHLCDataset ohlc boolean includeInterval double lvalue maximum minimum uvalue value IntervalXYDataset ixyd XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	
28	[BUG] [BUGGY] if (dataset == null) { [FE] NullPointerException [CONTEXT] boolean includeInterval) { [BUGGY] if (dataset == null) { [BUGGY] throw new IllegalArgumentException("Null 'dataset' argument."); } double minimum = Double.POSITIVE_INFINITY; double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount(); double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] boolean includeInterval double lvalue maximum minimum uvalue IntervalXYDataset intervalXYData XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	742	742	2	
29	[BUG] [BUGGY] double minimum = Double.POSITIVE_INFINITY; [FE] NullPointerException [CONTEXT] boolean includeInterval) { if (dataset == null) { throw new IllegalArgumentException("Null 'dataset' argument."); } [BUGGY] double minimum = Double.POSITIVE_INFINITY; [BUGGY] double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount(); double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] boolean includeInterval double lvalue maximum minimum uvalue IntervalXYDataset intervalXYData XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	
30	[BUG] [BUGGY] double maximum = Double.NEGATIVE_INFINITY; [FE] NullPointerException [CONTEXT] boolean includeInterval) { if (dataset == null) { throw new IllegalArgumentException("Null 'dataset' argument."); } double minimum = Double.POSITIVE_INFINITY; [BUGGY] double maximum = Double.NEGATIVE_INFINITY; [BUGGY] int seriesCount = dataset.getSeriesCount(); double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] boolean includeInterval double lvalue maximum minimum uvalue IntervalXYDataset intervalXYData XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	
31	[BUG] [BUGGY] int seriesCount = dataset.getSeriesCount(); [FE] NullPointerException [CONTEXT] boolean includeInterval) { if (dataset == null) { throw new IllegalArgumentException("Null 'dataset' argument."); } double minimum = Double.POSITIVE_INFINITY; double maximum = Double.NEGATIVE_INFINITY; [BUGGY] int seriesCount = dataset.getSeriesCount(); [BUGGY] double lvalue; double uvalue; if (includeInterval && dataset instanceof IntervalXYDataset) { IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] boolean includeInterval double lvalue maximum minimum uvalue IntervalXYDataset intervalXYData XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	747	747	2	
32	[BUG] [BUGGY] if (includeInterval && dataset instanceof IntervalXYDataset) { [FE] NullPointerException [CONTEXT] boolean includeInterval) { if (dataset == null) { throw new IllegalArgumentException("Null 'dataset' argument."); } double minimum = Double.POSITIVE_INFINITY; double maximum = Double.NEGATIVE_INFINITY; int seriesCount = dataset.getSeriesCount(); double lvalue; double uvalue; [BUGGY] if (includeInterval && dataset instanceof IntervalXYDataset) { [BUGGY] IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset; for (int series = 0; series < seriesCount; series++) { int itemCount = dataset.getItemCount(series); for (int item = 0; item < itemCount; item++) { lvalue = intervalXYData.getStartXValue(series, item); uvalue = intervalXYData.getEndXValue(series, item); if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); } if (!Double.isNaN(uvalue)) { [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] boolean includeInterval double lvalue maximum minimum uvalue IntervalXYDataset intervalXYData XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	750	750	2	
33	[BUG] [BUGGY] if (minimum > maximum) { [FE] NullPointerException [CONTEXT] for (int item = 0; item < itemCount; item++) { lvalue = dataset.getXValue(series, item); uvalue = lvalue; if (!Double.isNaN(lvalue)) { minimum = Math.min(minimum, lvalue); maximum = Math.max(maximum, uvalue); } } } } [BUGGY] if (minimum > maximum) { [BUGGY] return null; } else { return new Range(minimum, maximum); } } [CLASS] DatasetUtilities [METHOD] iterateDomainBounds [RETURN_TYPE] Range  XYDataset dataset boolean includeInterval [VARIABLES] boolean includeInterval double lvalue maximum minimum uvalue IntervalXYDataset intervalXYData XYDataset dataset int item itemCount series seriesCount  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	
