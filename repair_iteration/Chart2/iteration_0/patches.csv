bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
387	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  >  maximum  ||  minimum  >  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	add	if(minimum  >  maximum  ||  minimum  >  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  NullPointerException	65	2
388	[BUG]  [BUGGY]  if(minimum  >  maximum  ||  minimum  >  maximum)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  >  maximum  ||  minimum  >  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	if(minimum  >  maximum  ||  minimum  >  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  NullPointerException	65	2
362	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  seriesCount  =  dataset.getSeriesCount();  [BUGGY]    double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	747	747	2	add	double  seriesCount  =  dataset.getSeriesCount();	int  seriesCount  =  dataset.getSeriesCount();  	compilable	  [FE]  NullPointerException	61	2
363	[BUG]  [BUGGY]  double  seriesCount  =  dataset.getSeriesCount();    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  seriesCount  =  dataset.getSeriesCount();  [BUGGY]    double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	747	747	2	replace	double  seriesCount  =  dataset.getSeriesCount();	int  seriesCount  =  dataset.getSeriesCount();  	compilable	  [FE]  NullPointerException	61	2
351	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  -  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
352	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  -  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
111	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	add	if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
112	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	757	757	2	replace	if(!Double.isNaN(lvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	19	2
171	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	add	double  maximum  =  Double.NEGATIVE_INFINITY  -  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
172	[BUG]  [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Double.NEGATIVE_INFINITY  -  1;  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  double  lvalue  =  ixyd.getStartYValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1232	1232	2	replace	double  maximum  =  Double.NEGATIVE_INFINITY  -  1;	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	29	2
121	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
122	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
122	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
123	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
158	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	add	double  minimum  =  Double.POSITIVE_INFINITY  +  1;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
159	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  +  1;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
159	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	add	double  minimum  =  Double.POSITIVE_INFINITY  -  1;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
160	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  -  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();    if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {    IntervalXYDataset  ixyd  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1231	1231	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  -  1;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	27	2
338	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	add	double  minimum  =  Double.POSITIVE_INFINITY  +  1;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
339	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  +  1;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
339	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	add	double  minimum  =  Double.POSITIVE_INFINITY  -  1;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
340	[BUG]  [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  -  1;    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  minimum  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]    double  maximum  =  Double.NEGATIVE_INFINITY;  int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	745	745	2	replace	double  minimum  =  Double.POSITIVE_INFINITY  -  1;	double  minimum  =  Double.POSITIVE_INFINITY;  	compilable	  [FE]  NullPointerException	57	2
2	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  return  new  Range(minimum,  maximum);  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	add	return  new  Range(minimum,  maximum);	return  null;  	compilable	  [FE]  NullPointerException	1	2
3	[BUG]  [BUGGY]  return  new  Range(minimum,  maximum);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  return  new  Range(minimum,  maximum);  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	replace	return  new  Range(minimum,  maximum);	return  null;  	compilable	  [FE]  NullPointerException	1	2
13	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]      [BUGGY]  return  iterateDomainBounds(dataset,  false);  [BUGGY]    }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.4082482904638631	726	726	2	add	return  iterateDomainBounds(dataset,  false);	return  iterateDomainBounds(dataset,  true);  	compilable	  [FE]  AssertionFailedError	3	2
14	[BUG]  [BUGGY]  return  iterateDomainBounds(dataset,  false);    [FE]  AssertionFailedError  [CONTEXT]      [BUGGY]  return  iterateDomainBounds(dataset,  false);  [BUGGY]    }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.4082482904638631	726	726	2	replace	return  iterateDomainBounds(dataset,  false);	return  iterateDomainBounds(dataset,  true);  	compilable	  [FE]  AssertionFailedError	3	2
289	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
290	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)||  Double.isInfinite(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
290	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
291	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(maximum))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
104	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	add	lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
105	[BUG]  [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	replace	lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
3	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  throw  new  NullPointerException( " ");  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	add	throw  new  NullPointerException( " ");	return  null;  	compilable	  [FE]  NullPointerException	1	2
4	[BUG]  [BUGGY]  throw  new  NullPointerException( " ");    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  throw  new  NullPointerException( " ");  [BUGGY]    }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.7071067811865475	780	780	2	replace	throw  new  NullPointerException( " ");	return  null;  	compilable	  [FE]  NullPointerException	1	2
122	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(seriesCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(seriesCount))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
123	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(seriesCount))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(seriesCount))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  dataset.getXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	760	760	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(seriesCount))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	21	2
350	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Math.max(0.0,  0.0);  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Math.max(0.0,  0.0);	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
351	[BUG]  [BUGGY]  double  maximum  =  Math.max(0.0,  0.0);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Math.max(0.0,  0.0);  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Math.max(0.0,  0.0);	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
351	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Math.max(2.0,  0.0);  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	add	double  maximum  =  Math.max(2.0,  0.0);	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
352	[BUG]  [BUGGY]  double  maximum  =  Math.max(2.0,  0.0);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  double  maximum  =  Math.max(2.0,  0.0);  [BUGGY]    int  seriesCount  =  dataset.getSeriesCount();  double  lvalue;  double  uvalue;  if  (includeInterval  &&  dataset  instanceof  IntervalXYDataset)  {  IntervalXYDataset  intervalXYData  =  (IntervalXYDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  for  (int  item  =  0;  item  <  itemCount;  item++)  {  lvalue  =  intervalXYData.getStartXValue(series,  item);  uvalue  =  intervalXYData.getEndXValue(series,  item);  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	746	746	2	replace	double  maximum  =  Math.max(2.0,  0.0);	double  maximum  =  Double.NEGATIVE_INFINITY;  	compilable	  [FE]  NullPointerException	59	2
386	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  >=  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	add	if(minimum  >=  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  NullPointerException	65	2
387	[BUG]  [BUGGY]  if(minimum  >=  maximum)  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(minimum  >=  maximum)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2672612419124244	779	779	2	replace	if(minimum  >=  maximum)  {	if  (minimum  >  maximum)  {  	compilable	  [FE]  NullPointerException	65	2
105	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	add	intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
106	[BUG]  [BUGGY]  intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);  [BUGGY]    uvalue  =  intervalXYData.getEndXValue(series,  item);  if  (!Double.isNaN(lvalue))  {  minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  {  [CLASS]  DatasetUtilities  [METHOD]  iterateDomainBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.31622776601683794	756	756	2	replace	intervalXYData.getStartXValue(series,  item);  lvalue  =  intervalXYData.getStartXValue(series,  item);		compilable	  [FE]  NullPointerException	18	2
290	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	add	if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
291	[BUG]  [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    OHLCDataset  ohlc  =  (OHLCDataset)  dataset;  for  (int  series  =  0;  series  <  seriesCount;  series++)  {  int  itemCount  =  dataset.getItemCount(series);  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1247	1247	2	replace	if(!Double.isNaN(uvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(uvalue))  {  	compilable	  [FE]  NullPointerException	49	2
278	[BUG]  [BUGGY]    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	add	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
279	[BUG]  [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {    [FE]  NullPointerException  [CONTEXT]      [BUGGY]  if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {  [BUGGY]    minimum  =  Math.min(minimum,  lvalue);  }  if  (!Double.isNaN(uvalue))  {  maximum  =  Math.max(maximum,  uvalue);  }  }  }  }  else  if  (includeInterval  &&  dataset  instanceof  OHLCDataset)  {    [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range    XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1244	1244	2	replace	if(!Double.isNaN(lvalue)&&!Double.isNaN(uvalue))  {	if  (!Double.isNaN(lvalue))  {  	compilable	  [FE]  NullPointerException	47	2
