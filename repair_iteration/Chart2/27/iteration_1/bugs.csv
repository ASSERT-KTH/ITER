bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    maximum  =  Math.max(maximum,  maximum);  [BUGGY]  if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	    maximum  =  Math.max(maximum,  maximum);		compilable	  [FE]  NullPointerException  	54	2	add
2	[BUG]  [BUGGY]    maximum  =  Math.max(maximum,  maximum);  [FE]  NullPointerException  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    maximum  =  Math.max(maximum,  maximum);  [BUGGY]  if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	    maximum  =  Math.max(maximum,  maximum);		compilable	  [FE]  NullPointerException  	54	2	add
3	[BUG]  [BUGGY]    maximum  =  getMaximum();  [CE]  cannot  find  symbol  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    maximum  =  getMaximum();  [BUGGY]  if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	    maximum  =  getMaximum();		non-compiled	[CE]  cannot  find  symbol	54	None	add
4	[BUG]  [BUGGY]    Minimum  maximum  =  getMaximum();  [CE]  cannot  find  symbol  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    Minimum  maximum  =  getMaximum();  [BUGGY]  if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	    Minimum  maximum  =  getMaximum();		non-compiled	[CE]  cannot  find  symbol	54	None	add
5	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException  	53	2	replace
6	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [FE]  NullPointerException  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException  	53	2	replace
7	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException  	53	5	replace
8	[BUG]  [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY)  {  [FE]  NullPointerException  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(maximum  ==  Double.POSITIVE_INFINITY)  {	if  (minimum  ==  Double.POSITIVE_INFINITY)  {  	compilable	  [FE]  NullPointerException  	53	5	replace
9	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  [BUGGY]  if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	    maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));		compilable	  [FE]  NullPointerException  	54	2	add
10	[BUG]  [BUGGY]    maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  [FE]  NullPointerException  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  [BUGGY]  if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	    maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));		compilable	  [FE]  NullPointerException  	54	2	add
11	[BUG]  [BUGGY]    Minimum  minimum  =  getMaximum();  maximum  =  Math.max(maximum,  maximum);  [CE]  cannot  find  symbol  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    Minimum  minimum  =  getMaximum();  maximum  =  Math.max(maximum,  maximum);  [BUGGY]  if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	    Minimum  minimum  =  getMaximum();  maximum  =  Math.max(maximum,  maximum);		non-compiled	[CE]  cannot  find  symbol	54	None	add
12	[BUG]  [BUGGY]    maximum  =  Math.max(maximum,  getMaximum());  [CE]  cannot  find  symbol  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    maximum  =  Math.max(maximum,  getMaximum());  [BUGGY]  if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	    maximum  =  Math.max(maximum,  getMaximum());		non-compiled	[CE]  cannot  find  symbol	54	None	add
13	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    minimum  =  Math.max(minimum,  maximum);  [BUGGY]  if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	    minimum  =  Math.max(minimum,  maximum);		compilable	  [FE]  NullPointerException  	54	6	add
14	[BUG]  [BUGGY]    minimum  =  Math.max(minimum,  maximum);  [FE]  NullPointerException  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    minimum  =  Math.max(minimum,  maximum);  [BUGGY]  if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	    minimum  =  Math.max(minimum,  maximum);		compilable	  [FE]  NullPointerException  	54	6	add
15	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    minimum  =  Math.min(minimum,  maximum);  [BUGGY]  if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	    minimum  =  Math.min(minimum,  maximum);		compilable	  [FE]  NullPointerException  	54	5	add
16	[BUG]  [BUGGY]    minimum  =  Math.min(minimum,  maximum);  [FE]  NullPointerException  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    minimum  =  Math.min(minimum,  maximum);  [BUGGY]  if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	    minimum  =  Math.min(minimum,  maximum);		compilable	  [FE]  NullPointerException  	54	5	add
