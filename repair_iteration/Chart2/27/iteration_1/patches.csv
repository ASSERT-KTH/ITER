bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  maximum  =  Math.max(maximum,  Math.max(minimum,  maximum));  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  maximum  =  Math.max(maximum,  Math.max(minimum,  maximum));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	maximum  =  Math.max(maximum,  Math.max(minimum,  maximum));	      maximum    =    Math.max(maximum,    Math.min(minimum,    maximum));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
2	[BUG]  [BUGGY]  maximum  =  Math.max(maximum,  Math.max(minimum,  Double.POSITIVE_INFINITY));  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  maximum  =  Math.max(maximum,  Math.max(minimum,  Double.POSITIVE_INFINITY));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	maximum  =  Math.max(maximum,  Math.max(minimum,  Double.POSITIVE_INFINITY));	      maximum    =    Math.max(maximum,    Math.min(minimum,    maximum));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
3	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	        maximum    =    Math.max(maximum,    Math.min(minimum,    maximum));    maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));	  	compilable	  [FE]  NullPointerException  	9	2	add
4	[BUG]  [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        maximum    =    Math.max(maximum,    Math.min(minimum,    maximum));    maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));	  	compilable	  [FE]  NullPointerException  	9	2	add
5	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  maximum  =  Math.min(maximum,  Math.max(maximum,  Double.POSITIVE_INFINITY));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	        maximum    =    Math.max(maximum,    Math.min(minimum,    maximum));    maximum  =  Math.min(maximum,  Math.max(maximum,  Double.POSITIVE_INFINITY));	  	compilable	  [FE]  NullPointerException  	9	2	add
6	[BUG]  [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  maximum  =  Math.min(maximum,  Math.max(maximum,  Double.POSITIVE_INFINITY));  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  maximum  =  Math.min(maximum,  Math.max(maximum,  Double.POSITIVE_INFINITY));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        maximum    =    Math.max(maximum,    Math.min(minimum,    maximum));    maximum  =  Math.min(maximum,  Math.max(maximum,  Double.POSITIVE_INFINITY));	  	compilable	  [FE]  NullPointerException  	9	2	add
7	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  maximum  =  Math.min(maximum,  Math.max(minimum,  maximum));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	        maximum    =    Math.max(maximum,    Math.min(minimum,    maximum));    maximum  =  Math.min(maximum,  Math.max(minimum,  maximum));	  	compilable	  [FE]  NullPointerException  	9	2	add
8	[BUG]  [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  maximum  =  Math.min(maximum,  Math.max(minimum,  maximum));  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  maximum  =  Math.min(maximum,  Math.max(minimum,  maximum));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        maximum    =    Math.max(maximum,    Math.min(minimum,    maximum));    maximum  =  Math.min(maximum,  Math.max(minimum,  maximum));	  	compilable	  [FE]  NullPointerException  	9	2	add
9	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  NullPointerException.printStackTrace();  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  NullPointerException.printStackTrace();  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum    ==    Double.POSITIVE_INFINITY    ||    maximum    ==    Double.POSITIVE_INFINITY)    {    NullPointerException.printStackTrace();	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
10	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  NullPointerException.this.minimum  =  null;  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  NullPointerException.this.minimum  =  null;  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum    ==    Double.POSITIVE_INFINITY    ||    maximum    ==    Double.POSITIVE_INFINITY)    {    NullPointerException.this.minimum  =  null;	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
11	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  NullPointerException.this.minimum  =  minimum;  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  NullPointerException.this.minimum  =  minimum;  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum    ==    Double.POSITIVE_INFINITY    ||    maximum    ==    Double.POSITIVE_INFINITY)    {    NullPointerException.this.minimum  =  minimum;	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
12	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  maximum);  maximum  =  Math.max(maximum,  Double.POSITIVE_INFINITY);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	        maximum    =    Math.max(maximum,    maximum);    maximum  =  Math.max(maximum,  Double.POSITIVE_INFINITY);	  	compilable	  [FE]  NullPointerException  	1	7	add
13	[BUG]  [BUGGY]      maximum  =  Math.max(maximum,  maximum);  maximum  =  Math.max(maximum,  Double.POSITIVE_INFINITY);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  maximum);  maximum  =  Math.max(maximum,  Double.POSITIVE_INFINITY);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        maximum    =    Math.max(maximum,    maximum);    maximum  =  Math.max(maximum,  Double.POSITIVE_INFINITY);	  	compilable	  [FE]  NullPointerException  	1	7	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  maximum);  maximum  =  Math.max(maximum,  Math.max(maximum,  Double.POSITIVE_INFINITY));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	        maximum    =    Math.max(maximum,    maximum);    maximum  =  Math.max(maximum,  Math.max(maximum,  Double.POSITIVE_INFINITY));	  	compilable	  [FE]  AssertionFailedError  	1	7	add
15	[BUG]  [BUGGY]      maximum  =  Math.max(maximum,  maximum);  maximum  =  Math.max(maximum,  Math.max(maximum,  Double.POSITIVE_INFINITY));  [FE]  AssertionFailedError  [FE]      NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  maximum);  maximum  =  Math.max(maximum,  Math.max(maximum,  Double.POSITIVE_INFINITY));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        maximum    =    Math.max(maximum,    maximum);    maximum  =  Math.max(maximum,  Math.max(maximum,  Double.POSITIVE_INFINITY));	  	compilable	  [FE]  AssertionFailedError  	1	7	add
16	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  maximum);  maximum  =  Math.min(maximum,  Math.max(maximum,  maximum));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	        maximum    =    Math.max(maximum,    maximum);    maximum  =  Math.min(maximum,  Math.max(maximum,  maximum));	  	compilable	  [FE]  NullPointerException  	1	2	add
17	[BUG]  [BUGGY]      maximum  =  Math.max(maximum,  maximum);  maximum  =  Math.min(maximum,  Math.max(maximum,  maximum));  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  maximum);  maximum  =  Math.min(maximum,  Math.max(maximum,  maximum));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        maximum    =    Math.max(maximum,    maximum);    maximum  =  Math.min(maximum,  Math.max(maximum,  maximum));	  	compilable	  [FE]  NullPointerException  	1	2	add
18	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      minimum  =  Math.min(minimum,  maximum);  minimum  =  Math.max(minimum,  Math.min(maximum,  Double.POSITIVE_INFINITY));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	        minimum    =    Math.min(minimum,    maximum);    minimum  =  Math.max(minimum,  Math.min(maximum,  Double.POSITIVE_INFINITY));	  	compilable	  [FE]  NullPointerException  	15	7	add
19	[BUG]  [BUGGY]      minimum  =  Math.min(minimum,  maximum);  minimum  =  Math.max(minimum,  Math.min(maximum,  Double.POSITIVE_INFINITY));  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      minimum  =  Math.min(minimum,  maximum);  minimum  =  Math.max(minimum,  Math.min(maximum,  Double.POSITIVE_INFINITY));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        minimum    =    Math.min(minimum,    maximum);    minimum  =  Math.max(minimum,  Math.min(maximum,  Double.POSITIVE_INFINITY));	  	compilable	  [FE]  NullPointerException  	15	7	add
20	[BUG]  [BUGGY]      minimum  =  Math.min(minimum,  maximum);  Minimum  minimum  =  Math.min(minimum,  maximum);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      [BUGGY]      minimum  =  Math.min(minimum,  maximum);  Minimum  minimum  =  Math.min(minimum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        minimum    =    Math.min(minimum,    maximum);    Minimum  minimum  =  Math.min(minimum,  maximum);	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        NullPointerException    [CONTEXT]      [BUGGY]      minimum  =  Math.min(minimum,  maximum);  minimum  =  Math.min(minimum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	        minimum    =    Math.min(minimum,    maximum);    minimum  =  Math.min(minimum,  maximum);	  	compilable	  [FE]  AssertionFailedError  	15	5	add
22	[BUG]  [BUGGY]      minimum  =  Math.min(minimum,  maximum);  minimum  =  Math.min(minimum,  maximum);  [FE]  AssertionFailedError  [FE]        NullPointerException    [CONTEXT]      [BUGGY]      minimum  =  Math.min(minimum,  maximum);  minimum  =  Math.min(minimum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        minimum    =    Math.min(minimum,    maximum);    minimum  =  Math.min(minimum,  maximum);	  	compilable	  [FE]  AssertionFailedError  	15	5	add
23	[BUG]  [BUGGY]  maximum  =  getMaximum()  -  1;  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  maximum  =  getMaximum()  -  1;  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	maximum  =  getMaximum()  -  1;	      maximum    =    getMaximum();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  minimum  =  Math.min(minimum,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  minimum  =  Math.min(minimum,  Double.POSITIVE_INFINITY);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	minimum  =  Math.min(minimum,  Double.POSITIVE_INFINITY);	      minimum    =    Math.min(minimum,    maximum);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
25	[BUG]  [BUGGY]  minimum  =  Math.min(minimum,  maximum  -  1);  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  minimum  =  Math.min(minimum,  maximum  -  1);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	minimum  =  Math.min(minimum,  maximum  -  1);	      minimum    =    Math.min(minimum,    maximum);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
26	[BUG]  [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY)  {  NullPointerException.setMaximum(maximum);  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY)  {  NullPointerException.setMaximum(maximum);  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(maximum    ==    Double.POSITIVE_INFINITY)    {    NullPointerException.setMaximum(maximum);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
27	[BUG]  [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY)  {  NullPointerException.setMinimum(minimum);  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY)  {  NullPointerException.setMinimum(minimum);  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(maximum    ==    Double.POSITIVE_INFINITY)    {    NullPointerException.setMinimum(minimum);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
28	[BUG]  [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY)  {  NullPointerException.setMaximum(minimum);  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY)  {  NullPointerException.setMaximum(minimum);  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(maximum    ==    Double.POSITIVE_INFINITY)    {    NullPointerException.setMaximum(minimum);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
29	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(maximum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {	  if(minimum    ==    Double.POSITIVE_INFINITY    ||    maximum    ==    Double.POSITIVE_INFINITY)    {    	compilable	  [FE]  NullPointerException  	6	2	replace
30	[BUG]  [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(maximum  ==  Double.POSITIVE_INFINITY  ||  minimum  ==  Double.POSITIVE_INFINITY)  {	  if(minimum    ==    Double.POSITIVE_INFINITY    ||    maximum    ==    Double.POSITIVE_INFINITY)    {    	compilable	  [FE]  NullPointerException  	6	2	replace
31	[BUG]  [BUGGY]  maximum  =  Math.max(maximum,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  maximum  =  Math.max(maximum,  Double.POSITIVE_INFINITY);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	maximum  =  Math.max(maximum,  Double.POSITIVE_INFINITY);	      maximum    =    Math.max(maximum,    maximum);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
32	[BUG]  [BUGGY]  maximum  =  Math.max(maximum,  Math.max(maximum,  Double.POSITIVE_INFINITY));  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  maximum  =  Math.max(maximum,  Math.max(maximum,  Double.POSITIVE_INFINITY));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	maximum  =  Math.max(maximum,  Math.max(maximum,  Double.POSITIVE_INFINITY));	      maximum    =    Math.max(maximum,    maximum);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
33	[BUG]  [BUGGY]  minimum  =  Math.min(minimum,  Math.min(maximum,  Double.POSITIVE_INFINITY));  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  minimum  =  Math.min(minimum,  Math.min(maximum,  Double.POSITIVE_INFINITY));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	minimum  =  Math.min(minimum,  Math.min(maximum,  Double.POSITIVE_INFINITY));	      minimum    =    Math.max(minimum,    maximum);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
34	[BUG]  [BUGGY]  Minimum  minimum  =  getMinimum();  maximum  =  Math.max(maximum,  maximum);  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Minimum  minimum  =  getMinimum();  maximum  =  Math.max(maximum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	Minimum  minimum  =  getMinimum();  maximum  =  Math.max(maximum,  maximum);	      Minimum    minimum    =    getMaximum();    maximum    =    Math.max(maximum,    maximum);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
35	[BUG]  [BUGGY]  maximum  =  Math.max(maximum,  getMaximum()  -  1);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  maximum  =  Math.max(maximum,  getMaximum()  -  1);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	maximum  =  Math.max(maximum,  getMaximum()  -  1);	      maximum    =    Math.max(maximum,    getMaximum());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
36	[BUG]  [BUGGY]      minimum  =  Math.max(minimum,  maximum);  Minimum  minimum  =  Math.min(minimum,  maximum);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      minimum  =  Math.max(minimum,  maximum);  Minimum  minimum  =  Math.min(minimum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        minimum    =    Math.max(minimum,    maximum);    Minimum  minimum  =  Math.min(minimum,  maximum);	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      NullPointerException    [CONTEXT]      [BUGGY]      minimum  =  Math.max(minimum,  maximum);  minimum  =  Math.min(minimum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	        minimum    =    Math.max(minimum,    maximum);    minimum  =  Math.min(minimum,  maximum);	  	compilable	  [FE]  AssertionFailedError  	13	7	add
38	[BUG]  [BUGGY]      minimum  =  Math.max(minimum,  maximum);  minimum  =  Math.min(minimum,  maximum);  [FE]  AssertionFailedError  [FE]      NullPointerException    [CONTEXT]      [BUGGY]      minimum  =  Math.max(minimum,  maximum);  minimum  =  Math.min(minimum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        minimum    =    Math.max(minimum,    maximum);    minimum  =  Math.min(minimum,  maximum);	  	compilable	  [FE]  AssertionFailedError  	13	7	add
39	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      [BUGGY]      minimum  =  Math.max(minimum,  maximum);  minimum  =  Math.max(minimum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	        minimum    =    Math.max(minimum,    maximum);    minimum  =  Math.max(minimum,  maximum);	  	compilable	  [FE]  NullPointerException  	13	6	add
40	[BUG]  [BUGGY]      minimum  =  Math.max(minimum,  maximum);  minimum  =  Math.max(minimum,  maximum);  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      [BUGGY]      minimum  =  Math.max(minimum,  maximum);  minimum  =  Math.max(minimum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        minimum    =    Math.max(minimum,    maximum);    minimum  =  Math.max(minimum,  maximum);	  	compilable	  [FE]  NullPointerException  	13	6	add
41	[BUG]  [BUGGY]  Minimum  maximum  =  getMaximum()  -  1;  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Minimum  maximum  =  getMaximum()  -  1;  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	Minimum  maximum  =  getMaximum()  -  1;	      Minimum    maximum    =    getMaximum();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  maximum  =  Math.min(maximum,  Double.POSITIVE_INFINITY);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	        maximum    =    Math.max(maximum,    Math.min(minimum,    maximum));    maximum  =  Math.min(maximum,  Double.POSITIVE_INFINITY);	  	compilable	  [FE]  NullPointerException  	9	2	add
43	[BUG]  [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  maximum  =  Math.min(maximum,  Double.POSITIVE_INFINITY);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  maximum  =  Math.min(maximum,  Double.POSITIVE_INFINITY);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        maximum    =    Math.max(maximum,    Math.min(minimum,    maximum));    maximum  =  Math.min(maximum,  Double.POSITIVE_INFINITY);	  	compilable	  [FE]  NullPointerException  	9	2	add
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  maximum  =  Math.min(minimum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	        maximum    =    Math.max(maximum,    Math.min(minimum,    maximum));    maximum  =  Math.min(minimum,  maximum);	  	compilable	  [FE]  AssertionFailedError  	9	6	add
45	[BUG]  [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  maximum  =  Math.min(minimum,  maximum);  [FE]  AssertionFailedError  [FE]      NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  maximum  =  Math.min(minimum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        maximum    =    Math.max(maximum,    Math.min(minimum,    maximum));    maximum  =  Math.min(minimum,  maximum);	  	compilable	  [FE]  AssertionFailedError  	9	6	add
46	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  NullPointerException.setMinimum(minimum);  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  NullPointerException.setMinimum(minimum);  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum    ==    Double.POSITIVE_INFINITY    ||    maximum    ==    Double.POSITIVE_INFINITY)    {    NullPointerException.setMinimum(minimum);	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
47	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  NullPointerException.setMinimum(maximum);  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  NullPointerException.setMinimum(maximum);  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum    ==    Double.POSITIVE_INFINITY    ||    maximum    ==    Double.POSITIVE_INFINITY)    {    NullPointerException.setMinimum(maximum);	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
48	[BUG]  [BUGGY]  Minimum  minimum  =  getMaximum();  maximum  =  Math.max(maximum,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Minimum  minimum  =  getMaximum();  maximum  =  Math.max(maximum,  Double.POSITIVE_INFINITY);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	Minimum  minimum  =  getMaximum();  maximum  =  Math.max(maximum,  Double.POSITIVE_INFINITY);	      Minimum    minimum    =    getMaximum();    maximum    =    Math.max(maximum,    maximum);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
49	[BUG]  [BUGGY]  Minimum  minimum  =  getMinimum();  maximum  =  Math.max(maximum,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Minimum  minimum  =  getMinimum();  maximum  =  Math.max(maximum,  Double.POSITIVE_INFINITY);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	Minimum  minimum  =  getMinimum();  maximum  =  Math.max(maximum,  Double.POSITIVE_INFINITY);	      Minimum    minimum    =    getMaximum();    maximum    =    Math.max(maximum,    maximum);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
50	[BUG]  [BUGGY]      minimum  =  Math.max(minimum,  maximum);  Minimum  minimum  =  Math.max(minimum,  maximum);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      minimum  =  Math.max(minimum,  maximum);  Minimum  minimum  =  Math.max(minimum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        minimum    =    Math.max(minimum,    maximum);    Minimum  minimum  =  Math.max(minimum,  maximum);	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
51	[BUG]  [BUGGY]  minimum  =  Math.min(minimum,  this.maximum);  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  minimum  =  Math.min(minimum,  this.maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	minimum  =  Math.min(minimum,  this.maximum);	      minimum    =    Math.max(minimum,    maximum);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
52	[BUG]  [BUGGY]  maximum  =  getMaximumInFINITY();  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  maximum  =  getMaximumInFINITY();  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	maximum  =  getMaximumInFINITY();	      maximum    =    getMaximum();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
53	[BUG]  [BUGGY]      minimum  =  Math.min(minimum,  maximum);  Minimum  minimum  =  Math.max(minimum,  maximum);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      minimum  =  Math.min(minimum,  maximum);  Minimum  minimum  =  Math.max(minimum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        minimum    =    Math.min(minimum,    maximum);    Minimum  minimum  =  Math.max(minimum,  maximum);	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
54	[BUG]  [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY)  {  NullPointerException.setMinimum(maximum);  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY)  {  NullPointerException.setMinimum(maximum);  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(maximum    ==    Double.POSITIVE_INFINITY)    {    NullPointerException.setMinimum(maximum);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
55	[BUG]  [BUGGY]  Minimum  maximum  =  getMaximumInFINITY();  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Minimum  maximum  =  getMaximumInFINITY();  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	Minimum  maximum  =  getMaximumInFINITY();	      Minimum    maximum    =    getMaximum();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
56	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  maximum);  maximum  =  Math.min(maximum,  Double.POSITIVE_INFINITY);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	        maximum    =    Math.max(maximum,    maximum);    maximum  =  Math.min(maximum,  Double.POSITIVE_INFINITY);	  	compilable	  [FE]  NullPointerException  	1	2	add
57	[BUG]  [BUGGY]      maximum  =  Math.max(maximum,  maximum);  maximum  =  Math.min(maximum,  Double.POSITIVE_INFINITY);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  maximum);  maximum  =  Math.min(maximum,  Double.POSITIVE_INFINITY);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        maximum    =    Math.max(maximum,    maximum);    maximum  =  Math.min(maximum,  Double.POSITIVE_INFINITY);	  	compilable	  [FE]  NullPointerException  	1	2	add
58	[BUG]  [BUGGY]      maximum  =  Math.max(maximum,  maximum);  maximum  =  Math.min(maximum,  Math.max(maximum));  [CE]  no  suitable  method  found  for  max(double)  [FE]      NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  maximum);  maximum  =  Math.min(maximum,  Math.max(maximum));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        maximum    =    Math.max(maximum,    maximum);    maximum  =  Math.min(maximum,  Math.max(maximum));	  	non-compiled	[CE]  no  suitable  method  found  for  max(double)	1	None	add
59	[BUG]  [BUGGY]      maximum  =  Math.max(maximum,  maximum);  NullPointerException.printStackTrace();  [CE]  non-static  method  printStackTrace()  cannot  be  referenced  from  a  static  context  [FE]        NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  maximum);  NullPointerException.printStackTrace();  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        maximum    =    Math.max(maximum,    maximum);    NullPointerException.printStackTrace();	  	non-compiled	[CE]  non-static  method  printStackTrace()  cannot  be  referenced  from  a  static  context	1	None	add
60	[BUG]  [BUGGY]  maximum  =  Math.max(maximum,  Math.min(minimum,  Double.POSITIVE_INFINITY));  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  maximum  =  Math.max(maximum,  Math.min(minimum,  Double.POSITIVE_INFINITY));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	maximum  =  Math.max(maximum,  Math.min(minimum,  Double.POSITIVE_INFINITY));	      maximum    =    Math.max(maximum,    Math.min(minimum,    maximum));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
61	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  maximum);  maximum  =  Math.min(minimum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	        maximum    =    Math.max(maximum,    maximum);    maximum  =  Math.min(minimum,  maximum);	  	compilable	  [FE]  NullPointerException  	1	6	add
62	[BUG]  [BUGGY]      maximum  =  Math.max(maximum,  maximum);  maximum  =  Math.min(minimum,  maximum);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  maximum);  maximum  =  Math.min(minimum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        maximum    =    Math.max(maximum,    maximum);    maximum  =  Math.min(minimum,  maximum);	  	compilable	  [FE]  NullPointerException  	1	6	add
63	[BUG]  [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY)  {  if(minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY)  {  if(minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(maximum    ==    Double.POSITIVE_INFINITY)    {    if(minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
64	[BUG]  [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY)  {  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY)  {  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(maximum    ==    Double.POSITIVE_INFINITY)    {    if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
65	[BUG]  [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY)  {  if(minimum  ==  Double.POSITIVE_INFINITY)  {  maximum  =  Double.POSITIVE_INFINITY;  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(maximum  ==  Double.POSITIVE_INFINITY)  {  if(minimum  ==  Double.POSITIVE_INFINITY)  {  maximum  =  Double.POSITIVE_INFINITY;  }  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(maximum    ==    Double.POSITIVE_INFINITY)    {    if(minimum  ==  Double.POSITIVE_INFINITY)  {  maximum  =  Double.POSITIVE_INFINITY;  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
66	[BUG]  [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  NullPointerException.printStackTrace();  [CE]  non-static  method  printStackTrace()  cannot  be  referenced  from  a  static  context  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  NullPointerException.printStackTrace();  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        maximum    =    Math.max(maximum,    Math.min(minimum,    maximum));    NullPointerException.printStackTrace();	  	non-compiled	[CE]  non-static  method  printStackTrace()  cannot  be  referenced  from  a  static  context	9	None	add
67	[BUG]  [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  maximum  =  Math.max(maximum,  Math.min(minimum,  max));  [CE]  cannot  find  symbol  max  [FE]      NullPointerException    [CONTEXT]      [BUGGY]      maximum  =  Math.max(maximum,  Math.min(minimum,  maximum));  maximum  =  Math.max(maximum,  Math.min(minimum,  max));  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        maximum    =    Math.max(maximum,    Math.min(minimum,    maximum));    maximum  =  Math.max(maximum,  Math.min(minimum,  max));	  	non-compiled	[CE]  cannot  find  symbol  max	9	None	add
68	[BUG]  [BUGGY]  Minimum  minimum  =  getMinimum();  maximum  =  Math.max(minimum,  maximum);  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Minimum  minimum  =  getMinimum();  maximum  =  Math.max(minimum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	Minimum  minimum  =  getMinimum();  maximum  =  Math.max(minimum,  maximum);	      Minimum    minimum    =    getMaximum();    maximum    =    Math.max(maximum,    maximum);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
69	[BUG]  [BUGGY]  Minimum  minimum  =  getMinimum();  maximum  =  Math.max(maximum,  minimum);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Minimum  minimum  =  getMinimum();  maximum  =  Math.max(maximum,  minimum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	Minimum  minimum  =  getMinimum();  maximum  =  Math.max(maximum,  minimum);	      Minimum    minimum    =    getMaximum();    maximum    =    Math.max(maximum,    maximum);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
70	[BUG]  [BUGGY]      minimum  =  Math.max(minimum,  maximum);  NullPointerException.printStackTrace();  [CE]  non-static  method  printStackTrace()  cannot  be  referenced  from  a  static  context  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      minimum  =  Math.max(minimum,  maximum);  NullPointerException.printStackTrace();  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        minimum    =    Math.max(minimum,    maximum);    NullPointerException.printStackTrace();	  	non-compiled	[CE]  non-static  method  printStackTrace()  cannot  be  referenced  from  a  static  context	13	None	add
71	[BUG]  [BUGGY]      minimum  =  Math.max(minimum,  maximum);  Minimum  =  Math.min(minimum,  maximum);  [CE]  cannot  find  symbol  Minimum  [FE]      NullPointerException    [CONTEXT]      [BUGGY]      minimum  =  Math.max(minimum,  maximum);  Minimum  =  Math.min(minimum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        minimum    =    Math.max(minimum,    maximum);    Minimum  =  Math.min(minimum,  maximum);	  	non-compiled	[CE]  cannot  find  symbol  Minimum	13	None	add
72	[BUG]  [BUGGY]  Minimum  maximum  =  getMaximumMinimum();  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Minimum  maximum  =  getMaximumMinimum();  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	Minimum  maximum  =  getMaximumMinimum();	      Minimum    maximum    =    getMaximum();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
73	[BUG]  [BUGGY]  maximum  =  Math.max(maximum,  this.maximum);  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  maximum  =  Math.max(maximum,  this.maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	maximum  =  Math.max(maximum,  this.maximum);	      maximum    =    Math.max(maximum,    maximum);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
74	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      minimum  =  Math.min(minimum,  maximum);  minimum  =  Math.max(minimum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	        minimum    =    Math.min(minimum,    maximum);    minimum  =  Math.max(minimum,  maximum);	  	compilable	  [FE]  NullPointerException  	15	7	add
75	[BUG]  [BUGGY]      minimum  =  Math.min(minimum,  maximum);  minimum  =  Math.max(minimum,  maximum);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]      minimum  =  Math.min(minimum,  maximum);  minimum  =  Math.max(minimum,  maximum);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        minimum    =    Math.min(minimum,    maximum);    minimum  =  Math.max(minimum,  maximum);	  	compilable	  [FE]  NullPointerException  	15	7	add
76	[BUG]  [BUGGY]      minimum  =  Math.min(minimum,  maximum);  minimum  =  Math.min(minimum,  max);  [CE]  cannot  find  symbol  max  [FE]      NullPointerException    [CONTEXT]      [BUGGY]      minimum  =  Math.min(minimum,  maximum);  minimum  =  Math.min(minimum,  max);  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	        minimum    =    Math.min(minimum,    maximum);    minimum  =  Math.min(minimum,  max);	  	non-compiled	[CE]  cannot  find  symbol  max	15	None	add
77	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum    ==    Double.POSITIVE_INFINITY    ||    maximum    ==    Double.POSITIVE_INFINITY)    {    if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
78	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum    ==    Double.POSITIVE_INFINITY    ||    maximum    ==    Double.POSITIVE_INFINITY)    {    if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
79	[BUG]  [BUGGY]  maximum  =  getMaximumMinimum();  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  maximum  =  getMaximumMinimum();  [BUGGY]    if  (minimum  ==  Double.POSITIVE_INFINITY)  {  return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	maximum  =  getMaximumMinimum();	      maximum    =    getMaximum();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
80	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum!=  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	add	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum!=  Double.POSITIVE_INFINITY)  {	  if(minimum    ==    Double.POSITIVE_INFINITY    ||    maximum    ==    Double.POSITIVE_INFINITY)    {    	compilable	  [FE]  NullPointerException  	6	7	replace
81	[BUG]  [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum!=  Double.POSITIVE_INFINITY)  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      [BUGGY]  if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum!=  Double.POSITIVE_INFINITY)  {  [BUGGY]    return  null;  }  else  {  return  new  Range(minimum,  maximum);  }  }  [CLASS]  DatasetUtilities  [METHOD]  iterateRangeBounds  [RETURN_TYPE]  Range  XYDataset  dataset  boolean  includeInterval  	projects/Chart2/source/org/jfree/data/general/DatasetUtilities.java	0.2886751345948129	1283	1283	2	replace	if(minimum  ==  Double.POSITIVE_INFINITY  ||  maximum!=  Double.POSITIVE_INFINITY)  {	  if(minimum    ==    Double.POSITIVE_INFINITY    ||    maximum    ==    Double.POSITIVE_INFINITY)    {    	compilable	  [FE]  NullPointerException  	6	7	replace
