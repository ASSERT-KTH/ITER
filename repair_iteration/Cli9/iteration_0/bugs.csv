bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] Iterator iter = getRequiredOptions().iterator(); [FE] ]x> but was [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   if (getRequiredOptions().size() > 0) { [BUGGY] Iterator iter = getRequiredOptions().iterator(); [BUGGY] StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { buff.append(iter.next()); } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	310	310	2	replace	
2	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   if (getRequiredOptions().size() > 0) { [BUGGY] [BUGGY] Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { buff.append(iter.next()); } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	310	310	2	add	
3	[BUG] [BUGGY] StringBuffer buff = new StringBuffer("Missing required option"); [FE] ]x> but was [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   if (getRequiredOptions().size() > 0) { Iterator iter = getRequiredOptions().iterator(); [BUGGY] StringBuffer buff = new StringBuffer("Missing required option"); [BUGGY] buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { buff.append(iter.next()); }  [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	311	311	2	replace	
4	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   if (getRequiredOptions().size() > 0) { Iterator iter = getRequiredOptions().iterator(); [BUGGY] [BUGGY] StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { buff.append(iter.next()); }  [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	311	311	2	add	
5	[BUG] [BUGGY] buff.append(getRequiredOptions().size() == 1 ? "" : "s"); [FE] ]x> but was [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   if (getRequiredOptions().size() > 0) { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); [BUGGY] buff.append(getRequiredOptions().size() == 1 ? "" : "s"); [BUGGY] buff.append(": ");   while (iter.hasNext()) { buff.append(iter.next()); } throw new MissingOptionException(buff.toString()); [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	312	312	2	replace	
6	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   if (getRequiredOptions().size() > 0) { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); [BUGGY] [BUGGY] buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { buff.append(iter.next()); } throw new MissingOptionException(buff.toString()); [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	312	312	2	add	
7	[BUG] [BUGGY] buff.append(": "); [FE] ]x> but was [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   if (getRequiredOptions().size() > 0) { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); [BUGGY] buff.append(": "); [BUGGY]   while (iter.hasNext()) { buff.append(iter.next()); } throw new MissingOptionException(buff.toString()); } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	313	313	2	replace	
8	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   if (getRequiredOptions().size() > 0) { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); [BUGGY] [BUGGY] buff.append(": ");   while (iter.hasNext()) { buff.append(iter.next()); } throw new MissingOptionException(buff.toString()); } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	313	313	2	add	
9	[BUG] [BUGGY] while (iter.hasNext()) { [FE] ]x> but was [CONTEXT]  if (getRequiredOptions().size() > 0) { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   [BUGGY] while (iter.hasNext())   { [BUGGY] { buff.append(iter.next()); } throw new MissingOptionException(buff.toString()); } } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	317	318	2	replace	
10	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT]  if (getRequiredOptions().size() > 0) { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   [BUGGY] [BUGGY] while (iter.hasNext())   { { buff.append(iter.next()); } throw new MissingOptionException(buff.toString()); } } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	317	318	2	add	
11	[BUG] [BUGGY] buff.append(iter.next()); [FE] ]x> but was [CONTEXT] { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { [BUGGY] buff.append(iter.next()); [BUGGY] } throw new MissingOptionException(buff.toString()); } } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	319	319	2	replace	
12	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { [BUGGY] [BUGGY] buff.append(iter.next()); } throw new MissingOptionException(buff.toString()); } } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	319	319	2	add	
13	[BUG] [BUGGY] throw new MissingOptionException(buff.toString()); [FE] ]x> but was [CONTEXT] buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { buff.append(iter.next()); } [BUGGY] throw new MissingOptionException(buff.toString()); [BUGGY] } } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	322	322	2	replace	
14	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { buff.append(iter.next()); } [BUGGY] [BUGGY] throw new MissingOptionException(buff.toString()); } } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	322	322	2	add	
16	[BUG] [BUGGY] this.options = options; [FE] ]x> but was [CONTEXT] protected void setOptions(final Options options) { [BUGGY] this.options = options; [BUGGY] this.requiredOptions = options.getRequiredOptions(); } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	45	45	2	replace	
17	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] protected void setOptions(final Options options) { [BUGGY] [BUGGY] this.options = options; this.requiredOptions = options.getRequiredOptions(); } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	45	45	2	add	
18	[BUG] [BUGGY] this.requiredOptions = options.getRequiredOptions(); [FE] ]x> but was [CONTEXT] protected void setOptions(final Options options) { this.options = options; [BUGGY] this.requiredOptions = options.getRequiredOptions(); [BUGGY] } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	46	46	2	replace	
19	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] protected void setOptions(final Options options) { this.options = options; [BUGGY] [BUGGY] this.requiredOptions = options.getRequiredOptions(); } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	46	46	2	add	
20	[BUG] [BUGGY] } [FE] ]x> but was [CONTEXT] protected void setOptions(final Options options) { this.options = options; this.requiredOptions = options.getRequiredOptions(); [BUGGY] } [BUGGY]  [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	47	47	2	replace	
21	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] protected void setOptions(final Options options) { this.options = options; this.requiredOptions = options.getRequiredOptions(); [BUGGY] [BUGGY] } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	47	47	2	add	
22	[BUG] [BUGGY] return options; [FE] ]x> but was [CONTEXT] protected Options getOptions() { [BUGGY] return options; [BUGGY] } [CLASS] Parser [METHOD] getOptions [RETURN_TYPE] Options  [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	50	50	2	replace	
23	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] protected Options getOptions() { [BUGGY] [BUGGY] return options; } [CLASS] Parser [METHOD] getOptions [RETURN_TYPE] Options  [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	50	50	2	add	
24	[BUG] [BUGGY] return requiredOptions; [FE] ]x> but was [CONTEXT] protected List getRequiredOptions() { [BUGGY] return requiredOptions; [BUGGY] } [CLASS] Parser [METHOD] getRequiredOptions [RETURN_TYPE] List  [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	54	54	2	replace	
25	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] protected List getRequiredOptions() { [BUGGY] [BUGGY] return requiredOptions; } [CLASS] Parser [METHOD] getRequiredOptions [RETURN_TYPE] List  [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	54	54	2	add	
26	[BUG] [BUGGY] return parse(options, arguments, null, false); [FE] ]x> but was [CONTEXT] public CommandLine parse(Options options, String[] arguments) throws ParseException { [BUGGY] return parse(options, arguments, null, false); [BUGGY] } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments [VARIABLES] Options options opts CommandLine cmd List requiredOptions String[] arguments boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	85	85	2	replace	
27	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] public CommandLine parse(Options options, String[] arguments) throws ParseException { [BUGGY] [BUGGY] return parse(options, arguments, null, false); } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments [VARIABLES] Options options opts CommandLine cmd List requiredOptions String[] arguments boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	85	85	2	add	
28	[BUG] [BUGGY] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { [FE] ]x> but was [CONTEXT] {  [BUGGY] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { [BUGGY] Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	149	149	2	replace	
29	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] {  [BUGGY] [BUGGY] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	149	149	2	add	
30	[BUG] [BUGGY] Option opt = (Option) it.next(); [FE] ]x> but was [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { [BUGGY] Option opt = (Option) it.next(); [BUGGY] opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false;  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	150	150	2	replace	
31	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { [BUGGY] [BUGGY] Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false;  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	150	150	2	add	
32	[BUG] [BUGGY] opt.clearValues(); [FE] ]x> but was [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); [BUGGY] opt.clearValues(); [BUGGY] }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	151	151	2	replace	
33	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); [BUGGY] [BUGGY] opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	151	151	2	add	
34	[BUG] [BUGGY] } [FE] ]x> but was [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); [BUGGY] } [BUGGY]   setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	152	152	2	replace	
35	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); [BUGGY] [BUGGY] }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	152	152	2	add	
36	[BUG] [BUGGY] setOptions(options); [FE] ]x> but was [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  [BUGGY] setOptions(options); [BUGGY]  cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; }  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	155	155	2	replace	
37	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  [BUGGY] [BUGGY] setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; }  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	155	155	2	add	
38	[BUG] [BUGGY] cmd = new CommandLine(); [FE] ]x> but was [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); [BUGGY] cmd = new CommandLine(); [BUGGY]  boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	157	157	2	replace	
39	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); [BUGGY] [BUGGY] cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	157	157	2	add	
40	[BUG] [BUGGY] boolean eatTheRest = false; [FE] ]x> but was [CONTEXT] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); [BUGGY] boolean eatTheRest = false; [BUGGY]  if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption));  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	159	159	2	replace	
41	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); [BUGGY] [BUGGY] boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption));  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	159	159	2	add	
42	[BUG] [BUGGY] if (arguments == null) { [FE] ]x> but was [CONTEXT] opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; [BUGGY] if (arguments == null)  { [BUGGY] { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	161	162	2	replace	
43	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; [BUGGY] [BUGGY] if (arguments == null)  { { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	161	162	2	add	
44	[BUG] [BUGGY] List tokenList = Arrays.asList(flatten(getOptions(),   arguments,      stopAtNonOption)); [FE] ]x> but was [CONTEXT] cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } [BUGGY] List tokenList = Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption)); [BUGGY] arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  while (iterator.hasNext()) { String t = (String) iterator.next();  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	166	168	2	replace	
45	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } [BUGGY] [BUGGY] List tokenList = Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption)); arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  while (iterator.hasNext()) { String t = (String) iterator.next();  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	166	168	2	add	
46	[BUG] [BUGGY] ListIterator iterator = tokenList.listIterator(); [FE] ]x> but was [CONTEXT] if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); [BUGGY] ListIterator iterator = tokenList.listIterator(); [BUGGY]   while (iterator.hasNext()) { String t = (String) iterator.next();  if ("--".equals(t)) { eatTheRest = true; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	170	170	2	replace	
47	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); [BUGGY] [BUGGY] ListIterator iterator = tokenList.listIterator();  while (iterator.hasNext()) { String t = (String) iterator.next();  if ("--".equals(t)) { eatTheRest = true; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	170	170	2	add	
48	[BUG] [BUGGY] while (iterator.hasNext()) { [FE] ]x> but was [CONTEXT] arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  [BUGGY] while (iterator.hasNext())  { [BUGGY] { String t = (String) iterator.next();  if ("--".equals(t)) { eatTheRest = true; }   [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	173	174	2	replace	
49	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  [BUGGY] [BUGGY] while (iterator.hasNext())  { { String t = (String) iterator.next();  if ("--".equals(t)) { eatTheRest = true; }   [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	173	174	2	add	
50	[BUG] [BUGGY] processProperties(properties); [FE] ]x> but was [CONTEXT]  if (!"--".equals(str)) { cmd.addArg(str); } } } } [BUGGY] processProperties(properties); [BUGGY] checkRequiredOptions(); return cmd; } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	237	237	2	replace	
51	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT]  if (!"--".equals(str)) { cmd.addArg(str); } } } } [BUGGY] [BUGGY] processProperties(properties); checkRequiredOptions(); return cmd; } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	237	237	2	add	
52	[BUG] [BUGGY] checkRequiredOptions(); [FE] ]x> but was [CONTEXT]  if (!"--".equals(str)) { cmd.addArg(str); } } } } processProperties(properties); [BUGGY] checkRequiredOptions(); [BUGGY]  return cmd; } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	238	238	2	replace	
53	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT]  if (!"--".equals(str)) { cmd.addArg(str); } } } } processProperties(properties); [BUGGY] [BUGGY] checkRequiredOptions(); return cmd; } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	238	238	2	add	
54	[BUG] [BUGGY] if (properties == null) { [FE] ]x> but was [CONTEXT] { [BUGGY] if (properties == null)  { [BUGGY] { return; } for (Enumeration e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); if (!cmd.hasOption(option)) { [CLASS] Parser [METHOD] processProperties [RETURN_TYPE] void  Properties properties [VARIABLES] Options options opts CommandLine cmd Enumeration e RuntimeException exp boolean List requiredOptions tokenList Option opt String option value Properties properties  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	251	252	2	replace	
55	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] { [BUGGY] [BUGGY] if (properties == null)  { { return; } for (Enumeration e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); if (!cmd.hasOption(option)) { [CLASS] Parser [METHOD] processProperties [RETURN_TYPE] void  Properties properties [VARIABLES] Options options opts CommandLine cmd Enumeration e RuntimeException exp boolean List requiredOptions tokenList Option opt String option value Properties properties  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	251	252	2	add	
56	[BUG] [BUGGY] return; [FE] ]x> but was [CONTEXT] { if (properties == null) { [BUGGY] return; [BUGGY] } for (Enumeration e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); if (!cmd.hasOption(option)) { Option opt = getOptions().getOption(option);  [CLASS] Parser [METHOD] processProperties [RETURN_TYPE] void  Properties properties [VARIABLES] Options options opts CommandLine cmd Enumeration e RuntimeException exp boolean List requiredOptions tokenList Option opt String option value Properties properties  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	253	253	2	replace	
57	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] { if (properties == null) { [BUGGY] [BUGGY] return; } for (Enumeration e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); if (!cmd.hasOption(option)) { Option opt = getOptions().getOption(option);  [CLASS] Parser [METHOD] processProperties [RETURN_TYPE] void  Properties properties [VARIABLES] Options options opts CommandLine cmd Enumeration e RuntimeException exp boolean List requiredOptions tokenList Option opt String option value Properties properties  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	253	253	2	add	
58	[BUG] [BUGGY] if (getRequiredOptions().size() > 0) { [FE] ]x> but was [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   [BUGGY] if (getRequiredOptions().size() > 0)  { [BUGGY] { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	308	309	2	replace	
59	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   [BUGGY] [BUGGY] if (getRequiredOptions().size() > 0)  { { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	308	309	2	add	
60	[BUG] [BUGGY] String t = (String) iterator.next(); [FE] ]x> but was [CONTEXT] List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  while (iterator.hasNext()) { [BUGGY] String t = (String) iterator.next(); [BUGGY]   if ("--".equals(t)) { eatTheRest = true; }  else if ("-".equals(t)) { [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	175	175	2	replace	
61	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  while (iterator.hasNext()) { [BUGGY] [BUGGY] String t = (String) iterator.next();  if ("--".equals(t)) { eatTheRest = true; }  else if ("-".equals(t)) { [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	175	175	2	add	
62	[BUG] [BUGGY] if ("--".equals(t)) { [FE] ]x> but was [CONTEXT] while (iterator.hasNext()) { String t = (String) iterator.next();  [BUGGY] if ("--".equals(t))   { [BUGGY] { eatTheRest = true; }  else if ("-".equals(t)) { if (stopAtNonOption) { eatTheRest = true; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	178	179	2	replace	
63	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] while (iterator.hasNext()) { String t = (String) iterator.next();  [BUGGY] [BUGGY] if ("--".equals(t))   { { eatTheRest = true; }  else if ("-".equals(t)) { if (stopAtNonOption) { eatTheRest = true; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	178	179	2	add	
64	[BUG] [BUGGY] else if ("-".equals(t)) { [FE] ]x> but was [CONTEXT] { String t = (String) iterator.next();  if ("--".equals(t)) { eatTheRest = true; }  [BUGGY] else if ("-".equals(t))   { [BUGGY] { if (stopAtNonOption) { eatTheRest = true; } else { cmd.addArg(t); } } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	184	185	2	replace	
65	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] { String t = (String) iterator.next();  if ("--".equals(t)) { eatTheRest = true; }  [BUGGY] [BUGGY] else if ("-".equals(t))   { { if (stopAtNonOption) { eatTheRest = true; } else { cmd.addArg(t); } } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	184	185	2	add	
66	[BUG] [BUGGY] else if (t.startsWith("-")) { [FE] ]x> but was [CONTEXT] { eatTheRest = true; } else { cmd.addArg(t); } }  [BUGGY] else if (t.startsWith("-"))   { [BUGGY] { if (stopAtNonOption && !getOptions().hasOption(t)) { eatTheRest = true; cmd.addArg(t); } else { processOption(t, iterator); } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	197	198	2	replace	
67	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] { eatTheRest = true; } else { cmd.addArg(t); } }  [BUGGY] [BUGGY] else if (t.startsWith("-"))   { { if (stopAtNonOption && !getOptions().hasOption(t)) { eatTheRest = true; cmd.addArg(t); } else { processOption(t, iterator); } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	197	198	2	add	
68	[BUG] [BUGGY] if (stopAtNonOption && !getOptions().hasOption(t)) { [FE] ]x> but was [CONTEXT] } else { cmd.addArg(t); } }  else if (t.startsWith("-")) { [BUGGY] if (stopAtNonOption && !getOptions().hasOption(t))    { [BUGGY] { eatTheRest = true; cmd.addArg(t); } else { processOption(t, iterator); } }  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	199	200	2	replace	
69	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] } else { cmd.addArg(t); } }  else if (t.startsWith("-")) { [BUGGY] [BUGGY] if (stopAtNonOption && !getOptions().hasOption(t))    { { eatTheRest = true; cmd.addArg(t); } else { processOption(t, iterator); } }  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	199	200	2	add	
70	[BUG] [BUGGY] processOption(t, iterator); [FE] ]x> but was [CONTEXT] else if (t.startsWith("-")) { if (stopAtNonOption && !getOptions().hasOption(t)) { eatTheRest = true; cmd.addArg(t); } else { [BUGGY] processOption(t, iterator); [BUGGY] } }  else { cmd.addArg(t); if (stopAtNonOption) { [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	206	206	2	replace	
71	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] else if (t.startsWith("-")) { if (stopAtNonOption && !getOptions().hasOption(t)) { eatTheRest = true; cmd.addArg(t); } else { [BUGGY] [BUGGY] processOption(t, iterator); } }  else { cmd.addArg(t); if (stopAtNonOption) { [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	206	206	2	add	
72	[BUG] [BUGGY] if (eatTheRest) { [FE] ]x> but was [CONTEXT] { cmd.addArg(t); if (stopAtNonOption) { eatTheRest = true; } }  [BUGGY] if (eatTheRest)   { [BUGGY] { while (iterator.hasNext()) { String str = (String) iterator.next();  if (!"--".equals(str)) { cmd.addArg(str); } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	222	223	2	replace	
73	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] { cmd.addArg(t); if (stopAtNonOption) { eatTheRest = true; } }  [BUGGY] [BUGGY] if (eatTheRest)   { { while (iterator.hasNext()) { String str = (String) iterator.next();  if (!"--".equals(str)) { cmd.addArg(str); } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	222	223	2	add	
74	[BUG] [BUGGY] } [FE] ]x> but was [CONTEXT] { String str = (String) iterator.next();  if (!"--".equals(str)) { cmd.addArg(str); } } } [BUGGY] } [BUGGY]  processProperties(properties); checkRequiredOptions(); return cmd; } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	235	235	2	replace	
75	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] { String str = (String) iterator.next();  if (!"--".equals(str)) { cmd.addArg(str); } } } [BUGGY] [BUGGY] } processProperties(properties); checkRequiredOptions(); return cmd; } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	235	235	2	add	
76	[BUG] [BUGGY] boolean hasOption = getOptions().hasOption(arg); [FE] ]x> but was [CONTEXT] { [BUGGY] boolean hasOption = getOptions().hasOption(arg); [BUGGY]   if (!hasOption) { throw new UnrecognizedOptionException("Unrecognized option: " + arg); }  final Option opt = getOptions().getOption(arg); [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	387	387	2	replace	
77	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] { [BUGGY] [BUGGY] boolean hasOption = getOptions().hasOption(arg);  if (!hasOption) { throw new UnrecognizedOptionException("Unrecognized option: " + arg); }  final Option opt = getOptions().getOption(arg); [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	387	387	2	add	
78	[BUG] [BUGGY] if (!hasOption) { [FE] ]x> but was [CONTEXT] { boolean hasOption = getOptions().hasOption(arg);  [BUGGY] if (!hasOption)  { [BUGGY] { throw new UnrecognizedOptionException("Unrecognized option: " + arg); }  final Option opt = getOptions().getOption(arg);    [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	390	391	2	replace	
79	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] { boolean hasOption = getOptions().hasOption(arg);  [BUGGY] [BUGGY] if (!hasOption)  { { throw new UnrecognizedOptionException("Unrecognized option: " + arg); }  final Option opt = getOptions().getOption(arg);    [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	390	391	2	add	
80	[BUG] [BUGGY] final Option opt = getOptions().getOption(arg); [FE] ]x> but was [CONTEXT] boolean hasOption = getOptions().hasOption(arg);  if (!hasOption) { throw new UnrecognizedOptionException("Unrecognized option: " + arg); }  [BUGGY] final Option opt = getOptions().getOption(arg); [BUGGY]    if (opt.isRequired()) { getRequiredOptions().remove(opt.getKey()); }    [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	397	397	2	replace	
81	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] boolean hasOption = getOptions().hasOption(arg);  if (!hasOption) { throw new UnrecognizedOptionException("Unrecognized option: " + arg); }  [BUGGY] [BUGGY] final Option opt = getOptions().getOption(arg);   if (opt.isRequired()) { getRequiredOptions().remove(opt.getKey()); }    [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	397	397	2	add	
82	[BUG] [BUGGY] if (opt.isRequired()) { [FE] ]x> but was [CONTEXT] { throw new UnrecognizedOptionException("Unrecognized option: " + arg); }  final Option opt = getOptions().getOption(arg);   [BUGGY] if (opt.isRequired())  { [BUGGY] { getRequiredOptions().remove(opt.getKey()); }   if (getOptions().getOptionGroup(opt) != null) { OptionGroup group = getOptions().getOptionGroup(opt);  [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	401	402	2	replace	
83	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] { throw new UnrecognizedOptionException("Unrecognized option: " + arg); }  final Option opt = getOptions().getOption(arg);   [BUGGY] [BUGGY] if (opt.isRequired())  { { getRequiredOptions().remove(opt.getKey()); }   if (getOptions().getOptionGroup(opt) != null) { OptionGroup group = getOptions().getOptionGroup(opt);  [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	401	402	2	add	
84	[BUG] [BUGGY] if (getOptions().getOptionGroup(opt) != null) { [FE] ]x> but was [CONTEXT]   if (opt.isRequired()) { getRequiredOptions().remove(opt.getKey()); }   [BUGGY] if (getOptions().getOptionGroup(opt) != null)  { [BUGGY] { OptionGroup group = getOptions().getOptionGroup(opt); if (group.isRequired()) { getRequiredOptions().remove(group); } group.setSelected(opt); } [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	408	409	2	replace	
85	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT]   if (opt.isRequired()) { getRequiredOptions().remove(opt.getKey()); }   [BUGGY] [BUGGY] if (getOptions().getOptionGroup(opt) != null)  { { OptionGroup group = getOptions().getOptionGroup(opt); if (group.isRequired()) { getRequiredOptions().remove(group); } group.setSelected(opt); } [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	408	409	2	add	
86	[BUG] [BUGGY] if (opt.hasArg()) { [FE] ]x> but was [CONTEXT] if (group.isRequired()) { getRequiredOptions().remove(group); } group.setSelected(opt); }  [BUGGY] if (opt.hasArg())  { [BUGGY] { processArgs(opt, iter); }   cmd.addOption(opt); } [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	421	422	2	replace	
87	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] if (group.isRequired()) { getRequiredOptions().remove(group); } group.setSelected(opt); }  [BUGGY] [BUGGY] if (opt.hasArg())  { { processArgs(opt, iter); }   cmd.addOption(opt); } [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	421	422	2	add	
88	[BUG] [BUGGY] cmd.addOption(opt); [FE] ]x> but was [CONTEXT] }  if (opt.hasArg()) { processArgs(opt, iter); }   [BUGGY] cmd.addOption(opt); [BUGGY] } [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	428	428	2	replace	
89	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT] }  if (opt.hasArg()) { processArgs(opt, iter); }   [BUGGY] [BUGGY] cmd.addOption(opt); } [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	428	428	2	add	
90	[BUG] [BUGGY] } [FE] ]x> but was [CONTEXT]  if (opt.hasArg()) { processArgs(opt, iter); }   cmd.addOption(opt); [BUGGY] } [BUGGY]  [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	429	429	2	replace	
91	[BUG] [BUGGY] [FE] ]x> but was [CONTEXT]  if (opt.hasArg()) { processArgs(opt, iter); }   cmd.addOption(opt); [BUGGY] [BUGGY] } [CLASS] Parser [METHOD] processOption [RETURN_TYPE] void  String arg ListIterator iter [VARIABLES] Options options opts CommandLine cmd boolean hasOption OptionGroup group List requiredOptions tokenList Option opt String arg ListIterator iter  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.35355339059327373	429	429	2	add	
