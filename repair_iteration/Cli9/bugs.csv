bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] Iterator iter = getRequiredOptions().iterator(); [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   if (getRequiredOptions().size() > 0) { [BUGGY] Iterator iter = getRequiredOptions().iterator(); [BUGGY] StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { buff.append(iter.next()); } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	310	310	2	replace	
2	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   if (getRequiredOptions().size() > 0) { [BUGGY] [BUGGY] Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { buff.append(iter.next()); } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	310	310	2	add	
3	[BUG] [BUGGY] StringBuffer buff = new StringBuffer("Missing required option"); [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   if (getRequiredOptions().size() > 0) { Iterator iter = getRequiredOptions().iterator(); [BUGGY] StringBuffer buff = new StringBuffer("Missing required option"); [BUGGY] buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { buff.append(iter.next()); }  [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	311	311	2	replace	
4	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   if (getRequiredOptions().size() > 0) { Iterator iter = getRequiredOptions().iterator(); [BUGGY] [BUGGY] StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { buff.append(iter.next()); }  [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	311	311	2	add	
5	[BUG] [BUGGY] buff.append(getRequiredOptions().size() == 1 ? "" : "s"); [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   if (getRequiredOptions().size() > 0) { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); [BUGGY] buff.append(getRequiredOptions().size() == 1 ? "" : "s"); [BUGGY] buff.append(": ");   while (iter.hasNext()) { buff.append(iter.next()); } throw new MissingOptionException(buff.toString()); [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	312	312	2	replace	
6	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   if (getRequiredOptions().size() > 0) { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); [BUGGY] [BUGGY] buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { buff.append(iter.next()); } throw new MissingOptionException(buff.toString()); [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	312	312	2	add	
7	[BUG] [BUGGY] buff.append(": "); [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   if (getRequiredOptions().size() > 0) { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); [BUGGY] buff.append(": "); [BUGGY]   while (iter.hasNext()) { buff.append(iter.next()); } throw new MissingOptionException(buff.toString()); } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	313	313	2	replace	
8	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] protected void checkRequiredOptions() throws MissingOptionException {   if (getRequiredOptions().size() > 0) { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); [BUGGY] [BUGGY] buff.append(": ");   while (iter.hasNext()) { buff.append(iter.next()); } throw new MissingOptionException(buff.toString()); } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	313	313	2	add	
9	[BUG] [BUGGY] while (iter.hasNext()) { [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT]  if (getRequiredOptions().size() > 0) { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   [BUGGY] while (iter.hasNext())   { [BUGGY] { buff.append(iter.next()); } throw new MissingOptionException(buff.toString()); } } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	317	318	2	replace	
10	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT]  if (getRequiredOptions().size() > 0) { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   [BUGGY] [BUGGY] while (iter.hasNext())   { { buff.append(iter.next()); } throw new MissingOptionException(buff.toString()); } } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	317	318	2	add	
11	[BUG] [BUGGY] buff.append(iter.next()); [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { [BUGGY] buff.append(iter.next()); [BUGGY] } throw new MissingOptionException(buff.toString()); } } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	319	319	2	replace	
12	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] { Iterator iter = getRequiredOptions().iterator(); StringBuffer buff = new StringBuffer("Missing required option"); buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { [BUGGY] [BUGGY] buff.append(iter.next()); } throw new MissingOptionException(buff.toString()); } } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	319	319	2	add	
13	[BUG] [BUGGY] throw new MissingOptionException(buff.toString()); [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { buff.append(iter.next()); } [BUGGY] throw new MissingOptionException(buff.toString()); [BUGGY] } } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	322	322	2	replace	
14	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] buff.append(getRequiredOptions().size() == 1 ? "" : "s"); buff.append(": ");   while (iter.hasNext()) { buff.append(iter.next()); } [BUGGY] [BUGGY] throw new MissingOptionException(buff.toString()); } } [CLASS] Parser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Iterator iter Options options opts CommandLine cmd List requiredOptions tokenList StringBuffer buff boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.7071067811865475	322	322	2	add	
16	[BUG] [BUGGY] this.options = options; [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] protected void setOptions(final Options options) { [BUGGY] this.options = options; [BUGGY] this.requiredOptions = options.getRequiredOptions(); } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	45	45	2	replace	
17	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] protected void setOptions(final Options options) { [BUGGY] [BUGGY] this.options = options; this.requiredOptions = options.getRequiredOptions(); } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	45	45	2	add	
18	[BUG] [BUGGY] this.requiredOptions = options.getRequiredOptions(); [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] protected void setOptions(final Options options) { this.options = options; [BUGGY] this.requiredOptions = options.getRequiredOptions(); [BUGGY] } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	46	46	2	replace	
19	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] protected void setOptions(final Options options) { this.options = options; [BUGGY] [BUGGY] this.requiredOptions = options.getRequiredOptions(); } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	46	46	2	add	
20	[BUG] [BUGGY] } [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] protected void setOptions(final Options options) { this.options = options; this.requiredOptions = options.getRequiredOptions(); [BUGGY] } [BUGGY]  [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	47	47	2	replace	
21	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] protected void setOptions(final Options options) { this.options = options; this.requiredOptions = options.getRequiredOptions(); [BUGGY] [BUGGY] } [CLASS] Parser [METHOD] setOptions [RETURN_TYPE] void  Options options [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	47	47	2	add	
22	[BUG] [BUGGY] return options; [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] protected Options getOptions() { [BUGGY] return options; [BUGGY] } [CLASS] Parser [METHOD] getOptions [RETURN_TYPE] Options  [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	50	50	2	replace	
23	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] protected Options getOptions() { [BUGGY] [BUGGY] return options; } [CLASS] Parser [METHOD] getOptions [RETURN_TYPE] Options  [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	50	50	2	add	
24	[BUG] [BUGGY] return requiredOptions; [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] protected List getRequiredOptions() { [BUGGY] return requiredOptions; [BUGGY] } [CLASS] Parser [METHOD] getRequiredOptions [RETURN_TYPE] List  [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	54	54	2	replace	
25	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] protected List getRequiredOptions() { [BUGGY] [BUGGY] return requiredOptions; } [CLASS] Parser [METHOD] getRequiredOptions [RETURN_TYPE] List  [VARIABLES] Options options CommandLine cmd List requiredOptions boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	54	54	2	add	
26	[BUG] [BUGGY] return parse(options, arguments, null, false); [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] public CommandLine parse(Options options, String[] arguments) throws ParseException { [BUGGY] return parse(options, arguments, null, false); [BUGGY] } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments [VARIABLES] Options options opts CommandLine cmd List requiredOptions String[] arguments boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	85	85	2	replace	
27	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] public CommandLine parse(Options options, String[] arguments) throws ParseException { [BUGGY] [BUGGY] return parse(options, arguments, null, false); } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments [VARIABLES] Options options opts CommandLine cmd List requiredOptions String[] arguments boolean  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	85	85	2	add	
28	[BUG] [BUGGY] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] {  [BUGGY] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { [BUGGY] Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	149	149	2	replace	
29	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] {  [BUGGY] [BUGGY] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	149	149	2	add	
30	[BUG] [BUGGY] Option opt = (Option) it.next(); [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { [BUGGY] Option opt = (Option) it.next(); [BUGGY] opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false;  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	150	150	2	replace	
31	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { [BUGGY] [BUGGY] Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false;  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	150	150	2	add	
32	[BUG] [BUGGY] opt.clearValues(); [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); [BUGGY] opt.clearValues(); [BUGGY] }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	151	151	2	replace	
33	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); [BUGGY] [BUGGY] opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	151	151	2	add	
34	[BUG] [BUGGY] } [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); [BUGGY] } [BUGGY]   setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	152	152	2	replace	
35	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); [BUGGY] [BUGGY] }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	152	152	2	add	
36	[BUG] [BUGGY] setOptions(options); [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  [BUGGY] setOptions(options); [BUGGY]  cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; }  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	155	155	2	replace	
37	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  [BUGGY] [BUGGY] setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; }  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	155	155	2	add	
38	[BUG] [BUGGY] cmd = new CommandLine(); [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); [BUGGY] cmd = new CommandLine(); [BUGGY]  boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	157	157	2	replace	
39	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] {  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); [BUGGY] [BUGGY] cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	157	157	2	add	
40	[BUG] [BUGGY] boolean eatTheRest = false; [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); [BUGGY] boolean eatTheRest = false; [BUGGY]  if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption));  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	159	159	2	replace	
41	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); [BUGGY] [BUGGY] boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption));  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	159	159	2	add	
42	[BUG] [BUGGY] if (arguments == null) { [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; [BUGGY] if (arguments == null)  { [BUGGY] { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	161	162	2	replace	
43	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] opt.clearValues(); }  setOptions(options); cmd = new CommandLine(); boolean eatTheRest = false; [BUGGY] [BUGGY] if (arguments == null)  { { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	161	162	2	add	
44	[BUG] [BUGGY] List tokenList = Arrays.asList(flatten(getOptions(),   arguments,      stopAtNonOption)); [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } [BUGGY] List tokenList = Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption)); [BUGGY] arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  while (iterator.hasNext()) { String t = (String) iterator.next();  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	166	168	2	replace	
45	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } [BUGGY] [BUGGY] List tokenList = Arrays.asList(flatten(getOptions(),            arguments,                        stopAtNonOption)); arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  while (iterator.hasNext()) { String t = (String) iterator.next();  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	166	168	2	add	
46	[BUG] [BUGGY] ListIterator iterator = tokenList.listIterator(); [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); [BUGGY] ListIterator iterator = tokenList.listIterator(); [BUGGY]   while (iterator.hasNext()) { String t = (String) iterator.next();  if ("--".equals(t)) { eatTheRest = true; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	170	170	2	replace	
47	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); [BUGGY] [BUGGY] ListIterator iterator = tokenList.listIterator();  while (iterator.hasNext()) { String t = (String) iterator.next();  if ("--".equals(t)) { eatTheRest = true; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	170	170	2	add	
48	[BUG] [BUGGY] while (iterator.hasNext()) { [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  [BUGGY] while (iterator.hasNext())  { [BUGGY] { String t = (String) iterator.next();  if ("--".equals(t)) { eatTheRest = true; }   [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	173	174	2	replace	
49	[BUG] [BUGGY] [FE] junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[ [CONTEXT] arguments = new String[0]; } List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  [BUGGY] [BUGGY] while (iterator.hasNext())  { { String t = (String) iterator.next();  if ("--".equals(t)) { eatTheRest = true; }   [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli9/src/java/org/apache/commons/cli/Parser.java	0.5773502691896258	173	174	2	add	
