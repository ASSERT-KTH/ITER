bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  *  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  zIndex  =  getRhsOffset()  *  1;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  zIndex  =  getRhsOffset()  *  1;	  int    zIndex    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
2	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0],  width);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0],  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[0],  width);	  this.tableau.removeArtificialVariable(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
3	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[1]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[1]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[1]);	  this.tableau.removeArtificialVariable(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
4	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0],  height);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0],  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[0],  height);	  this.tableau.removeArtificialVariable(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
5	[BUG]  [BUGGY]  this.tableau.removeAllArtificialVariables(matrix);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeAllArtificialVariables(matrix);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeAllArtificialVariables(matrix);	  this.tableau.removeAllArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
6	[BUG]  [BUGGY]  this.tableau.removeAll(matrix,  0,  height);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeAll(matrix,  0,  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeAll(matrix,  0,  height);	  this.tableau.removeAll(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
7	[BUG]  [BUGGY]  this.tableau.removeAll(matrix,  0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeAll(matrix,  0);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeAll(matrix,  0);	  this.tableau.removeAll(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
8	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][j],  width);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][j],  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[i][j],  width);	  this.tableau.removeArtificialVariables(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
9	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][j],  height);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][j],  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[i][j],  height);	  this.tableau.removeArtificialVariables(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
10	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][0]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[i][0]);	  this.tableau.removeArtificialVariables(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
11	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][j  -  1]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][j  -  1]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[i][j  -  1]);	  this.tableau.removeArtificialVariables(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
12	[BUG]  [BUGGY]  int  slackVar  =  getRhsVisible()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getRhsVisible()  +  1;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getRhsVisible()  +  1;	  int    slackVar    =    getRhsVisible();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
13	[BUG]  [BUGGY]  int  slackVar  =  getRhsVisible()  -  width;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getRhsVisible()  -  width;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getRhsVisible()  -  width;	  int    slackVar    =    getRhsVisible();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
14	[BUG]  [BUGGY]  int  slackVar  =  getRhsVisible()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getRhsVisible()  -  1;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getRhsVisible()  -  1;	  int    slackVar    =    getRhsVisible();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
15	[BUG]  [BUGGY]  int  slackVar  =  getSlackVisible();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getSlackVisible();  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getSlackVisible();	  int    slackVar    =    getRhsVisible();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
16	[BUG]  [BUGGY]  this.tableau.add(matrix,  width);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.add(matrix,  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.add(matrix,  width);	  this.tableau.add(matrix);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
17	[BUG]  [BUGGY]  this.tableau.add(matrix,  matrix[i][j]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.add(matrix,  matrix[i][j]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.add(matrix,  matrix[i][j]);	  this.tableau.add(matrix);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
18	[BUG]  [BUGGY]  this.tableau.add(matrix,  j);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.add(matrix,  j);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.add(matrix,  j);	  this.tableau.add(matrix);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
19	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width][height];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[width][height];  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width][height];	  this.numArtificialVariables    =    height;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
20	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  zIndex  =  getRhsIndex()  -  1;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  zIndex  =  getRhsIndex()  -  1;	  int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
21	[BUG]  [BUGGY]  int  zIndex  =  getColumnIndex();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  zIndex  =  getColumnIndex();  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  zIndex  =  getColumnIndex();	  int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
22	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  For(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	For(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    getSize();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
23	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width  /  2];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[width  /  2];  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width  /  2];	  this.numArtificialVariables    =    new    double[width    -    2];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
24	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width  +  2];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[width  +  2];  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width  +  2];	  this.numArtificialVariables    =    new    double[width    -    2];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
25	[BUG]  [BUGGY]  int  slackVar  =  getSlackVar(0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getSlackVar(0);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getSlackVar(0);	  int    slackVar    =    getSlackVar();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
26	[BUG]  [BUGGY]  int  slackVar  =  getSlackVar()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getSlackVar()  +  1;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getSlackVar()  +  1;	  int    slackVar    =    getSlackVar();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
27	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  width  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  width  -  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  width  -  1);	  this.tableau.removeArtificialVariable(matrix,    width);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
28	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  width,  matrix.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  width,  matrix.length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  width,  matrix.length);	  this.tableau.removeArtificialVariable(matrix,    width);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
29	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width][j  -  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[width][j  -  1];  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width][j  -  1];	  this.numArtificialVariables    =    new    double[width][j    +    1];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
30	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[height][j  +  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[height][j  +  1];  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[height][j  +  1];	  this.numArtificialVariables    =    new    double[width][j    +    1];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numArtificialVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  this.numArtificialVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  this.numArtificialVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
34	[BUG]  [BUGGY]  this.numArtificialVariables  =  j  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  j  +  1;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  j  +  1;	  this.numArtificialVariables    =    j;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
36	[BUG]  [BUGGY]  int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix[i].length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  matrix[i].length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  matrix[i].length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
38	[BUG]  [BUGGY]  int  slackVar  =  getSlackVariablesOffset();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getSlackVariablesOffset();  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getSlackVariablesOffset();	  int    slackVar    =    getRhsVariablesOffset();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
39	[BUG]  [BUGGY]  int  slackVar  =  getRhsVariablesOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getRhsVariablesOffset()  +  1;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getRhsVariablesOffset()  +  1;	  int    slackVar    =    getRhsVariablesOffset();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
40	[BUG]  [BUGGY]  int  slackVar  =  getRhsVariablesOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getRhsVariablesOffset()  -  1;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getRhsVariablesOffset()  -  1;	  int    slackVar    =    getRhsVariablesOffset();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  getSize();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numArtificialVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  this.numArtificialVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  this.numArtificialVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
47	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0],  width);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0],  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[0],  width);	  this.tableau.removeArtificialVariables(matrix,    width);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
48	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  width  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  width  -  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  width  -  1);	  this.tableau.removeArtificialVariables(matrix,    width);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
49	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  width,  matrix.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  width,  matrix.length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  width,  matrix.length);	  this.tableau.removeArtificialVariables(matrix,    width);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
50	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[height][0];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[height][0];  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[height][0];	  this.numArtificialVariables    =    new    double[height][j];    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
51	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[height][width];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[height][width];  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[height][width];	  this.numArtificialVariables    =    new    double[height][j];    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
52	[BUG]  [BUGGY]  this.numArtificialVariables  =  matrix.length  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  matrix.length  -  1;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  matrix.length  -  1;	  this.numArtificialVariables    =    matrix.length;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  this.numArtificialVariables  =  matrix.length  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  matrix.length  +  1;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  matrix.length  +  1;	  this.numArtificialVariables    =    matrix.length;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
54	[BUG]  [BUGGY]  this.numArtificialVariables  =  matrix.length  -  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  matrix.length  -  2;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  matrix.length  -  2;	  this.numArtificialVariables    =    matrix.length;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
55	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[size][0];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[size][0];  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[size][0];	  this.numArtificialVariables    =    new    double[width][0];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
56	[BUG]  [BUGGY]  this.tableau.removeAllVariables(matrix);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeAllVariables(matrix);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeAllVariables(matrix);	  this.tableau.removeAllVariables();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
57	[BUG]  [BUGGY]  this.tableau.addAll(matrix,  matrix[i][j]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.addAll(matrix,  matrix[i][j]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.addAll(matrix,  matrix[i][j]);	  this.tableau.addAll(matrix);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
58	[BUG]  [BUGGY]  this.tableau.addAll(matrix,  width);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.addAll(matrix,  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.addAll(matrix,  width);	  this.tableau.addAll(matrix);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
59	[BUG]  [BUGGY]  int  slackVar  =  getRow();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getRow();  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getRow();	  int    slackVar    =    getColumn();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
60	[BUG]  [BUGGY]  int  slackVar  =  getColumn()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getColumn()  +  1;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getColumn()  +  1;	  int    slackVar    =    getColumn();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
61	[BUG]  [BUGGY]  int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  getSize();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
64	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix,  height);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix,  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix,  height);	  this.tableau.removeArtificialVariables(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
65	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix,  width);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix,  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix,  width);	  this.tableau.removeArtificialVariables(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
66	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[1]);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[1]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[1]);	  this.tableau.removeArtificialVariables(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
67	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0],  height);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0],  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[0],  height);	  this.tableau.removeArtificialVariables(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
68	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix[i].length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  matrix[i].length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  matrix[i].length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
69	[BUG]  [BUGGY]  int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
71	[BUG]  [BUGGY]  int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    getColumnsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
72	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[length  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[length  -  1];  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[length  -  1];	  this.numArtificialVariables    =    new    double[height    -    1];    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
73	[BUG]  [BUGGY]  this.numArtificialVariables  =  width  -  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  width  -  2;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  width  -  2;	  this.numArtificialVariables    =    width    -    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
74	[BUG]  [BUGGY]  this.numArtificialVariables  =  height  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  height  -  1;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  height  -  1;	  this.numArtificialVariables    =    width    -    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
75	[BUG]  [BUGGY]  this.numArtificialVariables  =  j  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  j  -  1;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  j  -  1;	  this.numArtificialVariables    =    width    -    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
76	[BUG]  [BUGGY]  int  slackVar  =  getRhsOffset().length  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getRhsOffset().length  +  1;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getRhsOffset().length  +  1;	  int    slackVar    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
77	[BUG]  [BUGGY]  int  slackVar  =  getRhsOffset()  *  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getRhsOffset()  *  1;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getRhsOffset()  *  1;	  int    slackVar    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
78	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width  -  1]  *  width;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[width  -  1]  *  width;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width  -  1]  *  width;	  this.numArtificialVariables    =    new    double[width    -    1]    +    width;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
79	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width  -  1]  +  height;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[width  -  1]  +  height;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width  -  1]  +  height;	  this.numArtificialVariables    =    new    double[width    -    1]    +    width;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
80	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width  -  1]  +  matrix[height  -  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[width  -  1]  +  matrix[height  -  1];  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width  -  1]  +  matrix[height  -  1];	  this.numArtificialVariables    =    new    double[width    -    1]    +    width;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
81	[BUG]  [BUGGY]  int  slackVar  =  getSlackVariables();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getSlackVariables();  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getSlackVariables();	  int    slackVar    =    getRhsVariables();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
82	[BUG]  [BUGGY]  int  slackVar  =  getRhsVariables()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getRhsVariables()  +  1;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getRhsVariables()  +  1;	  int    slackVar    =    getRhsVariables();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
83	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[height][1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[height][1];  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[height][1];	  this.numArtificialVariables    =    new    double[width][1];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
84	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width][2];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[width][2];  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width][2];	  this.numArtificialVariables    =    new    double[width][1];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
85	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][j],  width);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][j],  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[i][j],  width);	  this.tableau.removeArtificialVariable(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
86	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][j],  height);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][j],  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[i][j],  height);	  this.tableau.removeArtificialVariable(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
87	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][0]);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][0]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[i][0]);	  this.tableau.removeArtificialVariable(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
88	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][j  -  1]);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][j  -  1]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[i][j  -  1]);	  this.tableau.removeArtificialVariable(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
89	[BUG]  [BUGGY]  int  slackVar  =  getSlackOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getSlackOffset()  +  1;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getSlackOffset()  +  1;	  int    slackVar    =    getSlackOffset();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
90	[BUG]  [BUGGY]  int  slackVar  =  getSlackOffset()  -  width;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getSlackOffset()  -  width;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getSlackOffset()  -  width;	  int    slackVar    =    getSlackOffset();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
91	[BUG]  [BUGGY]  int  slackVar  =  getSlackOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getSlackOffset()  -  1;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getSlackOffset()  -  1;	  int    slackVar    =    getSlackOffset();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
92	[BUG]  [BUGGY]  this.tableau.remove(matrix,  width  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.remove(matrix,  width  -  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.remove(matrix,  width  -  1);	  this.tableau.remove(matrix,    width);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
93	[BUG]  [BUGGY]  this.tableau.remove(matrix,  height);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.remove(matrix,  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.remove(matrix,  height);	  this.tableau.remove(matrix,    width);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
94	[BUG]  [BUGGY]  this.tableau.remove(matrix,  width  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.remove(matrix,  width  +  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.remove(matrix,  width  +  1);	  this.tableau.remove(matrix,    width);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
95	[BUG]  [BUGGY]  this.tableau.removeDecisionVariables(matrix);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeDecisionVariables(matrix);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeDecisionVariables(matrix);	  this.tableau.removeDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  getSize();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
99	[BUG]  [BUGGY]  this.numArtificialVariables  =  width  /  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  width  /  1;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  width  /  1;	  this.numArtificialVariables    =    width    +    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
100	[BUG]  [BUGGY]  this.numArtificialVariables  =  height  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  height  +  1;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  height  +  1;	  this.numArtificialVariables    =    width    +    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
101	[BUG]  [BUGGY]  this.tableau.add(matrix[i][j]);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.add(matrix[i][j]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.add(matrix[i][j]);	  this.tableau.remove(0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
102	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0],  null);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0],  null);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[0],  null);	  this.tableau.removeArtificialVariables(matrix,    null);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
103	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width  +  3];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[width  +  3];  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width  +  3];	  this.numArtificialVariables    =    new    double[width    -    3];    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
104	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[this.size  -  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[this.size  -  1];  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[this.size  -  1];	  this.numArtificialVariables    =    new    double[size    -    1];    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
105	[BUG]  [BUGGY]  this.tableau.removeAll(matrix,  width  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeAll(matrix,  width  -  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeAll(matrix,  width  -  1);	  this.tableau.removeAll(matrix,    width);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
106	[BUG]  [BUGGY]  this.tableau.removeAll(matrix,  width  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeAll(matrix,  width  +  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeAll(matrix,  width  +  1);	  this.tableau.removeAll(matrix,    width);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
107	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[height][0]);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[height][0]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[height][0]);	  this.tableau.removeArtificialVariables(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
108	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0][0]);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0][0]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[0][0]);	  this.tableau.removeArtificialVariables(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
109	[BUG]  [BUGGY]  this.numArtificialVariables  =  width  -  matrix.length  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  width  -  matrix.length  -  1;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  width  -  matrix.length  -  1;	  this.numArtificialVariables    =    width    -    matrix.length;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
110	[BUG]  [BUGGY]  this.numArtificialVariables  =  width  -  matrix.length  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  width  -  matrix.length  +  1;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  width  -  matrix.length  +  1;	  this.numArtificialVariables    =    width    -    matrix.length;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
111	[BUG]  [BUGGY]  this.numArtificialVariables  =  width  -  matrix.length  -  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  width  -  matrix.length  -  2;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  width  -  matrix.length  -  2;	  this.numArtificialVariables    =    width    -    matrix.length;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
112	[BUG]  [BUGGY]  this.numArtificialVariables  =  height  -  matrix.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  height  -  matrix.length;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  height  -  matrix.length;	  this.numArtificialVariables    =    width    -    matrix.length;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
113	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix[i].length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  matrix[i].length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  matrix[i].length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
115	[BUG]  [BUGGY]  int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
116	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width  *  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[width  *  1];  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width  *  1];	  this.numArtificialVariables    =    new    double[width    +    1];    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
117	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix,  height);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix,  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix,  height);	  this.tableau.removeArtificialVariable(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
118	[BUG]  [BUGGY]  this.tableau.remove(matrix[i][j]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.remove(matrix[i][j]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.remove(matrix[i][j]);	  this.tableau.clear();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
119	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[height][0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[height][0]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[height][0]);	  this.tableau.removeArtificialVariable(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
120	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  width,  height);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  width,  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  width,  height);	  this.tableau.removeArtificialVariable(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
121	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  For(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	For(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    getSize();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
122	[BUG]  [BUGGY]  int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    getSize();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
123	[BUG]  [BUGGY]  int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
124	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  Integer  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	Integer  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
125	[BUG]  [BUGGY]  int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    getColumnsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
126	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset().length  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  zIndex  =  getRhsOffset().length  +  1;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  zIndex  =  getRhsOffset().length  +  1;	  int    zIndex    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
127	[BUG]  [BUGGY]  int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    getSize();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
128	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numArtificialVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  this.numArtificialVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  this.numArtificialVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
130	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
131	[BUG]  [BUGGY]  int  slackVar  =  getRhsVariablesOffset()  +  width;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getRhsVariablesOffset()  +  width;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getRhsVariablesOffset()  +  width;	  int    slackVar    =    getRhsVariablesOffset();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
132	[BUG]  [BUGGY]  int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    getSize();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
133	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
134	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[width][0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[width][0]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[width][0]);	  this.tableau.removeArtificialVariable(matrix,    width);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
135	[BUG]  [BUGGY]  int  slackVar  =  getDecisionVariables();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getDecisionVariables();  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getDecisionVariables();	  int    slackVar    =    getRhsVariables();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
136	[BUG]  [BUGGY]  int  slackVar  =  getRhsVariables()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getRhsVariables()  -  1;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getRhsVariables()  -  1;	  int    slackVar    =    getRhsVariables();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
137	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  size;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
138	[BUG]  [BUGGY]  this.numArtificialVariables  =  Math.min(width,  height);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  Math.min(width,  height);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  Math.min(width,  height);	  this.numArtificialVariables    =    height;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
139	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width][j  +  2];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[width][j  +  2];  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width][j  +  2];	  this.numArtificialVariables    =    new    double[width][j    +    1];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
140	[BUG]  [BUGGY]  int  slackVar  =  getRowCount();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getRowCount();  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getRowCount();	  int    slackVar    =    getColumn();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
141	[BUG]  [BUGGY]  int  slackVar  =  getRowOffset();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getRowOffset();  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getRowOffset();	  int    slackVar    =    getColumn();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
142	[BUG]  [BUGGY]  this.tableau.removeAllEquivalentVariables();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeAllEquivalentVariables();  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeAllEquivalentVariables();	  this.tableau.removeAllArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
143	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  width;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  width;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  width;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
144	[BUG]  [BUGGY]  int  slackVar  =  getLeftOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getLeftOffset()  +  1;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getLeftOffset()  +  1;	  int    slackVar    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
145	[BUG]  [BUGGY]  int  slackVar  =  getRhsOffset()  +  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getRhsOffset()  +  2;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getRhsOffset()  +  2;	  int    slackVar    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
146	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  size;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
147	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width  -  1]  +  matrix.length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[width  -  1]  +  matrix.length;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width  -  1]  +  matrix.length;	  this.numArtificialVariables    =    new    double[width    -    1]    +    width;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
148	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix.length);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix.length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix.length);	  this.tableau.removeArtificialVariables(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
149	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i],  this.artificialVariables))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i],  this.artificialVariables))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i],  this.artificialVariables))  {  return;  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
150	[BUG]  [BUGGY]  this.tableau.remove(numArtificialVariables);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.remove(numArtificialVariables);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.remove(numArtificialVariables);	  this.tableau.clear();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
151	[BUG]  [BUGGY]  this.tableau.add(matrix,  height);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.add(matrix,  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.add(matrix,  height);	  this.tableau.add(matrix);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
152	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0]  -  width);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0]  -  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[0]  -  width);	  this.tableau.removeArtificialVariables(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
153	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset().length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  zIndex  =  getRhsOffset().length;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  zIndex  =  getRhsOffset().length;	  int    zIndex    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
154	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  zIndex  =  getRhsOffset()  +  2;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  zIndex  =  getRhsOffset()  +  2;	  int    zIndex    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
155	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[matrix.length  -  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[matrix.length  -  1];  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[matrix.length  -  1];	  this.numArtificialVariables    =    new    double[size    -    1];    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
156	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[width][0]);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[width][0]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[width][0]);	  this.tableau.removeArtificialVariables(matrix,    width);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
157	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  0,  null);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  0,  null);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  0,  null);	  this.tableau.removeArtificialVariables(matrix,    null);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  width;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  width;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  width;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
159	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
160	[BUG]  [BUGGY]  this.tableau.addAll(matrix,  matrix);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.addAll(matrix,  matrix);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.addAll(matrix,  matrix);	  this.tableau.addAll(matrix);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
161	[BUG]  [BUGGY]  int  slackVar  =  getSlackOffset()  +  width;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getSlackOffset()  +  width;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getSlackOffset()  +  width;	  int    slackVar    =    getSlackOffset();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
162	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width  /  3];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[width  /  3];  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width  /  3];	  this.numArtificialVariables    =    new    double[width    -    3];    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
163	[BUG]  [BUGGY]  int  slackVar  =  getSlackVar()  +  width;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getSlackVar()  +  width;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getSlackVar()  +  width;	  int    slackVar    =    getSlackVar();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
164	[BUG]  [BUGGY]  int  slackVar  =  getSlackVar()  -  width;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getSlackVar()  -  width;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getSlackVar()  -  width;	  int    slackVar    =    getSlackVar();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
165	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix[0],  matrix[1]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariable(matrix[0],  matrix[1]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix[0],  matrix[1]);	  this.tableau.removeArtificialVariable(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
166	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0]  -  width);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0]  -  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[0]  -  width);	  this.tableau.removeArtificialVariable(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
167	[BUG]  [BUGGY]  int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    getColumnsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
168	[BUG]  [BUGGY]  int  i  =  1;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][0]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  i  =  1;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][0]))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  i  =  1;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][0]))  {  return;  }	  int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
169	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix.length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix.length);	  this.tableau.removeArtificialVariable(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
170	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0],  matrix);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0],  matrix);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[0],  matrix);	  this.tableau.removeArtificialVariable(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
171	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i],  matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i],  matrix[i][i]))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i],  matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
172	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0][1]);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0][1]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[0][1]);	  this.tableau.removeArtificialVariables(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
173	[BUG]  [BUGGY]  this.tableau.removeAll(matrix,  matrix.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeAll(matrix,  matrix.length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeAll(matrix,  matrix.length);	  this.tableau.removeAll(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
174	[BUG]  [BUGGY]  this.tableau.removeAll(matrix,  height  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeAll(matrix,  height  -  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeAll(matrix,  height  -  1);	  this.tableau.removeAll(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
175	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
176	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][0]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  1;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][0]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  1;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][0]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
177	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
178	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
179	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
180	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0],  matrix);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0],  matrix);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[0],  matrix);	  this.tableau.removeArtificialVariables(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
181	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
182	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[height  -  1]  +  width;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[height  -  1]  +  width;  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[height  -  1]  +  width;	  this.numArtificialVariables    =    new    double[width    -    1]    +    width;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
183	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width  -  1]  +  matrix.getHeight();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  new  double[width  -  1]  +  matrix.getHeight();  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width  -  1]  +  matrix.getHeight();	  this.numArtificialVariables    =    new    double[width    -    1]    +    width;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
184	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0][1]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0][1]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[0][1]);	  this.tableau.removeArtificialVariable(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
185	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][0]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  1;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][0]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  1;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][0]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
186	[BUG]  [BUGGY]  int  slackVar  =  getScale();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  slackVar  =  getScale();  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getScale();	  int    slackVar    =    getRhsVariables();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
187	[BUG]  [BUGGY]  this.tableau.add(matrix,  matrix);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.tableau.add(matrix,  matrix);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.add(matrix,  matrix);	  this.tableau.add(matrix);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
188	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
189	[BUG]  [BUGGY]  this.numArtificialVariables  =  Math.max(1,  matrix.length);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  this.numArtificialVariables  =  Math.max(1,  matrix.length);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  Math.max(1,  matrix.length);	  this.numArtificialVariables    =    height;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
190	[BUG]  [BUGGY]  int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    getColumnsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
191	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  -  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);      [BUGGY]  int  zIndex  =  getRhsIndex()  -  2;  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  zIndex  =  getRhsIndex()  -  2;	  int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
