bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  width);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.removeArtificialVariables(matrix,  width);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  width);	      this.tableau.removeArtificialVariables(matrix);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][j]);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][j]);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[i][j]);	      this.tableau.removeArtificialVariables(matrix);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix);	      this.tableau.removeArtificialVariables(matrix);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  this.numArtificialVariables  =  matrix.length;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.numArtificialVariables  =  matrix.length;  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  matrix.length;	  this.numArtificialVariables    =    width;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
5	[BUG]  [BUGGY]  this.numArtificialVariables  =  j;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.numArtificialVariables  =  j;  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  j;	  this.numArtificialVariables    =    width;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
6	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width][0];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.numArtificialVariables  =  new  double[width][0];  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width][0];	  this.numArtificialVariables    =    width;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
7	[BUG]  [BUGGY]  this.numArtificialVariables  =  width  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.numArtificialVariables  =  width  -  1;  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  width  -  1;	  this.numArtificialVariables    =    width;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
8	[BUG]  [BUGGY]  this.tableau.add(matrix);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.add(matrix);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.add(matrix);	      this.tableau.remove(matrix);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  this.tableau.remove(matrix,  width);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.remove(matrix,  width);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.remove(matrix,  width);	      this.tableau.remove(matrix);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  this.tableau.clear();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.clear();  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.clear();	      this.tableau.remove(matrix);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  width);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.removeArtificialVariable(matrix,  width);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  width);	      this.tableau.removeArtificialVariable(matrix);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][j]);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][j]);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[i][j]);	      this.tableau.removeArtificialVariable(matrix);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix);	      this.tableau.removeArtificialVariable(matrix);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  int  slackVar  =  getRhsVisible();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  int  slackVar  =  getRhsVisible();  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getRhsVisible();	      int    slackVar    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
15	[BUG]  [BUGGY]  int  slackVar  =  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  int  slackVar  =  getRhsOffset()  +  1;  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getRhsOffset()  +  1;	      int    slackVar    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
16	[BUG]  [BUGGY]  int  slackVar  =  getSlackOffset();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  int  slackVar  =  getSlackOffset();  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getSlackOffset();	      int    slackVar    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
17	[BUG]  [BUGGY]  int  slackVar  =  getColumn();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  int  slackVar  =  getColumn();  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getColumn();	      int    slackVar    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
21	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  int  zIndex  =  getRhsIndex();  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  zIndex  =  getRhsIndex();	      int    zIndex    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  int  zIndex  =  getRhsOffset()  +  1;  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  zIndex  =  getRhsOffset()  +  1;	      int    zIndex    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  int  zIndex  =  getRhsIndex()  +  1;  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  zIndex  =  getRhsIndex()  +  1;	      int    zIndex    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  int  zIndex  =  getRhsOffset()  -  1;  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  zIndex  =  getRhsOffset()  -  1;	      int    zIndex    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
28	[BUG]  [BUGGY]  this.numArtificialVariables  =  3;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.numArtificialVariables  =  3;  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  3;	  this.numArtificialVariables    =    2;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
30	[BUG]  [BUGGY]  int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
32	[BUG]  [BUGGY]  this.tableau.removeAllArtificialVariables();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.removeAllArtificialVariables();  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeAllArtificialVariables();	      this.tableau.removeArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
33	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[height][j];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.numArtificialVariables  =  new  double[height][j];  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[height][j];	  this.numArtificialVariables    =    new    double[width][j];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width][j  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.numArtificialVariables  =  new  double[width][j  +  1];  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width][j  +  1];	  this.numArtificialVariables    =    new    double[width][j];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
35	[BUG]  [BUGGY]  this.tableau.removeAll(matrix,  width);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.removeAll(matrix,  width);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeAll(matrix,  width);	      this.tableau.removeAll(matrix);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
36	[BUG]  [BUGGY]  this.tableau.addAll(matrix);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.addAll(matrix);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.addAll(matrix);	      this.tableau.removeAll(matrix);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width  -  2];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.numArtificialVariables  =  new  double[width  -  2];  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width  -  2];	  this.numArtificialVariables    =    new    double[width    -    1];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
38	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width  +  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.numArtificialVariables  =  new  double[width  +  1];  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width  +  1];	  this.numArtificialVariables    =    new    double[width    -    1];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
39	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[size  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.numArtificialVariables  =  new  double[size  -  1];  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[size  -  1];	  this.numArtificialVariables    =    new    double[width    -    1];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
40	[BUG]  [BUGGY]  this.tableau.removeAllVariables();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.removeAllVariables();  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeAllVariables();	      this.tableau.removeArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
41	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[height  -  1];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.numArtificialVariables  =  new  double[height  -  1];  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[height  -  1];	  this.numArtificialVariables    =    new    double[width    -    1];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
42	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width  -  1]  +  width;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.numArtificialVariables  =  new  double[width  -  1]  +  width;  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width  -  1]  +  width;	  this.numArtificialVariables    =    new    double[width    -    1];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
43	[BUG]  [BUGGY]  this.tableau.removeAll(matrix,  height);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.removeAll(matrix,  height);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeAll(matrix,  height);	      this.tableau.removeAll(matrix);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
45	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  height);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.removeArtificialVariables(matrix,  height);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  height);	      this.tableau.removeArtificialVariables(matrix);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
46	[BUG]  [BUGGY]  int  slackVar  =  getRhsVariables();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  int  slackVar  =  getRhsVariables();  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getRhsVariables();	      int    slackVar    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
47	[BUG]  [BUGGY]  int  slackVar  =  getRhsVariablesOffset();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  int  slackVar  =  getRhsVariablesOffset();  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getRhsVariablesOffset();	      int    slackVar    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  this.numArtificialVariables  =  width  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.numArtificialVariables  =  width  +  1;  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  width  +  1;	  this.numArtificialVariables    =    width;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
49	[BUG]  [BUGGY]  this.numArtificialVariables  =  height;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.numArtificialVariables  =  height;  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  height;	  this.numArtificialVariables    =    width;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
50	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  height);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.removeArtificialVariable(matrix,  height);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  height);	      this.tableau.removeArtificialVariable(matrix);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width][1];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.numArtificialVariables  =  new  double[width][1];  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width][1];	  this.numArtificialVariables    =    new    double[width][j];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
54	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0]);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0]);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[0]);	      this.tableau.removeArtificialVariables(matrix);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
55	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  null);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.removeArtificialVariables(matrix,  null);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariables(matrix,  null);	      this.tableau.removeArtificialVariables(matrix);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
56	[BUG]  [BUGGY]  this.numArtificialVariables  =  new  double[width  -  3];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.numArtificialVariables  =  new  double[width  -  3];  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  new  double[width  -  3];	  this.numArtificialVariables    =    new    double[width    -    1];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
57	[BUG]  [BUGGY]  this.tableau.remove(0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.remove(0);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.remove(0);	      this.tableau.remove(matrix);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
58	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0]);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[0]);	      this.tableau.removeArtificialVariable(matrix);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
59	[BUG]  [BUGGY]  this.tableau.removeDecisionVariables();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.tableau.removeDecisionVariables();  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.tableau.removeDecisionVariables();	      this.tableau.removeArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
62	[BUG]  [BUGGY]  int  slackVar  =  getSlackVar();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  int  slackVar  =  getSlackVar();  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	int  slackVar  =  getSlackVar();	      int    slackVar    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
63	[BUG]  [BUGGY]  this.numArtificialVariables  =  width  -  matrix.length;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  this.numArtificialVariables  =  width  -  matrix.length;  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	this.numArtificialVariables  =  width  -  matrix.length;	  this.numArtificialVariables    =    width;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);    [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	303	303	1	replace	for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
