bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Tableau  table  =  getTableau(basicRow,  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Tableau  table  =  getTableau(basicRow,  i);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Tableau  table  =  getTableau(basicRow,  i);	      Tableau    tableau    =    getTableau(basicRow,    j);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  Tableau  table  =  getTableau(basicRow,  j  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Tableau  table  =  getTableau(basicRow,  j  +  1);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Tableau  table  =  getTableau(basicRow,  j  +  1);	      Tableau    tableau    =    getTableau(basicRow,    j);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  Tableau  tableau  =  getTableau(basicRow,  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Tableau  tableau  =  getTableau(basicRow,  i);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Tableau  tableau  =  getTableau(basicRow,  i);	      Tableau    tableau    =    getTableau(basicRow,    j);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  Tableau  tableau  =  getTableau(basicRow,  j  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Tableau  tableau  =  getTableau(basicRow,  j  +  1);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Tableau  tableau  =  getTableau(basicRow,  j  +  1);	      Tableau    tableau    =    getTableau(basicRow,    j);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  if  (basicRow.getEntry(basicRow,  j)!=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow.getEntry(basicRow,  j)!=  0)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow.getEntry(basicRow,  j)!=  0)  {	  if    (basicRow.getEntry(basicRow,    j)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]  if  (basicRow.getEntry(basicRow,  j)>  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow.getEntry(basicRow,  j)>  0)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow.getEntry(basicRow,  j)>  0)  {	  if    (basicRow.getEntry(basicRow,    j)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
7	[BUG]  [BUGGY]  if  (basicRow.getEntry(basicRow,  j)  <  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow.getEntry(basicRow,  j)  <  0)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow.getEntry(basicRow,  j)  <  0)  {	  if    (basicRow.getEntry(basicRow,    j)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
8	[BUG]  [BUGGY]  if  (basicRow.getEntry(j,  tableau)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow.getEntry(j,  tableau)  ==  0)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow.getEntry(j,  tableau)  ==  0)  {	  if    (tableau.getEntry(basicRow,    j)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  if  (basicRow.getEntry(j,  base)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow.getEntry(j,  base)  ==  0)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow.getEntry(j,  base)  ==  0)  {	  if    (tableau.getEntry(basicRow,    j)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  Integer  table  =  getTableau(j);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  table  =  getTableau(j);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  table  =  getTableau(j);	      Integer    tableau    =    getTableau();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  for(int  i  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	for(int  i  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  coefficients[i]  =  0;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  coefficients[j]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  for(int  i  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  coefficients[j]  =  0;  }  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	for(int  i  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  coefficients[j]  =  0;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  basicRow  =  getBasicRow(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  for(int  i  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  basicRow  =  getBasicRow(basicRow,  getRhsOffset());  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	for(int  i  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  basicRow  =  getBasicRow(basicRow,  getRhsOffset());	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  coefficients[i]  =  -(basicRow  ==  null?  0  :  getEntry(basicRow,  get  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  for(int  i  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  coefficients[i]  =  -(basicRow  ==  null?  0  :  getEntry(basicRow,  get  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	for(int  i  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  coefficients[i]  =  -(basicRow  ==  null?  0  :  getEntry(basicRow,  get	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
15	[BUG]  [BUGGY]  Integer  tableau  =  getTableau(basicRow);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  tableau  =  getTableau(basicRow);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  tableau  =  getTableau(basicRow);	      Integer    tableau    =    getTableau(j);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
16	[BUG]  [BUGGY]  Integer  tableau  =  getTableau(basicRow,  j);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  tableau  =  getTableau(basicRow,  j);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  tableau  =  getTableau(basicRow,  j);	      Integer    tableau    =    getTableau(j);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
17	[BUG]  [BUGGY]  Integer  graph  =  getTableau(j);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  graph  =  getTableau(j);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  graph  =  getTableau(j);	      Integer    tableau    =    getTableau(j);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
18	[BUG]  [BUGGY]  Integer  tableau  =  getTableau(j  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  tableau  =  getTableau(j  -  1);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  tableau  =  getTableau(j  -  1);	      Integer    tableau    =    getTableau(j);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
19	[BUG]  [BUGGY]  if  (j  ==  0  &&  table.getEntry(basicRow,  j)  ==  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (j  ==  0  &&  table.getEntry(basicRow,  j)  ==  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (j  ==  0  &&  table.getEntry(basicRow,  j)  ==  1)  {	  if    (basicRow    ==    null    &&    tableau.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  if  (j  ==  0  &&  tableau.getEntry(basicRow,  j)  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (j  ==  0  &&  tableau.getEntry(basicRow,  j)  ==  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (j  ==  0  &&  tableau.getEntry(basicRow,  j)  ==  1)  {	  if    (basicRow    ==    null    &&    tableau.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
21	[BUG]  [BUGGY]  if  (j  ==  0  ||  table.getEntry(basicRow,  j)  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (j  ==  0  ||  table.getEntry(basicRow,  j)  ==  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (j  ==  0  ||  table.getEntry(basicRow,  j)  ==  1)  {	  if    (basicRow    ==    null    &&    tableau.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
22	[BUG]  [BUGGY]  if  (j.getEntry(basicRow,  i)  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (j.getEntry(basicRow,  i)  ==  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (j.getEntry(basicRow,  i)  ==  1)  {	  if    (j.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  if  (basicRow.getEntry(j,  j)  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow.getEntry(j,  j)  ==  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow.getEntry(j,  j)  ==  1)  {	  if    (j.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  if  (basicRow.getEntry(j,  i)  ==  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow.getEntry(j,  i)  ==  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow.getEntry(j,  i)  ==  1)  {	  if    (j.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(j);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  f.getValue(j);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  f.getValue(j);	      Integer    coefficients[]    =    f.getValue(i);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
26	[BUG]  [BUGGY]  Integer  coefficients[]  =  tableau.getValue(i);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  tableau.getValue(i);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  tableau.getValue(i);	      Integer    coefficients[]    =    f.getValue(i);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
27	[BUG]  [BUGGY]  Integer  coefficients[]  =  tableau.getValue(j);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  tableau.getValue(j);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  tableau.getValue(j);	      Integer    coefficients[]    =    f.getValue(i);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
28	[BUG]  [BUGGY]  Integer  coefficients[]  =  basicRow.getValue(i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  basicRow.getValue(i);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  basicRow.getValue(i);	      Integer    coefficients[]    =    f.getValue(i);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
29	[BUG]  [BUGGY]  Integer  coefficients[]  =  tableau.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  tableau.getValue(basicRow);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  tableau.getValue(basicRow);	      Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  j);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  j);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  j);	      Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  i);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  i);	      Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
32	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  j);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  j);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  j);	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
33	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset());  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset());	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
34	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset());  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset());	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
35	[BUG]  [BUGGY]  Integer  coefficients[]  =  tableau.getValues();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  tableau.getValues();  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  tableau.getValues();	      Integer    coefficients[]    =    f.getValues();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
36	[BUG]  [BUGGY]  Integer  coefficients[]  =  basicRow.getValues();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  basicRow.getValues();  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  basicRow.getValues();	      Integer    coefficients[]    =    f.getValues();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
37	[BUG]  [BUGGY]  Integer  coefficients[]  =  tableau.getValue(variables);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  tableau.getValue(variables);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  tableau.getValue(variables);	      Integer    coefficients[]    =    f.getValue(variables);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
38	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  variables);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  variables);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  variables);	      Integer    coefficients[]    =    f.getValue(variables);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
39	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getNumObjectiveFunctions()  +  j);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getNumObjectiveFunctions()  +  j);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getNumObjectiveFunctions()  +  j);	      Integer    coefficients[]    =    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
40	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns());  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumns());	      Integer    coefficients[]    =    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
41	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getNumObjectiveFunctions()  -  j);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getNumObjectiveFunctions()  -  j);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getNumObjectiveFunctions()  -  j);	      Integer    coefficients[]    =    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
42	[BUG]  [BUGGY]  if  (base.getEntry(j,  base)  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (base.getEntry(j,  base)  ==  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (base.getEntry(j,  base)  ==  1)  {	  if    (basicRow.getEntry(j,    base)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
43	[BUG]  [BUGGY]  if  (basicRow.getEntry(basicRow,  j)>  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow.getEntry(basicRow,  j)>  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow.getEntry(basicRow,  j)>  1)  {	  if    (basicRow.getEntry(j,    base)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
44	[BUG]  [BUGGY]  Tableau  table  =  getTableau();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Tableau  table  =  getTableau();  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Tableau  table  =  getTableau();	      Tableau    tableau    =    getTableau();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
45	[BUG]  [BUGGY]  Tableau  table  =  getTableau(j);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Tableau  table  =  getTableau(j);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Tableau  table  =  getTableau(j);	      Tableau    tableau    =    getTableau();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
46	[BUG]  [BUGGY]  Tableau  tableau  =  getTableau(j);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Tableau  tableau  =  getTableau(j);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Tableau  tableau  =  getTableau(j);	      Tableau    tableau    =    getTableau();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
47	[BUG]  [BUGGY]  if  (j!=  0  &&  table.getEntry(basicRow,  j)  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (j!=  0  &&  table.getEntry(basicRow,  j)  ==  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (j!=  0  &&  table.getEntry(basicRow,  j)  ==  1)  {	  if    (basicRow!=    null    &&    tableau.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
48	[BUG]  [BUGGY]  if  (j!=  0  &&  tableau.getEntry(basicRow,  j)  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (j!=  0  &&  tableau.getEntry(basicRow,  j)  ==  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (j!=  0  &&  tableau.getEntry(basicRow,  j)  ==  1)  {	  if    (basicRow!=    null    &&    tableau.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  if  (j  ==  0  ||  tableau.getEntry(basicRow,  j)  ==  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (j  ==  0  ||  tableau.getEntry(basicRow,  j)  ==  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (j  ==  0  ||  tableau.getEntry(basicRow,  j)  ==  1)  {	  if    (basicRow    ==    null    ||    tableau.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
50	[BUG]  [BUGGY]  if  (basicRow  ==  null  ||  table.getEntry(basicRow,  j)  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow  ==  null  ||  table.getEntry(basicRow,  j)  ==  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow  ==  null  ||  table.getEntry(basicRow,  j)  ==  1)  {	  if    (basicRow    ==    null    ||    tableau.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
51	[BUG]  [BUGGY]  if  (basicRow.getEntry(basicRow,  j)  <  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow.getEntry(basicRow,  j)  <  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow.getEntry(basicRow,  j)  <  1)  {	  if    (basicRow.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
52	[BUG]  [BUGGY]  if  (basicRow.getEntry(basicRow,  j)!=  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow.getEntry(basicRow,  j)!=  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow.getEntry(basicRow,  j)!=  1)  {	  if    (basicRow.getEntry(j,    tableau)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
53	[BUG]  [BUGGY]  Integer  coefficients[]  =  getRows();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  getRows();  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  getRows();	      Integer    coefficients[]    =    getColumns();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
54	[BUG]  [BUGGY]  Integer  coefficients[]  =  getBasicColumns();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  getBasicColumns();  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  getBasicColumns();	      Integer    coefficients[]    =    getColumns();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
55	[BUG]  [BUGGY]  Integer  coefficients[]  =  getColumns().toArray(new  Integer[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  getColumns().toArray(new  Integer[0]);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  getColumns().toArray(new  Integer[0]);	      Integer    coefficients[]    =    getColumns();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
56	[BUG]  [BUGGY]  Integer  coefficients[]  =  tableau.getValue(value);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  tableau.getValue(value);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  tableau.getValue(value);	      Integer    coefficients[]    =    f.getValue(value);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
57	[BUG]  [BUGGY]  Integer  table  =  getTableau();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  table  =  getTableau();  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  table  =  getTableau();	      Integer    tableau    =    getTableau();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
58	[BUG]  [BUGGY]  if  (basicRow  ==  null  &&  table.getEntry(basicRow,  j)!=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow  ==  null  &&  table.getEntry(basicRow,  j)!=  0)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow  ==  null  &&  table.getEntry(basicRow,  j)!=  0)  {	  if    (basicRow    ==    null    &&    tableau.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
59	[BUG]  [BUGGY]  if  (basicRow  ==  null  &&  table.getEntry(basicRow,  j)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow  ==  null  &&  table.getEntry(basicRow,  j)  ==  0)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow  ==  null  &&  table.getEntry(basicRow,  j)  ==  0)  {	  if    (basicRow    ==    null    &&    tableau.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
60	[BUG]  [BUGGY]  if  (basicRow!=  null  &&  basicRow.getEntry(basicRow,  j)  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow!=  null  &&  basicRow.getEntry(basicRow,  j)  ==  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow!=  null  &&  basicRow.getEntry(basicRow,  j)  ==  1)  {	  if    (basicRow.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
61	[BUG]  [BUGGY]  if  (basicRow!=  null  &&  tableau.getEntry(basicRow,  j)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow!=  null  &&  tableau.getEntry(basicRow,  j)  ==  0)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow!=  null  &&  tableau.getEntry(basicRow,  j)  ==  0)  {	  if    (tableau.getEntry(basicRow,    j)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  if  (basicRow  ==  null  &&  tableau.getEntry(basicRow,  j)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow  ==  null  &&  tableau.getEntry(basicRow,  j)  ==  0)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow  ==  null  &&  tableau.getEntry(basicRow,  j)  ==  0)  {	  if    (tableau.getEntry(basicRow,    j)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
63	[BUG]  [BUGGY]  if  (basicRow  ==  null  ||  tableau.getEntry(basicRow,  j)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow  ==  null  ||  tableau.getEntry(basicRow,  j)  ==  0)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow  ==  null  ||  tableau.getEntry(basicRow,  j)  ==  0)  {	  if    (tableau.getEntry(basicRow,    j)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
64	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  0);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  0);	      Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
65	[BUG]  [BUGGY]  if  (basicRow!=  null  &&  table.getEntry(basicRow,  j)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow!=  null  &&  table.getEntry(basicRow,  j)  ==  0)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow!=  null  &&  table.getEntry(basicRow,  j)  ==  0)  {	  if    (basicRow!=    null    &&    tableau.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
66	[BUG]  [BUGGY]  if  (basicRow  ==  null  &&  table.getEntry(basicRow,  j)  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow  ==  null  &&  table.getEntry(basicRow,  j)  ==  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow  ==  null  &&  table.getEntry(basicRow,  j)  ==  1)  {	  if    (basicRow!=    null    &&    tableau.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
67	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions();  i++)  {  coefficients[i]  =  -(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions();  i++)  {  coefficients[i]  =  -(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	for(int  i  =  0;  i  <  getNumObjectiveFunctions();  i++)  {  coefficients[i]  =  -(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
68	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions();  i++)  {  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions();  i++)  {  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	for(int  i  =  0;  i  <  getNumObjectiveFunctions();  i++)  {  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions();  i++)  {  coefficients[i]  =  -(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions();  i++)  {  coefficients[i]  =  -(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  }  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	for(int  i  =  0;  i  <  getNumObjectiveFunctions();  i++)  {  coefficients[i]  =  -(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions();  i++)  {  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions();  i++)  {  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	for(int  i  =  0;  i  <  getNumObjectiveFunctions();  i++)  {  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
71	[BUG]  [BUGGY]  if  (basicRow  ==  null  ||  j.getEntry(basicRow,  j)  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow  ==  null  ||  j.getEntry(basicRow,  j)  ==  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow  ==  null  ||  j.getEntry(basicRow,  j)  ==  1)  {	  if    (j.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
72	[BUG]  [BUGGY]  if  (basicRow!=  null  &&  j.getEntry(basicRow,  j)  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow!=  null  &&  j.getEntry(basicRow,  j)  ==  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow!=  null  &&  j.getEntry(basicRow,  j)  ==  1)  {	  if    (j.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
73	[BUG]  [BUGGY]  if  (base.getEntry(basicRow,  j)  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (base.getEntry(basicRow,  j)  ==  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (base.getEntry(basicRow,  j)  ==  1)  {	  if    (basicRow.getEntry(j,    base)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
74	[BUG]  [BUGGY]  if  (basicRow.getEntry(basicRow,  i)  ==  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow.getEntry(basicRow,  i)  ==  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow.getEntry(basicRow,  i)  ==  1)  {	  if    (basicRow.getEntry(j,    base)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
75	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getEntry(basicRow,  j);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  f.getEntry(basicRow,  j);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  f.getEntry(basicRow,  j);	      Integer    coefficients[]    =    f.getValues();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
76	[BUG]  [BUGGY]  if  (basicRow!=  null  &&  basicRow.getEntry(basicRow,  j)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow!=  null  &&  basicRow.getEntry(basicRow,  j)  ==  0)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow!=  null  &&  basicRow.getEntry(basicRow,  j)  ==  0)  {	  if    (basicRow.getEntry(basicRow,    j)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
77	[BUG]  [BUGGY]  if  (basicRow  ==  null  &&  basicRow.getEntry(basicRow,  j)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow  ==  null  &&  basicRow.getEntry(basicRow,  j)  ==  0)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow  ==  null  &&  basicRow.getEntry(basicRow,  j)  ==  0)  {	  if    (basicRow.getEntry(basicRow,    j)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
78	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getObjectiveFunctions());  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getObjectiveFunctions());	      Integer    coefficients[]    =    getEntry(basicRow,    getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
79	[BUG]  [BUGGY]  Integer  table  =  getTableau(j  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  table  =  getTableau(j  -  1);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  table  =  getTableau(j  -  1);	      Integer    tableau    =    getTableau(j);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
80	[BUG]  [BUGGY]  Integer  table  =  getTableau(basicRow);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  table  =  getTableau(basicRow);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  table  =  getTableau(basicRow);	      Integer    tableau    =    getTableau(j);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
81	[BUG]  [BUGGY]  if  (basicRow  ==  null  ||  table.getEntry(basicRow,  j)!=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow  ==  null  ||  table.getEntry(basicRow,  j)!=  0)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow  ==  null  ||  table.getEntry(basicRow,  j)!=  0)  {	  if    (basicRow    ==    null    ||    tableau.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
82	[BUG]  [BUGGY]  if  (basicRow  ==  null  ||  table.getEntry(basicRow,  j)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow  ==  null  ||  table.getEntry(basicRow,  j)  ==  0)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow  ==  null  ||  table.getEntry(basicRow,  j)  ==  0)  {	  if    (basicRow    ==    null    ||    tableau.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
83	[BUG]  [BUGGY]  if  (basicRow.getEntry(basicRow,  j  +  1)  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow.getEntry(basicRow,  j  +  1)  ==  0)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow.getEntry(basicRow,  j  +  1)  ==  0)  {	  if    (basicRow.getEntry(basicRow,    j)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
84	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  +  j);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  +  j);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  +  j);	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
85	[BUG]  [BUGGY]  double  coefficients[]  =  f.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  double  coefficients[]  =  f.getValue(basicRow);  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	double  coefficients[]  =  f.getValue(basicRow);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
86	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(variables,  j);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  f.getValue(variables,  j);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  f.getValue(variables,  j);	      Integer    coefficients[]    =    f.getValue(variables);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
87	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntryColumns();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  getEntryColumns();  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  getEntryColumns();	      Integer    coefficients[]    =    getColumns();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
88	[BUG]  [BUGGY]  if  (basicRow.getEntry(basicRow,  j  +  1)  ==  1)  {  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  if  (basicRow.getEntry(basicRow,  j  +  1)  ==  1)  {  [BUGGY]    coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	if  (basicRow.getEntry(basicRow,  j  +  1)  ==  1)  {	  if    (basicRow.getEntry(basicRow,    j)    ==    1)    {    	non-compiled	[CE]  ')'  expected	22	None	replace
89	[BUG]  [BUGGY]  Tableau  graph  =  getTableau(basicRow,  j);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Tableau  graph  =  getTableau(basicRow,  j);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Tableau  graph  =  getTableau(basicRow,  j);	      Tableau    tableau    =    getTableau(basicRow,    j);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
90	[BUG]  [BUGGY]  Integer  coefficients[]  =  graph.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {    [BUGGY]  Integer  coefficients[]  =  graph.getValue(basicRow);  [BUGGY]    if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	338	338	1	replace	Integer  coefficients[]  =  graph.getValue(basicRow);	      Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
