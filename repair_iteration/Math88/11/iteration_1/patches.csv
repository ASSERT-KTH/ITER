bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.length);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.length);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.length);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
3	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][j]);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][j]);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][j]);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
4	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  col);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  col);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  col);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
5	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  width;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  width;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
6	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
7	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  height;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  height;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  height;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
8	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
9	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  width;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  width;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  height;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  height;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  height;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.get(matrix);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.get(matrix);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.get(matrix);	      LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
14	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.tableau.remove(matrix);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.tableau.remove(matrix);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.tableau.remove(matrix);	      LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
15	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(i);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(i);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(i);	      LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
16	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  height);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  height);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  height);	      LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
17	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  col);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  col);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  col);	  this.tableau    =    new    RealMatrixImpl(matrix,    col);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  col,  height);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  col,  height);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  col,  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    col);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  col);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  col);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  col);	  this.tableau    =    new    RealMatrixImpl(matrix,    col);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  numDecisionVariables.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables.length;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  width.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  width.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables.length;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  numSlackVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables.length;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  numDecisionVariables.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables.length;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  matrix.length);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  matrix.length);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  matrix.length);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
25	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix.length);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix.length);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix.length);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
26	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i].length);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i].length);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i].length);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
27	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  1);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
28	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  -  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  -  1);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j  -  1);	      matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
29	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width  -  1);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  width  -  1);	      matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
30	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  height  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  height  -  1);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  height  -  1);	      matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
31	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  col  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  col  -  1);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  col  -  1);	      matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
32	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  j);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  j);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  j);	  this.tableau    =    new    RealMatrixImpl(matrix,    width);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
33	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  height);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  height);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    width);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
34	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width  +  1);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width  +  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    width);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
35	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset()  +  1);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset()  +  1);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
36	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  matrix.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  matrix.length);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  matrix.length);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
37	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumn());  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumn());  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumn());	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
38	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  width;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  width;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
39	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  height;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  height;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  height;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
40	[BUG]  [BUGGY]  int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
41	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  i  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  i  +  1);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  i  +  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
42	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  j  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  j  +  1);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  j  +  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    j);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
43	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  0,  matrix.length);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  0,  matrix.length);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  0,  matrix.length);	  this.tableau    =    new    RealMatrixImpl(matrix,    0);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  1);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    0);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
45	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  0);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  0);	  this.tableau    =    new    RealMatrixImpl(matrix,    0);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
46	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  height);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  height);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  int  zIndex  =  getRhsIndex()  +  1;  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  zIndex  =  getRhsIndex()  +  1;	      int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
48	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  -  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  int  zIndex  =  getRhsIndex()  -  1;  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  zIndex  =  getRhsIndex()  -  1;	      int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  int  zIndex  =  getColumnIndex();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  int  zIndex  =  getColumnIndex();  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  zIndex  =  getColumnIndex();	      int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
50	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  int  zIndex  =  getRhsOffset()  +  1;  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  zIndex  =  getRhsOffset()  +  1;	      int    zIndex    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
51	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  width.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  width.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables.length;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
52	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  numSlackVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables.length;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
53	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	For(int  j  =  0;  j  <  numSlackVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables.length;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
54	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j);	      matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
55	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  getRhsOffset());  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j,  getRhsOffset());	      matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
56	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j  +  1);	      matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
57	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix);	  this.tableau    =    new    RealMatrixImpl(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
58	[BUG]  [BUGGY]  int  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  int  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables.length;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
59	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  slackVar;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  slackVar;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  slackVar;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
60	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  null);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  null);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  null);	  this.tableau    =    new    RealMatrixImpl(matrix,    0);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
61	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  Math.min(height,  matrix.length));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  Math.min(height,  matrix.length));  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  Math.min(height,  matrix.length));	  this.tableau    =    new    RealMatrixImpl(matrix,    width);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
62	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  +  1);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  +  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
63	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  width);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  width);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  width);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
64	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i]);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i]);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i]);	  this.tableau    =    new    RealMatrixImpl(matrix,    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
65	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0]);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0]);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
66	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  size);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  size);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  size);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
67	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumnsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumnsOffset());  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumnsOffset());	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
68	[BUG]  [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
69	[BUG]  [BUGGY]  int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
70	[BUG]  [BUGGY]  int  zIndex  =  getColumnOffset();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  int  zIndex  =  getColumnOffset();  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  zIndex  =  getColumnOffset();	      int    zIndex    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
71	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[j]);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[j]);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[j]);	  this.tableau    =    new    RealMatrixImpl(matrix,    j);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
72	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  j);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  j);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  j);	  this.tableau    =    new    RealMatrixImpl(matrix,    j);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
73	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  j);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  j);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  j);	  this.tableau    =    new    RealMatrixImpl(matrix,    j);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
74	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][j]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][j]);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][j]);	  this.tableau    =    new    RealMatrixImpl(matrix,    j);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
75	[BUG]  [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
76	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix  +  1);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix  +  1);	      LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
77	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  width);	      matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
78	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  grid);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  grid);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  grid);	  this.tableau    =    new    RealMatrixImpl(matrix,    col);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
79	[BUG]  [BUGGY]  int  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  int  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables.length;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
80	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  matrix);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  matrix);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  matrix);	      LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
81	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  this.tableau);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  this.tableau);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  this.tableau);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
82	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  -  2;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  int  zIndex  =  getRhsIndex()  -  2;  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  zIndex  =  getRhsIndex()  -  2;	      int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
83	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.getHeight());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.getHeight());  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.getHeight());	  this.tableau    =    new    RealMatrixImpl(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
84	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.numSlackVariables);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.numSlackVariables);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.numSlackVariables);	  this.tableau    =    new    RealMatrixImpl(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
85	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset());  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset());	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
86	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  int  zIndex  =  getRhsOffset()  -  1;  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  zIndex  =  getRhsOffset()  -  1;	      int    zIndex    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
87	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0].length);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0].length);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0].length);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
88	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  slackVar.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  slackVar.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  slackVar.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables.length;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
89	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getColumn()  -  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getColumn()  -  1);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getColumn()  -  1);	      matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
90	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsVisible()  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsVisible()  -  1);  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getRhsVisible()  -  1);	      matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
91	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  slackVar;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  slackVar;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  slackVar;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
92	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  zIndex;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  zIndex;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  zIndex;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
93	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0]);  [BUGGY]    this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0]);	  this.tableau    =    new    RealMatrixImpl(matrix,    col);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
94	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  zIndex;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  zIndex;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  zIndex;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
95	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  slackVar.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  slackVar.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  slackVar.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables.length;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
96	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  slackVar;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  slackVar;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  slackVar;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
97	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  zIndex;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }    [BUGGY]  for(int  j  =  0;  j  <  zIndex;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  zIndex;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	      for(int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
