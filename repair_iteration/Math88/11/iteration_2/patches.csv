bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  Math.min(width,  matrix.length));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  Math.min(width,  matrix.length));  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  Math.min(width,  matrix.length));	  this.tableau    =    new    RealMatrixImpl(matrix,    Math.min(height,    matrix.length));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
2	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  Math.min(0,  matrix.length));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  Math.min(0,  matrix.length));  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  Math.min(0,  matrix.length));	  this.tableau    =    new    RealMatrixImpl(matrix,    Math.min(height,    matrix.length));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
3	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  Math.min(height,  matrix.length  -  1));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  Math.min(height,  matrix.length  -  1));  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  Math.min(height,  matrix.length  -  1));	  this.tableau    =    new    RealMatrixImpl(matrix,    Math.min(height,    matrix.length));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
4	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][0]);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][0]);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][0],  matrix[i][j]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][0],  matrix[i][j]);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][0],  matrix[i][j]);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][j],  this.tableau);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][j],  this.tableau);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][j],  this.tableau);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][j],  width);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][j],  width);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][j],  width);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsVisible());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsVisible());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getRhsVisible());	  matrix[i][j]    =    getEntry(i    +    1,    getRhsVisible()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
9	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getLeftOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getLeftOffset()  -  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getLeftOffset()  -  1);	  matrix[i][j]    =    getEntry(i    +    1,    getRhsVisible()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
10	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  size  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  size  -  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  size  -  1);	  matrix[i][j]    =    getEntry(i    +    1,    height    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
11	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix,  this.tableau);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix,  this.tableau);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix,  this.tableau);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
12	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0],  matrix[1]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0],  matrix[1]);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0],  matrix[1]);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
13	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix,  column);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix,  column);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix,  column);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
14	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(columns,  getColumnsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(columns,  getColumnsOffset());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(columns,  getColumnsOffset());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
15	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(column,  getColumnsOffset());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(column,  getColumnsOffset());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(column,  getColumnsOffset());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
16	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  width);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  width);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
17	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numDecisionVariables;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
18	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  col;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  col;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  col;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    zIndex;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
19	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  matrix[0].length);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  matrix[0].length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  matrix[0].length);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
20	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  matrix[i].length);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  matrix[i].length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  matrix[i].length);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
21	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  matrix[0],  matrix.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  matrix[0],  matrix.length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  matrix[0],  matrix.length);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
22	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i  +  1][width  +  1]);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i  +  1][width  +  1]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i  +  1][width  +  1]);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
23	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[j  +  1][length  +  1]);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[j  +  1][length  +  1]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[j  +  1][length  +  1]);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
24	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i  +  1][j  +  1]);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i  +  1][j  +  1]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i  +  1][j  +  1]);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
25	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][0]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][0]);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
26	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][j],  width);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][j],  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][j],  width);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
27	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][j],  height);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][j],  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][j],  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
28	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][j],  epsilon);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][j],  epsilon);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][j],  epsilon);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
29	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  height,  width);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  height,  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  height,  width);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    height);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
30	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  height,  matrix.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  height,  matrix.length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  height,  matrix.length);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    height);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
31	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  height,  zIndex);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  height,  zIndex);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  height,  zIndex);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    height);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
32	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  height,  j);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  height,  j);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  height,  j);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    height);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
33	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix[j]);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix[j]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix[j]);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[j]);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
34	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i].length  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i].length  -  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i].length  -  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[i].length);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
35	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][j].length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][j].length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][j].length);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[i].length);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
36	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i].length,  width);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i].length,  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i].length,  width);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[i].length);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
37	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i].length,  j);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i].length,  j);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i].length,  j);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[i].length);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
38	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix[1]);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix[1]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix[1]);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
39	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this.tableau,  matrix);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this.tableau,  matrix);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(this.tableau,  matrix);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    this.tableau);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
40	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  this.tableau,  this.numArtificialVariables);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  this.tableau,  this.numArtificialVariables);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  this.tableau,  this.numArtificialVariables);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    this.tableau);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
41	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  this.tableau,  matrix.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  this.tableau,  matrix.length);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  this.tableau,  matrix.length);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    this.tableau);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
42	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix[1],  matrix.length);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix[1],  matrix.length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix[1],  matrix.length);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
43	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix.length  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix.length  -  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix.length  -  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
44	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix[0],  matrix[0],  matrix[1],  matrix.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix[0],  matrix[0],  matrix[1],  matrix.length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix[0],  matrix[0],  matrix[1],  matrix.length);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
45	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  col;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  col;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  col;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    zIndex;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
46	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  size;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  size;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  size;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    zIndex;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
47	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getColumnOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getColumnOffset());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getColumnOffset());	  matrix[i][j]    =    getEntry(i    +    1,    j);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
48	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.get(matrix,  matrix);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.get(matrix,  matrix);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.get(matrix,  matrix);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
49	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.tableau.remove(matrix,  matrix);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.tableau.remove(matrix,  matrix);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.tableau.remove(matrix,  matrix);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
50	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.remove(matrix,  matrix);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.remove(matrix,  matrix);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.remove(matrix,  matrix);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
51	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  matrix[0]);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  matrix[0]);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  matrix[0]);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
52	[BUG]  [BUGGY]  Integer  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  Integer  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	Integer  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  int    j    =    0;    j    <    numDecisionVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
53	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  width,  j);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  width,  j);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  width,  j);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    j);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
54	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  height,  col);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  height,  col);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  height,  col);	  this.tableau    =    new    RealMatrixImpl(matrix,    col,    height);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
55	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  height,  matrix.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  height,  matrix.length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  height,  matrix.length);	  this.tableau    =    new    RealMatrixImpl(matrix,    col,    height);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
56	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  height,  matrix[0]);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  height,  matrix[0]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  height,  matrix[0]);	  this.tableau    =    new    RealMatrixImpl(matrix,    col,    height);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
57	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0],  matrix.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0],  matrix.length);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0],  matrix.length);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
58	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.length  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.length  +  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.length  +  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
59	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.length  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.length  -  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.length  -  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
60	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0].length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0].length);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0].length);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
61	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  width,  col);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  width,  col);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  width,  col);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    col);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
62	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  col,  height);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  col,  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  col,  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    col);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
63	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
64	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  col;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  col;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  col;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
65	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  size;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  size;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  size;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
66	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix,  col);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix,  col);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix,  col);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    col);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0],  col);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0],  col);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0],  col);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    col);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
68	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
69	[BUG]  [BUGGY]  int  j  =  0;  j  <  numDecisionVariables.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  j  =  0;  j  <  numDecisionVariables.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  numDecisionVariables.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  int    j    =    0;    j    <    numSlackVariables.length;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
70	[BUG]  [BUGGY]  Integer  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  Integer  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	Integer  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  int    j    =    0;    j    <    numSlackVariables.length;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
71	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  col.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  col.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  col.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    slackVar.length;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
72	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  slackVar.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  slackVar.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  slackVar.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    slackVar.length;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
73	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  slackVar.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  For(int  j  =  0;  j  <  slackVar.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	For(int  j  =  0;  j  <  slackVar.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    slackVar.length;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
74	[BUG]  [BUGGY]  int  j  =  0;  j  <  numDecisionVariables.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  j  =  0;  j  <  numDecisionVariables.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  numDecisionVariables.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  int    j    =    0;    j    <    numSlackVariables.length;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
75	[BUG]  [BUGGY]  Integer  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  Integer  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	Integer  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  int    j    =    0;    j    <    numSlackVariables.length;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
76	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumn()  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumn()  +  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumn()  +  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getRhsOffset()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
77	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  grid,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  grid,  0);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  grid,  0);	  this.tableau    =    new    RealMatrixImpl(matrix,    grid);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
78	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  grid,  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  grid,  i);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  grid,  i);	  this.tableau    =    new    RealMatrixImpl(matrix,    grid);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
79	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  grid,  column);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  grid,  column);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  grid,  column);	  this.tableau    =    new    RealMatrixImpl(matrix,    grid);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
80	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(column,  getColumn());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(column,  getColumn());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(column,  getColumn());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getColumn());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
81	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(column,  matrix.getColumn());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(column,  matrix.getColumn());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(column,  matrix.getColumn());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getColumn());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
82	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  -  1,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  -  1,  getRhsOffset());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j  -  1,  getRhsOffset());	  matrix[i][j]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
83	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width,  getRhsOffset());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  width,  getRhsOffset());	  matrix[i][j]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
84	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  +  1,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  +  1,  getRhsOffset());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j  +  1,  getRhsOffset());	  matrix[i][j]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
85	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  height,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  height,  getRhsOffset());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  height,  getRhsOffset());	  matrix[i][j]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
86	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width  -  matrix.length);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width  -  matrix.length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width  -  matrix.length);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length    -    width);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
87	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  width  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  width  +  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  width  +  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length    -    width);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
88	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  height  -  width);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  height  -  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  height  -  width);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length    -    width);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
89	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  For(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	For(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  For(int    j    =    0;    j    <    numSlackVariables.length    -    1;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
90	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  For(int  j  =  0;  j  <  numDecisionVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	For(int  j  =  0;  j  <  numDecisionVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  For(int    j    =    0;    j    <    numSlackVariables.length    -    1;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
91	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  For(int    j    =    0;    j    <    numSlackVariables.length    -    1;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
92	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(width,  j  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(width,  j  +  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(width,  j  +  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
93	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(width,  i  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(width,  i  +  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(width,  i  +  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
94	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  col,  width);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  col,  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  col,  width);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    col);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
95	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  zIndex);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  zIndex);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  zIndex);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    col);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
96	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.get(matrix  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.get(matrix  +  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.get(matrix  +  1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix    +    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
97	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(j  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(j  +  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(j  +  1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix    +    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
98	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(i  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(i  +  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(i  +  1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix    +    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
99	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.remove(matrix  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.remove(matrix  +  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.remove(matrix  +  1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix    +    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
100	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.getRhsOffset());  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.getRhsOffset());	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.getHeight());    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
101	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.getHeight()  -  width);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.getHeight()  -  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.getHeight()  -  width);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.getHeight());    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
102	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.getHeight()  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.getHeight()  +  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.getHeight()  +  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.getHeight());    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
103	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i].getHeight());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i].getHeight());  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i].getHeight());	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.getHeight());    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
104	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width  -  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width  -  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
105	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  width  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  width  -  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  width  -  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
106	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset(),  col);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset(),  col);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset(),  col);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix.getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
107	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset()  +  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset()  +  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix.getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
108	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset(),  size);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset(),  size);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset(),  size);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix.getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
109	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset(),  height);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset(),  height);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset(),  height);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix.getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
110	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0],  this.tableau);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0],  this.tableau);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0],  this.tableau);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
111	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[1]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[1]);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[1]);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
112	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0][0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0][0]);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0][0]);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
113	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  numDecisionVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numSlackVariables.length    -    1;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
114	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
115	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  width.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  width.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width.length;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
116	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  width.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  For(int  j  =  0;  j  <  width.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	For(int  j  =  0;  j  <  width.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width.length;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
117	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  size.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  size.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  size.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width.length;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
118	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	For(int  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numDecisionVariables.length;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
119	[BUG]  [BUGGY]  int  zIndex  =  getColumn()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  zIndex  =  getColumn()  -  1;  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  zIndex  =  getColumn()  -  1;	  int    zIndex    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
120	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  height  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  height  +  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  height  +  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
121	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width  +  1,  j);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width  +  1,  j);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width  +  1,  j);	  this.tableau    =    new    RealMatrixImpl(matrix,    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
122	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(width,  matrix[j  +  1][width  +  1]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(width,  matrix[j  +  1][width  +  1]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(width,  matrix[j  +  1][width  +  1]);	  this.tableau    =    new    RealMatrixImpl(matrix,    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
123	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0].length  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0].length  -  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0].length  -  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0].length);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
124	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0].length  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0].length  +  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0].length  +  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0].length);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
125	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0].length,  width);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0].length,  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0].length,  width);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0].length);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
126	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
127	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  0,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  0,  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  0,  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
128	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.tableau.get(matrix);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.tableau.get(matrix);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.tableau.get(matrix);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.get(matrix);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
129	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.get(matrix,  this.tableau);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.get(matrix,  this.tableau);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.get(matrix,  this.tableau);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.get(matrix);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
130	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  width,  height);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  width,  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  width,  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    height);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
131	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix[0],  matrix[0],  col);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix[0],  matrix[0],  col);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix[0],  matrix[0],  col);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    height);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
132	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  height,  zIndex);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  height,  zIndex);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  height,  zIndex);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    height);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
133	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  0,  matrix.length  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  0,  matrix.length  -  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  0,  matrix.length  -  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    0,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
134	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  0,  matrix[0].length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  0,  matrix[0].length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  0,  matrix[0].length);	  this.tableau    =    new    RealMatrixImpl(matrix,    0,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
135	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  0,  matrix.length  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  0,  matrix.length  +  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  0,  matrix.length  +  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    0,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
136	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  0,  matrix.length  -  width);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  0,  matrix.length  -  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  0,  matrix.length  -  width);	  this.tableau    =    new    RealMatrixImpl(matrix,    0,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
137	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  col.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  col.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  col.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    slackVar.length;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
138	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  slackVar.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  For(int  j  =  0;  j  <  slackVar.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	For(int  j  =  0;  j  <  slackVar.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    slackVar.length;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
139	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  zIndex.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  zIndex.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  zIndex.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    slackVar.length;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
140	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getColumn());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getColumn());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getColumn());	  matrix[i][j]    =    getEntry(i    +    1,    getColumn()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
141	[BUG]  [BUGGY]  Integer  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  Integer  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	Integer  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
142	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
143	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  size;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  size;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  size;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
144	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  width);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  width);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[i],    j);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
145	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  col);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  col);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  col);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[i],    j);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
146	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  height);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[i],    j);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
147	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  j,  height);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  j,  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  j,  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[i],    j);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
148	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
149	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix[i],  matrix[i]);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix[i],  matrix[i]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix[i],  matrix[i]);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[i]);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
150	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width  +  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  width  +  1);	  matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
151	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  height  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  height  +  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  height  +  1);	  matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
152	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  j  +  1,  height);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  j  +  1,  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  j  +  1,  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    j    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
153	[BUG]  [BUGGY]  Integer  zIndex  =  getRhsIndex();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  Integer  zIndex  =  getRhsIndex();  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	Integer  zIndex  =  getRhsIndex();	  int    zIndex    =    getRhsIndex()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
154	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	For(int  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numDecisionVariables.length;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
155	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[size]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[size]);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[size]);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    size);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
156	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  width);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  width);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  width);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    size);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
157	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  3);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  3);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  3);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    0);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
158	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  2);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  2);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    0);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
159	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  0,  matrix.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  0,  matrix.length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  0,  matrix.length);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    0);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
160	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  width.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  width.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width.length;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
161	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  width.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  For(int  j  =  0;  j  <  width.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	For(int  j  =  0;  j  <  width.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width.length;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
162	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  height.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  height.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  height.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width.length;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
163	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.get(matrix,  height);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.get(matrix,  height);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.get(matrix,  height);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
164	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.tableau.remove(matrix,  height);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.tableau.remove(matrix,  height);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.tableau.remove(matrix,  height);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
165	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  height  +  1);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  height  +  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  height  +  1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
166	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  width,  height);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  width,  height);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  width,  height);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
167	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(j);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(j);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(j);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)matrix.get(i);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
168	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(i-1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(i-1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(i-1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)matrix.get(i);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
169	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.tableau.clone();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.tableau.clone();  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.tableau.clone();	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.tableau.remove(matrix);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
170	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.remove(this.tableau);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.remove(this.tableau);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.remove(this.tableau);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.tableau.remove(matrix);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
171	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(this.tableau);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(this.tableau);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(this.tableau);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.tableau.remove(matrix);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
172	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  numDecisionVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  numDecisionVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numSlackVariables.length    -    1;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
173	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  col);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  col);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  col);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getRhsOffset(),    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
174	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  width,  matrix.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  width,  matrix.length);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  width,  matrix.length);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getRhsOffset(),    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
175	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  height);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  height);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  height);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getRhsOffset(),    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
176	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  matrix.length  -  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  matrix.length  -  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  matrix.length  -  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getRhsOffset(),    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
177	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  null);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  null);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  null);	  this.tableau    =    new    RealMatrixImpl(matrix,    null);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
178	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  null,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  null,  0);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  null,  0);	  this.tableau    =    new    RealMatrixImpl(matrix,    null);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
179	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  height,  j);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  height,  j);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  height,  j);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    j);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
180	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  j  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  j  +  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  j  +  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    j);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
181	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  j,  width);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  j,  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  j,  width);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    j);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
182	[BUG]  [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  numDecisionVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
183	[BUG]  [BUGGY]  Integer  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  Integer  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	Integer  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
184	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.numDecisionVariables);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.numDecisionVariables);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.numDecisionVariables);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.numSlackVariables);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
185	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.numArtificialVariables);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.numArtificialVariables);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.numArtificialVariables);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.numSlackVariables);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
186	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.numSlackVariables,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.numSlackVariables,  0);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.numSlackVariables,  0);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.numSlackVariables);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
187	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.numSlackVariables,  height);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.numSlackVariables,  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.numSlackVariables,  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.numSlackVariables);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
188	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  height,  matrix);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  height,  matrix);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  height,  matrix);	  this.tableau    =    new    RealMatrixImpl(matrix,    col,    height);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
189	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  0,  height);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  0,  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  0,  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    col,    height);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
190	[BUG]  [BUGGY]  int  zIndex  =  getLeftIndex();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  zIndex  =  getLeftIndex();  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  zIndex  =  getLeftIndex();	  int    zIndex    =    getRhsIndex()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
191	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.length  -  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.length  -  2);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.length  -  2);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
192	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  matrix.length  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  matrix.length  -  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  matrix.length  -  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
193	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  matrix.length  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  matrix.length  +  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  matrix.length  +  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
194	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  height  -  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  height  -  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  height  -  1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
195	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  width);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  width);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  width);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
196	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  height.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  height.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  height.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width.length;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
197	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  0,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  0,  0);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  0,  0);	  this.tableau    =    new    RealMatrixImpl(matrix,    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
198	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  matrix.length  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  matrix.length  +  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  matrix.length  +  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getRhsOffset(),    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
199	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumn(),  matrix.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumn(),  matrix.length);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumn(),  matrix.length);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getRhsOffset(),    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
200	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
201	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  height  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  height  -  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  height  -  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    height);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
202	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsIndex());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsIndex());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsIndex());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix.getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
203	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset()  -  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset()  -  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix.getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
204	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  size.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  size.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  size.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width.length;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
205	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  row;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  row;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  row;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    slackVar;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
206	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVar;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  numSlackVar;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  numSlackVar;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    slackVar;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
207	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  i);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  i);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    col);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
208	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  dataArea);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  dataArea);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  dataArea);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    col);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
209	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[j],  height);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[j],  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[j],  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[j]);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
210	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][0].length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][0].length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][0].length);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[i].length);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
211	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][j  -  1]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][j  -  1]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i][j  -  1]);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
212	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  Math.min(height,  matrix.length)+  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  Math.min(height,  matrix.length)+  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  Math.min(height,  matrix.length)+  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    Math.min(height,    matrix.length));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
213	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  slackVar.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  slackVar.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  slackVar.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    slackVar.length;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
214	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  row.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  row.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  row.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    slackVar.length;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
215	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.getHeight()  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.getHeight()  -  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.getHeight()  -  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.getHeight());    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
216	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[1].length);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[1].length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[1].length);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0].length);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
217	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0].length,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0].length,  0);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0].length,  0);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0].length);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
218	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  height);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  height);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  height);	  matrix[i][j]    =    getEntry(i    +    1,    width);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
219	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getColumnsOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getColumnsOffset());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getColumnsOffset());	  matrix[i][j]    =    getEntry(i    +    1,    j);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
220	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  1  +  width);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  1  +  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  1  +  width);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
221	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  2);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  2);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
222	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][1]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][1]);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][1]);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
223	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][j],  height);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][j],  height);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[i][j],  height);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
224	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  *  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  zIndex  =  getRhsIndex()  *  1;  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  zIndex  =  getRhsIndex()  *  1;	  int    zIndex    =    getRhsIndex()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
225	[BUG]  [BUGGY]  int  j  =  0;  j  <  numSlackVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  j  =  0;  j  <  numSlackVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  numSlackVariables.length  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numSlackVariables.length    -    1;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
226	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[1]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[1]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[1]);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
227	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  0);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  0);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
228	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  j  +  1,  width);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  j  +  1,  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  j  +  1,  width);	  this.tableau    =    new    RealMatrixImpl(matrix,    j    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
229	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  height);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length    -    width);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
230	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  j  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  j  +  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  j  +  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    j);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
231	[BUG]  [BUGGY]  int  zIndex  =  getRowIndex();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  zIndex  =  getRowIndex();  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  zIndex  =  getRowIndex();	  int    zIndex    =    getColumnIndex();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
232	[BUG]  [BUGGY]  int  zIndex  =  getColumnIndex()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  zIndex  =  getColumnIndex()  +  1;  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  zIndex  =  getColumnIndex()  +  1;	  int    zIndex    =    getColumnIndex();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
233	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  j  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  j  +  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  j  +  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[i],    j);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
234	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix,  height);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix,  height);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix,  height);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
235	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.doubleValue());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.doubleValue());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.doubleValue());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
236	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix,  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix,  null);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix,  null);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
237	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix,  null);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix,  null);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix,  null);	  this.tableau    =    new    RealMatrixImpl(matrix,    null);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
238	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  null,  matrix.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  null,  matrix.length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  null,  matrix.length);	  this.tableau    =    new    RealMatrixImpl(matrix,    null);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
239	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  row;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  row;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  row;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    slackVar;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
240	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVar;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  numSlackVar;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  numSlackVar;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    slackVar;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
241	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  this.tableau,  this.artificialVariables);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  this.tableau,  this.artificialVariables);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  this.tableau,  this.artificialVariables);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    this.tableau);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
242	[BUG]  [BUGGY]  int  zIndex  =  getRowOffset();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  zIndex  =  getRowOffset();  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  zIndex  =  getRowOffset();	  int    zIndex    =    getColumnOffset();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
243	[BUG]  [BUGGY]  int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numDecisionVariables;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
244	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  getRhsOffset()  -  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j,  getRhsOffset()  -  1);	  matrix[i][j]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
245	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  dataArea,  col);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  dataArea,  col);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  dataArea,  col);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    col);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
246	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  this.col);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  this.col);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  this.col);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    col);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
247	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  0,  height);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  0,  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  0,  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    height);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
248	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  zIndex  =  getRhsOffset()  +  2;  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  zIndex  =  getRhsOffset()  +  2;	  int    zIndex    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
249	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.numSlackVariables  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.numSlackVariables  -  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.numSlackVariables  -  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.numSlackVariables);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
250	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  Math.min(size,  matrix.length));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  Math.min(size,  matrix.length));  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  Math.min(size,  matrix.length));	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    size);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
251	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  +  1,  width);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  +  1,  width);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  +  1,  width);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
252	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  row;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  row;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  row;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    slackVar;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
253	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVar;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  numSlackVar;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  numSlackVar;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    slackVar;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
254	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0][1]);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0][1]);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix[0][1]);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
255	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  zIndex.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  zIndex.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  zIndex.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    slackVar.length;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
256	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
257	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumnsOffset(),  matrix.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumnsOffset(),  matrix.length);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumnsOffset(),  matrix.length);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
258	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumnsOffset(),  matrix);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumnsOffset(),  matrix);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumnsOffset(),  matrix);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
259	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix.length  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix.length  +  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix.length  +  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
260	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[1],  matrix.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[1],  matrix.length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[1],  matrix.length);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
261	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRow());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRow());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRow());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getColumn());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
262	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsColumn());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsColumn());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsColumn());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getColumn());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
263	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  1,  height);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  1,  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  -  1,  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
264	[BUG]  [BUGGY]  int  j  =  0;  j  <  slackVar;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  j  =  0;  j  <  slackVar;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  slackVar;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  int    j    =    0;    j    <    numDecisionVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
265	[BUG]  [BUGGY]  int  j  =  0;  j  <  i;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  j  =  0;  j  <  i;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  i;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  int    j    =    0;    j    <    numDecisionVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
266	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  0,  j);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  0,  j);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  0,  j);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[i],    j);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
267	[BUG]  [BUGGY]  int  j  =  0;  j  <  slackVar;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  j  =  0;  j  <  slackVar;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  slackVar;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  int    j    =    0;    j    <    numDecisionVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
268	[BUG]  [BUGGY]  int  j  =  0;  j  <  i;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  j  =  0;  j  <  i;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  i;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  int    j    =    0;    j    <    numDecisionVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
269	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  count;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  count;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  count;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
270	[BUG]  [BUGGY]  int  j  =  0;  j  <  slackVar;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  j  =  0;  j  <  slackVar;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  slackVar;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
271	[BUG]  [BUGGY]  int  j  =  0;  j  <  zIndex;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  j  =  0;  j  <  zIndex;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  zIndex;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
272	[BUG]  [BUGGY]  int  j  =  0;  j  <  slackVar.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  j  =  0;  j  <  slackVar.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  slackVar.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  int    j    =    0;    j    <    numSlackVariables.length;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
273	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsDisable()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsDisable()  -  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getRhsDisable()  -  1);	  matrix[i][j]    =    getEntry(i    +    1,    getRhsVisible()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
274	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  +  2;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  zIndex  =  getRhsIndex()  +  2;  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  zIndex  =  getRhsIndex()  +  2;	  int    zIndex    =    getRhsIndex()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
275	[BUG]  [BUGGY]  int  zIndex  =  getColumnIndex()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  zIndex  =  getColumnIndex()  -  1;  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  zIndex  =  getColumnIndex()  -  1;	  int    zIndex    =    getColumnIndex();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
276	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getColumnsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getColumnsOffset());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getColumnsOffset());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getColumnsOffset());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
277	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.size);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.size);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.size);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    size);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
278	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  count;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  count;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  count;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
279	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  matrix.length  -  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  matrix.length  -  2);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getRhsOffset(),  matrix.length  -  2);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getRhsOffset(),    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
280	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  i  +  1,  j);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  i  +  1,  j);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  i  +  1,  j);	  this.tableau    =    new    RealMatrixImpl(matrix,    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
281	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  matrix[j]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  matrix[j]);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[i],  matrix[j]);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
282	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  *  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  zIndex  =  getRhsOffset()  *  1;  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  zIndex  =  getRhsOffset()  *  1;	  int    zIndex    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
283	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  matrix.length);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  matrix.length);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  matrix.length);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
284	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  matrix.getHeight());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  matrix.getHeight());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  matrix.getHeight());	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
285	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  i,  col);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  i,  col);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  i,  col);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    col);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
286	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  +  1,  height);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  +  1,  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.length  +  1,  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
287	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  grid,  epsilon);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  grid,  epsilon);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  grid,  epsilon);	  this.tableau    =    new    RealMatrixImpl(matrix,    grid);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
288	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset(),  matrix.getArtificialVariables());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset(),  matrix.getArtificialVariables());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset(),  matrix.getArtificialVariables());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix.getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
289	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset(),  matrix.getEntryCount());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset(),  matrix.getEntryCount());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getRhsOffset(),  matrix.getEntryCount());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix.getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
290	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  row,  col,  height);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  row,  col,  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  row,  col,  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    col,    height);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
291	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  col,  height,  matrix.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  col,  height,  matrix.length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  col,  height,  matrix.length);	  this.tableau    =    new    RealMatrixImpl(matrix,    col,    height);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
292	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  height  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  height  +  1);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  height  +  1);	  this.tableau    =    new    RealMatrixImpl(matrix,    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
293	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  height,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  height,  0);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  height,  0);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    0);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
294	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  count;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  count;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  count;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
295	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  0,  j);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  0,  j);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  0,  j);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    j);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
296	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	For(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    numDecisionVariables;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
297	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.col);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.col);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.col);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    col);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
298	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getColumn());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getColumn());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.getColumn());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getColumn());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
299	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumn(),  matrix);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumn(),  matrix);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  getColumn(),  matrix);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    getColumn());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
300	[BUG]  [BUGGY]  int  j  =  0;  j  <  zIndex;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  j  =  0;  j  <  zIndex;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  zIndex;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  int    j    =    0;    j    <    numSlackVariables;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
301	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.getHeight(),  height);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix.getHeight(),  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix.getHeight(),  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix.getHeight());    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
302	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  i,  height);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  i,  height);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  i,  height);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    height);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
303	[BUG]  [BUGGY]  int  j  =  0;  j  <  slackVar.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  int  j  =  0;  j  <  slackVar.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	int  j  =  0;  j  <  slackVar.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  int    j    =    0;    j    <    numSlackVariables.length;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
304	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getHeight()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getHeight()  -  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getHeight()  -  1);	  matrix[i][j]    =    getEntry(i    +    1,    height    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
305	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  j  +  1,  matrix.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  j  +  1,  matrix.length);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  j  +  1,  matrix.length);	  this.tableau    =    new    RealMatrixImpl(matrix,    j    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
306	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix.length,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix.length,  0);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  matrix[0],  matrix.length,  0);	  this.tableau    =    new    RealMatrixImpl(matrix,    matrix[0],    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
307	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  this.col);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  width,  this.col);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  width,  this.col);	  this.tableau    =    new    RealMatrixImpl(matrix,    width,    col);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
308	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.tableau.remove(matrix  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.tableau.remove(matrix  +  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)this.tableau.remove(matrix  +  1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)this.tableau.remove(matrix);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
309	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  width  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  width  +  1);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)super.remove(matrix,  width  +  1);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)super.remove(matrix    +    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
310	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  Math.min(height,  matrix.length),  0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  Math.min(height,  matrix.length),  0);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  Math.min(height,  matrix.length),  0);	  this.tableau    =    new    RealMatrixImpl(matrix,    Math.min(height,    matrix.length));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
311	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  0,  matrix.length  -  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix,  0,  matrix.length  -  2);  [BUGGY]      this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	this.tableau  =  new  RealMatrixImpl(matrix,  0,  matrix.length  -  2);	  this.tableau    =    new    RealMatrixImpl(matrix,    0,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
312	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getStandardOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getStandardOffset());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getStandardOffset());	  matrix[i][j]    =    getEntry(i    +    1,    width);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
313	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  getColumnOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  getColumnOffset());  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j,  getColumnOffset());	  matrix[i][j]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
314	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(i++);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(i++);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =(LinearObjectiveFunction)matrix.get(i++);	  LinearObjectiveFunction    f    =(LinearObjectiveFunction)matrix.get(i);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
315	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    zIndex;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
316	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.length,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.length,  0);  [BUGGY]      this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	302	302	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(matrix,  matrix.length,  0);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(matrix,    matrix.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
