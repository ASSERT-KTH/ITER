bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  matrix[row][getStandardVariableOffset()  +  height++]  =  -1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getStandardVariableOffset()  +  height++]  =  -1;  [BUGGY]      matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess      }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getStandardVariableOffset()  +  height++]  =  -1;	  matrix[row][getStandardVariableOffset()    +    slackVar++]    =    -1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
2	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  height++]  =  0;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  height++]  =  0;  [BUGGY]      matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess      }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getSlackVariableOffset()  +  height++]  =  0;	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    0;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
3	[BUG]  [BUGGY]  matrix[row][getStandardVariableOffset()  +  height++]  =  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getStandardVariableOffset()  +  height++]  =  1;  [BUGGY]      matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess      }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getStandardVariableOffset()  +  height++]  =  1;	  matrix[row][getStandardVariableOffset()    +    slackVar++]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
4	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  height++]  =  -1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  height++]  =  -1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getSlackVarOffset()  +  height++]  =  -1;	  matrix[row][getSlackVarOffset()    +    slackVar++]    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
5	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar++]  =  1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar++]  =  1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getSlackVarOffset()  +  slackVar++]  =  1;	  matrix[row][getSlackVarOffset()    +    slackVar++]    =    -1;    	non-compiled	[CE]  not  a  statement	16	None	replace
6	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  width++]  =  -1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  width++]  =  -1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getSlackVarOffset()  +  width++]  =  -1;	  matrix[row][getSlackVarOffset()    +    slackVar++]    =    -1;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  matrix[row][getRowVarOffset()  +  slackVar++]  =  -1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getRowVarOffset()  +  slackVar++]  =  -1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getRowVarOffset()  +  slackVar++]  =  -1;	  matrix[row][getSlackVarOffset()    +    slackVar++]    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
8	[BUG]  [BUGGY]  matrix[row][getRelationship()  +  slackVar++]  =  1;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getRelationship()  +  slackVar++]  =  1;  [BUGGY]      matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess      }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getRelationship()  +  slackVar++]  =  1;	  matrix[row][getRelationship()    +    slackVar++]    =    -1;    	non-compiled	[CE]  not  a  statement	24	None	replace
9	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  height]  =  -1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  height]  =  -1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getSlackVariableOffset()  +  height]  =  -1;	  matrix[row][getSlackVariableOffset()    +    slackVar]    =    -1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
10	[BUG]  [BUGGY]  matrix[row][getRowVariableOffset()  +  slackVar]  =  -1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getRowVariableOffset()  +  slackVar]  =  -1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getRowVariableOffset()  +  slackVar]  =  -1;	  matrix[row][getSlackVariableOffset()    +    slackVar]    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
11	[BUG]  [BUGGY]  matrix[1][getSlackVariableOffset()  +  height++]  =  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[1][getSlackVariableOffset()  +  height++]  =  1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[1][getSlackVariableOffset()  +  height++]  =  1;	  matrix[1][getSlackVariableOffset()    +    slackVar++]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
12	[BUG]  [BUGGY]  matrix[1][getArtificialVariableOffset()  +  slackVar++]  =  1;  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[1][getArtificialVariableOffset()  +  slackVar++]  =  1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[1][getArtificialVariableOffset()  +  slackVar++]  =  1;	  matrix[1][getSlackVariableOffset()    +    slackVar++]    =    1;    	non-compiled	[CE]  not  a  statement	2	None	replace
13	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  height]  =  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  height]  =  1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getSlackVariableOffset()  +  height]  =  1;	  matrix[row][getSlackVariableOffset()    +    slackVar]    =    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
14	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  width]  =  1;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  width]  =  1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getSlackVariableOffset()  +  width]  =  1;	  matrix[row][getSlackVariableOffset()    +    slackVar]    =    1;    	non-compiled	[CE]  not  a  statement	20	None	replace
15	[BUG]  [BUGGY]  matrix[row][getRowVariableOffset()  +  slackVar]  =  1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getRowVariableOffset()  +  slackVar]  =  1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getRowVariableOffset()  +  slackVar]  =  1;	  matrix[row][getSlackVariableOffset()    +    slackVar]    =    1;    	non-compiled	[CE]  not  a  statement	20	None	replace
16	[BUG]  [BUGGY]  matrix[row][getColumnValue()  +  slackVar++]  =  -1;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getColumnValue()  +  slackVar++]  =  -1;  [BUGGY]      matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess      }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getColumnValue()  +  slackVar++]  =  -1;	  matrix[row][getRowValue()    +    slackVar++]    =    -1;    	non-compiled	[CE]  not  a  statement	22	None	replace
17	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  height++]  =  2;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  height++]  =  2;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getSlackVariableOffset()  +  height++]  =  2;	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    2;    	non-compiled	[CE]  not  a  statement	12	None	replace
18	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  width++]  =  2;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  width++]  =  2;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getSlackVariableOffset()  +  width++]  =  2;	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    2;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
19	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  height++]  =  1);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  height++]  =  1);  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getSlackVariableOffset()  +  height++]  =  1);	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    1);    	non-compiled	[CE]  ';'  expected	13	None	replace
20	[BUG]  [BUGGY]  matrix[row][getColumnOffset()  +  slackVar++]  =  -1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getColumnOffset()  +  slackVar++]  =  -1;  [BUGGY]      matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess      }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getColumnOffset()  +  slackVar++]  =  -1;	  matrix[row][getRowOffset()    +    slackVar++]    =    -1;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
21	[BUG]  [BUGGY]  matrix[row][getRowOffset()  +  height++]  =  -1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getRowOffset()  +  height++]  =  -1;  [BUGGY]      matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess      }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getRowOffset()  +  height++]  =  -1;	  matrix[row][getRowOffset()    +    slackVar++]    =    -1;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
22	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  height++]  =  -1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getSlackVar()  +  height++]  =  -1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getSlackVar()  +  height++]  =  -1;	  matrix[row][getSlackVar()    +    slackVar++]    =    -1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
23	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  2;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getSlackVar()  +  slackVar++]  =  2;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getSlackVar()  +  slackVar++]  =  2;	  matrix[row][getSlackVar()    +    slackVar++]    =    -1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  width++]  =  -1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getSlackVar()  +  width++]  =  -1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getSlackVar()  +  width++]  =  -1;	  matrix[row][getSlackVar()    +    slackVar++]    =    -1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  matrix[0][getSlackVariableOffset()  +  height++]  =  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[0][getSlackVariableOffset()  +  height++]  =  1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[0][getSlackVariableOffset()  +  height++]  =  1;	  matrix[0][getSlackVariableOffset()    +    slackVar++]    =    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  matrix[row][getRowVariableOffset()  +  height++]  =  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getRowVariableOffset()  +  height++]  =  1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getRowVariableOffset()  +  height++]  =  1;	  matrix[row][getRowVariableOffset()    +    slackVar++]    =    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  matrix[row][getArtificialVariableOffset()  +  height++]  =  0;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getArtificialVariableOffset()  +  height++]  =  0;  [BUGGY]      matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess      }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getArtificialVariableOffset()  +  height++]  =  0;	  matrix[row][getArtificialVariableOffset()    +    height++]    =    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  Matrix[row][getSlackVariableOffset()  +  height++]  =  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  Matrix[row][getSlackVariableOffset()  +  height++]  =  1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	Matrix[row][getSlackVariableOffset()  +  height++]  =  1;	  Matrix[row][getSlackVariableOffset()    +    slackVar++]    =    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
29	[BUG]  [BUGGY]  Matrix[row][getSlackVariableOffset()  +  width++]  =  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  Matrix[row][getSlackVariableOffset()  +  width++]  =  1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	Matrix[row][getSlackVariableOffset()  +  width++]  =  1;	  Matrix[row][getSlackVariableOffset()    +    slackVar++]    =    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
30	[BUG]  [BUGGY]  Matrix[row][getRowVariableOffset()  +  slackVar++]  =  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  Matrix[row][getRowVariableOffset()  +  slackVar++]  =  1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	Matrix[row][getRowVariableOffset()  +  slackVar++]  =  1;	  Matrix[row][getSlackVariableOffset()    +    slackVar++]    =    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
31	[BUG]  [BUGGY]  matrix[row][getColumnVariableOffset()  +  height++]  =  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getColumnVariableOffset()  +  height++]  =  1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getColumnVariableOffset()  +  height++]  =  1;	  matrix[row][getColumnVariableOffset()    +    slackVar++]    =    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  matrix[row][getRowOffset()  +  height++]  =  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getRowOffset()  +  height++]  =  1;  [BUGGY]      matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess      }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getRowOffset()  +  height++]  =  1;	  matrix[row][getRowOffset()    +    slackVar++]    =    1;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
33	[BUG]  [BUGGY]  matrix[row][getColumnOffset()  +  slackVar++]  =  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getColumnOffset()  +  slackVar++]  =  1;  [BUGGY]      matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess      }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getColumnOffset()  +  slackVar++]  =  1;	  matrix[row][getRowOffset()    +    slackVar++]    =    1;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  matrix[row][getColumnVariableOffset()  +  slackVar++]  =  -1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getColumnVariableOffset()  +  slackVar++]  =  -1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getColumnVariableOffset()  +  slackVar++]  =  -1;	  matrix[row][getRowVariableOffset()    +    height++]    =    -1;    	non-compiled	[CE]  not  a  statement	6	None	replace
35	[BUG]  [BUGGY]  matrix[row][getColumnValue()  +  slackVar++]  =  1;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getColumnValue()  +  slackVar++]  =  1;  [BUGGY]      matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess      }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getColumnValue()  +  slackVar++]  =  1;	  matrix[row][getRowValue()    +    slackVar++]    =    1;    	non-compiled	[CE]  not  a  statement	18	None	replace
36	[BUG]  [BUGGY]  matrix[row][getRowValue()  +  slackVar++]  =  0;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getRowValue()  +  slackVar++]  =  0;  [BUGGY]      matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess      }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getRowValue()  +  slackVar++]  =  0;	  matrix[row][getRowValue()    +    slackVar++]    =    1;    	non-compiled	[CE]  not  a  statement	18	None	replace
37	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  height++]  =  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getSlackVar()  +  height++]  =  1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getSlackVar()  +  height++]  =  1;	  matrix[row][getSlackVar()    +    slackVar++]    =    1;    	non-compiled	[CE]  not  a  statement	15	None	replace
38	[BUG]  [BUGGY]  matrix[row][getSlackVar()  +  width++]  =  1;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getSlackVar()  +  width++]  =  1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getSlackVar()  +  width++]  =  1;	  matrix[row][getSlackVar()    +    slackVar++]    =    1;    	non-compiled	[CE]  not  a  statement	15	None	replace
39	[BUG]  [BUGGY]  matrix[row][getRowVar()  +  slackVar++]  =  -1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getRowVar()  +  slackVar++]  =  -1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getRowVar()  +  slackVar++]  =  -1;	  matrix[row][getSlackVar()    +    slackVar++]    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
40	[BUG]  [BUGGY]  matrix[1][getSlackVariableOffset()  +  slackVar++]  =  2;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[1][getSlackVariableOffset()  +  slackVar++]  =  2;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[1][getSlackVariableOffset()  +  slackVar++]  =  2;	  matrix[1][getSlackVariableOffset()    +    slackVar++]    =    1;    	non-compiled	[CE]  not  a  statement	2	None	replace
41	[BUG]  [BUGGY]  matrix[row][getRowOffset()  +  slackVar++]  =  0;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getRowOffset()  +  slackVar++]  =  0;  [BUGGY]      matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess      }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getRowOffset()  +  slackVar++]  =  0;	  matrix[row][getRowOffset()    +    slackVar++]    =    1;    	non-compiled	[CE]  not  a  statement	4	None	replace
42	[BUG]  [BUGGY]  matrix[row][getRelationship()  +  slackVar++]  =  0;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getRelationship()  +  slackVar++]  =  0;  [BUGGY]      matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess      }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getRelationship()  +  slackVar++]  =  0;	  matrix[row][getRelationship()    +    slackVar++]    =    -1;    	non-compiled	[CE]  not  a  statement	24	None	replace
43	[BUG]  [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar++]  =  2;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getSlackVarOffset()  +  slackVar++]  =  2;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getSlackVarOffset()  +  slackVar++]  =  2;	  matrix[row][getSlackVarOffset()    +    slackVar++]    =    -1;    	non-compiled	[CE]  not  a  statement	16	None	replace
44	[BUG]  [BUGGY]  matrix[row][getStandardVariableOffset()  +  slackVar++]  =  0;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getStandardVariableOffset()  +  slackVar++]  =  0;  [BUGGY]      matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess      }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getStandardVariableOffset()  +  slackVar++]  =  0;	  matrix[row][getStandardVariableOffset()    +    slackVar++]    =    1;    	non-compiled	[CE]  not  a  statement	17	None	replace
45	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  3;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  3;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar++]  =  3;	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    2;    	non-compiled	[CE]  not  a  statement	12	None	replace
46	[BUG]  [BUGGY]  matrix[row][getRowVariableOffset()  +  slackVar++]  =  2;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getRowVariableOffset()  +  slackVar++]  =  2;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getRowVariableOffset()  +  slackVar++]  =  2;	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    2;    	non-compiled	[CE]  not  a  statement	12	None	replace
47	[BUG]  [BUGGY]  matrix[row][getRowVariableOffset()  +  slackVar++]  =  0;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getRowVariableOffset()  +  slackVar++]  =  0;  [BUGGY]      matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess      }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getRowVariableOffset()  +  slackVar++]  =  0;	  matrix[row][getSlackVariableOffset()    +    slackVar++]    =    0;    	non-compiled	[CE]  not  a  statement	23	None	replace
48	[BUG]  [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar]  =  2;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getSlackVariableOffset()  +  slackVar]  =  2;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getSlackVariableOffset()  +  slackVar]  =  2;	  matrix[row][getSlackVariableOffset()    +    slackVar]    =    1;    	non-compiled	[CE]  not  a  statement	20	None	replace
49	[BUG]  [BUGGY]  matrix[row][getStandardVariableOffset()  +  slackVar++]  =  2;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[row][getStandardVariableOffset()  +  slackVar++]  =  2;  [BUGGY]      matrix[row][getSlackVariableOffset()  +  slackVar++]  =  -1;  //  excess      }  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[row][getStandardVariableOffset()  +  slackVar++]  =  2;	  matrix[row][getStandardVariableOffset()    +    slackVar++]    =    -1;    	non-compiled	[CE]  not  a  statement	21	None	replace
50	[BUG]  [BUGGY]  matrix[0][getSlackVariableOffset()  +  width++]  =  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  matrix[0][getSlackVariableOffset()  +  width++]  =  1;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	matrix[0][getSlackVariableOffset()  +  width++]  =  1;	  matrix[0][getSlackVariableOffset()    +    slackVar++]    =    1;    	non-compiled	[CE]  not  a  statement	1	None	replace
51	[BUG]  [BUGGY]  Matrix[row][getSlackVariableOffset()  +  slackVar++]  =  2;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      getInvertedCoeffiecientSum(constraint.getCoefficients());  }  matrix[row][width  -  1]  =  constraint.getValue();  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix[row][getSlackVariableOffset()  +  slackVar++]  =  1;//  slack  }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {      [BUGGY]  Matrix[row][getSlackVariableOffset()  +  slackVar++]  =  2;  [BUGGY]      }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix[0][getArtificialVariableOffset()  +  artificialVar]  =  1;  matrix[row][getArtificialVariableOffset()  +  artificialVar++]  =  1;  }  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.4082482904638631	172	173	1	replace	Matrix[row][getSlackVariableOffset()  +  slackVar++]  =  2;	  Matrix[row][getSlackVariableOffset()    +    slackVar++]    =    1;    	non-compiled	[CE]  not  a  statement	25	None	replace
