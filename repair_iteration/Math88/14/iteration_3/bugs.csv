bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getSolutionVariables()  ];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getSolutionVariables()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getSolutionVariables()  ];	  double[]    coefficients    =    new    double[getSolutionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
2	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getSolutionVariables().length  -  1];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getSolutionVariables().length  -  1];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getSolutionVariables().length  -  1];	  double[]    coefficients    =    new    double[getSolutionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
3	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getSolutionVariables().length];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getSolutionVariables().length];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  new  int[getSolutionVariables().length];	  double[]    coefficients    =    new    double[getSolutionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
4	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getSolutionVariables().length  +  1];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getSolutionVariables().length  +  1];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getSolutionVariables().length  +  1];	  double[]    coefficients    =    new    double[getSolutionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
5	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions()  /  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions()  /  getOriginalNumDecisionVariables());  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions()  /  getOriginalNumDecisionVariables());	  Integer    coefficients[]    =    getEntry(getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
6	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions()  *  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions()  *  getOriginalNumDecisionVariables());  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions()  *  getOriginalNumDecisionVariables());	  Integer    coefficients[]    =    getEntry(getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
7	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions()  +  getDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions()  +  getDecisionVariables());  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions()  +  getDecisionVariables());	  Integer    coefficients[]    =    getEntry(getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
8	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions()  +  getOriginalVariables());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions()  +  getOriginalVariables());  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions()  +  getOriginalVariables());	  Integer    coefficients[]    =    getEntry(getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
9	[BUG]  [BUGGY]  double[]  coefficients  =  getNumDecisionVariables();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getNumDecisionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  getNumDecisionVariables();	  double[]    coefficients    =    getSolution();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
10	[BUG]  [BUGGY]  double[]  coefficients  =  getSum();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getSum();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  getSum();	  double[]    coefficients    =    getSolution();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables()  +  getOriginalVariables()  +  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables()  +  getOriginalVariables()  +  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicVariables()  +  getOriginalVariables()  +  1];	  double[]    coefficients    =    new    double[getBasicVariables()    +    getOriginalVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
12	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables()  +  getDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables()  +  getDecisionVariables()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicVariables()  +  getDecisionVariables()  ];	  double[]    coefficients    =    new    double[getBasicVariables()    +    getOriginalVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
13	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables()  +  getOriginalNumDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables()  +  getOriginalNumDecisionVariables()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicVariables()  +  getOriginalNumDecisionVariables()  ];	  double[]    coefficients    =    new    double[getBasicVariables()    +    getOriginalVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
14	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  *  getOriginalNumDecisionVariables()  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  *  getOriginalNumDecisionVariables()  +  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  *  getOriginalNumDecisionVariables()  +  1];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    *    getOriginalNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
15	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumObjectiveFunctions()  *  getOriginalNumDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumObjectiveFunctions()  *  getOriginalNumDecisionVariables()];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumObjectiveFunctions()  *  getOriginalNumDecisionVariables()];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    *    getOriginalNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
16	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  *  getBasicNumDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  *  getBasicNumDecisionVariables()];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  *  getBasicNumDecisionVariables()];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    *    getOriginalNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
17	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumSlackVariables()  +  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumSlackVariables()  +  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumSlackVariables()  +  1];	  double[]    coefficients    =    new    double[getNumSlackVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
18	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getSlackVariables()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getSlackVariables()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getSlackVariables()  ];	  double[]    coefficients    =    new    double[getNumSlackVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
19	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  *  getNumDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  *  getNumDecisionVariables()];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  *  getNumDecisionVariables()];	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
20	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  getNumDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  getNumDecisionVariables()];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  getNumDecisionVariables()];	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
21	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getRows()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getRows()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  new  int[getRows()  ];	  double[]    coefficients    =    new    double[getRows()    ];    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
22	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getSolution()  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getSolution()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getSolution()  ];	  double[]    coefficients    =    new    double[getRows()    ];    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
23	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables().length  -  1];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables().length  -  1];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables().length  -  1];	  double[]    coefficients    =    new    double[getNumDecisionVariables().length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
24	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  2];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  2];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  /  2];	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    /    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
25	[BUG]  [BUGGY]  Integer  coefficients[]  =  getOriginalNumDecisionVariables();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getOriginalNumDecisionVariables();  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getOriginalNumDecisionVariables();	  Integer    coefficients[]    =    getSolution();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
26	[BUG]  [BUGGY]  Integer  coefficients[]  =  getNumObjectiveFunctions();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getNumObjectiveFunctions();  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getNumObjectiveFunctions();	  Integer    coefficients[]    =    getSolution();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
27	[BUG]  [BUGGY]  Integer  coefficients[]  =  getBasicFunction();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getBasicFunction();  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getBasicFunction();	  Integer    coefficients[]    =    getSolution();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
28	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumSlackVariables()  *  getOriginalNumDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumSlackVariables()  *  getOriginalNumDecisionVariables()];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumSlackVariables()  *  getOriginalNumDecisionVariables()];	  double[]    coefficients    =    new    double[getNumSlackVariables()    +    getOriginalNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
29	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumSlackVariables()  +  getDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumSlackVariables()  +  getDecisionVariables()];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumSlackVariables()  +  getDecisionVariables()];	  double[]    coefficients    =    new    double[getNumSlackVariables()    +    getOriginalNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
30	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getOriginalNumSlackVariables()];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getOriginalNumSlackVariables()];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getOriginalNumSlackVariables()];	  double[]    coefficients    =    new    double[getNumSlackVariables()    +    getOriginalNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
31	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getOriginalNumDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getOriginalNumDecisionVariables()];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  new  int[getOriginalNumDecisionVariables()];	  int[]    coefficients    =    new    int[getNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
32	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getNumDecisionVariables()  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getNumDecisionVariables()  +  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  new  int[getNumDecisionVariables()  +  1];	  int[]    coefficients    =    new    int[getNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getNumObjectiveFunctions()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getNumObjectiveFunctions()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  new  int[getNumObjectiveFunctions()  ];	  int[]    coefficients    =    new    int[getNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
34	[BUG]  [BUGGY]  int[]  coefficients  =  getSolution();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  getSolution();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  getSolution();	  int[]    coefficients    =    getBasicValues();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  int[]  coefficients  =  getBasicFunctions();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  getBasicFunctions();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  getBasicFunctions();	  int[]    coefficients    =    getBasicValues();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  int[]  coefficients  =  getBasicVariables();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  getBasicVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  getBasicVariables();	  int[]    coefficients    =    getBasicValues();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  *  2];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  *  2];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  *  2];	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    *    1];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
38	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  *  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  *  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  *  1];	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    *    1];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
39	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  *  4];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  *  4];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  *  4];	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    *    1];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
40	[BUG]  [BUGGY]  Integer  coefficients[]  =  getBasicFunctions(getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getBasicFunctions(getNumObjectiveFunctions());  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getBasicFunctions(getNumObjectiveFunctions());	  Integer    coefficients[]    =    getBasicFunctions();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
41	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  /  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  /  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  /  1];	  double[]    coefficients    =    new    double[getBasicNumDecisionVariables()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
42	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  *  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  *  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  *  1];	  double[]    coefficients    =    new    double[getBasicNumDecisionVariables()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
43	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables().length  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables().length  -  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicNumDecisionVariables().length  -  1];	  double[]    coefficients    =    new    double[getBasicNumDecisionVariables().length    ];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
44	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables().length  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables().length  +  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicNumDecisionVariables().length  +  1];	  double[]    coefficients    =    new    double[getBasicNumDecisionVariables().length    ];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
45	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables().length  -  2];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables().length  -  2];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicNumDecisionVariables().length  -  2];	  double[]    coefficients    =    new    double[getBasicNumDecisionVariables().length    ];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
46	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  /  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  /  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  /  1];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
47	[BUG]  [BUGGY]  int[]  coefficients  =  getBasicColumns();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  getBasicColumns();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  getBasicColumns();	  double[]    coefficients    =    getBasicColumns();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
48	[BUG]  [BUGGY]  Integer  coefficients[]  =  getRows();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getRows();  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getRows();	  Integer    coefficients[]    =    getColumns();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumObjectiveFunctions()  /  getOriginalNumDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumObjectiveFunctions()  /  getOriginalNumDecisionVariables()];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumObjectiveFunctions()  /  getOriginalNumDecisionVariables()];	  double[]    coefficients    =    new    double[getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
50	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumObjectiveFunctions()  +  getDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumObjectiveFunctions()  +  getDecisionVariables()];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumObjectiveFunctions()  +  getDecisionVariables()];	  double[]    coefficients    =    new    double[getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
51	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  *  getOriginalNumDecisionVariables()  +  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  *  getOriginalNumDecisionVariables()  +  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  *  getOriginalNumDecisionVariables()  +  1];	  double[]    coefficients    =    new    double[getBasicNumDecisionVariables()    *    getOriginalNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  *  getOriginalNumDecisionVariables()  /  2];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  *  getOriginalNumDecisionVariables()  /  2];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  *  getOriginalNumDecisionVariables()  /  2];	  double[]    coefficients    =    new    double[getBasicNumDecisionVariables()    *    getOriginalNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getColumns()  +  getColumns()  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getColumns()  +  getColumns()  +  1];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getColumns()  +  getColumns()  +  1];	  double[]    coefficients    =    new    double[getColumns()    +    getColumns()    ];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
54	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getColumns()  +  getColumns()  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getColumns()  +  getColumns()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  new  int[getColumns()  +  getColumns()  ];	  double[]    coefficients    =    new    double[getColumns()    +    getColumns()    ];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
55	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getRows()  +  getColumns()  ];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getRows()  +  getColumns()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getRows()  +  getColumns()  ];	  double[]    coefficients    =    new    double[getColumns()    +    getColumns()    ];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
56	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getEntry(getOriginalNumDecisionVariables());  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getEntry(getOriginalNumDecisionVariables());	  Integer    coefficients[]    =    getEntry(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
57	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(getObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getEntry(getObjectiveFunctions());  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getEntry(getObjectiveFunctions());	  Integer    coefficients[]    =    getEntry(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
58	[BUG]  [BUGGY]  Double[]  coefficients  =  new  double[getNumDecisionVariables().size()];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Double[]  coefficients  =  new  double[getNumDecisionVariables().size()];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Double[]  coefficients  =  new  double[getNumDecisionVariables().size()];	  double[]    coefficients    =    new    double[getNumDecisionVariables().size()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
59	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getColumns()  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getColumns()  +  1];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  new  int[getColumns()  +  1];	  int[]    coefficients    =    new    int[getColumns()    ];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
60	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getSize()  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getSize()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  new  int[getSize()  ];	  int[]    coefficients    =    new    int[getColumns()    ];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
61	[BUG]  [BUGGY]  Integer[]  coefficients  =  getSolution();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer[]  coefficients  =  getSolution();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer[]  coefficients  =  getSolution();	  Integer[]    coefficients    =    getBasicVariables();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
62	[BUG]  [BUGGY]  Integer[]  coefficients  =  getBasicFunctions();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer[]  coefficients  =  getBasicFunctions();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer[]  coefficients  =  getBasicFunctions();	  Integer[]    coefficients    =    getBasicVariables();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
63	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  -  getNumDecisionVariables().length  +  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  -  getNumDecisionVariables().length  +  1];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  -  getNumDecisionVariables().length  +  1];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    -    getNumDecisionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
64	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  /  getNumDecisionVariables().length];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  /  getNumDecisionVariables().length];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  /  getNumDecisionVariables().length];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    -    getNumDecisionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
65	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  *  getNumDecisionVariables().length];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  *  getNumDecisionVariables().length];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  *  getNumDecisionVariables().length];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    -    getNumDecisionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
66	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables().length  +  2];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables().length  +  2];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables().length  +  2];	  double[]    coefficients    =    new    double[getNumDecisionVariables().length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
67	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables().length  /  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables().length  /  1];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables().length  /  1];	  double[]    coefficients    =    new    double[getNumDecisionVariables().length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
68	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables().size()  +  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables().size()  +  1];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables().size()  +  1];	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
69	[BUG]  [BUGGY]  int[]  coefficients  =  getBasicLines();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  getBasicLines();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  getBasicLines();	  int[]    coefficients    =    getBasicRows();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
70	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  +  getOriginalNumDecisionVariables()  +  2];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  +  getOriginalNumDecisionVariables()  +  2];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  +  getOriginalNumDecisionVariables()  +  2];	  double[]    coefficients    =    new    double[getBasicNumDecisionVariables()    +    getOriginalNumDecisionVariables()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
71	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  +  getOriginalNumDecisionVariables()  /  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  +  getOriginalNumDecisionVariables()  /  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  +  getOriginalNumDecisionVariables()  /  1];	  double[]    coefficients    =    new    double[getBasicNumDecisionVariables()    +    getOriginalNumDecisionVariables()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
72	[BUG]  [BUGGY]  Double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  +  getOriginalNumDecisionVariables()  +  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  +  getOriginalNumDecisionVariables()  +  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  +  getOriginalNumDecisionVariables()  +  1];	  double[]    coefficients    =    new    double[getBasicNumDecisionVariables()    +    getOriginalNumDecisionVariables()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
73	[BUG]  [BUGGY]  Double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  *  getOriginalNumDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  *  getOriginalNumDecisionVariables()];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  *  getOriginalNumDecisionVariables()];	  double[]    coefficients    =    new    double[getBasicNumDecisionVariables()    /    getOriginalNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
74	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  /  getOriginalNumDecisionVariables()  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  /  getOriginalNumDecisionVariables()  +  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  /  getOriginalNumDecisionVariables()  +  1];	  double[]    coefficients    =    new    double[getBasicNumDecisionVariables()    /    getOriginalNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
75	[BUG]  [BUGGY]  Integer[]  coefficients  =  getBasicSlackVariables();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer[]  coefficients  =  getBasicSlackVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer[]  coefficients  =  getBasicSlackVariables();	  Integer[]    coefficients    =    getBasicNumDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
76	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables().size()  +  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables().size()  +  1];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicNumDecisionVariables().size()  +  1];	  double[]    coefficients    =    new    double[getBasicNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
77	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getBasicNumDecisionVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getBasicNumDecisionVariables().size()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  new  int[getBasicNumDecisionVariables().size()  ];	  double[]    coefficients    =    new    double[getBasicNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
78	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables().size()  +  2];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables().size()  +  2];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicNumDecisionVariables().size()  +  2];	  double[]    coefficients    =    new    double[getBasicNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
79	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getDecisionVariables()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  new  int[getDecisionVariables()  ];	  double[]    coefficients    =    new    double[getDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
80	[BUG]  [BUGGY]  Double[]  coefficients  =  new  double[getNumDecisionVariables()  *  getOriginalNumDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Double[]  coefficients  =  new  double[getNumDecisionVariables()  *  getOriginalNumDecisionVariables()];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Double[]  coefficients  =  new  double[getNumDecisionVariables()  *  getOriginalNumDecisionVariables()];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    /    getOriginalNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
81	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getOriginalNumDecisionVariables().length];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getOriginalNumDecisionVariables().length];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  new  int[getOriginalNumDecisionVariables().length];	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
82	[BUG]  [BUGGY]  Integer  coefficients[]  =  getBasicRows();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getBasicRows();  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getBasicRows();	  Integer    coefficients[]    =    getBasicColumns();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
83	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getNumDecisionVariables().length  -  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getNumDecisionVariables().length  -  1];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getNumDecisionVariables().length  -  1];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    +    getNumDecisionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
84	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions(),  getArtificialVariables());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions(),  getArtificialVariables());  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions(),  getArtificialVariables());	  Integer    coefficients[]    =    getEntry(getNumObjectiveFunctions(),    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
85	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions(),  getOriginalVariables());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions(),  getOriginalVariables());  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions(),  getOriginalVariables());	  Integer    coefficients[]    =    getEntry(getNumObjectiveFunctions(),    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
86	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions(),  getDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions(),  getDecisionVariables());  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions(),  getDecisionVariables());	  Integer    coefficients[]    =    getEntry(getNumObjectiveFunctions(),    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
87	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getSolutionVariables().size()  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getSolutionVariables().size()  +  1];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getSolutionVariables().size()  +  1];	  double[]    coefficients    =    new    double[getSolutionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
88	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getSolutionVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getSolutionVariables().size()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  new  int[getSolutionVariables().size()  ];	  double[]    coefficients    =    new    double[getSolutionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
89	[BUG]  [BUGGY]  double[]  coefficients  =  getBasicFunctions(getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getBasicFunctions(getNumObjectiveFunctions());  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  getBasicFunctions(getNumObjectiveFunctions());	  double[]    coefficients    =    getBasicFunctions();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
90	[BUG]  [BUGGY]  double[]  coefficients  =  getSolutionVariables();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getSolutionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  getSolutionVariables();	  double[]    coefficients    =    getBasicVariables();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
91	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumVariables()  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumVariables()  +  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumVariables()  +  1];	  double[]    coefficients    =    new    double[getNumVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
92	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getVariables()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getVariables()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getVariables()  ];	  double[]    coefficients    =    new    double[getNumVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
93	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables()  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicVariables()  ];	  double[]    coefficients    =    new    double[getNumVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
94	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getBasicNumDecisionVariables()  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getBasicNumDecisionVariables()  +  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getBasicNumDecisionVariables()  +  1];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    +    getBasicNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
95	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  +  getNumDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  +  getNumDecisionVariables()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  +  getNumDecisionVariables()  ];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    +    getBasicNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
96	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getOriginalVariables()  +  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getOriginalVariables()  +  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getOriginalVariables()  +  1];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    +    getOriginalVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
97	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getBasicVariables()  ];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getBasicVariables()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getBasicVariables()  ];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    +    getOriginalVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
98	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumVariables()  +  getOriginalVariables()  ];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumVariables()  +  getOriginalVariables()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumVariables()  +  getOriginalVariables()  ];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    +    getOriginalVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
99	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(getNumSlackVariables(),  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getEntry(getNumSlackVariables(),  getOriginalNumDecisionVariables());  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getEntry(getNumSlackVariables(),  getOriginalNumDecisionVariables());	  Integer    coefficients[]    =    getEntry(getNumObjectiveFunctions(),    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
100	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(getNumVariables(),  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getEntry(getNumVariables(),  getOriginalNumDecisionVariables());  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getEntry(getNumVariables(),  getOriginalNumDecisionVariables());	  Integer    coefficients[]    =    getEntry(getNumObjectiveFunctions(),    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
101	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(getNumSlackVariables()  +  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getEntry(getNumSlackVariables()  +  getOriginalNumDecisionVariables());  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getEntry(getNumSlackVariables()  +  getOriginalNumDecisionVariables());	  Integer    coefficients[]    =    getEntry(getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
102	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getEntry();  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getEntry();	  Integer    coefficients[]    =    getSolution();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
103	[BUG]  [BUGGY]  Integer  coefficients[]  =  getNumFunctions();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getNumFunctions();  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getNumFunctions();	  Integer    coefficients[]    =    getSolution();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
104	[BUG]  [BUGGY]  Integer  coefficients[]  =  getBasicRow();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getBasicRow();  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getBasicRow();	  Integer    coefficients[]    =    getSolution();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
105	[BUG]  [BUGGY]  Integer[]  coefficients  =  getBasicRows();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer[]  coefficients  =  getBasicRows();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer[]  coefficients  =  getBasicRows();	  Integer[]    coefficients    =    getBasicVariables();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
106	[BUG]  [BUGGY]  int[]  coefficients  =  getSolutionRows();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  getSolutionRows();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  getSolutionRows();	  int[]    coefficients    =    getBasicRows();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
107	[BUG]  [BUGGY]  double[]  coefficients  =  getNumColumns();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getNumColumns();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  getNumColumns();	  double[]    coefficients    =    getBasicColumns();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
108	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables().length  -  2];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables().length  -  2];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables().length  -  2];	  double[]    coefficients    =    new    double[getNumDecisionVariables().length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
109	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getEntry(getRhsOffset());  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getEntry(getRhsOffset());	  Integer    coefficients[]    =    getEntry(getNumObjectiveFunctions());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
110	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getRhsOffset()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getRhsOffset()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  new  int[getRhsOffset()  ];	  int[]    coefficients    =    new    int[getColumns()    ];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
111	[BUG]  [BUGGY]  double[]  coefficients  =  getNumSlackVariables();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getNumSlackVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  getNumSlackVariables();	  double[]    coefficients    =    getSolution();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
112	[BUG]  [BUGGY]  double[]  coefficients  =  getBasicRow();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getBasicRow();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  getBasicRow();	  double[]    coefficients    =    getSolution();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
113	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumVariables()  +  getOriginalNumVariables()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumVariables()  +  getOriginalNumVariables()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumVariables()  +  getOriginalNumVariables()  ];	  double[]    coefficients    =    new    double[getNumSlackVariables()    +    getOriginalNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
114	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumVariables()  +  getOriginalNumDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumVariables()  +  getOriginalNumDecisionVariables()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumVariables()  +  getOriginalNumDecisionVariables()  ];	  double[]    coefficients    =    new    double[getNumSlackVariables()    +    getOriginalNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
115	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables().length  +  2];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables().length  +  2];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicNumDecisionVariables().length  +  2];	  double[]    coefficients    =    new    double[getBasicNumDecisionVariables().length    ];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
116	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumObjectiveFunctions()  +  getOriginalVariables()  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumObjectiveFunctions()  +  getOriginalVariables()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumObjectiveFunctions()  +  getOriginalVariables()  ];	  double[]    coefficients    =    new    double[getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
117	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables()  +  getNumDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables()  +  getNumDecisionVariables()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicVariables()  +  getNumDecisionVariables()  ];	  double[]    coefficients    =    new    double[getBasicVariables()    +    getOriginalVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
118	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumSlackVariables()  +  getOriginalVariables()  ];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumSlackVariables()  +  getOriginalVariables()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumSlackVariables()  +  getOriginalVariables()  ];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    +    getOriginalVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
119	[BUG]  [BUGGY]  Integer  coefficients[]  =  getNumColumns();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getNumColumns();  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getNumColumns();	  Integer    coefficients[]    =    getBasicColumns();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
120	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables().size()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicVariables().size()  ];	  double[]    coefficients    =    new    double[getBasicNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
121	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables().length  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables().length  +  1];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables().length  +  1];	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
122	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getNumSlackVariables()  ];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getNumSlackVariables()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  new  int[getNumSlackVariables()  ];	  int[]    coefficients    =    new    int[getNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
123	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getNumVariables()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getNumVariables()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  new  int[getNumVariables()  ];	  int[]    coefficients    =    new    int[getNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
124	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumSlackVariables()  /  getOriginalNumDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumSlackVariables()  /  getOriginalNumDecisionVariables()];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumSlackVariables()  /  getOriginalNumDecisionVariables()];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    /    getOriginalNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
125	[BUG]  [BUGGY]  Integer[]  coefficients  =  getNumVariables();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer[]  coefficients  =  getNumVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer[]  coefficients  =  getNumVariables();	  Integer[]    coefficients    =    getNumArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
126	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumObjectiveFunctions()  +  getBasicNumDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumObjectiveFunctions()  +  getBasicNumDecisionVariables()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumObjectiveFunctions()  +  getBasicNumDecisionVariables()  ];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    +    getBasicNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
127	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumVariables()  +  getBasicNumVariables()  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumVariables()  +  getBasicNumVariables()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumVariables()  +  getBasicNumVariables()  ];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    +    getBasicNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
128	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getColumns()  *  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getColumns()  *  1];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getColumns()  *  1];	  double[]    coefficients    =    new    double[getColumns()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
129	[BUG]  [BUGGY]  double[]  coefficients  =  getBasicNumberFunctions();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getBasicNumberFunctions();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  getBasicNumberFunctions();	  double[]    coefficients    =    getBasicFunctions();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
130	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getColumns()  +  getRhsOffset()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getColumns()  +  getRhsOffset()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getColumns()  +  getRhsOffset()  ];	  double[]    coefficients    =    new    double[getColumns()    +    getColumns()    ];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
131	[BUG]  [BUGGY]  Double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getOriginalNumDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getOriginalNumDecisionVariables()];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getOriginalNumDecisionVariables()];	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
132	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getVariables()  +  getNumDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getVariables()  +  getNumDecisionVariables()];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getVariables()  +  getNumDecisionVariables()];	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables()    +    getNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
133	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getColumns()  +  getVariables()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getColumns()  +  getVariables()  ];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getColumns()  +  getVariables()  ];	  double[]    coefficients    =    new    double[getColumns()    +    getColumns()    ];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
134	[BUG]  [BUGGY]  double[]  coefficients  =  getBasicNumDecisionVariables();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getBasicNumDecisionVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  getBasicNumDecisionVariables();	  double[]    coefficients    =    getBasicVariables();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
135	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getNumericVariables().length];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getNumericVariables().length];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getNumericVariables().length];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    +    getNumDecisionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
136	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getStandardVariables()  ];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getStandardVariables()  ];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  +  getStandardVariables()  ];	  double[]    coefficients    =    new    double[getNumDecisionVariables()    +    getOriginalVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
137	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getNumDecisionVariables()  +  getOriginalNumDecisionVariables()];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  int[]  coefficients  =  new  int[getNumDecisionVariables()  +  getOriginalNumDecisionVariables()];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	int[]  coefficients  =  new  int[getNumDecisionVariables()  +  getOriginalNumDecisionVariables()];	  int[]    coefficients    =    new    int[getNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
138	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  +  getOriginalNumDecisionVariables()  *  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  +  getOriginalNumDecisionVariables()  *  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getBasicNumDecisionVariables()  +  getOriginalNumDecisionVariables()  *  1];	  double[]    coefficients    =    new    double[getBasicNumDecisionVariables()    +    getOriginalNumDecisionVariables()    +    1];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
139	[BUG]  [BUGGY]  double[]  coefficients  =  getBasicCoefficients();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getBasicCoefficients();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  getBasicCoefficients();	  double[]    coefficients    =    getBasicColumns();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
140	[BUG]  [BUGGY]  double[]  coefficients  =  getBasicStandardFunctions();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getBasicStandardFunctions();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  getBasicStandardFunctions();	  double[]    coefficients    =    getBasicFunctions();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
141	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables()  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables()  +  1];  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables()  +  1];	  double[]    coefficients    =    new    double[getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables()];    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
142	[BUG]  [BUGGY]  double[]  coefficients  =  getVisibleFunctions();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getVisibleFunctions();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  getVisibleFunctions();	  double[]    coefficients    =    getSolution();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
143	[BUG]  [BUGGY]  double[]  coefficients  =  getStandardFunctions();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  getStandardFunctions();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  getStandardFunctions();	  double[]    coefficients    =    getSolution();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
144	[BUG]  [BUGGY]  Integer  coefficients[]  =  getBasicVariables();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getBasicVariables();  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getBasicVariables();	  Integer    coefficients[]    =    getBasicFunctions();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
145	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getOriginalNumDecisionVariables().length];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getOriginalNumDecisionVariables().length];  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  +  getOriginalNumDecisionVariables().length];	  double[]    coefficients    =    new    double[getOriginalNumDecisionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
146	[BUG]  [BUGGY]  Integer[]  coefficients  =  getVariables();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer[]  coefficients  =  getVariables();  [BUGGY]      double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer[]  coefficients  =  getVariables();	  Integer[]    coefficients    =    getSolutionVariables();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
147	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(getNumDecisionVariables(),  getOriginalNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getEntry(getNumDecisionVariables(),  getOriginalNumObjectiveFunctions());  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getEntry(getNumDecisionVariables(),  getOriginalNumObjectiveFunctions());	  Integer    coefficients[]    =    getEntry(getNumObjectiveFunctions(),    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
148	[BUG]  [BUGGY]  Integer  coefficients[]  =  getCoefficients();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getCoefficients();  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getCoefficients();	  Integer    coefficients[]    =    getSolution();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
149	[BUG]  [BUGGY]  Integer  coefficients[]  =  getNumCase();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getNumCase();  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getNumCase();	  Integer    coefficients[]    =    getSolution();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
150	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions()  +  getDecimalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {      [BUGGY]  Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions()  +  getDecimalNumDecisionVariables());  [BUGGY]      Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	325	325	1	replace	Integer  coefficients[]  =  getEntry(getNumObjectiveFunctions()  +  getDecimalNumDecisionVariables());	  Integer    coefficients[]    =    getEntry(getNumObjectiveFunctions()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
