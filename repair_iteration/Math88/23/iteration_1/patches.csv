bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  coefficients[]  =  tableau.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  Integer  coefficients[]  =  tableau.getValue(basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  tableau.getValue(basicRow);	      Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  column);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  column);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  column);	      Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
3	[BUG]  [BUGGY]  Integer  coefficients[]  =  graph.getValue(basicRow);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  Integer  coefficients[]  =  graph.getValue(basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  graph.getValue(basicRow);	      Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  basicRow);  [CE]  ')'  expected  [FE]                    AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  basicRow);	      Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  ')'  expected	9	None	replace
5	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  column);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  column);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  f.getValue(basicRow,  column);	      Integer    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  ')'  expected	8	None	replace
6	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicRow);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  f.getValue(basicRow,  basicRow);	      Integer    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  ')'  expected	8	None	replace
7	[BUG]  [BUGGY]  Integer  coefficients  =  graph.getValue(basicRow);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  Integer  coefficients  =  graph.getValue(basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  graph.getValue(basicRow);	      Integer    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  ')'  expected	8	None	replace
8	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  0);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  0);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  f.getValue(basicRow,  0);	      Integer    coefficients    =    tableau.getValue(basicRow,    0);    	non-compiled	[CE]  ')'  expected	12	None	replace
9	[BUG]  [BUGGY]  Integer  coefficients  =  this.tableau.getValue(basicRow,  0);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  Integer  coefficients  =  this.tableau.getValue(basicRow,  0);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  this.tableau.getValue(basicRow,  0);	      Integer    coefficients    =    tableau.getValue(basicRow,    0);    	non-compiled	[CE]  ')'  expected	12	None	replace
10	[BUG]  [BUGGY]  Integer  coefficients  =  graph.getValue(basicRow,  0);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  Integer  coefficients  =  graph.getValue(basicRow,  0);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  graph.getValue(basicRow,  0);	      Integer    coefficients    =    tableau.getValue(basicRow,    0);    	non-compiled	[CE]  ')'  expected	12	None	replace
11	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRow,  f.getValue(basicRow));  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(baseRow,  f.getValue(basicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(baseRow,  f.getValue(basicRow));	  return    new    RealPointValuePair(baseRow,    f.getValue(baseRow));    	non-compiled	[CE]  ')'  expected	4	None	replace
12	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow));  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRow));	  return    new    RealPointValuePair(baseRow,    f.getValue(baseRow));    	non-compiled	[CE]  ')'  expected	4	None	replace
13	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRow,  tableau.getValue(baseRow));  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(baseRow,  tableau.getValue(baseRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(baseRow,  tableau.getValue(baseRow));	  return    new    RealPointValuePair(baseRow,    f.getValue(baseRow));    	non-compiled	[CE]  ')'  expected	4	None	replace
14	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRow,  f.getValue(basicRow),  coefficients);  [CE]  ')'  expected  [FE]                    AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(baseRow,  f.getValue(basicRow),  coefficients);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(baseRow,  f.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(baseRow,    f.getValue(baseRow));    	non-compiled	[CE]  ')'  expected	4	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	      	non-compiled	[CE]  ')'  expected	5	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  coefficients.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	      	non-compiled	[CE]  ')'  expected	5	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(tableau.getEntry(basicRow,  j)!=  1)  {  coefficients[i]  =  0;  }  [CE]  ')'  expected  [FE]                    AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(tableau.getEntry(basicRow,  j)!=  1)  {  coefficients[i]  =  0;  }  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(tableau.getEntry(basicRow,  j)!=  1)  {  coefficients[i]  =  0;  }	      	non-compiled	[CE]  ')'  expected	5	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  ')'  expected  [FE]                      AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  coefficients.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	      	non-compiled	[CE]  ')'  expected	5	None	replace
19	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(f));  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(f));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  coefficients.getValue(f));	  return    new    RealPointValuePair(basicRow,    f.getValue(coefficients));    	non-compiled	[CE]  ')'  expected	1	None	replace
20	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(coefficients));  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(coefficients));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  graph.getValue(coefficients));	  return    new    RealPointValuePair(basicRow,    f.getValue(coefficients));    	non-compiled	[CE]  ')'  expected	1	None	replace
21	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns));  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns));	  return    new    RealPointValuePair(basicRow,    f.getValue(coefficients));    	non-compiled	[CE]  ')'  expected	1	None	replace
22	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  tableau.getValue(basicRow));  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow,  tableau.getValue(basicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  tableau.getValue(basicRow));	  return    new    RealPointValuePair(basicRow,    f.getValue(coefficients));    	non-compiled	[CE]  ')'  expected	1	None	replace
23	[BUG]  [BUGGY]  return  new  RealPointValuePair(tableau,  coefficients.getValue(coefficients));  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(tableau,  coefficients.getValue(coefficients));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(tableau,  coefficients.getValue(coefficients));	  return    new    RealPointValuePair(coefficients,    tableau.getValue(coefficients));    	non-compiled	[CE]  ')'  expected	2	None	replace
24	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  tableau.getValue(coefficients));  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow,  tableau.getValue(coefficients));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  tableau.getValue(coefficients));	  return    new    RealPointValuePair(coefficients,    tableau.getValue(coefficients));    	non-compiled	[CE]  ')'  expected	2	None	replace
25	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  table.getValue(coefficients));  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow,  table.getValue(coefficients));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  table.getValue(coefficients));	  return    new    RealPointValuePair(coefficients,    tableau.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
26	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  table.getValue(basicRow));  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(coefficients,  table.getValue(basicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(coefficients,  table.getValue(basicRow));	  return    new    RealPointValuePair(coefficients,    tableau.getValue(coefficients));    	non-compiled	[CE]  ')'  expected	2	None	replace
27	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  tableau.getValue(coefficients));  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(this,  tableau.getValue(coefficients));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  tableau.getValue(coefficients));	  return    new    RealPointValuePair(this,    f.getValue(coefficients));    	non-compiled	[CE]  ')'  expected	14	None	replace
28	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  tableau.getValue(basicRow));  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(this,  tableau.getValue(basicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  tableau.getValue(basicRow));	  return    new    RealPointValuePair(this,    f.getValue(coefficients));    	non-compiled	[CE]  ')'  expected	14	None	replace
29	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  graph.getValue(coefficients));  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(this,  graph.getValue(coefficients));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  graph.getValue(coefficients));	  return    new    RealPointValuePair(this,    f.getValue(coefficients));    	non-compiled	[CE]  ')'  expected	14	None	replace
30	[BUG]  [BUGGY]  Integer  coefficients[]  =  tableau.getValues();  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  Integer  coefficients[]  =  tableau.getValues();  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  tableau.getValues();	      Integer    coefficients[]    =    f.getValues();    	non-compiled	[CE]  ')'  expected	7	None	replace
31	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getColumns();  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  Integer  coefficients[]  =  f.getColumns();  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  f.getColumns();	      Integer    coefficients[]    =    f.getValues();    	non-compiled	[CE]  ')'  expected	7	None	replace
32	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  f.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(this,  f.getValue(basicRow),  coefficients);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  f.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(this,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
33	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  baseRow.getValue(f));  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(this,  baseRow.getValue(f));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  baseRow.getValue(f));	  return    new    RealPointValuePair(this,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
34	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  f.getValue(basicRow,  coefficients));  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(this,  f.getValue(basicRow,  coefficients));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  f.getValue(basicRow,  coefficients));	  return    new    RealPointValuePair(this,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
35	[BUG]  [BUGGY]  double  coefficients  =  f.getValue(coefficients);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  double  coefficients  =  f.getValue(coefficients);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	double  coefficients  =  f.getValue(coefficients);	      int    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
36	[BUG]  [BUGGY]  int  coefficients  =  tableau.getValue(coefficients);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  int  coefficients  =  tableau.getValue(coefficients);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	int  coefficients  =  tableau.getValue(coefficients);	      int    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
37	[BUG]  [BUGGY]  int  coefficients  =  f.getValue(basicRow);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  int  coefficients  =  f.getValue(basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	int  coefficients  =  f.getValue(basicRow);	      int    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
38	[BUG]  [BUGGY]  int  coefficients  =  f.getValue(basicRow,  coefficients);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  int  coefficients  =  f.getValue(basicRow,  coefficients);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	int  coefficients  =  f.getValue(basicRow,  coefficients);	      int    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
39	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  tableau.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(coefficients,  tableau.getValue(basicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(coefficients,  tableau.getValue(basicRow));	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
40	[BUG]  [BUGGY]  double  coefficients  =  table.getValue(basicRow);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  double  coefficients  =  table.getValue(basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	double  coefficients  =  table.getValue(basicRow);	      int    coefficients    =    tableau.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
41	[BUG]  [BUGGY]  double  coefficients  =  tableau.getValue(basicRow);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  double  coefficients  =  tableau.getValue(basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	double  coefficients  =  tableau.getValue(basicRow);	      int    coefficients    =    tableau.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
42	[BUG]  [BUGGY]  Integer  coefficients  =  this.tableau.getValue(basicRow);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  Integer  coefficients  =  this.tableau.getValue(basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  this.tableau.getValue(basicRow);	      Integer    coefficients    =    tableau.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  0);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  0);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  0);	      Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  coefficients.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  for(int  i  =  0,  len  =  coefficients.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  len  =  coefficients.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  sum.size();  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  for(int  i  =  0,  col  =  sum.size();  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  sum.size();  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
47	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRow,  f.getValue(basicRow)+  1);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(baseRow,  f.getValue(basicRow)+  1);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(baseRow,  f.getValue(basicRow)+  1);	  return    new    RealPointValuePair(baseRow,    f.getValue(baseRow));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicVar));  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicVar));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicVar));	  return    new    RealPointValuePair(basicRow,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
49	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicPos));  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicPos));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicPos));	  return    new    RealPointValuePair(basicRow,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
50	[BUG]  [BUGGY]  int  coefficients  =  this.tableau.getValue(basicRow);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  int  coefficients  =  this.tableau.getValue(basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	int  coefficients  =  this.tableau.getValue(basicRow);	      int    coefficients    =    tableau.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
51	[BUG]  [BUGGY]  Integer  coefficients  =  tables.getValue(basicRow);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  Integer  coefficients  =  tables.getValue(basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  tables.getValue(basicRow);	      Integer    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  return  new  RealPointValuePair(f,  coefficients.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(f,  coefficients.getValue(basicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(f,  coefficients.getValue(basicRow));	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
53	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  f.getValue(basicRow),  mostNegative);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(this,  f.getValue(basicRow),  mostNegative);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  f.getValue(basicRow),  mostNegative);	  return    new    RealPointValuePair(this,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
54	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  graph.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(this,  graph.getValue(basicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  graph.getValue(basicRow));	  return    new    RealPointValuePair(this,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
55	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicVars));  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicVars));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicVars));	  return    new    RealPointValuePair(basicRow,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0;  i  <  getRhsOffset();  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  col;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  col;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  coefficients.length;  i  <  col;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
58	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }    [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  coefficients);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
