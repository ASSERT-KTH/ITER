bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  tableau.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  tableau.getValue(basicRow),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  tableau.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(this,    f.getValue(basicRow),    coefficients);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
2	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  coefficients.getValue(basicRow),  f);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  coefficients.getValue(basicRow),  f);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  coefficients.getValue(basicRow),  f);	  return    new    RealPointValuePair(this,    f.getValue(basicRow),    coefficients);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
3	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  f.getValue(basicRow),  coefficients,  tableau);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  f.getValue(basicRow),  coefficients,  tableau);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  f.getValue(basicRow),  coefficients,  tableau);	  return    new    RealPointValuePair(this,    f.getValue(basicRow),    coefficients);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
4	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  graph.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  graph.getValue(basicRow),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  graph.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(this,    f.getValue(basicRow),    coefficients);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0;  i  <  getSize();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getBasicRowCount();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  getBasicRowCount();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0;  i  <  getBasicRowCount();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  2)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  2)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  2)  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
8	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicPos,  f.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicPos,  f.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicPos,  f.getValue(basicRow));	  return    new    RealPointValuePair(basicRow,    f.getValue(basicPos));    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
9	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  tableau.getValue(basicPos));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  tableau.getValue(basicPos));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  tableau.getValue(basicPos));	  return    new    RealPointValuePair(basicRow,    f.getValue(basicPos));    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
10	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicPos),  coefficients);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicPos),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicPos),  coefficients);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicPos));    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
11	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicPos,  tableau.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicPos,  tableau.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicPos,  tableau.getValue(basicRow));	  return    new    RealPointValuePair(basicRow,    f.getValue(basicPos));    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
12	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  table.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  table.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  table.getValue(basicRow));	  return    new    RealPointValuePair(this,    tableau.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
13	[BUG]  [BUGGY]  Integer  coefficients  =  graph.getValue(basicRow,  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients  =  graph.getValue(basicRow,  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  graph.getValue(basicRow,  1);	  Integer    coefficients    =    graph.getValue(basicRow,    0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
14	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  tableau.getValue(basicColumns));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  tableau.getValue(basicColumns));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  tableau.getValue(basicColumns));	  return    new    RealPointValuePair(basicRow,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
15	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRow));	  return    new    RealPointValuePair(basicRow,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
16	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(basicColumns));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(basicColumns));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  graph.getValue(basicColumns));	  return    new    RealPointValuePair(basicRow,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
17	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns),  coefficients);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns),  coefficients);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
18	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  tableau.getValue(baseRow));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  tableau.getValue(baseRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  tableau.getValue(baseRow));	  return    new    RealPointValuePair(baseRow,    tableau.getValue(baseRow));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
19	[BUG]  [BUGGY]  Integer  coefficients[]  =  graph.getValue(basicRow,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  graph.getValue(basicRow,  0);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  graph.getValue(basicRow,  0);	  Integer    coefficients[]    =    graph.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
20	[BUG]  [BUGGY]  Integer  coefficients[]  =  graph.getValue(basicRow,  i);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  graph.getValue(basicRow,  i);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  graph.getValue(basicRow,  i);	  Integer    coefficients[]    =    graph.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
21	[BUG]  [BUGGY]  Integer  coefficients[]  =  tableau.getValue(basicRow,  column);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  tableau.getValue(basicRow,  column);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  tableau.getValue(basicRow,  column);	  Integer    coefficients[]    =    f.getValue(basicRow,    column);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
22	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  column  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  column  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  column  +  1);	  Integer    coefficients[]    =    f.getValue(basicRow,    column);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  column  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  column  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  column  -  1);	  Integer    coefficients[]    =    f.getValue(basicRow,    column);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  j);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  j);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  j);	  Integer    coefficients[]    =    f.getValue(basicRow,    column);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  return  new  RealPointValuePair(tableau,  coefficients.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(tableau,  coefficients.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(tableau,  coefficients.getValue(basicRow));	  return    new    RealPointValuePair(coefficients,    tableau.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
26	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  graph.getValue(basicRow));	  return    new    RealPointValuePair(coefficients,    tableau.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.length  -  1;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.length  -  1;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  coefficients.length  -  1;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
28	[BUG]  [BUGGY]  int  col  =  coefficients.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  int  col  =  coefficients.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	int  col  =  coefficients.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  variables.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  variables.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  variables.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
30	[BUG]  [BUGGY]  Integer  coefficients[]  =  tableau.getValue(basicRow,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  tableau.getValue(basicRow,  0);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  tableau.getValue(basicRow,  0);	  Integer    coefficients[]    =    f.getValue(basicRow,    0);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
31	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  1);	  Integer    coefficients[]    =    f.getValue(basicRow,    0);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
32	[BUG]  [BUGGY]  int  col  =  coefficients.length;  i  <  col;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  int  col  =  coefficients.length;  i  <  col;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	int  col  =  coefficients.length;  i  <  col;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  tables.length;  i  <  col;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  tables.length;  i  <  col;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  tables.length;  i  <  col;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  variables.length;  i  <  col;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  variables.length;  i  <  col;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  variables.length;  i  <  col;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
35	[BUG]  [BUGGY]  int  coefficients  =  this.tableau.getValue(basicRow,  j);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  int  coefficients  =  this.tableau.getValue(basicRow,  j);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	int  coefficients  =  this.tableau.getValue(basicRow,  j);	  int    coefficients    =    this.tableau.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
36	[BUG]  [BUGGY]  double  coefficients  =  this.tableau.getValue(basicRow);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  double  coefficients  =  this.tableau.getValue(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	double  coefficients  =  this.tableau.getValue(basicRow);	  int    coefficients    =    this.tableau.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
37	[BUG]  [BUGGY]  Integer  coefficients  =  tables.getValue(basicRow,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients  =  tables.getValue(basicRow,  0);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  tables.getValue(basicRow,  0);	  Integer    coefficients    =    tables.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getSize();  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  getSize();  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0;  i  <  getSize();  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    getRhsOffset();    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0;  i  <  getColumnsOffset();  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    getRhsOffset();    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNhsOffset();  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  getNhsOffset();  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0;  i  <  getNhsOffset();  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    getRhsOffset();    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
41	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow),    coefficients);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
42	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  tableau.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(coefficients,  tableau.getValue(basicRow),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(coefficients,  tableau.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow),    coefficients);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
43	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(coefficients),  coefficients);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(coefficients),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(coefficients),  coefficients);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow),    coefficients);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
44	[BUG]  [BUGGY]  Integer  coefficients  =  tableau.getValue(basicRow,  basicRow);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients  =  tableau.getValue(basicRow,  basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  tableau.getValue(basicRow,  basicRow);	  Integer    coefficients    =    f.getValue(basicRow,    basicRow);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
45	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  i);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  i);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  f.getValue(basicRow,  i);	  Integer    coefficients    =    f.getValue(basicRow,    basicRow);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
46	[BUG]  [BUGGY]  Integer  coefficients  =  Tableau.getValue(basicRow,  basicRow);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients  =  Tableau.getValue(basicRow,  basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  Tableau.getValue(basicRow,  basicRow);	  Integer    coefficients    =    f.getValue(basicRow,    basicRow);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
47	[BUG]  [BUGGY]  double  coefficients  =  f.getValue(basicRow);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  double  coefficients  =  f.getValue(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	double  coefficients  =  f.getValue(basicRow);	  double    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
48	[BUG]  [BUGGY]  double  coefficients  =  f.getValue(basicRow,  coefficients);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  double  coefficients  =  f.getValue(basicRow,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	double  coefficients  =  f.getValue(basicRow,  coefficients);	  double    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
49	[BUG]  [BUGGY]  double  coefficients  =  tableau.getValue(coefficients);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  double  coefficients  =  tableau.getValue(coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	double  coefficients  =  tableau.getValue(coefficients);	  double    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
50	[BUG]  [BUGGY]  double  coefficients  =  graph.getValue(coefficients);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  double  coefficients  =  graph.getValue(coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	double  coefficients  =  graph.getValue(coefficients);	  double    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
51	[BUG]  [BUGGY]  Integer  coefficients[]  =  graph.getValues();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  graph.getValues();  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  graph.getValues();	  Integer    coefficients[]    =    tableau.getValues();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
52	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  tableau.getValue(basicRow,  coefficients));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  tableau.getValue(basicRow,  coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  tableau.getValue(basicRow,  coefficients));	  return    new    RealPointValuePair(this,    f.getValue(basicRow,    coefficients));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
53	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  coefficients.getValue(basicRow,  f));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  coefficients.getValue(basicRow,  f));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  coefficients.getValue(basicRow,  f));	  return    new    RealPointValuePair(this,    f.getValue(basicRow,    coefficients));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
54	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  graph.getValue(basicRow,  coefficients));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  graph.getValue(basicRow,  coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  graph.getValue(basicRow,  coefficients));	  return    new    RealPointValuePair(this,    f.getValue(basicRow,    coefficients));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
55	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  tableau.getValue(basicVars));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  tableau.getValue(basicVars));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  tableau.getValue(basicVars));	  return    new    RealPointValuePair(basicRow,    f.getValue(basicVars));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
56	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicVars,  f.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicVars,  f.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicVars,  f.getValue(basicRow));	  return    new    RealPointValuePair(basicRow,    f.getValue(basicVars));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
57	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicVars),  coefficients);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicVars),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicVars),  coefficients);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicVars));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
58	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicVar,  f.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicVar,  f.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicVar,  f.getValue(basicRow));	  return    new    RealPointValuePair(basicRow,    f.getValue(basicVars));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
59	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  graph.getValue(basicRow)+  coefficients.length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  graph.getValue(basicRow)+  coefficients.length);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  graph.getValue(basicRow)+  coefficients.length);	  return    new    RealPointValuePair(this,    graph.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  basicRow.length  -  1;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  len  =  basicRow.length  -  1;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  len  =  basicRow.length  -  1;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    len    =    basicRow.length;    i    <    len;    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  baseRow.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  len  =  baseRow.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  len  =  baseRow.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    len    =    basicRow.length;    i    <    len;    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  coefficients.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)!=  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  len  =  coefficients.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)!=  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  len  =  coefficients.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)!=  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    len    =    coefficients.length;    i    <    len;    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  coefficients.length  -  1;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  len  =  coefficients.length  -  1;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  len  =  coefficients.length  -  1;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    len    =    coefficients.length;    i    <    len;    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  coefficients.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  >=  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  len  =  coefficients.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  >=  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  len  =  coefficients.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  >=  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    len    =    coefficients.length;    i    <    len;    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
65	[BUG]  [BUGGY]  Integer  coefficients  =  this.tableau.getValue(basicRow,  i);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients  =  this.tableau.getValue(basicRow,  i);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  this.tableau.getValue(basicRow,  i);	  Integer    coefficients    =    this.tableau.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
66	[BUG]  [BUGGY]  double  coefficients  =  graph.getValue(basicRow);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  double  coefficients  =  graph.getValue(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	double  coefficients  =  graph.getValue(basicRow);	  double    coefficients    =    tableau.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
67	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(basicPos));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(basicPos));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  graph.getValue(basicPos));	  return    new    RealPointValuePair(basicRow,    graph.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
68	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(basicVar));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(basicVar));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  graph.getValue(basicVar));	  return    new    RealPointValuePair(basicRow,    graph.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
69	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(basicColumn));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(basicColumn));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  graph.getValue(basicColumn));	  return    new    RealPointValuePair(basicRow,    graph.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
70	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRow,  coefficients.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(baseRow,  coefficients.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(baseRow,  coefficients.getValue(basicRow));	  return    new    RealPointValuePair(f,    coefficients.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
71	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  coefficients.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  coefficients.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  coefficients.getValue(basicRow));	  return    new    RealPointValuePair(f,    coefficients.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
72	[BUG]  [BUGGY]  return  new  RealPointValuePair(factory,  coefficients.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(factory,  coefficients.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(factory,  coefficients.getValue(basicRow));	  return    new    RealPointValuePair(f,    coefficients.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
73	[BUG]  [BUGGY]  Integer  coefficients[]  =  tableau.getValue(basicRow,  basicRow);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  tableau.getValue(basicRow,  basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  tableau.getValue(basicRow,  basicRow);	  Integer    coefficients[]    =    f.getValue(basicRow,    basicRow);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
74	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  i);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  i);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  i);	  Integer    coefficients[]    =    f.getValue(basicRow,    basicRow);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
75	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(basicRow)+  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(basicRow)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  graph.getValue(basicRow)+  1);	  return    new    RealPointValuePair(basicRow,    tableau.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
76	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(basicRow),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  graph.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(basicRow,    tableau.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(tableau.getEntry(basicRow,  j)!=  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(tableau.getEntry(basicRow,  j)!=  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0;  i  <  getSize();  i++)  {  if(tableau.getEntry(basicRow,  j)!=  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(tableau.getEntry(basicRow,    j)!=    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
78	[BUG]  [BUGGY]  Integer  coefficients  =  tableau.getValue(basicRow,  column);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients  =  tableau.getValue(basicRow,  column);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  tableau.getValue(basicRow,  column);	  Integer    coefficients    =    f.getValue(basicRow,    column);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
79	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  j);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  j);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  f.getValue(basicRow,  j);	  Integer    coefficients    =    f.getValue(basicRow,    column);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
80	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  column  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  column  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  f.getValue(basicRow,  column  +  1);	  Integer    coefficients    =    f.getValue(basicRow,    column);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
81	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  tableau.getValue(basicRow),  mostNegative);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  tableau.getValue(basicRow),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  tableau.getValue(basicRow),  mostNegative);	  return    new    RealPointValuePair(this,    f.getValue(basicRow),    mostNegative);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
82	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  graph.getValue(basicRow),  mostNegative);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  graph.getValue(basicRow),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  graph.getValue(basicRow),  mostNegative);	  return    new    RealPointValuePair(this,    f.getValue(basicRow),    mostNegative);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
83	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  baseRow.getValue(basicRow),  mostNegative);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  baseRow.getValue(basicRow),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  baseRow.getValue(basicRow),  mostNegative);	  return    new    RealPointValuePair(this,    f.getValue(basicRow),    mostNegative);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
84	[BUG]  [BUGGY]  int  coefficients  =  f.getValue(basicRow,  column);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  int  coefficients  =  f.getValue(basicRow,  column);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	int  coefficients  =  f.getValue(basicRow,  column);	  int    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.length  -  1;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.length  -  1;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  coefficients.length  -  1;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    i++)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
86	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  2;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  2;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  coefficients.length;  i  <  2;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    i++)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
87	[BUG]  [BUGGY]  int  col  =  coefficients.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  int  col  =  coefficients.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	int  col  =  coefficients.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    i++)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
88	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  f.getValue(basicRow,  1);	  Integer    coefficients    =    f.getValue(basicRow,    0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
89	[BUG]  [BUGGY]  Integer  coefficients  =  Tableau.getValue(basicRow,  0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients  =  Tableau.getValue(basicRow,  0);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  Tableau.getValue(basicRow,  0);	  Integer    coefficients    =    f.getValue(basicRow,    0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
90	[BUG]  [BUGGY]  int  coefficients  =  tableau.getValue(basicRow,  coefficients);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  int  coefficients  =  tableau.getValue(basicRow,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	int  coefficients  =  tableau.getValue(basicRow,  coefficients);	  int    coefficients    =    f.getValue(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
91	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  coefficients);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  f.getValue(basicRow,  coefficients);	  int    coefficients    =    f.getValue(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
92	[BUG]  [BUGGY]  int  coefficients  =  graph.getValue(basicRow,  coefficients);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  int  coefficients  =  graph.getValue(basicRow,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	int  coefficients  =  graph.getValue(basicRow,  coefficients);	  int    coefficients    =    f.getValue(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
93	[BUG]  [BUGGY]  Integer  coefficients  =  this.tableau.getValue(basicRow,  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients  =  this.tableau.getValue(basicRow,  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  this.tableau.getValue(basicRow,  1);	  Integer    coefficients    =    this.tableau.getValue(basicRow,    0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
94	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(coefficients));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  coefficients.getValue(coefficients));	  return    new    RealPointValuePair(tableau,    coefficients.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
95	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  baseRow.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  baseRow.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  baseRow.getValue(basicRow));	  return    new    RealPointValuePair(this,    baseRow.getValue(f));    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
96	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  tableau.getValue(f));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  tableau.getValue(f));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  tableau.getValue(f));	  return    new    RealPointValuePair(this,    baseRow.getValue(f));    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
97	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  baseRow.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  baseRow.getValue(basicRow),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  baseRow.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(this,    baseRow.getValue(f));    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  tableau.size();  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  tableau.size();  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  tableau.size();  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    sum.size();    i    <    col;    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  table.size();  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  table.size();  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  table.size();  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    sum.size();    i    <    col;    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  tables.size();  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  tables.size();  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  tables.size();  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    sum.size();    i    <    col;    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
101	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  tableau.getValue(basicVar));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  tableau.getValue(basicVar));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  tableau.getValue(basicVar));	  return    new    RealPointValuePair(basicRow,    f.getValue(basicVar));    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
102	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicVar),  coefficients);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicVar),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicVar),  coefficients);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicVar));    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
103	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(j));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(j));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  coefficients.getValue(j));	  return    new    RealPointValuePair(basicRow,    coefficients.getValue(f));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
104	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  tableau.getValue(f));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  tableau.getValue(f));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  tableau.getValue(f));	  return    new    RealPointValuePair(basicRow,    coefficients.getValue(f));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
105	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(f));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(f));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  graph.getValue(f));	  return    new    RealPointValuePair(basicRow,    coefficients.getValue(f));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
106	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(i));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(i));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  coefficients.getValue(i));	  return    new    RealPointValuePair(basicRow,    coefficients.getValue(f));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
107	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow)+  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRow)+  1);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
108	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  table.getValue(basicColumns));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  table.getValue(basicColumns));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  table.getValue(basicColumns));	  return    new    RealPointValuePair(basicRow,    table.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
109	[BUG]  [BUGGY]  return  new  RealPointValuePair(tableau,  table.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(tableau,  table.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(tableau,  table.getValue(basicRow));	  return    new    RealPointValuePair(basicRow,    table.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
110	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  Tableau.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  Tableau.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  Tableau.getValue(basicRow));	  return    new    RealPointValuePair(this,    tableau.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
111	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  table.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  table.getValue(basicRow),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  table.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(this,    tableau.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
112	[BUG]  [BUGGY]  Integer  coefficients  =  graph.getValue(basicRow,  i);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients  =  graph.getValue(basicRow,  i);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  graph.getValue(basicRow,  i);	  Integer    coefficients    =    graph.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
113	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getRows();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  f.getRows();  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  f.getRows();	  Integer    coefficients[]    =    f.getColumns();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
114	[BUG]  [BUGGY]  Integer  coefficients[]  =  tableau.getColumns();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  tableau.getColumns();  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  tableau.getColumns();	  Integer    coefficients[]    =    f.getColumns();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
115	[BUG]  [BUGGY]  Integer  coefficients[]  =  graph.getColumns();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  graph.getColumns();  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  graph.getColumns();	  Integer    coefficients[]    =    f.getColumns();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
116	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRow,  f.getValue(basicRow),  coefficients,  tableau);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(baseRow,  f.getValue(basicRow),  coefficients,  tableau);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(baseRow,  f.getValue(basicRow),  coefficients,  tableau);	  return    new    RealPointValuePair(baseRow,    f.getValue(basicRow),    coefficients);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
117	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRow,  tableau.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(baseRow,  tableau.getValue(basicRow),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(baseRow,  tableau.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(baseRow,    f.getValue(basicRow),    coefficients);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
118	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRow,  coefficients.getValue(basicRow),  f);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(baseRow,  coefficients.getValue(basicRow),  f);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(baseRow,  coefficients.getValue(basicRow),  f);	  return    new    RealPointValuePair(baseRow,    f.getValue(basicRow),    coefficients);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
119	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRow,  tableau.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(baseRow,  tableau.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(baseRow,  tableau.getValue(basicRow));	  return    new    RealPointValuePair(baseRow,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
120	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  tables.getValue(coefficients));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  tables.getValue(coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  tables.getValue(coefficients));	  return    new    RealPointValuePair(coefficients,    table.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
121	[BUG]  [BUGGY]  double  coefficients  =  table.getValue(basicRow,  f);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  double  coefficients  =  table.getValue(basicRow,  f);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	double  coefficients  =  table.getValue(basicRow,  f);	  double    coefficients    =    table.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
122	[BUG]  [BUGGY]  double  coefficients  =  this.basicTable.getValue(basicRow);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  double  coefficients  =  this.basicTable.getValue(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	double  coefficients  =  this.basicTable.getValue(basicRow);	  double    coefficients    =    table.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
123	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRow,  tableau.getValue(basicRow)+  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(baseRow,  tableau.getValue(basicRow)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(baseRow,  tableau.getValue(basicRow)+  1);	  return    new    RealPointValuePair(baseRow,    f.getValue(basicRow)+    1);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getBasicRowCount();  i++)  {  if(tableau.getEntry(basicRow,  j)!=  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  getBasicRowCount();  i++)  {  if(tableau.getEntry(basicRow,  j)!=  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0;  i  <  getBasicRowCount();  i++)  {  if(tableau.getEntry(basicRow,  j)!=  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(tableau.getEntry(basicRow,    j)!=    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
125	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getBasicRowsOffset();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  getBasicRowsOffset();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0;  i  <  getBasicRowsOffset();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(tableau.getEntry(basicRow,    j)!=    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
126	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  sum);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  sum);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  sum);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow),    coefficients);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
127	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicPos),  mostNegative);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicPos),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicPos),  mostNegative);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicPos));    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
128	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getBasicRows();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  getBasicRows();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0;  i  <  getBasicRows();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
129	[BUG]  [BUGGY]  Integer  coefficients  =  tables.getValue(basicRow,  i);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients  =  tables.getValue(basicRow,  i);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  tables.getValue(basicRow,  i);	  Integer    coefficients    =    tables.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
130	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getCoefficients();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  f.getCoefficients();  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  f.getCoefficients();	  Integer    coefficients[]    =    f.getColumns();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
131	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  table.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  table.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  table.getValue(basicRow));	  return    new    RealPointValuePair(baseRow,    tableau.getValue(baseRow));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
132	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRow,  table.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(baseRow,  table.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(baseRow,  table.getValue(basicRow));	  return    new    RealPointValuePair(baseRow,    tableau.getValue(baseRow));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
133	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getBasicRowCount();  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  getBasicRowCount();  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0;  i  <  getBasicRowCount();  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    getRhsOffset();    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
134	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getBasicRowsOffset();  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  getBasicRowsOffset();  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0;  i  <  getBasicRowsOffset();  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    getRhsOffset();    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
135	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  table.getValue(basicRow)+  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  table.getValue(basicRow)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  table.getValue(basicRow)+  1);	  return    new    RealPointValuePair(basicRow,    tableau.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
136	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  f.getValue(baseRow));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  f.getValue(baseRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  f.getValue(baseRow));	  return    new    RealPointValuePair(this,    baseRow.getValue(f));    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
137	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(basicFields));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  graph.getValue(basicFields));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  graph.getValue(basicFields));	  return    new    RealPointValuePair(basicRow,    graph.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
138	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  tables.getValue(coefficients));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(coefficients,  tables.getValue(coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(coefficients,  tables.getValue(coefficients));	  return    new    RealPointValuePair(tableau,    coefficients.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
139	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  input.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  input.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  input.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
140	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  tables.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  tables.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  tables.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
141	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  table.getValue(basicRow)+  coefficients);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  table.getValue(basicRow)+  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  table.getValue(basicRow)+  coefficients);	  return    new    RealPointValuePair(this,    tableau.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
142	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicVar),  mostNegative);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicVar),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicVar),  mostNegative);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicVar));    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
143	[BUG]  [BUGGY]  int  coefficients  =  this.tableau.getValue(basicRow,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  int  coefficients  =  this.tableau.getValue(basicRow,  0);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	int  coefficients  =  this.tableau.getValue(basicRow,  0);	  int    coefficients    =    this.tableau.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
144	[BUG]  [BUGGY]  int  coefficients  =  this.tableau.getValue(basicRow,  i);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  int  coefficients  =  this.tableau.getValue(basicRow,  i);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	int  coefficients  =  this.tableau.getValue(basicRow,  i);	  int    coefficients    =    this.tableau.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
145	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  f.getValue(basicRow),  coefficients,  mostNegative);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  f.getValue(basicRow),  coefficients,  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  f.getValue(basicRow),  coefficients,  mostNegative);	  return    new    RealPointValuePair(this,    f.getValue(basicRow),    coefficients);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
146	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  dataArea);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  dataArea);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  dataArea);	  Integer    coefficients[]    =    f.getValue(basicRow,    basicRow);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
147	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicVars),  mostNegative);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicVars),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicVars),  mostNegative);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicVars));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
148	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  input.length;  i  <  col;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  input.length;  i  <  col;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  input.length;  i  <  col;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
149	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  table.getValue(basicVar));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  table.getValue(basicVar));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  table.getValue(basicVar));	  return    new    RealPointValuePair(basicRow,    tableau.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
150	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  tableau.getValue(basicColumn));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  tableau.getValue(basicColumn));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  tableau.getValue(basicColumn));	  return    new    RealPointValuePair(basicRow,    tableau.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
151	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  coefficients.getValue(basicRow));	  return    new    RealPointValuePair(basicRow,    coefficients.getValue(f));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
152	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(f),  mostNegative);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(f),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  coefficients.getValue(f),  mostNegative);	  return    new    RealPointValuePair(basicRow,    coefficients.getValue(f));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
153	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns,  coefficients));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns,  coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns,  coefficients));	  return    new    RealPointValuePair(basicRow,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
154	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  f.getValue(basicRow,  coefficients),  mostNegative);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  f.getValue(basicRow,  coefficients),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  f.getValue(basicRow,  coefficients),  mostNegative);	  return    new    RealPointValuePair(this,    f.getValue(basicRow,    coefficients));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
155	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  variables.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  len  =  variables.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  len  =  variables.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    len    =    coefficients.length;    i    <    len;    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
156	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  col  +  1;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  col  +  1;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  coefficients.length;  i  <  col  +  1;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    i++)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
157	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  variables.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  variables.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  variables.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    i++)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  input.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  input.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  input.length;  i  <  col;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    i++)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
159	[BUG]  [BUGGY]  double  coefficients  =  table.getValue(basicRow,  i);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  double  coefficients  =  table.getValue(basicRow,  i);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	double  coefficients  =  table.getValue(basicRow,  i);	  double    coefficients    =    table.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
160	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  table.getValue(basicColumn));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  table.getValue(basicColumn));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  table.getValue(basicColumn));	  return    new    RealPointValuePair(basicRow,    table.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
161	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  table.getValue(basicFields));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  table.getValue(basicFields));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  table.getValue(basicFields));	  return    new    RealPointValuePair(basicRow,    table.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
162	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow  +  1));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow  +  1));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRow  +  1));	  return    new    RealPointValuePair(basicRow,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
163	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  table.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(coefficients,  table.getValue(basicRow),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(coefficients,  table.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(coefficients,    table.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
164	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  table.getValue(basicRow)+  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(coefficients,  table.getValue(basicRow)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(coefficients,  table.getValue(basicRow)+  1);	  return    new    RealPointValuePair(coefficients,    table.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
165	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  graph.getValue(basicRow)+  coefficients);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  graph.getValue(basicRow)+  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  graph.getValue(basicRow)+  coefficients);	  return    new    RealPointValuePair(this,    graph.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
166	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  graph.getValue(basicRow,  0));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  graph.getValue(basicRow,  0));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  graph.getValue(basicRow,  0));	  return    new    RealPointValuePair(this,    graph.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
167	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  tableau);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  tableau);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  tableau);	  Integer    coefficients[]    =    f.getValue(basicRow,    column);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
168	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRow,  f.getValue(basicRow)/  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(baseRow,  f.getValue(basicRow)/  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(baseRow,  f.getValue(basicRow)/  1);	  return    new    RealPointValuePair(baseRow,    f.getValue(basicRow)+    1);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
169	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicPos,  coefficients));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicPos,  coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicPos,  coefficients));	  return    new    RealPointValuePair(basicRow,    f.getValue(basicPos));    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
170	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  col  +  1;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  col  +  1;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  coefficients.length;  i  <  col  +  1;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
171	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  2;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  2;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  coefficients.length;  i  <  2;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
172	[BUG]  [BUGGY]  int  len  =  coefficients.length;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  int  len  =  coefficients.length;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	int  len  =  coefficients.length;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    len    =    coefficients.length;    i    <    len;    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
173	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  f.getValue(basicRow,  coefficients),  tableau);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  f.getValue(basicRow,  coefficients),  tableau);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  f.getValue(basicRow,  coefficients),  tableau);	  return    new    RealPointValuePair(this,    f.getValue(basicRow,    coefficients));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
174	[BUG]  [BUGGY]  Integer  coefficients[]  =  graph.getValue(basicRow,  f.getColumns());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  graph.getValue(basicRow,  f.getColumns());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  graph.getValue(basicRow,  f.getColumns());	  Integer    coefficients[]    =    graph.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
175	[BUG]  [BUGGY]  Integer  coefficients[]  =  this.tableau.getValue(basicRow);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  this.tableau.getValue(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  this.tableau.getValue(basicRow);	  Integer    coefficients[]    =    tableau.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
176	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  column;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  column;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  coefficients.length;  i  <  column;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    i++)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
177	[BUG]  [BUGGY]  return(coefficients  ==  null)?  null  :  new  RealPointValuePair(this,  graph.getValue(coefficients));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return(coefficients  ==  null)?  null  :  new  RealPointValuePair(this,  graph.getValue(coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return(coefficients  ==  null)?  null  :  new  RealPointValuePair(this,  graph.getValue(coefficients));	  return    new    RealPointValuePair(this,    graph.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
178	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicVars),  basicRow);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicVars),  basicRow);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicVars),  basicRow);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicVars));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
179	[BUG]  [BUGGY]  return  new  RealPointValuePair(tableau,  baseRow.getValue(coefficients));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(tableau,  baseRow.getValue(coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(tableau,  baseRow.getValue(coefficients));	  return    new    RealPointValuePair(basicRow,    table.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
180	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  graph);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  graph);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  graph);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow),    coefficients);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
181	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  tableau);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  tableau);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(coefficients,  f.getValue(basicRow),  tableau);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRow),    coefficients);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
182	[BUG]  [BUGGY]  double  coefficients  =  table.getValue(coefficients);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  double  coefficients  =  table.getValue(coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	double  coefficients  =  table.getValue(coefficients);	  int    coefficients    =    tableau.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
183	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  graph.getValue(basicRow,  basicRow));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  graph.getValue(basicRow,  basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  graph.getValue(basicRow,  basicRow));	  return    new    RealPointValuePair(this,    graph.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
184	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRow,  graph.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(baseRow,  graph.getValue(basicRow),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(baseRow,  graph.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(baseRow,    f.getValue(basicRow),    coefficients);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
185	[BUG]  [BUGGY]  Integer  coefficients  =  tableau.getValue(basicRow,  f);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients  =  tableau.getValue(basicRow,  f);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  tableau.getValue(basicRow,  f);	  Integer    coefficients    =    f.getValue(basicRow,    basicRow);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
186	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  col  +  1;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  col  +  1;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  coefficients.length;  i  <  col  +  1;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
187	[BUG]  [BUGGY]  int  col  =  coefficients.length;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  int  col  =  coefficients.length;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	int  col  =  coefficients.length;  ++i)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
188	[BUG]  [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  col;  ++i)  {  if(tableau.getEntry(basicRow,  j)!=  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0,  col  =  coefficients.length;  i  <  col;  ++i)  {  if(tableau.getEntry(basicRow,  j)!=  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0,  col  =  coefficients.length;  i  <  col;  ++i)  {  if(tableau.getEntry(basicRow,  j)!=  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0,    col    =    coefficients.length;    i    <    col;    ++i)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
189	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(f),  tableau);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(f),  tableau);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  coefficients.getValue(f),  tableau);	  return    new    RealPointValuePair(basicRow,    coefficients.getValue(f));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
190	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(tableau));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(tableau));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  coefficients.getValue(tableau));	  return    new    RealPointValuePair(basicRow,    coefficients.getValue(f));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
191	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(f),  epsilon);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  coefficients.getValue(f),  epsilon);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  coefficients.getValue(f),  epsilon);	  return    new    RealPointValuePair(basicRow,    coefficients.getValue(f));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
192	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  baseRow.getValue(f),  coefficients);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  baseRow.getValue(f),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  baseRow.getValue(f),  coefficients);	  return    new    RealPointValuePair(this,    baseRow.getValue(f));    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
193	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  table.getValue(f));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  table.getValue(f));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  table.getValue(f));	  return    new    RealPointValuePair(this,    baseRow.getValue(f));    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
194	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  graph.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(coefficients,  graph.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(coefficients,  graph.getValue(basicRow));	  return    new    RealPointValuePair(f,    coefficients.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
195	[BUG]  [BUGGY]  int  coefficients  =  f.getValue(basicRow,  basicRow);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  int  coefficients  =  f.getValue(basicRow,  basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	int  coefficients  =  f.getValue(basicRow,  basicRow);	  int    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
196	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getDestinationOffset();  i++)  {  if(tableau.getEntry(basicRow,  j)!=  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  getDestinationOffset();  i++)  {  if(tableau.getEntry(basicRow,  j)!=  1)  {  coefficients[i]  =  0;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	for(int  i  =  0;  i  <  getDestinationOffset();  i++)  {  if(tableau.getEntry(basicRow,  j)!=  1)  {  coefficients[i]  =  0;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(tableau.getEntry(basicRow,    j)!=    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
197	[BUG]  [BUGGY]  Integer  coefficients[]  =  tableau.getValue(basicRow,  f);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients[]  =  tableau.getValue(basicRow,  f);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients[]  =  tableau.getValue(basicRow,  f);	  Integer    coefficients[]    =    f.getValue(basicRow,    basicRow);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
198	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  column  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  column  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  f.getValue(basicRow,  column  -  1);	  Integer    coefficients    =    f.getValue(basicRow,    column);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
199	[BUG]  [BUGGY]  Integer  coefficients  =  this.tableau.getValue(basicRow,  j);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  Integer  coefficients  =  this.tableau.getValue(basicRow,  j);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	Integer  coefficients  =  this.tableau.getValue(basicRow,  j);	  Integer    coefficients    =    this.tableau.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
200	[BUG]  [BUGGY]  return  new  RealPointValuePair(graph,  graph.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(graph,  graph.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(graph,  graph.getValue(basicRow));	  return    new    RealPointValuePair(basicRow,    graph.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
201	[BUG]  [BUGGY]  return  new  RealPointValuePair(graph.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(graph.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(graph.getValue(basicRow));	  return    new    RealPointValuePair(basicRow,    graph.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
202	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicVar,  coefficients));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicVar,  coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicVar,  coefficients));	  return    new    RealPointValuePair(basicRow,    f.getValue(basicVar));    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
203	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  Table.getValue(basicRow));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }      [BUGGY]  return  new  RealPointValuePair(this,  Table.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	344	344	1	replace	return  new  RealPointValuePair(this,  Table.getValue(basicRow));	  return    new    RealPointValuePair(this,    tableau.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
