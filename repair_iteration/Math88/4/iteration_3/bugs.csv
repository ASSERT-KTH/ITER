bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  getColumnOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getRhsOffset()  -  getColumnOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getRhsOffset()  -  getColumnOffset();	  int    col    =    getColumnOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
2	[BUG]  [BUGGY]  int  col  =  getColumnOffset()  -  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumnOffset()  -  getRhsOffset()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumnOffset()  -  getRhsOffset()  +  1;	  int    col    =    getColumnOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
3	[BUG]  [BUGGY]  int  col  =  getColumnOffset()  -  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumnOffset()  -  getRhsOffset()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumnOffset()  -  getRhsOffset()  -  1;	  int    col    =    getColumnOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
4	[BUG]  [BUGGY]  int  width  =  getHeight()  /  1  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getHeight()  /  1  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getHeight()  /  1  -  1;	  int    width    =    getWidth()    /    1    -    1;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
5	[BUG]  [BUGGY]  int  width  =  getRhsWidth()  /  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsWidth()  /  getRhsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsWidth()  /  getRhsOffset();	  int    width    =    getRhsWidth()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
6	[BUG]  [BUGGY]  int  width  =  getRhsHeight()  -  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsHeight()  -  getRhsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsHeight()  -  getRhsOffset();	  int    width    =    getRhsWidth()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
7	[BUG]  [BUGGY]  int  width  =  getRhsWidth()  -  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsWidth()  -  getRhsOffset()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsWidth()  -  getRhsOffset()  +  1;	  int    width    =    getRhsWidth()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
8	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  /  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  row  =  getRhsOffset()  /  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  row  =  getRhsOffset()  /  1;	  int    row    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  getColumnsOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getRhsOffset()  -  getColumnsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getRhsOffset()  -  getColumnsOffset();	  int    col    =    getColumnsOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  int  col  =  getColumnsOffset()  -  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumnsOffset()  -  getRhsOffset()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumnsOffset()  -  getRhsOffset()  +  1;	  int    col    =    getColumnsOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  int  col  =  getColumnsOffset()  /  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumnsOffset()  /  getRhsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumnsOffset()  /  getRhsOffset();	  int    col    =    getColumnsOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  int  col  =  getColumnsOffset()  -  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumnsOffset()  -  getRhsOffset()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumnsOffset()  -  getRhsOffset()  -  1;	  int    col    =    getColumnsOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  int  width  =  getWidth()  -  getLeftOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  -  getLeftOffset();  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  -  getLeftOffset();	  int    width    =    getWidth()    -    getLeftOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
14	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  -  getLeftOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  -  getLeftOffset()  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  -  getLeftOffset()  -  1;	  int    width    =    getWidth()    -    getLeftOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
15	[BUG]  [BUGGY]  int  height  =  getHeight()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  height  =  getHeight()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  height  =  getHeight()  -  1;	  int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
16	[BUG]  [BUGGY]  int  height  =  getHeight()  -  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  height  =  getHeight()  -  2;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  height  =  getHeight()  -  2;	  int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
17	[BUG]  [BUGGY]  int  height  =  getHeight()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  height  =  getHeight()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  height  =  getHeight()  +  1;	  int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
18	[BUG]  [BUGGY]  int  width  =  getHeight()  -  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getHeight()  -  getRhsOffset()  +  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getHeight()  -  getRhsOffset()  +  1;	  int    width    =    getWidth()    -    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
19	[BUG]  [BUGGY]  int  width  =  getWidth()  /  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  /  getRhsOffset()  +  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  /  getRhsOffset()  +  1;	  int    width    =    getWidth()    -    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
20	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  getColumn();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getRhsOffset()  -  getColumn();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getRhsOffset()  -  getColumn();	  int    col    =    getColumn()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
21	[BUG]  [BUGGY]  int  col  =  getColumn()  -  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumn()  -  getRhsOffset()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumn()  -  getRhsOffset()  +  1;	  int    col    =    getColumn()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  int  col  =  getColumn()  -  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumn()  -  getRhsOffset()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumn()  -  getRhsOffset()  -  1;	  int    col    =    getColumn()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  *  getZIndex()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset()  *  getZIndex()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset()  *  getZIndex()  +  1;	  int    zIndex    =    getRhsOffset()    *    getZIndex();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
24	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  *  getZIndex();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsIndex()  *  getZIndex();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsIndex()  *  getZIndex();	  int    zIndex    =    getRhsOffset()    *    getZIndex();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
25	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  /  getZIndex();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset()  /  getZIndex();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset()  /  getZIndex();	  int    zIndex    =    getRhsOffset()    *    getZIndex();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
26	[BUG]  [BUGGY]  int  zIndex  =  getZIndex()  *  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getZIndex()  *  getRhsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getZIndex()  *  getRhsOffset();	  int    zIndex    =    getRhsOffset()    *    getZIndex();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
27	[BUG]  [BUGGY]  int  col  =  getColumnSize()  -  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumnSize()  -  getRhsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumnSize()  -  getRhsOffset();	  int    col    =    getRhsOffset()    -    getColumnSize();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
28	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  getColumnSize()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getRhsOffset()  -  getColumnSize()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getRhsOffset()  -  getColumnSize()  +  1;	  int    col    =    getRhsOffset()    -    getColumnSize();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
29	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  getColumnSize()  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getRhsOffset()  -  getColumnSize()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getRhsOffset()  -  getColumnSize()  -  1;	  int    col    =    getRhsOffset()    -    getColumnSize();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
30	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  /  getColumnSize();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getRhsOffset()  /  getColumnSize();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getRhsOffset()  /  getColumnSize();	  int    col    =    getRhsOffset()    -    getColumnSize();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
31	[BUG]  [BUGGY]  int  height  =  getLeftOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  height  =  getLeftOffset()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  height  =  getLeftOffset()  +  1;	  int    height    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
32	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  *  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  *  getRhsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  *  getRhsOffset();	  int    width    =    getRhsOffset()    /    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
33	[BUG]  [BUGGY]  int  width  =  getWidth()  /  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  /  getRhsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  /  getRhsOffset();	  int    width    =    getRhsOffset()    /    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
34	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  /  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  /  getRhsOffset()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  /  getRhsOffset()  +  1;	  int    width    =    getRhsOffset()    /    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
35	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  +  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  +  getRhsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  +  getRhsOffset();	  int    width    =    getRhsOffset()    /    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
36	[BUG]  [BUGGY]  int  numSlackVariables  =  getSlackVariables();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  numSlackVariables  =  getSlackVariables();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  numSlackVariables  =  getSlackVariables();	  int    numSlackVariables    =    getRhsVariables();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
37	[BUG]  [BUGGY]  int  numSlackVariables  =  getMatrixVariables();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  numSlackVariables  =  getMatrixVariables();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  numSlackVariables  =  getMatrixVariables();	  int    numSlackVariables    =    getRhsVariables();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
38	[BUG]  [BUGGY]  int  width  =  getSize()  /  numArtificialVariables  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getSize()  /  numArtificialVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getSize()  /  numArtificialVariables  -  1;	  int    width    =    getSize()    -    numArtificialVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
39	[BUG]  [BUGGY]  int  width  =  getSize()  *  numArtificialVariables  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getSize()  *  numArtificialVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getSize()  *  numArtificialVariables  -  1;	  int    width    =    getSize()    -    numArtificialVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
40	[BUG]  [BUGGY]  int  width  =  getSize()  -  numDecisionVariables  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getSize()  -  numDecisionVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getSize()  -  numDecisionVariables  -  1;	  int    width    =    getSize()    -    numArtificialVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
41	[BUG]  [BUGGY]  int  height  =  getWidth()  -  numArtificialVariables  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  height  =  getWidth()  -  numArtificialVariables  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  height  =  getWidth()  -  numArtificialVariables  -  1;	  int    height    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
42	[BUG]  [BUGGY]  int  height  =  getLeftOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  height  =  getLeftOffset()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  height  =  getLeftOffset()  -  1;	  int    height    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
43	[BUG]  [BUGGY]  int  width  =  getHeight()  -  row  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getHeight()  -  row  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getHeight()  -  row  -  1;	  int    width    =    getWidth()    -    row    -    1;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
44	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  getZIndex()  *  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset()  +  getZIndex()  *  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset()  +  getZIndex()  *  1;	  int    zIndex    =    getRhsOffset()    +    getZIndex()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
45	[BUG]  [BUGGY]  int  zIndex  =  getZIndex()  +  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getZIndex()  +  getRhsOffset()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getZIndex()  +  getRhsOffset()  +  1;	  int    zIndex    =    getRhsOffset()    +    getZIndex()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
46	[BUG]  [BUGGY]  int  numSlackVariables  =  getLeftOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  numSlackVariables  =  getLeftOffset()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  numSlackVariables  =  getLeftOffset()  +  1;	  int    numSlackVariables    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
47	[BUG]  [BUGGY]  int  row  =  getRhsColumn()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  row  =  getRhsColumn()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  row  =  getRhsColumn()  -  1;	  int    row    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
48	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  -  numDecisionVariables  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  -  numDecisionVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  -  numDecisionVariables  -  1;	  int    width    =    getHeight()    -    numDecisionVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
49	[BUG]  [BUGGY]  int  row  =  getLeftOffset();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  row  =  getLeftOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  row  =  getLeftOffset();	  int    row    =    getRhsOffset()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
50	[BUG]  [BUGGY]  int  width  =  getWidth()  -  slackVariables  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  -  slackVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  -  slackVariables  -  1;	  int    width    =    getHeight()    -    numSlackVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
51	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  -  numSlackVariables  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  -  numSlackVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  -  numSlackVariables  -  1;	  int    width    =    getHeight()    -    numSlackVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
52	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsIndex()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsIndex()  -  1;	  int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
53	[BUG]  [BUGGY]  int  zIndex  =  getColumnIndex();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getColumnIndex();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getColumnIndex();	  int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
54	[BUG]  [BUGGY]  int  zIndex  =  getColumn()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getColumn()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getColumn()  -  1;	  int    zIndex    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
55	[BUG]  [BUGGY]  int  width  =  getLeft();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getLeft();  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getLeft();	  int    width    =    getLeft()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
56	[BUG]  [BUGGY]  int  numSlackVariables  =  getNumArtificialVariables()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  numSlackVariables  =  getNumArtificialVariables()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  numSlackVariables  =  getNumArtificialVariables()  +  1;	  int    numSlackVariables    =    getNumArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
57	[BUG]  [BUGGY]  int  numSlackVariables  =  getNumArtificialVariables()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  numSlackVariables  =  getNumArtificialVariables()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  numSlackVariables  =  getNumArtificialVariables()  -  1;	  int    numSlackVariables    =    getNumArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
58	[BUG]  [BUGGY]  int  numSlackVariables  =  getNumberOfArtificialVariables();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  numSlackVariables  =  getNumberOfArtificialVariables();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  numSlackVariables  =  getNumberOfArtificialVariables();	  int    numSlackVariables    =    getRhsDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
59	[BUG]  [BUGGY]  int  numSlackVariables  =  getColumns();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  numSlackVariables  =  getColumns();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  numSlackVariables  =  getColumns();	  int    numSlackVariables    =    getRhsDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
60	[BUG]  [BUGGY]  int  width  =  getWidth()  /  this.slackVar  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  /  this.slackVar  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  /  this.slackVar  -  1;	  int    width    =    getWidth()    -    this.slackVar    -    1;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
61	[BUG]  [BUGGY]  int  width  =  getHeight()  -  this.slackVar  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getHeight()  -  this.slackVar  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getHeight()  -  this.slackVar  -  1;	  int    width    =    getWidth()    -    this.slackVar    -    1;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
62	[BUG]  [BUGGY]  int  width  =  getWidth()  -  this.slackVar  -  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  -  this.slackVar  -  2;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  -  this.slackVar  -  2;	  int    width    =    getWidth()    -    this.slackVar    -    1;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
63	[BUG]  [BUGGY]  int  width  =  getHeight()  -  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getHeight()  -  getRhsOffset();  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getHeight()  -  getRhsOffset();	  int    width    =    getWidth()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
64	[BUG]  [BUGGY]  int  col  =  getColumnsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumnsOffset()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumnsOffset()  -  1;	  int    col    =    getColumnsOffset();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
65	[BUG]  [BUGGY]  int  col  =  getColumnsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumnsOffset()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumnsOffset()  +  1;	  int    col    =    getColumnsOffset();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
66	[BUG]  [BUGGY]  int  col  =  getColumnsOffset()  -  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumnsOffset()  -  2;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumnsOffset()  -  2;	  int    col    =    getColumnsOffset();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
67	[BUG]  [BUGGY]  int  zIndex  =  getColumnSize()  +  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getColumnSize()  +  getRhsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getColumnSize()  +  getRhsOffset();	  int    zIndex    =    getRhsOffset()    +    getColumnSize();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
68	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  +  getColumnSize();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsIndex()  +  getColumnSize();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsIndex()  +  getColumnSize();	  int    zIndex    =    getRhsOffset()    +    getColumnSize();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
69	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  -  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  -  getRhsOffset()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  -  getRhsOffset()  -  1;	  int    width    =    getRhsOffset()    -    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
70	[BUG]  [BUGGY]  int  col  =  getColumnOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumnOffset()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumnOffset()  +  1;	  int    col    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
71	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  /  getSize();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  /  getSize();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  /  getSize();	  int    width    =    getRhsOffset()    -    getSize();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
72	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  -  getSize()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  -  getSize()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  -  getSize()  -  1;	  int    width    =    getRhsOffset()    -    getSize();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
73	[BUG]  [BUGGY]  int  width  =  getSize()  -  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getSize()  -  getRhsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getSize()  -  getRhsOffset();	  int    width    =    getRhsOffset()    -    getSize();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
74	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  +  getSize();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsIndex()  +  getSize();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsIndex()  +  getSize();	  int    zIndex    =    getRhsOffset()    +    getSize();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
75	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  *  getSize();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset()  *  getSize();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset()  *  getSize();	  int    zIndex    =    getRhsOffset()    +    getSize();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
76	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  getSize()  -  1;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset()  +  getSize()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset()  +  getSize()  -  1;	  int    zIndex    =    getRhsOffset()    +    getSize();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
77	[BUG]  [BUGGY]  int  width  =  getWidth()  /  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  /  2;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  /  2;	  int    width    =    getWidth()    /    2    -    1;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
78	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  +  getColumnOffset();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsIndex()  +  getColumnOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsIndex()  +  getColumnOffset();	  int    zIndex    =    getRhsOffset()    +    getColumnOffset();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
79	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  *  getColumnOffset();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset()  *  getColumnOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset()  *  getColumnOffset();	  int    zIndex    =    getRhsOffset()    +    getColumnOffset();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
80	[BUG]  [BUGGY]  int  zIndex  =  getColumnOffset()  +  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getColumnOffset()  +  getRhsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getColumnOffset()  +  getRhsOffset();	  int    zIndex    =    getRhsOffset()    +    getColumnOffset();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
81	[BUG]  [BUGGY]  int  zIndex  =  getZIndex()  +  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getZIndex()  +  getRhsOffset()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getZIndex()  +  getRhsOffset()  -  1;	  int    zIndex    =    getZIndex()    +    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
82	[BUG]  [BUGGY]  int  zIndex  =  getZIndex()  +  getColumnsOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getZIndex()  +  getColumnsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getZIndex()  +  getColumnsOffset();	  int    zIndex    =    getZIndex()    +    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
83	[BUG]  [BUGGY]  int  width  =  getWidth()  /  numSlackVar  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  /  numSlackVar  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  /  numSlackVar  -  1;	  int    width    =    getWidth()    -    numSlackVar    -    1;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
84	[BUG]  [BUGGY]  int  width  =  getHeight()  -  numSlackVar  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getHeight()  -  numSlackVar  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getHeight()  -  numSlackVar  -  1;	  int    width    =    getWidth()    -    numSlackVar    -    1;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
85	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  *  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getRhsOffset()  *  getRhsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getRhsOffset()  *  getRhsOffset();	  int    col    =    getRhsOffset()    /    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
86	[BUG]  [BUGGY]  int  col  =  getColumn()  /  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumn()  /  getRhsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumn()  /  getRhsOffset();	  int    col    =    getRhsOffset()    /    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
87	[BUG]  [BUGGY]  int  col  =  getColumnOffset()  /  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumnOffset()  /  getRhsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumnOffset()  /  getRhsOffset();	  int    col    =    getRhsOffset()    /    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
88	[BUG]  [BUGGY]  int  width  =  getSize();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getSize();  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getSize();	  int    width    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
89	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  /  numArtificialVariables  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  /  numArtificialVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  /  numArtificialVariables  -  1;	  int    width    =    getRhsOffset()    -    numArtificialVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
90	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  *  numArtificialVariables  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  *  numArtificialVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  *  numArtificialVariables  -  1;	  int    width    =    getRhsOffset()    -    numArtificialVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
91	[BUG]  [BUGGY]  int  zIndex  =  getZIndex()  +  getRhsIndex();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getZIndex()  +  getRhsIndex();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getZIndex()  +  getRhsIndex();	  int    zIndex    =    getRhsIndex()    +    getZIndex();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
92	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  +  getZIndex()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsIndex()  +  getZIndex()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsIndex()  +  getZIndex()  +  1;	  int    zIndex    =    getRhsIndex()    +    getZIndex();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
93	[BUG]  [BUGGY]  int  col  =  getColumnOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumnOffset()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumnOffset()  -  1;	  int    col    =    getColumnOffset();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
94	[BUG]  [BUGGY]  int  col  =  getColumnOffset()  -  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumnOffset()  -  2;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumnOffset()  -  2;	  int    col    =    getColumnOffset();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
95	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  -  getHeight()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  -  getHeight()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  -  getHeight()  -  1;	  int    width    =    getRhsOffset()    -    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
96	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  /  getHeight();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  /  getHeight();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  /  getHeight();	  int    width    =    getRhsOffset()    -    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
97	[BUG]  [BUGGY]  int  width  =  getWidth()  *  numSlackVariables  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  *  numSlackVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  *  numSlackVariables  -  1;	  int    width    =    getWidth()    /    numSlackVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
98	[BUG]  [BUGGY]  int  width  =  getHeight()  /  numSlackVariables  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getHeight()  /  numSlackVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getHeight()  /  numSlackVariables  -  1;	  int    width    =    getWidth()    /    numSlackVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
99	[BUG]  [BUGGY]  int  col  =  getColumn()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumn()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumn()  -  1;	  int    col    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
100	[BUG]  [BUGGY]  int  col  =  getRhsColumn()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getRhsColumn()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getRhsColumn()  -  1;	  int    col    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
101	[BUG]  [BUGGY]  int  width  =  getHeight()  *  numArtificialVariables  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getHeight()  *  numArtificialVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getHeight()  *  numArtificialVariables  -  1;	  int    width    =    getHeight()    /    numArtificialVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
102	[BUG]  [BUGGY]  int  width  =  getRhsWidth()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsWidth()  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsWidth()  -  1;	  int    width    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
103	[BUG]  [BUGGY]  int  width  =  getLeftOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getLeftOffset()  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getLeftOffset()  -  1;	  int    width    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
104	[BUG]  [BUGGY]  int  width  =  getWidth()  *  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  *  getRhsOffset()  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  *  getRhsOffset()  -  1;	  int    width    =    getWidth()    /    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
105	[BUG]  [BUGGY]  int  width  =  getHeight()  /  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getHeight()  /  getRhsOffset()  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getHeight()  /  getRhsOffset()  -  1;	  int    width    =    getWidth()    /    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
106	[BUG]  [BUGGY]  int  width  =  getWidth()  *  numDecisionVariables  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  *  numDecisionVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  *  numDecisionVariables  -  1;	  int    width    =    getWidth()    /    numDecisionVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
107	[BUG]  [BUGGY]  int  width  =  getHeight()  /  numDecisionVariables  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getHeight()  /  numDecisionVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getHeight()  /  numDecisionVariables  -  1;	  int    width    =    getWidth()    /    numDecisionVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
108	[BUG]  [BUGGY]  int  width  =  getWidth()  *  this.numSlackVariables  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  *  this.numSlackVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  *  this.numSlackVariables  -  1;	  int    width    =    getWidth()    /    this.numSlackVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
109	[BUG]  [BUGGY]  int  width  =  getWidth()  /  this.numDecisionVariables  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  /  this.numDecisionVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  /  this.numDecisionVariables  -  1;	  int    width    =    getWidth()    /    this.numSlackVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
110	[BUG]  [BUGGY]  int  width  =  getHeight()  /  this.numSlackVariables  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getHeight()  /  this.numSlackVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getHeight()  /  this.numSlackVariables  -  1;	  int    width    =    getWidth()    /    this.numSlackVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
111	[BUG]  [BUGGY]  int  width  =  getWidth()  /  zIndex  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  /  zIndex  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  /  zIndex  -  1;	  int    width    =    getWidth()    -    zIndex    -    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
112	[BUG]  [BUGGY]  int  width  =  getHeight()  -  zIndex  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getHeight()  -  zIndex  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getHeight()  -  zIndex  -  1;	  int    width    =    getWidth()    -    zIndex    -    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
113	[BUG]  [BUGGY]  int  width  =  getWidth()  -  j  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  -  j  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  -  j  -  1;	  int    width    =    getWidth()    -    zIndex    -    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
114	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  *  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset()  *  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset()  *  1;	  int    zIndex    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
115	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  +  getItemCount();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsIndex()  +  getItemCount();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsIndex()  +  getItemCount();	  int    zIndex    =    getRhsOffset()    +    getItemCount();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
116	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  getItemCount()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset()  +  getItemCount()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset()  +  getItemCount()  -  1;	  int    zIndex    =    getRhsOffset()    +    getItemCount();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
117	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  *  getItemCount();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset()  *  getItemCount();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset()  *  getItemCount();	  int    zIndex    =    getRhsOffset()    +    getItemCount();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
118	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  *  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsIndex()  *  getRhsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsIndex()  *  getRhsOffset();	  int    zIndex    =    getRhsIndex()    +    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
119	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  +  getOffset();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsIndex()  +  getOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsIndex()  +  getOffset();	  int    zIndex    =    getRhsIndex()    +    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
120	[BUG]  [BUGGY]  int  width  =  getWidth()  -  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  -  2;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  -  2;	  int    width    =    getWidth();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
121	[BUG]  [BUGGY]  int  height  =  getWidth()  -  numArtificialVariables;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  height  =  getWidth()  -  numArtificialVariables;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  height  =  getWidth()  -  numArtificialVariables;	  int    height    =    getWidth();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
122	[BUG]  [BUGGY]  int  height  =  getWidth()  +  numArtificialVariables;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  height  =  getWidth()  +  numArtificialVariables;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  height  =  getWidth()  +  numArtificialVariables;	  int    height    =    getWidth();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
123	[BUG]  [BUGGY]  int  width  =  getWidth()  -  numSlackVariables.length  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  -  numSlackVariables.length  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  -  numSlackVariables.length  -  1;	  int    width    =    getWidth()    -    slackVar.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
124	[BUG]  [BUGGY]  int  width  =  getWidth()  -  zIndex.length  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  -  zIndex.length  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  -  zIndex.length  -  1;	  int    width    =    getWidth()    -    slackVar.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
125	[BUG]  [BUGGY]  int  width  =  getHeight()  -  slackVar.length  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getHeight()  -  slackVar.length  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getHeight()  -  slackVar.length  -  1;	  int    width    =    getWidth()    -    slackVar.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
126	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  +  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  +  1;	  int    width    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
127	[BUG]  [BUGGY]  int  width  =  getRhsWidth();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsWidth();  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsWidth();	  int    width    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
128	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  +  getColumnIndex();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsIndex()  +  getColumnIndex();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsIndex()  +  getColumnIndex();	  int    zIndex    =    getRhsOffset()    +    getColumnIndex();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
129	[BUG]  [BUGGY]  int  zIndex  =  getColumnIndex()  +  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getColumnIndex()  +  getRhsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getColumnIndex()  +  getRhsOffset();	  int    zIndex    =    getRhsOffset()    +    getColumnIndex();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
130	[BUG]  [BUGGY]  int  col  =  getColumnIndex()  -  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumnIndex()  -  getRhsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumnIndex()  -  getRhsOffset();	  int    col    =    getRhsOffset()    -    getColumnIndex();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
131	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  getColumnIndex()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getRhsOffset()  -  getColumnIndex()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getRhsOffset()  -  getColumnIndex()  +  1;	  int    col    =    getRhsOffset()    -    getColumnIndex();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
132	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  getColumnIndex()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getRhsOffset()  -  getColumnIndex()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getRhsOffset()  -  getColumnIndex()  -  1;	  int    col    =    getRhsOffset()    -    getColumnIndex();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
133	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  /  getColumnIndex();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getRhsOffset()  /  getColumnIndex();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getRhsOffset()  /  getColumnIndex();	  int    col    =    getRhsOffset()    -    getColumnIndex();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
134	[BUG]  [BUGGY]  int  width  =  getWidth()  *  slackVar  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  *  slackVar  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  *  slackVar  -  1;	  int    width    =    getWidth()    /    slackVar    -    1;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
135	[BUG]  [BUGGY]  int  width  =  getHeight()  /  slackVar  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getHeight()  /  slackVar  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getHeight()  /  slackVar  -  1;	  int    width    =    getWidth()    /    slackVar    -    1;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
136	[BUG]  [BUGGY]  int  col  =  getColumn()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumn()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumn()  +  1;	  int    col    =    getColumn();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
137	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  /  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset()  /  getRhsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset()  /  getRhsOffset();	  int    zIndex    =    getRhsOffset()    *    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
138	[BUG]  [BUGGY]  Integer  zIndex  =  getRhsIndex()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  Integer  zIndex  =  getRhsIndex()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	Integer  zIndex  =  getRhsIndex()  -  1;	  Integer    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
139	[BUG]  [BUGGY]  int  width  =  getSize()  -  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getSize()  -  getRhsOffset()  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getSize()  -  getRhsOffset()  -  1;	  int    width    =    getHeight()    -    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
140	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  -  slackVar  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  -  slackVar  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  -  slackVar  -  1;	  int    width    =    getHeight()    -    slackVar    -    1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
141	[BUG]  [BUGGY]  int  width  =  getWidth()  -  getRhsVisible();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  -  getRhsVisible();  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  -  getRhsVisible();	  int    width    =    getWidth()    -    getRhsVisible()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
142	[BUG]  [BUGGY]  int  width  =  getHeight()  -  getRhsVisible()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getHeight()  -  getRhsVisible()  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getHeight()  -  getRhsVisible()  -  1;	  int    width    =    getWidth()    -    getRhsVisible()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
143	[BUG]  [BUGGY]  int  width  =  getWidth()  /  getRhsVisible()  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  /  getRhsVisible()  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  /  getRhsVisible()  -  1;	  int    width    =    getWidth()    -    getRhsVisible()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
144	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  -  getWidth()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  -  getWidth()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  -  getWidth()  -  1;	  int    width    =    getRhsOffset()    -    getWidth();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
145	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  /  getWidth();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  /  getWidth();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  /  getWidth();	  int    width    =    getRhsOffset()    -    getWidth();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
146	[BUG]  [BUGGY]  int  numSlackVariables  =  getColumn()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  numSlackVariables  =  getColumn()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  numSlackVariables  =  getColumn()  -  1;	  int    numSlackVariables    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
147	[BUG]  [BUGGY]  int  numSlackVariables  =  getRhsOffset()  *  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  numSlackVariables  =  getRhsOffset()  *  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  numSlackVariables  =  getRhsOffset()  *  1;	  int    numSlackVariables    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
148	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  *  getVarIndex();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset()  *  getVarIndex();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset()  *  getVarIndex();	  int    zIndex    =    getRhsOffset()    *    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
149	[BUG]  [BUGGY]  int  numSlackVariables  =  getRhsDecisionVariables()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  numSlackVariables  =  getRhsDecisionVariables()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  numSlackVariables  =  getRhsDecisionVariables()  -  1;	  int    numSlackVariables    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
150	[BUG]  [BUGGY]  int  width  =  getWidth()  -  this.row  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  -  this.row  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  -  this.row  -  1;	  int    width    =    getWidth()    -    row    -    1;    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
151	[BUG]  [BUGGY]  int  width  =  getHeight()  /  2  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getHeight()  /  2  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getHeight()  /  2  -  1;	  int    width    =    getWidth()    /    2    -    1;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
152	[BUG]  [BUGGY]  int  width  =  getWidth()  /  2  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  /  2  +  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  /  2  +  1;	  int    width    =    getWidth()    /    2    -    1;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
153	[BUG]  [BUGGY]  int  width  =  getScale()  -  numDecisionVariables  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getScale()  -  numDecisionVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getScale()  -  numDecisionVariables  -  1;	  int    width    =    getHeight()    -    numDecisionVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
154	[BUG]  [BUGGY]  int  numSlackVariables  =  getDecisionVariables();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  numSlackVariables  =  getDecisionVariables();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  numSlackVariables  =  getDecisionVariables();	  int    numSlackVariables    =    getRhsVariables();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
155	[BUG]  [BUGGY]  int  numSlackVariables  =  getRhsVariables()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  numSlackVariables  =  getRhsVariables()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  numSlackVariables  =  getRhsVariables()  +  1;	  int    numSlackVariables    =    getRhsVariables();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
156	[BUG]  [BUGGY]  int  col  =  getColumnsOffset()  -  getColumnsOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumnsOffset()  -  getColumnsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumnsOffset()  -  getColumnsOffset();	  int    col    =    getColumnsOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
157	[BUG]  [BUGGY]  int  width  =  getWidth()  /  4  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  /  4  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  /  4  -  1;	  int    width    =    getWidth()    /    1    -    1;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
158	[BUG]  [BUGGY]  int  col  =  getColumn()  -  getColumn();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getColumn()  -  getColumn();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getColumn()  -  getColumn();	  int    col    =    getColumn()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
159	[BUG]  [BUGGY]  int  width  =  getWidth()  /  slackVar.length  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  /  slackVar.length  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  /  slackVar.length  -  1;	  int    width    =    getWidth()    /    slackVar    -    1;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
160	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  getColumnCount();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset()  +  getColumnCount();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset()  +  getColumnCount();	  int    zIndex    =    getRhsOffset()    +    getItemCount();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
161	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  getColumnIndex()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset()  +  getColumnIndex()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset()  +  getColumnIndex()  +  1;	  int    zIndex    =    getRhsOffset()    +    getColumnIndex();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
162	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  -  getHeight()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  -  getHeight()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  -  getHeight()  +  1;	  int    width    =    getRhsOffset()    -    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
163	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  -  getRhsOffset().length  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  -  getRhsOffset().length  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  -  getRhsOffset().length  +  1;	  int    width    =    getRhsOffset()    -    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
164	[BUG]  [BUGGY]  int  height  =  getWidth()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  height  =  getWidth()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  height  =  getWidth()  -  1;	  int    height    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
165	[BUG]  [BUGGY]  int  col  =  getRhsColumn();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getRhsColumn();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getRhsColumn();	  int    col    =    getColumn();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
166	[BUG]  [BUGGY]  int  width  =  getWidth()  -  getLeftOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  -  getLeftOffset()  +  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  -  getLeftOffset()  +  1;	  int    width    =    getWidth()    -    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
167	[BUG]  [BUGGY]  int  numSlackVariables  =  getNumDecisionVariables();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  numSlackVariables  =  getNumDecisionVariables();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  numSlackVariables  =  getNumDecisionVariables();	  int    numSlackVariables    =    getNumArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
168	[BUG]  [BUGGY]  int  zIndex  =  getZIndex()  +  getColumnOffset();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getZIndex()  +  getColumnOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getZIndex()  +  getColumnOffset();	  int    zIndex    =    getZIndex()    +    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
169	[BUG]  [BUGGY]  int  width  =  getRhsWidth()  -  getRhsHeight();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsWidth()  -  getRhsHeight();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsWidth()  -  getRhsHeight();	  int    width    =    getRhsWidth()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
170	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset().length;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset().length;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset().length;	  int    zIndex    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
171	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  getMatrix();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset()  +  getMatrix();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset()  +  getMatrix();	  int    zIndex    =    getRhsOffset()    +    getSize();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
172	[BUG]  [BUGGY]  int  width  =  getSize()  -  numSlackVariables  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getSize()  -  numSlackVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getSize()  -  numSlackVariables  -  1;	  int    width    =    getSize()    -    numArtificialVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
173	[BUG]  [BUGGY]  int  width  =  getSize()  -  this.numDecisionVariables  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getSize()  -  this.numDecisionVariables  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getSize()  -  this.numDecisionVariables  -  1;	  int    width    =    getSize()    -    numArtificialVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
174	[BUG]  [BUGGY]  int  width  =  getWidth()  /  getColumnsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  /  getColumnsOffset()  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  /  getColumnsOffset()  -  1;	  int    width    =    getWidth()    /    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
175	[BUG]  [BUGGY]  int  width  =  getWidth()  -  getColumnsVisible()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  -  getColumnsVisible()  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  -  getColumnsVisible()  -  1;	  int    width    =    getWidth()    -    getRhsVisible()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
176	[BUG]  [BUGGY]  int  numSlackVariables  =  getRhsNumberVariables();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  numSlackVariables  =  getRhsNumberVariables();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  numSlackVariables  =  getRhsNumberVariables();	  int    numSlackVariables    =    getRhsDecisionVariables();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
177	[BUG]  [BUGGY]  int  width  =  getWidth()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  +  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  +  1;	  int    width    =    getWidth();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
178	[BUG]  [BUGGY]  int  width  =  getWidth()  -  numSlackVar.length  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  -  numSlackVar.length  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  -  numSlackVar.length  -  1;	  int    width    =    getWidth()    -    slackVar.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
179	[BUG]  [BUGGY]  int  width  =  getWidth()  -  slackVar.length  -  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  -  slackVar.length  -  2;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  -  slackVar.length  -  2;	  int    width    =    getWidth()    -    slackVar.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
180	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  -  getWidth()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  -  getWidth()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  -  getWidth()  +  1;	  int    width    =    getRhsOffset()    -    getWidth();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
181	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  *  getZIndex()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset()  *  getZIndex()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset()  *  getZIndex()  -  1;	  int    zIndex    =    getRhsOffset()    *    getZIndex();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
182	[BUG]  [BUGGY]  int  width  =  getLeftOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getLeftOffset();  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getLeftOffset();	  int    width    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
183	[BUG]  [BUGGY]  int  width  =  getWidth()  -  this.slackVar.length  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  -  this.slackVar.length  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  -  this.slackVar.length  -  1;	  int    width    =    getWidth()    -    slackVar.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
184	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  getColumnSize()  -  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset()  +  getColumnSize()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset()  +  getColumnSize()  -  1;	  int    zIndex    =    getRhsOffset()    +    getColumnSize();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
185	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  /  getColumnsOffset();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getRhsOffset()  /  getColumnsOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getRhsOffset()  /  getColumnsOffset();	  int    col    =    getRhsOffset()    /    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
186	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  -  getWidth()  -  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  -  getWidth()  -  2;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  -  getWidth()  -  2;	  int    width    =    getRhsOffset()    -    getWidth();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
187	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  col  =  getRhsOffset()  -  getRhsOffset()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  col  =  getRhsOffset()  -  getRhsOffset()  -  1;	  int    col    =    getRhsOffset()    -    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
188	[BUG]  [BUGGY]  int  width  =  getWidth()  -  getRhsSize()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  -  getRhsSize()  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  -  getRhsSize()  -  1;	  int    width    =    getWidth()    -    getRhsVisible()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
189	[BUG]  [BUGGY]  int  width  =  getWidth()  -  1  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getWidth()  -  1  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getWidth()  -  1  -  1;	  int    width    =    getWidth()    /    1    -    1;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
190	[BUG]  [BUGGY]  int  numSlackVariables  =  getLeftOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  numSlackVariables  =  getLeftOffset()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  numSlackVariables  =  getLeftOffset()  -  1;	  int    numSlackVariables    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
191	[BUG]  [BUGGY]  int  slackVariables  =  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  slackVariables  =  getRhsOffset()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  slackVariables  =  getRhsOffset()  -  1;	  int    numSlackVariables    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
192	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  getSlackOffset();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset()  +  getSlackOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset()  +  getSlackOffset();	  int    zIndex    =    getRhsOffset()    +    getColumnOffset();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
193	[BUG]  [BUGGY]  int  width  =  getRhsWidth()  -  getHeight();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsWidth()  -  getHeight();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsWidth()  -  getHeight();	  int    width    =    getRhsWidth()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
194	[BUG]  [BUGGY]  int  width  =  getRhsWidth()  -  getSize();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsWidth()  -  getSize();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsWidth()  -  getSize();	  int    width    =    getRhsWidth()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
195	[BUG]  [BUGGY]  int  width  =  getRhsWidth()  -  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsWidth()  -  getRhsOffset()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsWidth()  -  getRhsOffset()  -  1;	  int    width    =    getRhsWidth()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
196	[BUG]  [BUGGY]  int  width  =  getLength()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getLength()  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getLength()  -  1;	  int    width    =    getSize()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
197	[BUG]  [BUGGY]  int  width  =  getLeftOffset()  -  getWidth()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getLeftOffset()  -  getWidth()  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getLeftOffset()  -  getWidth()  -  1;	  int    width    =    getWidth()    -    getLeftOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
198	[BUG]  [BUGGY]  Integer  zIndex  =  getRhsOffset()  *  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  Integer  zIndex  =  getRhsOffset()  *  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	Integer  zIndex  =  getRhsOffset()  *  1;	  Integer    zIndex    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
199	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  +  getZIndex()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsIndex()  +  getZIndex()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsIndex()  +  getZIndex()  -  1;	  int    zIndex    =    getRhsIndex()    +    getZIndex();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
200	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  -  zIndex  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  -  zIndex  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  -  zIndex  -  1;	  int    width    =    getRhsOffset()    -    numArtificialVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
201	[BUG]  [BUGGY]  int  width  =  getSize()  -  slackVar  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getSize()  -  slackVar  -  1;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getSize()  -  slackVar  -  1;	  int    width    =    getSize()    -    numArtificialVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
202	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  -  getSize()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  -  getSize()  +  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  -  getSize()  +  1;	  int    width    =    getRhsOffset()    -    getSize();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
203	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  getColumnIndex()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getRhsOffset()  +  getColumnIndex()  -  1;  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getRhsOffset()  +  getColumnIndex()  -  1;	  int    zIndex    =    getRhsOffset()    +    getColumnIndex();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
204	[BUG]  [BUGGY]  int  zIndex  =  getZIndex()  +  getOffset();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  zIndex  =  getZIndex()  +  getOffset();  [BUGGY]      int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  zIndex  =  getZIndex()  +  getOffset();	  int    zIndex    =    getZIndex()    +    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
205	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  -  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }      [BUGGY]  int  width  =  getRhsOffset()  -  2;  [BUGGY]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	293	293	1	replace	int  width  =  getRhsOffset()  -  2;	  int    width    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
