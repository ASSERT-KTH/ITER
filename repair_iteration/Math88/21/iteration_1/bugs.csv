bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions();  j++)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions();  j++)  {  [BUGGY]  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	for(int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions();  j++)  {	for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
2	[BUG]  [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getOriginalNumDecisionVariables();  j++)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getOriginalNumDecisionVariables();  j++)  {  [BUGGY]  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	for(int  j  =  getNumObjectiveFunctions();  j  <  getOriginalNumDecisionVariables();  j++)  {	for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
3	[BUG]  [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  [BUGGY]  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {	for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
4	[BUG]  [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions().length;  j++)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions().length;  j++)  {  [BUGGY]  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	for(int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions().length;  j++)  {	for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]    [BUGGY]  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	  	for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
6	[BUG]  [BUGGY]    Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]    Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset());  [BUGGY]  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	    Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset());		non-compiled	[CE]  illegal  start  of  expression	42	None	add
7	[BUG]  [BUGGY]    Integer  coefficients[]  =  f.getValues();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]    Integer  coefficients[]  =  f.getValues();  [BUGGY]  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	    Integer  coefficients[]  =  f.getValues();		non-compiled	[CE]  illegal  start  of  expression	42	None	add
8	[BUG]  [BUGGY]    Integer  coefficients[]  =  getBasicValues();  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]    Integer  coefficients[]  =  getBasicValues();  [BUGGY]  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	    Integer  coefficients[]  =  getBasicValues();		non-compiled	[CE]  illegal  start  of  expression	42	None	add
9	[BUG]  [BUGGY]    Tableau  tableau  =  getTableau();  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]    Tableau  tableau  =  getTableau();  [BUGGY]  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	    Tableau  tableau  =  getTableau();		non-compiled	[CE]  illegal  start  of  expression	42	None	add
10	[BUG]  [BUGGY]    Integer  coefficients[]  =  getEntry(basicRow,  getColumns());  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]    Integer  coefficients[]  =  getEntry(basicRow,  getColumns());  [BUGGY]  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	    Integer  coefficients[]  =  getEntry(basicRow,  getColumns());		non-compiled	[CE]  illegal  start  of  expression	42	None	add
11	[BUG]  [BUGGY]  for(int  j  =  getRowCount();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]  for(int  j  =  getRowCount();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  [BUGGY]  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	for(int  j  =  getRowCount();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {	for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
12	[BUG]  [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getRowCount();  j++)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getRowCount();  j++)  {  [BUGGY]  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	for(int  j  =  getNumObjectiveFunctions();  j  <  getRowCount();  j++)  {	for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
13	[BUG]  [BUGGY]    Integer  tableau  =  getTableau();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]    Integer  tableau  =  getTableau();  [BUGGY]  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	    Integer  tableau  =  getTableau();		non-compiled	[CE]  illegal  start  of  expression	42	None	add
14	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]    LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow);  [BUGGY]  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	    LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow);		non-compiled	[CE]  illegal  start  of  expression	42	None	add
15	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =  getLinearObjectiveFunction(getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]    LinearObjectiveFunction  f  =  getLinearObjectiveFunction(getNumObjectiveFunctions());  [BUGGY]  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	    LinearObjectiveFunction  f  =  getLinearObjectiveFunction(getNumObjectiveFunctions());		non-compiled	[CE]  illegal  start  of  expression	42	None	add
16	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =  tableau.getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]    LinearObjectiveFunction  f  =  tableau.getEntry(basicRow,  getRhsOffset());  [BUGGY]  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	    LinearObjectiveFunction  f  =  tableau.getEntry(basicRow,  getRhsOffset());		non-compiled	[CE]  illegal  start  of  expression	42	None	add
17	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow.getValue());  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]    LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow.getValue());  [BUGGY]  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	    LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow.getValue());		non-compiled	[CE]  illegal  start  of  expression	42	None	add
18	[BUG]  [BUGGY]    Integer  j  =  tableau.getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]    Integer  j  =  tableau.getEntry(basicRow,  getRhsOffset());  [BUGGY]  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	    Integer  j  =  tableau.getEntry(basicRow,  getRhsOffset());		non-compiled	[CE]  illegal  start  of  expression	42	None	add
19	[BUG]  [BUGGY]    Integer  j  =  tableau.getEntry(basicRow,  0);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]    Integer  j  =  tableau.getEntry(basicRow,  0);  [BUGGY]  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	    Integer  j  =  tableau.getEntry(basicRow,  0);		non-compiled	[CE]  illegal  start  of  expression	42	None	add
20	[BUG]  [BUGGY]    Integer  j  =  tableau.getEntry(basicRow,  getColumns());  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [BUGGY]    Integer  j  =  tableau.getEntry(basicRow,  getColumns());  [BUGGY]  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	337	337	1	replace	    Integer  j  =  tableau.getEntry(basicRow,  getColumns());		non-compiled	[CE]  illegal  start  of  expression	42	None	add
