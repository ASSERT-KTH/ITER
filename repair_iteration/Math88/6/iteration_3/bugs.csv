bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  /  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  row  =  getRhsOffset()  /  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  row  =  getRhsOffset()  /  1;	  int    row    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
2	[BUG]  [BUGGY]  int  width  =  getWidth()  -  numSlackVariables;  int  height  =  getHeight()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  numSlackVariables;  int  height  =  getHeight()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  numSlackVariables;  int  height  =  getHeight()  -  1;	  int    width    =    getWidth()    -    numArtificialVariables;    int    height    =    getHeight()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
3	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  +  1];	  double[][]    matrix    =    new    double[width    +    1];    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
4	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  +  2];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  +  2];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  +  2];	  double[][]    matrix    =    new    double[width    +    1];    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
5	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width][height  /  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width][height  /  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width][height  /  1];	  double[][]    matrix    =    new    double[width][height    -    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  int  col  =  getColumnSize()  -  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnSize()  -  getRhsOffset();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnSize()  -  getRhsOffset();	  int    col    =    getRhsOffset()    -    getColumnSize();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
7	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  getColumnSize()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getRhsOffset()  -  getColumnSize()  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getRhsOffset()  -  getColumnSize()  +  1;	  int    col    =    getRhsOffset()    -    getColumnSize();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
8	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  /  getColumnSize();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getRhsOffset()  /  getColumnSize();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getRhsOffset()  /  getColumnSize();	  int    col    =    getRhsOffset()    -    getColumnSize();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
9	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width][length];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width][length];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width][length];	  double[][]    matrix    =    new    double[width][length];    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
10	[BUG]  [BUGGY]  int  col  =  getColumnIndex()  -  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnIndex()  -  getRhsOffset();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnIndex()  -  getRhsOffset();	  int    col    =    getRhsOffset()    -    getColumnIndex();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
11	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  getColumnIndex()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getRhsOffset()  -  getColumnIndex()  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getRhsOffset()  -  getColumnIndex()  +  1;	  int    col    =    getRhsOffset()    -    getColumnIndex();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
12	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  /  getColumnIndex();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getRhsOffset()  /  getColumnIndex();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getRhsOffset()  /  getColumnIndex();	  int    col    =    getRhsOffset()    -    getColumnIndex();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
13	[BUG]  [BUGGY]  int  width  =  getWidth()  -  numSlackVariables  -  1;  int  height  =  getHeight();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  numSlackVariables  -  1;  int  height  =  getHeight();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  numSlackVariables  -  1;  int  height  =  getHeight();	  int    width    =    getWidth()    -    numSlackVariables    -    1;    int    height    =    getHeight()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
14	[BUG]  [BUGGY]  int  width  =  getWidth()  -  slackVar  -  1;  int  height  =  getHeight();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  slackVar  -  1;  int  height  =  getHeight();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  slackVar  -  1;  int  height  =  getHeight();	  int    width    =    getWidth()    -    numSlackVariables    -    1;    int    height    =    getHeight()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
15	[BUG]  [BUGGY]  int  height  =  getHeight()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getHeight()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getHeight()  -  1;	  int    height    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
16	[BUG]  [BUGGY]  int  height  =  getWidth()  -  numArtificialVariables  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getWidth()  -  numArtificialVariables  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getWidth()  -  numArtificialVariables  -  1;	  int    height    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
17	[BUG]  [BUGGY]  int  height  =  getLeftOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getLeftOffset()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getLeftOffset()  -  1;	  int    height    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
18	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[length][1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[length][1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[length][1];	  int[][]    matrix    =    new    int[length][height];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
19	[BUG]  [BUGGY]  float[][]  matrix  =  new  float[length][height];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  float[][]  matrix  =  new  float[length][height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	float[][]  matrix  =  new  float[length][height];	  int[][]    matrix    =    new    int[length][height];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
20	[BUG]  [BUGGY]  int  width  =  getHeight()  -  numArtificialVariables  -  1;  int  height  =  getHeight();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getHeight()  -  numArtificialVariables  -  1;  int  height  =  getHeight();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getHeight()  -  numArtificialVariables  -  1;  int  height  =  getHeight();	  int    width    =    getWidth()    -    numArtificialVariables    -    1;    int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
21	[BUG]  [BUGGY]  int  width  =  getWidth()  -  numDecisionVariables  -  1;  int  height  =  getHeight();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  numDecisionVariables  -  1;  int  height  =  getHeight();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  numDecisionVariables  -  1;  int  height  =  getHeight();	  int    width    =    getWidth()    -    numArtificialVariables    -    1;    int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
22	[BUG]  [BUGGY]  int  width  =  getWidth()  /  numArtificialVariables  -  1;  int  height  =  getHeight();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  /  numArtificialVariables  -  1;  int  height  =  getHeight();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  /  numArtificialVariables  -  1;  int  height  =  getHeight();	  int    width    =    getWidth()    -    numArtificialVariables    -    1;    int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
23	[BUG]  [BUGGY]  int  width  =  getHeight();  int  height  =  getHeight();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getHeight();  int  height  =  getHeight();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getHeight();  int  height  =  getHeight();	  int    width    =    getHeight()    -    1;    int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
24	[BUG]  [BUGGY]  int  width  =  getHeight()  -  numSlackVariables;  int  height  =  getHeight()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getHeight()  -  numSlackVariables;  int  height  =  getHeight()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getHeight()  -  numSlackVariables;  int  height  =  getHeight()  -  1;	  int    width    =    getHeight()    -    numArtificialVariables;    int    height    =    getHeight()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
25	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  -  width;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  zIndex  =  getRhsIndex()  -  width;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  zIndex  =  getRhsIndex()  -  width;	  int    zIndex    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
26	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  *  width;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  zIndex  =  getRhsOffset()  *  width;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  zIndex  =  getRhsOffset()  *  width;	  int    zIndex    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
27	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  -  width;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getRhsOffset()  -  width;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getRhsOffset()  -  width;	  int    zIndex    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
28	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width][height  -  height];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width][height  -  height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width][height  -  height];	  double[][]    matrix    =    new    double[width][height    -    width];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
29	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width][height  -  width  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width][height  -  width  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width][height  -  width  +  1];	  double[][]    matrix    =    new    double[width][height    -    width];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
30	[BUG]  [BUGGY]  int  col  =  getColumn()  -  width;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumn()  -  width;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumn()  -  width;	  int    col    =    getColumn();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
31	[BUG]  [BUGGY]  int  col  =  getColumn()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumn()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumn()  -  1;	  int    col    =    getColumn();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
32	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  +  2][width];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  +  2][width];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  +  2][width];	  double[][]    matrix    =    new    double[width    +    1][width];    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
33	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  +  1][height];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  +  1][height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  +  1][height];	  double[][]    matrix    =    new    double[width    +    1][width];    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
34	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  +  1][width];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  +  1][width];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  +  1][width];	  double[][]    matrix    =    new    double[width    +    1][width];    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
35	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  width][height  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  width][height  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  width][height  -  1];	  double[][]    matrix    =    new    double[width    -    width][height];    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
36	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  height][height];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  height][height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  height][height];	  double[][]    matrix    =    new    double[width    -    width][height];    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
37	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  width][height  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  width][height  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  width][height  +  1];	  double[][]    matrix    =    new    double[width    -    width][height];    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
38	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[size][width];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[size][width];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[size][width];	  double[][]    matrix    =    new    double[size][height];    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
39	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[size][height];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[size][height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[size][height];	  double[][]    matrix    =    new    double[size][height];    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
40	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width][height  -  height];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width][height  -  height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width][height  -  height];	  int[][]    matrix    =    new    int[width][height    -    width];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
41	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width][height  -  width  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width][height  -  width  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width][height  -  width  +  1];	  int[][]    matrix    =    new    int[width][height    -    width];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
42	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width][height  *  height];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width][height  *  height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width][height  *  height];	  int[][]    matrix    =    new    int[width][height    -    width];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
43	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width][1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width][1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width][1];	  int[][]    matrix    =    new    int[width][0];    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
44	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  -  1][0];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  -  1][0];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  -  1][0];	  int[][]    matrix    =    new    int[width][0];    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
45	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  +  1][0];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  +  1][0];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  +  1][0];	  int[][]    matrix    =    new    int[width][0];    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
46	[BUG]  [BUGGY]  int  height  =  getWidth()  -  numArtificialVariables;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getWidth()  -  numArtificialVariables;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getWidth()  -  numArtificialVariables;	  int    height    =    getWidth()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
47	[BUG]  [BUGGY]  int  height  =  getRhsOffset()  -  getWidth();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getRhsOffset()  -  getWidth();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getRhsOffset()  -  getWidth();	  int    height    =    getWidth()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
48	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  height][width];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  height][width];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  height][width];	  double[][]    matrix    =    new    double[width    -    width][width];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
49	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  width][1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  width][1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  width][1];	  double[][]    matrix    =    new    double[width    -    width][width];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
50	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width][size];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width][size];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width][size];	  int[][]    matrix    =    new    int[size][width];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
51	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[size][width  -  1];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[size][width  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[size][width  -  1];	  int[][]    matrix    =    new    int[size][width];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
52	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[size][width  +  1];  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[size][width  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[size][width  +  1];	  int[][]    matrix    =    new    int[size][width];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
53	[BUG]  [BUGGY]  int  height  =  getLeftOffset()  -  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getLeftOffset()  -  getRhsOffset()  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getLeftOffset()  -  getRhsOffset()  +  1;	  int    height    =    getLeftOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
54	[BUG]  [BUGGY]  int  height  =  getRhsOffset()  -  getLeftOffset();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getRhsOffset()  -  getLeftOffset();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getRhsOffset()  -  getLeftOffset();	  int    height    =    getLeftOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
55	[BUG]  [BUGGY]  Integer  j  =  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  Integer  j  =  getRhsOffset()  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	Integer  j  =  getRhsOffset()  +  1;	  Integer    j    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
56	[BUG]  [BUGGY]  Integer  j  =  getColumn();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  Integer  j  =  getColumn();  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	Integer  j  =  getColumn();	  Integer    j    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
57	[BUG]  [BUGGY]  Integer  j  =  getRhsOffset()  +  width;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  Integer  j  =  getRhsOffset()  +  width;  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	Integer  j  =  getRhsOffset()  +  width;	  Integer    j    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
58	[BUG]  [BUGGY]  Integer  j  =  getColumnsOffset();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  Integer  j  =  getColumnsOffset();  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	Integer  j  =  getColumnsOffset();	  Integer    j    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
59	[BUG]  [BUGGY]  int  width  =  getHeight()  -  numSlackVariables  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getHeight()  -  numSlackVariables  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getHeight()  -  numSlackVariables  -  1;	  int    width    =    getHeight()    -    numArtificialVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
60	[BUG]  [BUGGY]  int  width  =  getHeight()  -  numDecisionVariables  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getHeight()  -  numDecisionVariables  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getHeight()  -  numDecisionVariables  -  1;	  int    width    =    getHeight()    -    numArtificialVariables    -    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
61	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  getColumnOffset();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getRhsOffset()  -  getColumnOffset();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getRhsOffset()  -  getColumnOffset();	  int    col    =    getColumnOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
62	[BUG]  [BUGGY]  int  col  =  getColumnOffset()  -  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnOffset()  -  getRhsOffset()  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnOffset()  -  getRhsOffset()  +  1;	  int    col    =    getColumnOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
63	[BUG]  [BUGGY]  int  col  =  getColumnOffset()  /  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnOffset()  /  getRhsOffset();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnOffset()  /  getRhsOffset();	  int    col    =    getColumnOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
64	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  height][0];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  height][0];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  height][0];	  double[][]    matrix    =    new    double[width    -    width][0];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
65	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  -  width][0];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  -  width][0];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  -  width][0];	  double[][]    matrix    =    new    double[width    -    width][0];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
66	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  1][1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  1][1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  1][1];	  double[][]    matrix    =    new    double[width    -    1][0];    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
67	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  2][0];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  2][0];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  2][0];	  double[][]    matrix    =    new    double[width    -    1][0];    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
68	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  -  1][width];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  -  1][width];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  -  1][width];	  double[][]    matrix    =    new    double[width    -    1][width];    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
69	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  1][height];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  1][height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  1][height];	  double[][]    matrix    =    new    double[width    -    1][width];    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
70	[BUG]  [BUGGY]  int  width  =  getHeight()  -  slackVar  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getHeight()  -  slackVar  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getHeight()  -  slackVar  -  1;	  int    width    =    getWidth()    -    slackVar    -    1;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
71	[BUG]  [BUGGY]  int  width  =  getWidth()  -  zIndex  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  zIndex  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  zIndex  -  1;	  int    width    =    getWidth()    -    slackVar    -    1;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
72	[BUG]  [BUGGY]  int  row  =  getRhsColumn()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  row  =  getRhsColumn()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  row  =  getRhsColumn()  -  1;	  int    row    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
73	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getRhsOffset()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getRhsOffset()  -  1;	  int    col    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
74	[BUG]  [BUGGY]  int  col  =  getColumnsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnsOffset()  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnsOffset()  +  1;	  int    col    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
75	[BUG]  [BUGGY]  int  col  =  getColumnOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnOffset()  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnOffset()  +  1;	  int    col    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
76	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[length][width  -  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[length][width  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[length][width  -  1];	  int[][]    matrix    =    new    int[length][width];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
77	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[length][width  +  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[length][width  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[length][width  +  1];	  int[][]    matrix    =    new    int[length][width];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
78	[BUG]  [BUGGY]  int  width  =  getWidth()  -  numSlackVar  -  1;  int  height  =  getHeight()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  numSlackVar  -  1;  int  height  =  getHeight()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  numSlackVar  -  1;  int  height  =  getHeight()  -  1;	  int    width    =    getWidth()    -    slackVar    -    1;    int    height    =    getHeight()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
79	[BUG]  [BUGGY]  int  width  =  getHeight()  -  numSlackVariables  -  1;  int  height  =  getHeight()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getHeight()  -  numSlackVariables  -  1;  int  height  =  getHeight()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getHeight()  -  numSlackVariables  -  1;  int  height  =  getHeight()  -  1;	  int    width    =    getHeight()    -    numArtificialVariables    -    1;    int    height    =    getHeight()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
80	[BUG]  [BUGGY]  int  width  =  getHeight()  -  numDecisionVariables  -  1;  int  height  =  getHeight()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getHeight()  -  numDecisionVariables  -  1;  int  height  =  getHeight()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getHeight()  -  numDecisionVariables  -  1;  int  height  =  getHeight()  -  1;	  int    width    =    getHeight()    -    numArtificialVariables    -    1;    int    height    =    getHeight()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
81	[BUG]  [BUGGY]  int  width  =  getWidth()  -  numSlackVar  -  1;  int  height  =  getHeight()  -  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  numSlackVar  -  1;  int  height  =  getHeight()  -  2;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  numSlackVar  -  1;  int  height  =  getHeight()  -  2;	  int    width    =    getWidth()    -    slackVar    -    1;    int    height    =    getHeight()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
82	[BUG]  [BUGGY]  int  height  =  getHeight()  -  width;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getHeight()  -  width;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getHeight()  -  width;	  int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
83	[BUG]  [BUGGY]  int  height  =  getHeight()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getHeight()  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getHeight()  +  1;	  int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
84	[BUG]  [BUGGY]  int  height  =  getHeight()  -  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getHeight()  -  2;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getHeight()  -  2;	  int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
85	[BUG]  [BUGGY]  int  col  =  getColumnsOffset()  *  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnsOffset()  *  getRhsOffset();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnsOffset()  *  getRhsOffset();	  int    col    =    getRhsOffset()    *    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
86	[BUG]  [BUGGY]  int  col  =  getColumn()  *  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumn()  *  getRhsOffset();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumn()  *  getRhsOffset();	  int    col    =    getRhsOffset()    *    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
87	[BUG]  [BUGGY]  int  col  =  getColumnOffset()  *  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnOffset()  *  getRhsOffset();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnOffset()  *  getRhsOffset();	  int    col    =    getRhsOffset()    *    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
88	[BUG]  [BUGGY]  int  width  =  getWidth()  -  numSlackVars  -  1;  int  height  =  getHeight();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  numSlackVars  -  1;  int  height  =  getHeight();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  numSlackVars  -  1;  int  height  =  getHeight();	  int    width    =    getWidth()    -    numSlackVars    -    1;    int    height    =    getHeight()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
89	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[length][height  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[length][height  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[length][height  -  1];	  double[][]    matrix    =    new    double[length][height    -    1];    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
90	[BUG]  [BUGGY]  int[][]  matrix  =  new  double[length][height  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  double[length][height  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  double[length][height  -  1];	  double[][]    matrix    =    new    double[length][height    -    1];    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
91	[BUG]  [BUGGY]  int  width  =  getWidth();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth();  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth();	  int    width    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
92	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getRhsOffset()  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getRhsOffset()  +  1;	  int    width    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
93	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getRhsOffset()  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getRhsOffset()  -  1;	  int    width    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
94	[BUG]  [BUGGY]  int  width  =  getRhsWidth();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getRhsWidth();  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getRhsWidth();	  int    width    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
95	[BUG]  [BUGGY]  int  col  =  getColumnsOffset()  /  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnsOffset()  /  getRhsOffset();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnsOffset()  /  getRhsOffset();	  int    col    =    getRhsOffset()    /    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
96	[BUG]  [BUGGY]  int  col  =  getColumn()  /  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumn()  /  getRhsOffset();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumn()  /  getRhsOffset();	  int    col    =    getRhsOffset()    /    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
97	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  getColumnsOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getRhsOffset()  -  getColumnsOffset();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getRhsOffset()  -  getColumnsOffset();	  int    col    =    getColumnsOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
98	[BUG]  [BUGGY]  int  col  =  getColumnsOffset()  -  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnsOffset()  -  getRhsOffset()  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnsOffset()  -  getRhsOffset()  +  1;	  int    col    =    getColumnsOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
99	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  height;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  zIndex  =  getRhsOffset()  +  height;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  zIndex  =  getRhsOffset()  +  height;	  int    zIndex    =    getRhsOffset()    +    width;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
100	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  width  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  zIndex  =  getRhsOffset()  +  width  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  zIndex  =  getRhsOffset()  +  width  +  1;	  int    zIndex    =    getRhsOffset()    +    width;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
101	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  -  1];	  double[][]    matrix    =    new    double[width    -    1];    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
102	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  2];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  2];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  2];	  double[][]    matrix    =    new    double[width    -    1];    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
103	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  +  1][height  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  +  1][height  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  +  1][height  +  1];	  int[][]    matrix    =    new    int[width][height    +    1];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
104	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  +  1,  height  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  +  1,  height  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  +  1,  height  +  1];	  int[][]    matrix    =    new    int[width][height    +    1];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
105	[BUG]  [BUGGY]  int  width  =  getHeight()  -  height  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getHeight()  -  height  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getHeight()  -  height  -  1;	  int    width    =    getWidth()    -    height    -    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
106	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  -  numArtificialVariables;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  row  =  getRhsOffset()  -  numArtificialVariables;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  row  =  getRhsOffset()  -  numArtificialVariables;	  int    row    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
107	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  -  width  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  row  =  getRhsOffset()  -  width  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  row  =  getRhsOffset()  -  width  -  1;	  int    row    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
108	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  /  width;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  row  =  getRhsOffset()  /  width;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  row  =  getRhsOffset()  /  width;	  int    row    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
109	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  +  height;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  row  =  getRhsOffset()  +  height;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  row  =  getRhsOffset()  +  height;	  int    row    =    getRhsOffset()    +    width;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
110	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  +  width  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  row  =  getRhsOffset()  +  width  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  row  =  getRhsOffset()  +  width  -  1;	  int    row    =    getRhsOffset()    +    width;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
111	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[length][0];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[length][0];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[length][0];	  double[][]    matrix    =    new    double[length][1];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
112	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  -  width][width];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  -  width][width];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  -  width][width];	  int[][]    matrix    =    new    int[width][width];    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
113	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  +  height  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  +  height  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  +  height  -  1];	  int[][]    matrix    =    new    int[width    +    height];    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
114	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  +  numArtificialVariables];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  +  numArtificialVariables];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  +  numArtificialVariables];	  int[][]    matrix    =    new    int[width    +    height];    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
115	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  +  width];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  +  width];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  +  width];	  int[][]    matrix    =    new    int[width    +    height];    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
116	[BUG]  [BUGGY]  int  height  =  getLeftOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getLeftOffset()  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getLeftOffset()  +  1;	  int    height    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
117	[BUG]  [BUGGY]  int  width  =  getHeight()  /  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getHeight()  /  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getHeight()  /  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;	  int    width    =    getWidth()    /    numArtificialVariables    -    1;    int    height    =    getHeight()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
118	[BUG]  [BUGGY]  int  width  =  getWidth()  /  numSlackVariables  -  1;  int  height  =  getHeight()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  /  numSlackVariables  -  1;  int  height  =  getHeight()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  /  numSlackVariables  -  1;  int  height  =  getHeight()  -  1;	  int    width    =    getWidth()    /    numArtificialVariables    -    1;    int    height    =    getHeight()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
119	[BUG]  [BUGGY]  int  col  =  getColumnsOffset()  -  width;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnsOffset()  -  width;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnsOffset()  -  width;	  int    col    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
120	[BUG]  [BUGGY]  int  col  =  getColumnOffset()  -  width;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnOffset()  -  width;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnOffset()  -  width;	  int    col    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
121	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  *  width;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getRhsOffset()  *  width;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getRhsOffset()  *  width;	  int    col    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
122	[BUG]  [BUGGY]  int  col  =  getColumn()  -  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumn()  -  getRhsOffset()  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumn()  -  getRhsOffset()  +  1;	  int    col    =    getColumn()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
123	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  getColumn();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getRhsOffset()  -  getColumn();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getRhsOffset()  -  getColumn();	  int    col    =    getColumn()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
124	[BUG]  [BUGGY]  int  col  =  getRhsColumn()  -  getColumn();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getRhsColumn()  -  getColumn();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getRhsColumn()  -  getColumn();	  int    col    =    getColumn()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
125	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  +  height][height];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  +  height][height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  +  height][height];	  double[][]    matrix    =    new    double[width    +    width][height];    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
126	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  +  width][height  -  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  +  width][height  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  +  width][height  -  1];	  double[][]    matrix    =    new    double[width    +    width][height];    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
127	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  +  width][height];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  +  width][height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  +  width][height];	  double[][]    matrix    =    new    double[width    +    width][height];    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
128	[BUG]  [BUGGY]  int[][]  matrix  =  new  double[width  +  width][height];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  double[width  +  width][height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  double[width  +  width][height];	  double[][]    matrix    =    new    double[width    +    width][height];    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
129	[BUG]  [BUGGY]  float[][]  matrix  =  new  float[width][height  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  float[][]  matrix  =  new  float[width][height  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	float[][]  matrix  =  new  float[width][height  +  1];	  float[][]    matrix    =    new    float[width][height];    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
130	[BUG]  [BUGGY]  float[][]  matrix  =  new  float[width][height  -  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  float[][]  matrix  =  new  float[width][height  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	float[][]  matrix  =  new  float[width][height  -  1];	  float[][]    matrix    =    new    float[width][height];    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
131	[BUG]  [BUGGY]  int  height  =  getHeight()  -  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getHeight()  -  getRhsOffset()  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getHeight()  -  getRhsOffset()  +  1;	  int    height    =    getHeight()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
132	[BUG]  [BUGGY]  int  height  =  getHeight()  /  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getHeight()  /  getRhsOffset();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getHeight()  /  getRhsOffset();	  int    height    =    getHeight()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
133	[BUG]  [BUGGY]  int  height  =  getHeight()  -  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getHeight()  -  getRhsOffset()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getHeight()  -  getRhsOffset()  -  1;	  int    height    =    getHeight()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
134	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  -  height][height];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  -  height][height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  -  height][height];	  int[][]    matrix    =    new    int[width    -    width][height];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
135	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  -  width][height  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  -  width][height  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  -  width][height  -  1];	  int[][]    matrix    =    new    int[width    -    width][height];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
136	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  -  width][height  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  -  width][height  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  -  width][height  +  1];	  int[][]    matrix    =    new    int[width    -    width][height];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
137	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  -  width][1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  -  width][1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  -  width][1];	  int[][]    matrix    =    new    int[width    -    width][height];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
138	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width][width  /  height];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width][width  /  height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width][width  /  height];	  double[][]    matrix    =    new    double[width][height    *    height];    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
139	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width][width  *  height];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width][width  *  height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width][width  *  height];	  double[][]    matrix    =    new    double[width][height    *    height];    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
140	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width][height  /  height];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width][height  /  height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width][height  /  height];	  double[][]    matrix    =    new    double[width][height    *    height];    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
141	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width][1  *  height];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width][1  *  height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width][1  *  height];	  double[][]    matrix    =    new    double[width][height    *    height];    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
142	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width][height  -  2];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width][height  -  2];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width][height  -  2];	  int[][]    matrix    =    new    int[width][height    -    1];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
143	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width][height  -  1]  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width][height  -  1]  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width][height  -  1]  +  1;	  int[][]    matrix    =    new    int[width][height    -    1];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
144	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width][width  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width][width  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width][width  -  1];	  int[][]    matrix    =    new    int[height][width    -    1];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
145	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset().length  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  zIndex  =  getRhsOffset().length  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  zIndex  =  getRhsOffset().length  +  1;	  int    zIndex    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
146	[BUG]  [BUGGY]  int  height  =  getSize()  -  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getSize()  -  getRhsOffset();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getSize()  -  getRhsOffset();	  int    height    =    getRhsOffset()    -    getSize();    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
147	[BUG]  [BUGGY]  int  height  =  getHeight()  -  getSize();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getHeight()  -  getSize();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getHeight()  -  getSize();	  int    height    =    getRhsOffset()    -    getSize();    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
148	[BUG]  [BUGGY]  int  height  =  getWidth()  -  getSize();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getWidth()  -  getSize();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getWidth()  -  getSize();	  int    height    =    getRhsOffset()    -    getSize();    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
149	[BUG]  [BUGGY]  int  height  =  getRhsOffset()  -  getSize()  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getRhsOffset()  -  getSize()  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getRhsOffset()  -  getSize()  +  1;	  int    height    =    getRhsOffset()    -    getSize();    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
150	[BUG]  [BUGGY]  int[][]  matrix  =  new  double[width][height  /  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  double[width][height  /  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  double[width][height  /  1];	  int[][]    matrix    =    new    double[width][height    -    1];    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
151	[BUG]  [BUGGY]  int[][]  matrix  =  new  double[width][height  -  2];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  double[width][height  -  2];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  double[width][height  -  2];	  int[][]    matrix    =    new    double[width][height    -    1];    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
152	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  -  getRhsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  row  =  getRhsOffset()  -  getRhsOffset()  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  row  =  getRhsOffset()  -  getRhsOffset()  +  1;	  int    row    =    getRhsOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
153	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  /  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  row  =  getRhsOffset()  /  getRhsOffset();  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  row  =  getRhsOffset()  /  getRhsOffset();	  int    row    =    getRhsOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
154	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  -  getRhsOffset()  -  width;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  row  =  getRhsOffset()  -  getRhsOffset()  -  width;  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  row  =  getRhsOffset()  -  getRhsOffset()  -  width;	  int    row    =    getRhsOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
155	[BUG]  [BUGGY]  int  col  =  getColumnsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnsOffset()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnsOffset()  -  1;	  int    col    =    getColumnsOffset();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
156	[BUG]  [BUGGY]  int  height  =  getLeftOffset()  -  width;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getLeftOffset()  -  width;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getLeftOffset()  -  width;	  int    height    =    getLeftOffset();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
157	[BUG]  [BUGGY]  int  height  =  getWidth()  -  getHeight();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getWidth()  -  getHeight();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getWidth()  -  getHeight();	  int    height    =    getRhsOffset()    -    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
158	[BUG]  [BUGGY]  int  height  =  getRhsOffset()  -  getHeight()  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getRhsOffset()  -  getHeight()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getRhsOffset()  -  getHeight()  -  1;	  int    height    =    getRhsOffset()    -    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
159	[BUG]  [BUGGY]  int  height  =  getRhsOffset()  -  getHeight()  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getRhsOffset()  -  getHeight()  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getRhsOffset()  -  getHeight()  +  1;	  int    height    =    getRhsOffset()    -    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
160	[BUG]  [BUGGY]  int  col  =  getColumnOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnOffset()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnOffset()  -  1;	  int    col    =    getColumnOffset();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
161	[BUG]  [BUGGY]  int  height  =  getWidth()  +  numArtificialVariables;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getWidth()  +  numArtificialVariables;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getWidth()  +  numArtificialVariables;	  int    height    =    getWidth();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
162	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  +  width;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  zIndex  =  getRhsIndex()  +  width;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  zIndex  =  getRhsIndex()  +  width;	  int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
163	[BUG]  [BUGGY]  int  width  =  getWidth()  -  numArtificialVariables;  int  height  =  getHeight();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  numArtificialVariables;  int  height  =  getHeight();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  numArtificialVariables;  int  height  =  getHeight();	  int    width    =    getWidth();    int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
164	[BUG]  [BUGGY]  int  width  =  getWidth()  +  numArtificialVariables;  int  height  =  getHeight();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  +  numArtificialVariables;  int  height  =  getHeight();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  +  numArtificialVariables;  int  height  =  getHeight();	  int    width    =    getWidth();    int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
165	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  +  1][1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  +  1][1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  +  1][1];	  double[][]    matrix    =    new    double[width    +    1][0];    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
166	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  +  2][0];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  +  2][0];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  +  2][0];	  double[][]    matrix    =    new    double[width    +    1][0];    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
167	[BUG]  [BUGGY]  int  height  =  getWidth()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getWidth()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getWidth()  -  1;	  int    height    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
168	[BUG]  [BUGGY]  int  height  =  getLeftOffset()  -  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getLeftOffset()  -  getRhsOffset()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getLeftOffset()  -  getRhsOffset()  -  1;	  int    height    =    getLeftOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
169	[BUG]  [BUGGY]  int  width  =  getWidth()  /  numDecisionVariables  -  1;  int  height  =  getHeight()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  /  numDecisionVariables  -  1;  int  height  =  getHeight()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  /  numDecisionVariables  -  1;  int  height  =  getHeight()  -  1;	  int    width    =    getWidth()    /    numArtificialVariables    -    1;    int    height    =    getHeight()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
170	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  -  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  row  =  getRhsOffset()  -  getRhsOffset()  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  row  =  getRhsOffset()  -  getRhsOffset()  -  1;	  int    row    =    getRhsOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
171	[BUG]  [BUGGY]  int  height  =  getLeftOffset()  -  getHeight();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getLeftOffset()  -  getHeight();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getLeftOffset()  -  getHeight();	  int    height    =    getRhsOffset()    -    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
172	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  *  height];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  *  height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  *  height];	  int[][]    matrix    =    new    int[width    +    height];    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
173	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  -  width];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  -  width];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  -  width];	  int[][]    matrix    =    new    int[width][height    -    width];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
174	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width][height  *  2];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width][height  *  2];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width][height  *  2];	  double[][]    matrix    =    new    double[width][height    *    height];    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
175	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width][width  *  height  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width][width  *  height  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width][width  *  height  +  1];	  double[][]    matrix    =    new    double[width][height    *    height];    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
176	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  width][length];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  width][length];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  width][length];	  double[][]    matrix    =    new    double[width][length];    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
177	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  +  1][height  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  +  1][height  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  +  1][height  -  1];	  double[][]    matrix    =    new    double[length][height    -    1];    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
178	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  zIndex  =  getRhsOffset()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  zIndex  =  getRhsOffset()  -  1;	  int    zIndex    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
179	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  zIndex  =  getRhsOffset()  +  2;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  zIndex  =  getRhsOffset()  +  2;	  int    zIndex    =    getRhsOffset()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
180	[BUG]  [BUGGY]  int  width  =  getWidth()  -  numSlackVar  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  numSlackVar  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  numSlackVar  -  1;	  int    width    =    getWidth()    -    height    -    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
181	[BUG]  [BUGGY]  int  col  =  getColumn()  -  getColumn();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumn()  -  getColumn();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumn()  -  getColumn();	  int    col    =    getColumn()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
182	[BUG]  [BUGGY]  int  col  =  getColumn()  -  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumn()  -  getRhsOffset()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumn()  -  getRhsOffset()  -  1;	  int    col    =    getColumn()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
183	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  getColumnSize()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getRhsOffset()  -  getColumnSize()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getRhsOffset()  -  getColumnSize()  -  1;	  int    col    =    getRhsOffset()    -    getColumnSize();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
184	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[size][height  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[size][height  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[size][height  -  1];	  double[][]    matrix    =    new    double[size][height];    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
185	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width][height  -  2];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width][height  -  2];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width][height  -  2];	  double[][]    matrix    =    new    double[width][height    -    width];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
186	[BUG]  [BUGGY]  int  width  =  getWidth()  -  slackVar.length  -  1;  int  height  =  getHeight()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  slackVar.length  -  1;  int  height  =  getHeight()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  slackVar.length  -  1;  int  height  =  getHeight()  -  1;	  int    width    =    getWidth()    -    slackVar    -    1;    int    height    =    getHeight()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
187	[BUG]  [BUGGY]  int  width  =  getWidth()  -  zIndex  -  1;  int  height  =  getHeight()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  zIndex  -  1;  int  height  =  getHeight()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  zIndex  -  1;  int  height  =  getHeight()  -  1;	  int    width    =    getWidth()    -    slackVar    -    1;    int    height    =    getHeight()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
188	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  -  width  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  zIndex  =  getRhsOffset()  -  width  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  zIndex  =  getRhsOffset()  -  width  +  1;	  int    zIndex    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
189	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  -  width  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  zIndex  =  getRhsOffset()  -  width  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  zIndex  =  getRhsOffset()  -  width  -  1;	  int    zIndex    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
190	[BUG]  [BUGGY]  float[][]  matrix  =  new  double[width][height];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  float[][]  matrix  =  new  double[width][height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	float[][]  matrix  =  new  double[width][height];	  float[][]    matrix    =    new    float[height][width];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
191	[BUG]  [BUGGY]  float[][]  matrix  =  new  double[height][width];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  float[][]  matrix  =  new  double[height][width];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	float[][]  matrix  =  new  double[height][width];	  float[][]    matrix    =    new    float[height][width];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
192	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  2][width];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  2][width];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  2][width];	  double[][]    matrix    =    new    double[width    -    1][width];    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
193	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  -  width  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  row  =  getRhsOffset()  -  width  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  row  =  getRhsOffset()  -  width  +  1;	  int    row    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
194	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  -  zIndex;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  row  =  getRhsOffset()  -  zIndex;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  row  =  getRhsOffset()  -  zIndex;	  int    row    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
195	[BUG]  [BUGGY]  int  height  =  getLeft()  -  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getLeft()  -  getRhsOffset();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getLeft()  -  getRhsOffset();	  int    height    =    getWidth()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
196	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  -  1][height  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  -  1][height  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  -  1][height  +  1];	  int[][]    matrix    =    new    int[width][height    +    1];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
197	[BUG]  [BUGGY]  int  width  =  getWidth()  -  numDecisionVariables;  int  height  =  getHeight()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  numDecisionVariables;  int  height  =  getHeight()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  numDecisionVariables;  int  height  =  getHeight()  -  1;	  int    width    =    getWidth()    -    numArtificialVariables;    int    height    =    getHeight()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
198	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  *  1][width];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  *  1][width];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  *  1][width];	  double[][]    matrix    =    new    double[width    +    1][width];    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
199	[BUG]  [BUGGY]  int  col  =  getColumnsOffset()  +  width;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnsOffset()  +  width;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnsOffset()  +  width;	  int    col    =    getColumnsOffset();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
200	[BUG]  [BUGGY]  int  width  =  getWidth();  int  height  =  getHeight()  -  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth();  int  height  =  getHeight()  -  2;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth();  int  height  =  getHeight()  -  2;	  int    width    =    getWidth();    int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
201	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[1  +  width][height];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[1  +  width][height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[1  +  width][height];	  double[][]    matrix    =    new    double[width    +    width][height];    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
202	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[length  +  height][height];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[length  +  height][height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[length  +  height][height];	  double[][]    matrix    =    new    double[width    +    width][height];    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
203	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  +  1][height  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  +  1][height  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  +  1][height  -  1];	  int[][]    matrix    =    new    int[width][height    -    1];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
204	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  -  1,  height  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  -  1,  height  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  -  1,  height  -  1];	  int[][]    matrix    =    new    int[width][height    -    1];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
205	[BUG]  [BUGGY]  int  width  =  getWidth()  -  numSlackVars  -  2;  int  height  =  getHeight();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  numSlackVars  -  2;  int  height  =  getHeight();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  numSlackVars  -  2;  int  height  =  getHeight();	  int    width    =    getWidth()    -    numSlackVars    -    1;    int    height    =    getHeight()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
206	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width][numArtificialVariables];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width][numArtificialVariables];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width][numArtificialVariables];	  int[][]    matrix    =    new    int[size][width];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
207	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  1  +  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  1  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  1  +  1];	  double[][]    matrix    =    new    double[width    -    1];    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
208	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  1],  height  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  1],  height  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  1],  height  -  1];	  double[][]    matrix    =    new    double[width    -    1];    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
209	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  *  1][0];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  *  1][0];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  *  1][0];	  double[][]    matrix    =    new    double[width    +    1][0];    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
210	[BUG]  [BUGGY]  int  col  =  getColumnOffset()  -  getColumnOffset();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnOffset()  -  getColumnOffset();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnOffset()  -  getColumnOffset();	  int    col    =    getColumnOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
211	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  width  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getRhsOffset()  -  width  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getRhsOffset()  -  width  +  1;	  int    col    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
212	[BUG]  [BUGGY]  int  width  =  getWidth()  -  slackVar  -  2;  int  height  =  getHeight();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  slackVar  -  2;  int  height  =  getHeight();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  slackVar  -  2;  int  height  =  getHeight();	  int    width    =    getWidth()    -    slackVar    -    1;    int    height    =    getHeight()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
213	[BUG]  [BUGGY]  int  width  =  getWidth()  -  slackVar.length  -  1;  int  height  =  getHeight();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  slackVar.length  -  1;  int  height  =  getHeight();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  slackVar.length  -  1;  int  height  =  getHeight();	  int    width    =    getWidth()    -    slackVar    -    1;    int    height    =    getHeight()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
214	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  -  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  row  =  getRhsOffset()  -  2;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  row  =  getRhsOffset()  -  2;	  int    row    =    getRhsOffset()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
215	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  1][2];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  1][2];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  1][2];	  double[][]    matrix    =    new    double[width    -    1][0];    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
216	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  1][height  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  1][height  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  1][height  +  1];	  double[][]    matrix    =    new    double[width][height    +    1];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
217	[BUG]  [BUGGY]  int  width  =  getHeight()  -  numDecisionVariables;  int  height  =  getHeight()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getHeight()  -  numDecisionVariables;  int  height  =  getHeight()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getHeight()  -  numDecisionVariables;  int  height  =  getHeight()  -  1;	  int    width    =    getHeight()    -    numArtificialVariables;    int    height    =    getHeight()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
218	[BUG]  [BUGGY]  int[][]  matrix  =  new  double[width  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  double[width  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  double[width  -  1];	  int[][]    matrix    =    new    double[width][height    -    1];    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
219	[BUG]  [BUGGY]  int[][]  matrix  =  new  double[width  +  1][height  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  double[width  +  1][height  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  double[width  +  1][height  -  1];	  int[][]    matrix    =    new    double[width][height    -    1];    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
220	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  getColumnIndex()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getRhsOffset()  -  getColumnIndex()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getRhsOffset()  -  getColumnIndex()  -  1;	  int    col    =    getRhsOffset()    -    getColumnIndex();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
221	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  -  1][height];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  -  1][height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  -  1][height];	  int[][]    matrix    =    new    int[width    -    width][height];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
222	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  width  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  zIndex  =  getRhsOffset()  +  width  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  zIndex  =  getRhsOffset()  +  width  -  1;	  int    zIndex    =    getRhsOffset()    +    width;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
223	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[length][2];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[length][2];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[length][2];	  double[][]    matrix    =    new    double[length][1];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
224	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  *  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  *  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  *  1];	  double[][]    matrix    =    new    double[width    +    1];    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
225	[BUG]  [BUGGY]  int  col  =  getColumnsOffset()  -  getColumnsOffset();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnsOffset()  -  getColumnsOffset();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnsOffset()  -  getColumnsOffset();	  int    col    =    getColumnsOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
226	[BUG]  [BUGGY]  int  col  =  getColumnsOffset()  -  getColumnsOffset()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnsOffset()  -  getColumnsOffset()  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnsOffset()  -  getColumnsOffset()  +  1;	  int    col    =    getColumnsOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
227	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  /  getColumnsOffset();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getRhsOffset()  /  getColumnsOffset();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getRhsOffset()  /  getColumnsOffset();	  int    col    =    getRhsOffset()    /    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
228	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  -  width  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  -  width  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  -  width  -  1];	  int[][]    matrix    =    new    int[width][height    -    1];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
229	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[height  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[height  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[height  -  1];	  double[][]    matrix    =    new    double[width    -    1];    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
230	[BUG]  [BUGGY]  int  width  =  getWidth()  -  slackVars  -  1;  int  height  =  getHeight()  -  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  slackVars  -  1;  int  height  =  getHeight()  -  2;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  slackVars  -  1;  int  height  =  getHeight()  -  2;	  int    width    =    getWidth()    -    numSlackVars    -    1;    int    height    =    getHeight()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
231	[BUG]  [BUGGY]  int  width  =  getWidth()  -  slackVar.length  -  1;  int  height  =  getHeight()  -  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  slackVar.length  -  1;  int  height  =  getHeight()  -  2;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  slackVar.length  -  1;  int  height  =  getHeight()  -  2;	  int    width    =    getWidth()    -    slackVar    -    1;    int    height    =    getHeight()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
232	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  -  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getRhsOffset()  -  2;  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getRhsOffset()  -  2;	  int    width    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
233	[BUG]  [BUGGY]  int[][]  matrix  =  new  double[width  -  width  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  double[width  -  width  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  double[width  -  width  -  1];	  int[][]    matrix    =    new    double[width][height    -    1];    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
234	[BUG]  [BUGGY]  int[][]  matrix  =  new  double[width  +  height  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  double[width  +  height  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  double[width  +  height  -  1];	  int[][]    matrix    =    new    double[width][height    -    1];    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
235	[BUG]  [BUGGY]  int  col  =  getColumnsOffset()  -  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnsOffset()  -  getRhsOffset()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnsOffset()  -  getRhsOffset()  -  1;	  int    col    =    getColumnsOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
236	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  /  1][width];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  /  1][width];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  /  1][width];	  double[][]    matrix    =    new    double[width    +    1][width];    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
237	[BUG]  [BUGGY]  float[][]  matrix  =  new  float[height][width  -  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  float[][]  matrix  =  new  float[height][width  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	float[][]  matrix  =  new  float[height][width  -  1];	  float[][]    matrix    =    new    float[height][width];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
238	[BUG]  [BUGGY]  int  width  =  getRhsOffset()  +  width;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getRhsOffset()  +  width;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getRhsOffset()  +  width;	  int    zIndex    =    getRhsOffset()    +    width;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
239	[BUG]  [BUGGY]  int  col  =  getColumnOffset()  -  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumnOffset()  -  getRhsOffset()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumnOffset()  -  getRhsOffset()  -  1;	  int    col    =    getColumnOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
240	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  *  getColumnSize();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getRhsOffset()  *  getColumnSize();  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getRhsOffset()  *  getColumnSize();	  int    col    =    getRhsOffset()    *    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
241	[BUG]  [BUGGY]  int  width  =  getWidth()  -  slackVar.length  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  width  =  getWidth()  -  slackVar.length  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  width  =  getWidth()  -  slackVar.length  -  1;	  int    width    =    getWidth()    -    slackVar    -    1;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
242	[BUG]  [BUGGY]  int  height  =  getRhsOffset()  -  getSize()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  height  =  getRhsOffset()  -  getSize()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  height  =  getRhsOffset()  -  getSize()  -  1;	  int    height    =    getRhsOffset()    -    getSize();    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
243	[BUG]  [BUGGY]  int  col  =  getColumn()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getColumn()  +  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getColumn()  +  1;	  int    col    =    getColumn();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
244	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  -  slackVar;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  row  =  getRhsOffset()  -  slackVar;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  row  =  getRhsOffset()  -  slackVar;	  int    row    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
245	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  -  height;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  row  =  getRhsOffset()  -  height;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  row  =  getRhsOffset()  -  height;	  int    row    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
246	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[width  /  height];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[width  /  height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[width  /  height];	  int[][]    matrix    =    new    int[width    +    height];    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
247	[BUG]  [BUGGY]  Integer  j  =  getRhsOffset()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  Integer  j  =  getRhsOffset()  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	Integer  j  =  getRhsOffset()  -  1;	  Integer    j    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
248	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  +  width][1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  +  width][1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  +  width][1];	  double[][]    matrix    =    new    double[width    +    width][height];    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
249	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  *  height][height];  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  *  height][height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  *  height][height];	  double[][]    matrix    =    new    double[width    +    width][height];    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
250	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  +  height  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  +  height  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  +  height  -  1];	  double[][]    matrix    =    new    double[width][height    -    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
251	[BUG]  [BUGGY]  int[][]  matrix  =  new  int[length][0];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int[][]  matrix  =  new  int[length][0];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int[][]  matrix  =  new  int[length][0];	  int[][]    matrix    =    new    int[width][0];    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
252	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  zIndex;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getRhsOffset()  -  zIndex;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getRhsOffset()  -  zIndex;	  int    col    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
253	[BUG]  [BUGGY]  int  col  =  getRhsOffset()  -  width  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  col  =  getRhsOffset()  -  width  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  col  =  getRhsOffset()  -  width  -  1;	  int    col    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
254	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  zIndex  =  getRhsIndex()  -  1;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  zIndex  =  getRhsIndex()  -  1;	  int    zIndex    =    getRhsIndex();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
255	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  1][height  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  1][height  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  1][height  -  1];	  double[][]    matrix    =    new    double[length][height    -    1];    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
256	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  -  height;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  zIndex  =  getRhsOffset()  -  height;  [BUGGY]      double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  zIndex  =  getRhsOffset()  -  height;	  int    zIndex    =    getRhsOffset()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
257	[BUG]  [BUGGY]  int  row  =  getRhsOffset()  -  getRhsOffset()  -  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  int  row  =  getRhsOffset()  -  getRhsOffset()  -  2;  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	int  row  =  getRhsOffset()  -  getRhsOffset()  -  2;	  int    row    =    getRhsOffset()    -    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
258	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  /  1][0];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  /  1][0];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  /  1][0];	  double[][]    matrix    =    new    double[width    +    1][0];    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
259	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  1][width  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  1][width  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  1][width  +  1];	  double[][]    matrix    =    new    double[length][width    +    1];    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
260	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  *  height  -  1][width];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  *  height  -  1][width];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  *  height  -  1][width];	  double[][]    matrix    =    new    double[width    -    1][width];    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
261	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width  -  1][Height];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width  -  1][Height];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width  -  1][Height];	  double[][]    matrix    =    new    double[width    -    1][width];    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
262	[BUG]  [BUGGY]  double[][]  matrix  =  new  double[width][height  /  width];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  discardArtificialVariables()  {  if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;      [BUGGY]  double[][]  matrix  =  new  double[width][height  /  width];  [BUGGY]      for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	295	295	1	replace	double[][]  matrix  =  new  double[width][height  /  width];	  double[][]    matrix    =    new    double[width][height    -    width];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
