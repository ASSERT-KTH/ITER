bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getHeight()  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getHeight()  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getHeight()  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }	  for(int    i    =    0;    i    <    getHeight();    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau.removeArtificialVariables(matrix);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getColumns();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getColumns();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getColumns();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }	  for(int    i    =    0;    i    <    getHeight();    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau.removeArtificialVariables(matrix);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tableau.length  -  1;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.tableau.length  -  1;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  this.tableau.length  -  1;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    this.tableau.length;    i++)    {    this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
4	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  Integer  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	Integer  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
5	[BUG]  [BUGGY]  int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  col;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    size;    i++)    {    this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
7	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  0,  matrix.length);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  0,  matrix.length);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  0,  matrix.length);	  this.tableau.removeArtificialVariables(matrix,    0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
8	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  1);	  this.tableau.removeArtificialVariables(matrix,    0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
9	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  0,  matrix[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  0,  matrix[0]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  0,  matrix[0]);	  this.tableau.removeArtificialVariables(matrix,    0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getSize()  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getSize()  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getSize()  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    getSize();    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getSize()  +  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getSize()  +  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getSize()  +  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    getSize();    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getSize());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getSize());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getSize());  }	  for(int    i    =    0;    i    <    getSize();    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
13	[BUG]  [BUGGY]  int  j  =  0;  j  <  getColumnsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  j  =  0;  j  <  getColumnsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  j  =  0;  j  <  getColumnsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }	  int    j    =    0;    j    <    getRhsOffset();    j++)    {    this.tableau.removeArtificialVariables(matrix[j]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
14	[BUG]  [BUGGY]  Integer  j  =  0;  j  <  getRhsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  Integer  j  =  0;  j  <  getRhsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	Integer  j  =  0;  j  <  getRhsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }	  int    j    =    0;    j    <    getRhsOffset();    j++)    {    this.tableau.removeArtificialVariables(matrix[j]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  j);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  j);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  j);	  int    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariable(matrix,    j);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
16	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  1;  this.tableau.removeArtificialVariable(matrix,  j);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  zIndex  =  getRhsOffset()  +  1;  this.tableau.removeArtificialVariable(matrix,  j);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  zIndex  =  getRhsOffset()  +  1;  this.tableau.removeArtificialVariable(matrix,  j);	  int    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariable(matrix,    j);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
17	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  j  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  j  +  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  j  +  1);	  int    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariable(matrix,    j);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
18	[BUG]  [BUGGY]  int  jIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  j);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  jIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  j);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  jIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  j);	  int    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariable(matrix,    j);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
19	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  col;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  col;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  col;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  height  -  1;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  height  -  1;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  height  -  1;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    height;    i++)    {    this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
21	[BUG]  [BUGGY]  this.tableau[i][j]  =  getEntry(i  +  1,  j);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau[i][j]  =  getEntry(i  +  1,  j);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau[i][j]  =  getEntry(i  +  1,  j);	  this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
22	[BUG]  [BUGGY]  this.tableau[i][j]  =  getEntry(i  +  1,  j,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau[i][j]  =  getEntry(i  +  1,  j,  getRhsOffset());  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau[i][j]  =  getEntry(i  +  1,  j,  getRhsOffset());	  this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
23	[BUG]  [BUGGY]  this.tableau[i][j]  =  getEntry(i  +  1,  j  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau[i][j]  =  getEntry(i  +  1,  j  +  1);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau[i][j]  =  getEntry(i  +  1,  j  +  1);	  this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
24	[BUG]  [BUGGY]  this.tableau[i][j]  =  getEntry(i  +  1,  width  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau[i][j]  =  getEntry(i  +  1,  width  -  1);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau[i][j]  =  getEntry(i  +  1,  width  -  1);	  this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
25	[BUG]  [BUGGY]  this.tableau.removeAllArtificialVariables(matrix);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeAllArtificialVariables(matrix);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeAllArtificialVariables(matrix);	  this.tableau.removeAllArtificialVariables();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  col;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  get  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  get  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  get	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getHeight();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getHeight();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getHeight();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  get  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  get  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  get	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
32	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[1]);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[1]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[1]);	  this.tableau.removeArtificialVariable(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
33	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0],  height);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0],  height);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[0],  height);	  this.tableau.removeArtificialVariable(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
34	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0],  size);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0],  size);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[0],  size);	  this.tableau.removeArtificialVariable(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
35	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  size  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  size  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  size  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    size;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
36	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  col;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  col;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  col;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    size;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
37	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  size  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  size  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  size  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    size;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getSize();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
40	[BUG]  [BUGGY]  int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
41	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  getRhsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j].numDecisionVariables);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  getRhsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j].numDecisionVariables);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  getRhsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j].numDecisionVariables);  }	  for(int    j    =    0;    j    <    getRhsOffset();    j++)    {    this.tableau.removeArtificialVariables(matrix[j].numSlackVariables);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
42	[BUG]  [BUGGY]  int  j  =  0;  j  <  getRhsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j].numSlackVariables);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  j  =  0;  j  <  getRhsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j].numSlackVariables);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  j  =  0;  j  <  getRhsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j].numSlackVariables);  }	  for(int    j    =    0;    j    <    getRhsOffset();    j++)    {    this.tableau.removeArtificialVariables(matrix[j].numSlackVariables);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
43	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  getColumnsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j].numSlackVariables);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  getColumnsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j].numSlackVariables);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  getColumnsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j].numSlackVariables);  }	  for(int    j    =    0;    j    <    getRhsOffset();    j++)    {    this.tableau.removeArtificialVariables(matrix[j].numSlackVariables);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
44	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
45	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[height][0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[height][0]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[height][0]);	  this.tableau.removeArtificialVariable(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
46	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[height],  height);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[height],  height);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[height],  height);	  this.tableau.removeArtificialVariable(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
47	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0][0]);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0][0]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[0][0]);	  this.tableau.removeArtificialVariable(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  col;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    size;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  col;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff	  for(int    i    =    0;    i    <    size;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
50	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  Integer  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	Integer  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
51	[BUG]  [BUGGY]  int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
52	[BUG]  [BUGGY]  this.tableau.removeAllVariables(matrix);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeAllVariables(matrix);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeAllVariables(matrix);	  this.tableau.removeAllVariables();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  size  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  size  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    size;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  col;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }	  for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau.removeArtificialVariables(matrix);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
55	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  For(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	For(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    getSize();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
56	[BUG]  [BUGGY]  int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    getSize();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
57	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  count  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  count  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  count  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    count;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
58	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  1;  this.tableau.removeArtificialVariables(zIndex  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  zIndex  =  getRhsOffset()  +  1;  this.tableau.removeArtificialVariables(zIndex  +  1);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  zIndex  =  getRhsOffset()  +  1;  this.tableau.removeArtificialVariables(zIndex  +  1);	  int    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariables(zIndex    +    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
59	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(zIndex  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(zIndex  +  1);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(zIndex  +  1);	  int    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariables(zIndex    +    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
60	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }	  for(int    j    =    0;    j    <    width;    j++)    {    this.tableau.removeArtificialVariables(matrix[j]);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
61	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  col;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  col;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  col;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }	  for(int    j    =    0;    j    <    width;    j++)    {    this.tableau.removeArtificialVariables(matrix[j]);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
62	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  height;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  height;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  height;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }	  for(int    j    =    0;    j    <    width;    j++)    {    this.tableau.removeArtificialVariables(matrix[j]);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
63	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width  -  1;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  width  -  1;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  width  -  1;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }	  for(int    j    =    0;    j    <    width;    j++)    {    this.tableau.removeArtificialVariables(matrix[j]);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
64	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  col;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  col;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  col;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    count;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
65	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  count  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  count  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  count  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    count;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
66	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  height  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  height  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  height  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    getRhsOffset()    -    1;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
67	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getMatrixOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getMatrixOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getMatrixOffset());  }	  for(int    i    =    0;    i    <    getRhsOffset()    -    1;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
68	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  size  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  size  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  size  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    size;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
69	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[1]);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[1]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[1]);	  this.tableau.removeArtificialVariables(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
70	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0],  height);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0],  height);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[0],  height);	  this.tableau.removeArtificialVariables(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
71	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
72	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  count  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  count  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  count  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    count;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
73	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  Integer  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	Integer  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
74	[BUG]  [BUGGY]  int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
75	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix,  height);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix,  height);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix,  height);	  this.tableau.removeArtificialVariable(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
76	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0],  matrix[1]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0],  matrix[1]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[0],  matrix[1]);	  this.tableau.removeArtificialVariable(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  col;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    size;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
78	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    size;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
79	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  count  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  count  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }	  for(int    i    =    0;    i    <    count;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau.removeArtificialVariables(matrix);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
80	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getSize()  -  1;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getSize()  -  1;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getSize()  -  1;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    getSize();    i++)    {    this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
81	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getSize());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getSize());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getSize());  }	  for(int    i    =    0;    i    <    getSize();    i++)    {    this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  col;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  col;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    size;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  this.numSlackVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    size;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  height;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  height;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  height;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    size;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix[i].length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  matrix[i].length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  matrix[i].length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
86	[BUG]  [BUGGY]  int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
87	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix[i].length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  matrix[i].length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  matrix[i].length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
89	[BUG]  [BUGGY]  int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
90	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  For(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	For(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    getColumnsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
91	[BUG]  [BUGGY]  int  j  =  0;  j  <  getSize();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  j  =  0;  j  <  getSize();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  j  =  0;  j  <  getSize();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }	  for(int    j    =    0;    j    <    getSize();    j++)    {    this.tableau.removeArtificialVariables(matrix[j]);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
92	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix[j]);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix[j]);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix[j]);	  for(int    j    =    0;    j    <    getSize();    j++)    {    this.tableau.removeArtificialVariables(matrix[j]);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
93	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  getSize();  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  getSize();  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  getSize();  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    getColumnsOffset();    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
94	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  this.columns.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  this.columns.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  this.columns.length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    getColumnsOffset();    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
95	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  getRhsOffset();  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getColumnsOffset());  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  getRhsOffset();  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getColumnsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  getRhsOffset();  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getColumnsOffset());  }	  for(int    j    =    0;    j    <    getColumnsOffset();    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
96	[BUG]  [BUGGY]  this.tableau.removeAll(variables);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeAll(variables);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeAll(variables);	  this.tableau.removeAll(matrix);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
97	[BUG]  [BUGGY]  this.tableau.addAll(matrix);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.addAll(matrix);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.addAll(matrix);	  this.tableau.removeAll(matrix);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
98	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  For(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	For(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    getColumnsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
99	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][0]);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][0]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[i][0]);	  this.tableau.removeArtificialVariables(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
100	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][j],  height);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][j],  height);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[i][j],  height);	  this.tableau.removeArtificialVariables(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
101	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][j],  width);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][j],  width);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[i][j],  width);	  this.tableau.removeArtificialVariables(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
102	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][j  -  1]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][j  -  1]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[i][j  -  1]);	  this.tableau.removeArtificialVariables(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
103	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  z);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  z);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  z);	  int    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariable(matrix,    z);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
104	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
105	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix[i].length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  matrix[i].length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  matrix[i].length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
106	[BUG]  [BUGGY]  int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
107	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  col  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  col  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  col  -  1;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width    -    1;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
108	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  width  -  1;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  width  -  1;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  width  -  1;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    width;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
109	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getHeight()  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getHeight()  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getHeight()  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    getHeight();    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
110	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getColumnCount();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getColumnCount();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getColumnCount();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    getHeight();    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
111	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  width  -  1;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  width  -  1;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  width  -  1;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    width;    i++)    {    this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
112	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  size;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }	  for(int    i    =    0;    i    <    height;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau.removeArtificialVariables(matrix);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
113	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  height  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  height  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  height  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }	  for(int    i    =    0;    i    <    height;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau.removeArtificialVariables(matrix);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
114	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[height][0]);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[height][0]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[height][0]);	  this.tableau.removeArtificialVariables(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
115	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0][0]);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0][0]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[0][0]);	  this.tableau.removeArtificialVariables(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
116	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0][1]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0][1]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[0][1]);	  this.tableau.removeArtificialVariables(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
117	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  col  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  col  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  col  -  1;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width    -    1;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
118	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width    -    1;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
119	[BUG]  [BUGGY]  Integer  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariables(zIndex);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  Integer  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariables(zIndex);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	Integer  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariables(zIndex);	  int    zIndex    =    getRhsOffset()    -    1;    this.tableau.removeArtificialVariables(zIndex);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
120	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
121	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getSize();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
122	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getCount();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getCount();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getCount();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
123	[BUG]  [BUGGY]  int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
125	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  For(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	For(int  i  =  0;  i  <  getRhsOffset();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
126	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
127	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getR  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getR  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getR	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
128	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  get  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  get  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  get	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  size;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
130	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  count  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  count  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    count;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
131	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  height  -  1;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  height  -  1;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  height  -  1;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    height;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
132	[BUG]  [BUGGY]  int  i  =  0;  i  <  getColumnsOffset();  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  0;  i  <  getColumnsOffset();  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  i  =  0;  i  <  getColumnsOffset();  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    getColumnsOffset();    i++)    {    this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
133	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getColumnsOffset());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getColumnsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getRhsOffset();  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getColumnsOffset());  }	  for(int    i    =    0;    i    <    getColumnsOffset();    i++)    {    this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
134	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  col  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  col  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  col  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width    -    1;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
135	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  height  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width    -    1;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
136	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    width    -    1;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
137	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j);	  matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
138	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width  -  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	matrix[i][j]  =  getEntry(i  +  1,  width  -  1);	  matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
139	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  getRhsOffset());  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j,  getRhsOffset());	  matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
140	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j  +  1);	  matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
141	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  0,  matrix.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  0,  matrix.length);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  0,  matrix.length);	  this.tableau.removeArtificialVariable(matrix,    0);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
142	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  1);	  this.tableau.removeArtificialVariable(matrix,    0);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
143	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  0,  matrix[0]);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  0,  matrix[0]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  0,  matrix[0]);	  this.tableau.removeArtificialVariable(matrix,    0);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
144	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][0]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[i][0]);	  this.tableau.removeArtificialVariable(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
145	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][j],  height);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][j],  height);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[i][j],  height);	  this.tableau.removeArtificialVariable(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
146	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][j],  width);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][j],  width);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[i][j],  width);	  this.tableau.removeArtificialVariable(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
147	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][j  -  1]);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][j  -  1]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[i][j  -  1]);	  this.tableau.removeArtificialVariable(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
148	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix,  height);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix,  height);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix,  height);	  this.tableau.removeArtificialVariables(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
149	[BUG]  [BUGGY]  int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    getSize();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
150	[BUG]  [BUGGY]  int  j  =  0;  j  <  getColumnsOffset();  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  j  =  0;  j  <  getColumnsOffset();  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  j  =  0;  j  <  getColumnsOffset();  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    getColumnsOffset();    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
151	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  this.columns.length;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  this.columns.length;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  this.columns.length;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    getColumnsOffset();    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
152	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  getRhsOffset();  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getColumnsOffset());  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  getRhsOffset();  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getColumnsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  getRhsOffset();  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  getColumnsOffset());  }	  for(int    j    =    0;    j    <    getColumnsOffset();    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
153	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  zIndex);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  zIndex);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  zIndex);	  this.tableau.removeArtificialVariables(zIndex);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
154	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(numSlackVariables);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(numSlackVariables);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(numSlackVariables);	  this.tableau.removeArtificialVariables(zIndex);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
155	[BUG]  [BUGGY]  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariables(zIndex);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariables(zIndex);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariables(zIndex);	  int    zIndex    =    getRhsOffset()    +    1;    this.tableau.removeArtificialVariables(zIndex);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
156	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  count;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff	  for(int    i    =    0;    i    <    width;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
157	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  height;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  height;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  height;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff	  for(int    i    =    0;    i    <    width;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
158	[BUG]  [BUGGY]  int  j  =  0;  j  <  getColumnCount();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  j  =  0;  j  <  getColumnCount();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  j  =  0;  j  <  getColumnCount();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }	  for(int    j    =    0;    j    <    getColumnCount();    j++)    {    this.tableau.removeArtificialVariables(matrix[j]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
159	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  getColumnCount()  -  1;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  getColumnCount()  -  1;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  getColumnCount()  -  1;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }	  for(int    j    =    0;    j    <    getColumnCount();    j++)    {    this.tableau.removeArtificialVariables(matrix[j]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
160	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  getRhsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  For(int  j  =  0;  j  <  getRhsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	For(int  j  =  0;  j  <  getRhsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }	  for(int    j    =    0;    j    <    getColumnCount();    j++)    {    this.tableau.removeArtificialVariables(matrix[j]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
161	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  1;  this.tableau.removeArtificialVariable(matrix,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  zIndex  =  getRhsOffset()  +  1;  this.tableau.removeArtificialVariable(matrix,  0);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  zIndex  =  getRhsOffset()  +  1;  this.tableau.removeArtificialVariable(matrix,  0);	  int    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariable(matrix,    0);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
162	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  0,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  0,  0);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  0,  0);	  int    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariable(matrix,    0);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
163	[BUG]  [BUGGY]  Integer  zIndex  =  getRhsOffset()  +  1;  this.tableau.removeArtificialVariable(matrix);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  Integer  zIndex  =  getRhsOffset()  +  1;  this.tableau.removeArtificialVariable(matrix);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	Integer  zIndex  =  getRhsOffset()  +  1;  this.tableau.removeArtificialVariable(matrix);	  Integer    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariable(matrix);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
164	[BUG]  [BUGGY]  Integer  zIndex  =  getRhsOffset()  -  1;  this.tableau.removeArtificialVariable(matrix);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  Integer  zIndex  =  getRhsOffset()  -  1;  this.tableau.removeArtificialVariable(matrix);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	Integer  zIndex  =  getRhsOffset()  -  1;  this.tableau.removeArtificialVariable(matrix);	  Integer    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariable(matrix);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
165	[BUG]  [BUGGY]  Integer  zIndex  =  getRhsIndex();  this.tableau.removeArtificialVariable(matrix);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  Integer  zIndex  =  getRhsIndex();  this.tableau.removeArtificialVariable(matrix);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	Integer  zIndex  =  getRhsIndex();  this.tableau.removeArtificialVariable(matrix);	  Integer    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariable(matrix);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
166	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  0,  zIndex);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  0,  zIndex);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  0,  zIndex);	  int    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariable(matrix,    0);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
167	[BUG]  [BUGGY]  Integer  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  Integer  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  0);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	Integer  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  0);	  int    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariable(matrix,    0);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
168	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }	  for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau.removeArtificialVariables(matrix);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
169	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau.removeArtificialVariables(matrix);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
170	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][j  +  1]);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[i][j  +  1]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[i][j  +  1]);	  this.tableau.removeArtificialVariables(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
171	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix[0],  matrix[1]);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix[0],  matrix[1]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix[0],  matrix[1]);	  this.tableau.removeArtificialVariable(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
172	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0]  -  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0]  -  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[0]  -  1);	  this.tableau.removeArtificialVariable(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
173	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  length;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  length;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  length;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
174	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  count;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    width;    i++)    {    this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
175	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getSize();  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
176	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  size;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
177	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  -  2;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  count  -  2;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  count  -  2;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    count;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
178	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  size;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
179	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix.length);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix.length);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix.length);	  this.tableau.removeArtificialVariables(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
180	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  length;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  length;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    height;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
181	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size  -  1;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  size  -  1;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  size  -  1;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    size;    i++)    {    this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
182	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  length;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[j][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
183	[BUG]  [BUGGY]  int  i  =  0;  j  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  0;  j  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  i  =  0;  j  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
184	[BUG]  [BUGGY]  this.tableau.removeAll(numSlackVariables);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeAll(numSlackVariables);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeAll(numSlackVariables);	  this.tableau.removeAll(matrix);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
185	[BUG]  [BUGGY]  this.tableau.remove(matrix);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.remove(matrix);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.remove(matrix);	  this.tableau.removeAll(matrix);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
186	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  null);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  null);	  this.tableau.removeArtificialVariable(matrix,    0);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
187	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  zIndex);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  zIndex);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  zIndex);	  int    zIndex    =    getRhsOffset()    -    1;    this.tableau.removeArtificialVariable(matrix);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
188	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  zIndex  =  getRhsOffset();  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  zIndex  =  getRhsOffset();	  int    zIndex    =    getRhsOffset()    -    1;    this.tableau.removeArtificialVariable(matrix);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
189	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  size;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
190	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  matrix.length;  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    this.tableau.length;    i++)    {    this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
191	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tableau.length;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.tableau.length;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  this.tableau.length;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    this.tableau.length;    i++)    {    this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
192	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  getRhsOffset();  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  getRhsOffset();  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  getRhsOffset();  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getColumnsOffset());  }	  for(int    j    =    0;    j    <    getColumnsOffset();    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
193	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix.length  -  1;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  matrix.length  -  1;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  matrix.length  -  1;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
194	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  count;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    width;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
195	[BUG]  [BUGGY]  Integer  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  z);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  Integer  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  z);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	Integer  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  z);	  int    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariable(matrix,    z);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
196	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  +  1;  this.tableau.removeArtificialVariable(matrix,  z);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  zIndex  =  getRhsOffset()  +  1;  this.tableau.removeArtificialVariable(matrix,  z);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  zIndex  =  getRhsOffset()  +  1;  this.tableau.removeArtificialVariable(matrix,  z);	  int    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariable(matrix,    z);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
197	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
198	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix.length  -  1;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  matrix.length  -  1;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  matrix.length  -  1;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
199	[BUG]  [BUGGY]  Integer  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  zIndex);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  Integer  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  zIndex);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	Integer  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  zIndex);	  Integer    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariable(matrix);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
200	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getColumns()  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getColumns()  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getColumns()  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    getRhsOffset()    -    1;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
201	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    height;    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
202	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  getRowCount();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  getRowCount();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  getRowCount();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }	  for(int    j    =    0;    j    <    getColumnCount();    j++)    {    this.tableau.removeArtificialVariables(matrix[j]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
203	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  &&  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  count  &&  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  count  &&  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }	  for(int    i    =    0;    i    <    count;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau.removeArtificialVariables(matrix);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
204	[BUG]  [BUGGY]  this.tableau[i][j]  =  getEntry(i  +  1,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau[i][j]  =  getEntry(i  +  1,  0);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau[i][j]  =  getEntry(i  +  1,  0);	  this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
205	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  width  -  1;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  width  -  1;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  width  -  1;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff	  for(int    i    =    0;    i    <    width;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
206	[BUG]  [BUGGY]  Integer  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  j);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  Integer  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  j);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	Integer  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariable(matrix,  j);	  int    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariable(matrix,    j);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
207	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRh  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRh  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  this.numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRh	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
208	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0]  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0]  -  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[0]  -  1);	  this.tableau.removeArtificialVariables(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
209	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix[0],  matrix[1]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix[0],  matrix[1]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix[0],  matrix[1]);	  this.tableau.removeArtificialVariables(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
210	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  size;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  size;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  size;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }	  for(int    j    =    0;    j    <    width;    j++)    {    this.tableau.removeArtificialVariables(matrix[j]);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
211	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.size;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.size;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  this.size;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    size;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
212	[BUG]  [BUGGY]  Integer  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariables(zIndex  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  Integer  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariables(zIndex  +  1);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	Integer  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariables(zIndex  +  1);	  int    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariables(zIndex    +    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
213	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getColumnCount();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getColumnCount();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getColumnCount();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }	  for(int    i    =    0;    i    <    getHeight();    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau.removeArtificialVariables(matrix);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
214	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  matrix.length;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  matrix.length;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  matrix.length;  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }	  for(int    j    =    0;    j    <    getSize();    j++)    {    this.tableau.removeArtificialVariables(matrix[j]);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
215	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0][1]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0][1]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[0][1]);	  this.tableau.removeArtificialVariable(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
216	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[1][0]);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[1][0]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[1][0]);	  this.tableau.removeArtificialVariable(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
217	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  1,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  1,  0);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  1,  0);	  this.tableau.removeArtificialVariables(matrix,    0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
218	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][j  +  1]);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[i][j  +  1]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[i][j  +  1]);	  this.tableau.removeArtificialVariable(matrix,    matrix[i][j]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
219	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix.length  -  1;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  matrix.length  -  1;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  matrix.length  -  1;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
220	[BUG]  [BUGGY]  int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  i  =  0;  i  <  getSize();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    getSize();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
221	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  getRhsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j].numSlackVariables  +  1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  getRhsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j].numSlackVariables  +  1);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  getRhsOffset();  j++)  {  this.tableau.removeArtificialVariables(matrix[j].numSlackVariables  +  1);  }	  for(int    j    =    0;    j    <    getRhsOffset();    j++)    {    this.tableau.removeArtificialVariables(matrix[j].numSlackVariables);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
222	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  getRhsOffset();  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getColumnsOffset());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  getRhsOffset();  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getColumnsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  getRhsOffset();  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  getColumnsOffset());  }	  for(int    j    =    0;    j    <    getColumnsOffset();    j++)    {    matrix[i][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
223	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  1);	  matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
224	[BUG]  [BUGGY]  this.tableau.removeAll(matrix,  0,  matrix.length);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeAll(matrix,  0,  matrix.length);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeAll(matrix,  0,  matrix.length);	  this.tableau.removeAll(matrix);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
225	[BUG]  [BUGGY]  this.tableau.removeAll(matrix,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeAll(matrix,  0);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeAll(matrix,  0);	  this.tableau.removeAll(matrix);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
226	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.height;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.height;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  this.height;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    height;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
227	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0],  null);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0],  null);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[0],  null);	  this.tableau.removeArtificialVariables(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
228	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariables(zIndex  +  1,  zIndex);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariables(zIndex  +  1,  zIndex);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  zIndex  =  getRhsOffset();  this.tableau.removeArtificialVariables(zIndex  +  1,  zIndex);	  int    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariables(zIndex    +    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
229	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  &&  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  count  &&  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  count  &&  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    count;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
230	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  getSize();  j++)  {  this.tableau.removeArtificialVariables(matrix[j].numSlackVariables);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  getSize();  j++)  {  this.tableau.removeArtificialVariables(matrix[j].numSlackVariables);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  getSize();  j++)  {  this.tableau.removeArtificialVariables(matrix[j].numSlackVariables);  }	  for(int    j    =    0;    j    <    getRhsOffset();    j++)    {    this.tableau.removeArtificialVariables(matrix[j].numSlackVariables);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
231	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  numDecisionVariables;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff	  for(int    i    =    0;    i    <    this.numSlackVariables;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
232	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  2);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  2);	  matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
233	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  count;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    size;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
234	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(dimension);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(dimension);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(dimension);	  this.tableau.removeArtificialVariables(zIndex);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
235	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getRowsOffset();  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getRowsOffset();  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getRowsOffset();  i++)  {  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    getColumnsOffset();    i++)    {    this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
236	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getColumnsOffset();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	  for(int    i    =    0;    i    <    getColumnsOffset();    i++)    {    this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
237	[BUG]  [BUGGY]  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  1);	  this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
238	[BUG]  [BUGGY]  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  2);  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  2);	  this.tableau[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
239	[BUG]  [BUGGY]  int  zIndex  =  getRhsOffset()  -  1;  this.tableau.removeArtificialVariable(matrix,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  zIndex  =  getRhsOffset()  -  1;  this.tableau.removeArtificialVariable(matrix,  0);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  zIndex  =  getRhsOffset()  -  1;  this.tableau.removeArtificialVariable(matrix,  0);	  int    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariable(matrix,    0);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
240	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  &&  i  <  matrix.length;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  count  &&  i  <  matrix.length;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  count  &&  i  <  matrix.length;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  this.tableau.removeArtificialVariables(matrix);  }	  for(int    i    =    0;    i    <    count;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau.removeArtificialVariables(matrix);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
241	[BUG]  [BUGGY]  int  i  =  1;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  1;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  i  =  1;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
242	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0],  matrix);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0],  matrix);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[0],  matrix);	  this.tableau.removeArtificialVariable(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
243	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][0]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][0]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][0]))  {  return;  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
244	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i],  matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i],  matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i],  matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
245	[BUG]  [BUGGY]  int  j  =  0;  j  <  getHeight();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  j  =  0;  j  <  getHeight();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  j  =  0;  j  <  getHeight();  j++)  {  this.tableau.removeArtificialVariables(matrix[j]);  }	  int    j    =    0;    j    <    getRhsOffset();    j++)    {    this.tableau.removeArtificialVariables(matrix[j]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
246	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  this.tableau.removeArtificialVariables(matrix);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  getSize();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  this.tableau.removeArtificialVariables(matrix);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  getSize();  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  this.tableau.removeArtificialVariables(matrix);  }	  for(int    i    =    0;    i    <    getSize();    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau.removeArtificialVariables(matrix);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
247	[BUG]  [BUGGY]  int  i  =  1;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  1;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  i  =  1;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalArgumentException( " ");  }	  int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
248	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  count;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    size;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
249	[BUG]  [BUGGY]  int  zIndex  =  getRhsIndex();  this.tableau.removeArtificialVariable(matrix,  z);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  zIndex  =  getRhsIndex();  this.tableau.removeArtificialVariable(matrix,  z);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  zIndex  =  getRhsIndex();  this.tableau.removeArtificialVariable(matrix,  z);	  int    zIndex    =    getRhsOffset();    this.tableau.removeArtificialVariable(matrix,    z);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
250	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.slackVar;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  this.slackVar;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  this.slackVar;  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOff	  for(int    i    =    0;    i    <    width;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOff    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
251	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][0]))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  1;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][0]))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  1;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][0]))  {  throw  new  IllegalStateException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
252	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0],  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0],  null);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[0],  null);	  this.tableau.removeArtificialVariable(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
253	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0],  0);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[0],  0);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[0],  0);	  this.tableau.removeArtificialVariable(matrix,    matrix[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
254	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix.length);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix.length);	  this.tableau.removeArtificialVariable(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
255	[BUG]  [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[height]);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariable(matrix,  matrix[height]);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariable(matrix,  matrix[height]);	  this.tableau.removeArtificialVariable(matrix,    height);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
256	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  height;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getHeight());  this.tableau.removeArtificialVariables(matrix);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  height;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getHeight());  this.tableau.removeArtificialVariables(matrix);  }  [BUGGY]        [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  height;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getHeight());  this.tableau.removeArtificialVariables(matrix);  }	  for(int    i    =    0;    i    <    height;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau.removeArtificialVariables(matrix);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
257	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  this.columns.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  j  =  0;  j  <  this.columns.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  j  =  0;  j  <  this.columns.length;  j++)  {  matrix[j][j]  =  getEntry(j  +  1,  getRhsOffset());  }	  for(int    j    =    0;    j    <    getColumnsOffset();    j++)    {    matrix[j][j]    =    getEntry(j    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
258	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  null);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  null);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  null);	  this.tableau.removeArtificialVariables(matrix,    0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
259	[BUG]  [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0],  matrix);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  this.tableau.removeArtificialVariables(matrix,  matrix[0],  matrix);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	this.tableau.removeArtificialVariables(matrix,  matrix[0],  matrix);	  this.tableau.removeArtificialVariables(matrix,    matrix);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
260	[BUG]  [BUGGY]  int  i  =  1;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  int  i  =  1;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	int  i  =  1;  i  <  getRhsOffset();  i++)  {  if(this.tableau.equals(matrix[i][i]))  {  return;  }	  int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
261	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][0]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  1;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][0]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  1;  i  <  matrix.length;  i++)  {  if(this.tableau.equals(matrix[i][0]))  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    matrix.length;    i++)    {    if(this.tableau.equals(matrix[i][i]))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
262	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;      [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	304	304	1	replace	for(int  i  =  0;  i  <  count;  i++)  {  if(!this.tableau.equals(matrix[i][i]))  {  return;  }	  for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(!this.tableau.equals(matrix[i][i]))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
