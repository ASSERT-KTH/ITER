bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getNumArtificialVariables()  ];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  double[getNumArtificialVariables()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  double[getNumArtificialVariables()  ];	      Integer[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  double[getDecisionVariables()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  double[getDecisionVariables()  ];	      Integer[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getNumDecisionVariables()  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  double[getNumDecisionVariables()  +  1];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  double[getNumDecisionVariables()  +  1];	      Integer[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  double[getOriginalNumDecisionVariables()  ];	      Integer[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumVariables()  /  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  basicRow  =  getBasicRow(getNumVariables()  /  getOriginalNumDecisionVariables());  [BUGGY]    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  basicRow  =  getBasicRow(getNumVariables()  /  getOriginalNumDecisionVariables());	  Integer    basicRow    =    getBasicRow(getNumVariables()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumVariables()  *  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  basicRow  =  getBasicRow(getNumVariables()  *  getOriginalNumDecisionVariables());  [BUGGY]    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  basicRow  =  getBasicRow(getNumVariables()  *  getOriginalNumDecisionVariables());	  Integer    basicRow    =    getBasicRow(getNumVariables()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  *  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  *  getOriginalNumDecisionVariables());  [BUGGY]    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  *  getOriginalNumDecisionVariables());	  Integer    basicRow    =    getBasicRow(getNumObjectiveFunctions()    /    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  /  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  /  getOriginalNumDecisionVariables());  [BUGGY]    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  /  getOriginalNumDecisionVariables());	  Integer    basicRow    =    getBasicRow(getNumObjectiveFunctions()    /    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getOriginalNumDecisionVariables()  /  getNumObjectiveFunctions());  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  basicRow  =  getBasicRow(getOriginalNumDecisionVariables()  /  getNumObjectiveFunctions());  [BUGGY]    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  basicRow  =  getBasicRow(getOriginalNumDecisionVariables()  /  getNumObjectiveFunctions());	  Integer    basicRow    =    getBasicRow(getNumObjectiveFunctions()    /    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getColumns()  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getColumns()  +  1];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getColumns()  +  1];	      double[]    coefficients    =    new    double[getColumns()    ];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  int[]  coefficients  =  new  int[getColumns()  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  int[]  coefficients  =  new  int[getColumns()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	int[]  coefficients  =  new  int[getColumns()  ];	      double[]    coefficients    =    new    double[getColumns()    ];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getRows()  ];  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getRows()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getRows()  ];	      double[]    coefficients    =    new    double[getColumns()    ];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
13	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumArtificialVariables()  ];  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getNumArtificialVariables()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getNumArtificialVariables()  ];	      double[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getDecisionVariables()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getDecisionVariables()  ];	      double[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
15	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getSolutionVariables()  ];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getSolutionVariables()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getSolutionVariables()  ];	      double[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
16	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getBasicVariables()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getBasicVariables()  ];	      double[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
17	[BUG]  [BUGGY]  Integer  destPos  =  getDecimalVariables();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  destPos  =  getDecimalVariables();  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  destPos  =  getDecimalVariables();	      Integer    destPos    =    getNumSlackVariables();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
18	[BUG]  [BUGGY]  Integer  destPos  =  getNumDecisionVariables();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  destPos  =  getNumDecisionVariables();  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  destPos  =  getNumDecisionVariables();	      Integer    destPos    =    getNumSlackVariables();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
19	[BUG]  [BUGGY]  Integer  destPos  =  getDestinationVariables();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  destPos  =  getDestinationVariables();  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  destPos  =  getDestinationVariables();	      Integer    destPos    =    getNumSlackVariables();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables().length  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables().length  -  1];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables().length  -  1];	      double[]    coefficients    =    new    double[getNumDecisionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
21	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables().length  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables().length  +  1];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables().length  +  1];	      double[]    coefficients    =    new    double[getNumDecisionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
22	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables().length];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables().length];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getOriginalNumDecisionVariables().length];	      double[]    coefficients    =    new    double[getNumDecisionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
23	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumArtificialVariables().length];  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getNumArtificialVariables().length];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getNumArtificialVariables().length];	      double[]    coefficients    =    new    double[getNumDecisionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
24	[BUG]  [BUGGY]  Integer  destPos  =  getDecimalOffset();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  destPos  =  getDecimalOffset();  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  destPos  =  getDecimalOffset();	      Integer    destPos    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
25	[BUG]  [BUGGY]  Integer  destPos  =  getRhsOffset()  +  coefficients.length;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  destPos  =  getRhsOffset()  +  coefficients.length;  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  destPos  =  getRhsOffset()  +  coefficients.length;	      Integer    destPos    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
26	[BUG]  [BUGGY]  Integer  destPos  =  getOffset();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  destPos  =  getOffset();  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  destPos  =  getOffset();	      Integer    destPos    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  Integer  destPos  =  getColumnOffset();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  destPos  =  getColumnOffset();  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  destPos  =  getColumnOffset();	      Integer    destPos    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  *  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  *  getOriginalNumDecisionVariables());  [BUGGY]    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  *  getOriginalNumDecisionVariables());	  Integer    basicRow    =    getBasicRow(getNumDecisionVariables()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
29	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getNumDecisionVariables().size()  +  1];  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  double[getNumDecisionVariables().size()  +  1];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  double[getNumDecisionVariables().size()  +  1];	      Integer[]    coefficients    =    new    double[getNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
30	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getOriginalNumDecisionVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  double[getOriginalNumDecisionVariables().size()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  double[getOriginalNumDecisionVariables().size()  ];	      Integer[]    coefficients    =    new    double[getNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
31	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getNumArtificialVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  double[getNumArtificialVariables().size()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  double[getNumArtificialVariables().size()  ];	      Integer[]    coefficients    =    new    double[getNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
32	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNumDecisionVariables().size()  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  int[getNumDecisionVariables().size()  +  1];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  int[getNumDecisionVariables().size()  +  1];	      Integer[]    coefficients    =    new    int[getNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
33	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalNumDecisionVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  int[getOriginalNumDecisionVariables().size()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  int[getOriginalNumDecisionVariables().size()  ];	      Integer[]    coefficients    =    new    int[getNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
34	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNumArtificialVariables()  ];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  int[getNumArtificialVariables()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  int[getNumArtificialVariables()  ];	      Integer[]    coefficients    =    new    int[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNumObjectiveFunctions()  ];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  int[getNumObjectiveFunctions()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  int[getNumObjectiveFunctions()  ];	      Integer[]    coefficients    =    new    int[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getDecisionVariables()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  int[getDecisionVariables()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  int[getDecisionVariables()  ];	      Integer[]    coefficients    =    new    int[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  +  getOriginalNumArtificialVariables());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  +  getOriginalNumArtificialVariables());  [BUGGY]    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  +  getOriginalNumArtificialVariables());	  Integer    basicRow    =    getBasicRow(getNumArtificialVariables()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
38	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  +  getOriginalNumSlackVariables());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  +  getOriginalNumSlackVariables());  [BUGGY]    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  +  getOriginalNumSlackVariables());	  Integer    basicRow    =    getBasicRow(getNumSlackVariables()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
39	[BUG]  [BUGGY]  Integer  destPos  =  getNumVariables();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  destPos  =  getNumVariables();  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  destPos  =  getNumVariables();	      Integer    destPos    =    getNumSlackVariables();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
40	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNumSlackVariables()  ];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  int[getNumSlackVariables()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  int[getNumSlackVariables()  ];	      Integer[]    coefficients    =    new    int[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
41	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNumVariables()  ];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  int[getNumVariables()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  int[getNumVariables()  ];	      Integer[]    coefficients    =    new    int[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
42	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumSlackVariables()  /  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  basicRow  =  getBasicRow(getNumSlackVariables()  /  getOriginalNumDecisionVariables());  [BUGGY]    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  basicRow  =  getBasicRow(getNumSlackVariables()  /  getOriginalNumDecisionVariables());	  Integer    basicRow    =    getBasicRow(getNumSlackVariables()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
43	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumVariables()  +  getOriginalNumVariables());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  basicRow  =  getBasicRow(getNumVariables()  +  getOriginalNumVariables());  [BUGGY]    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  basicRow  =  getBasicRow(getNumVariables()  +  getOriginalNumVariables());	  Integer    basicRow    =    getBasicRow(getNumDecisionVariables()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
44	[BUG]  [BUGGY]  Integer  destPos  =  getDestination();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  destPos  =  getDestination();  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  destPos  =  getDestination();	      Integer    destPos    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
45	[BUG]  [BUGGY]  Integer  destPos  =  getDestinationOffset();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  destPos  =  getDestinationOffset();  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  destPos  =  getDestinationOffset();	      Integer    destPos    =    getRhsOffset();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
46	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getNumSlackVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  double[getNumSlackVariables().size()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  double[getNumSlackVariables().size()  ];	      Integer[]    coefficients    =    new    double[getNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
47	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getNumObjectiveFunctions().size()  ];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  double[getNumObjectiveFunctions().size()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  double[getNumObjectiveFunctions().size()  ];	      Integer[]    coefficients    =    new    double[getNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getNumVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  double[getNumVariables().size()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  double[getNumVariables().size()  ];	      Integer[]    coefficients    =    new    double[getNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
49	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumSlackVariables().length];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getNumSlackVariables().length];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getNumSlackVariables().length];	      double[]    coefficients    =    new    double[getNumDecisionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
50	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumVariables().length];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getNumVariables().length];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getNumVariables().length];	      double[]    coefficients    =    new    double[getNumDecisionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
51	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNumSlackVariables().size()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  int[getNumSlackVariables().size()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  int[getNumSlackVariables().size()  ];	      Integer[]    coefficients    =    new    int[getNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNumObjectiveFunctions().size()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  int[getNumObjectiveFunctions().size()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  int[getNumObjectiveFunctions().size()  ];	      Integer[]    coefficients    =    new    int[getNumDecisionVariables().size()    ];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumSlackVariables()  ];  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getNumSlackVariables()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getNumSlackVariables()  ];	      double[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
54	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumVariables()  ];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getNumVariables()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getNumVariables()  ];	      double[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
55	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumObjectiveFunctions()  ];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getNumObjectiveFunctions()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getNumObjectiveFunctions()  ];	      double[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
56	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  +  getOriginalNumVariables());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  +  getOriginalNumVariables());  [BUGGY]    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  +  getOriginalNumVariables());	  Integer    basicRow    =    getBasicRow(getNumVariables()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
57	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getRhsOffset()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getRhsOffset()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getRhsOffset()  ];	      double[]    coefficients    =    new    double[getColumns()    ];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
58	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getNumSlackVariables()  ];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  double[getNumSlackVariables()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  double[getNumSlackVariables()  ];	      Integer[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
59	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getNumVariables()  ];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  double[getNumVariables()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  double[getNumVariables()  ];	      Integer[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
60	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getNumObjectiveFunctions()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  double[getNumObjectiveFunctions()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  double[getNumObjectiveFunctions()  ];	      Integer[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  double[getSolutionVariables()  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  double[getSolutionVariables()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  double[getSolutionVariables()  ];	      Integer[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
62	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  /  getOriginalNumDecisionVariables()  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  /  getOriginalNumDecisionVariables()  +  1);  [BUGGY]    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  /  getOriginalNumDecisionVariables()  +  1);	  Integer    basicRow    =    getBasicRow(getNumObjectiveFunctions()    /    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
63	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables().length];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getBasicNumDecisionVariables().length];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getBasicNumDecisionVariables().length];	      double[]    coefficients    =    new    double[getNumDecisionVariables().length];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
64	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumVariables()  +  getOriginalVariables());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  basicRow  =  getBasicRow(getNumVariables()  +  getOriginalVariables());  [BUGGY]    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  basicRow  =  getBasicRow(getNumVariables()  +  getOriginalVariables());	  Integer    basicRow    =    getBasicRow(getNumVariables()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
65	[BUG]  [BUGGY]  Integer[]  coefficients  =  new  int[getNumDecisionVariables()  +  1];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer[]  coefficients  =  new  int[getNumDecisionVariables()  +  1];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer[]  coefficients  =  new  int[getNumDecisionVariables()  +  1];	      Integer[]    coefficients    =    new    int[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
66	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumArtificialVariables()  /  getOriginalNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  basicRow  =  getBasicRow(getNumArtificialVariables()  /  getOriginalNumDecisionVariables());  [BUGGY]    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  basicRow  =  getBasicRow(getNumArtificialVariables()  /  getOriginalNumDecisionVariables());	  Integer    basicRow    =    getBasicRow(getNumArtificialVariables()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
67	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  1];  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getNumDecisionVariables()  +  1];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getNumDecisionVariables()  +  1];	      double[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
68	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getVariables()  ];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getVariables()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getVariables()  ];	      double[]    coefficients    =    new    double[getNumDecisionVariables()    ];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
69	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getColumns()  *  getColumns()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getColumns()  *  getColumns()  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getColumns()  *  getColumns()  ];	      double[]    coefficients    =    new    double[getColumns()    ];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
70	[BUG]  [BUGGY]  double[]  coefficients  =  new  double[getColumns().length  ];  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  double[]  coefficients  =  new  double[getColumns().length  ];  [BUGGY]    Integer  basicRow  =    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	double[]  coefficients  =  new  double[getColumns().length  ];	      double[]    coefficients    =    new    double[getColumns()    ];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
71	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  +  getBasicNumDecisionVariables());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];    [BUGGY]  Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  +  getBasicNumDecisionVariables());  [BUGGY]    getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	326	327	1	replace	Integer  basicRow  =  getBasicRow(getNumDecisionVariables()  +  getBasicNumDecisionVariables());	  Integer    basicRow    =    getBasicRow(getNumDecisionVariables()    +    getOriginalNumDecisionVariables());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
