bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[i]  =  0;  }	      if(basicRow!=    null)    {    for(int    j    =    getNumObjectiveFunctions();    j    <    getRhsOffset();    j++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
2	[BUG]  [BUGGY]  For(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  For(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	For(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[i]  =  0;  }	      if(basicRow!=    null)    {    for(int    j    =    getNumObjectiveFunctions();    j    <    getRhsOffset();    j++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
3	[BUG]  [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getLhsOffset();  j++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getLhsOffset();  j++)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  j  =  getNumObjectiveFunctions();  j  <  getLhsOffset();  j++)  {  coefficients[i]  =  0;  }	      if(basicRow!=    null)    {    for(int    j    =    getNumObjectiveFunctions();    j    <    getRhsOffset();    j++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
4	[BUG]  [BUGGY]  Coefficients[]  coefficients  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Coefficients[]  coefficients  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	Coefficients[]  coefficients  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset());	      if(basicRow!=    null)    {    for(int    j    =    getNumObjectiveFunctions();    j    <    getRhsOffset();    j++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(tableau.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(tableau.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(tableau.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(tableau.getEntry(basicRow,    i)!=    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(tableau.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(tableau.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(tableau.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(tableau.getEntry(basicRow,    i)!=    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  getNumObjectiveFunctions();  i  <  getRhsOffset();  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  getNumObjectiveFunctions();  i  <  getRhsOffset();  i++)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  getNumObjectiveFunctions();  i  <  getRhsOffset();  i++)  {  coefficients[i]  =  0;  }	      if(basicRow    ==    null)    {    for(int    i    =    getNumObjectiveFunctions();    i    <    getRhsOffset();    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
8	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	Integer  baseRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);	      if(basicRow    ==    null)    {    for(int    i    =    getNumObjectiveFunctions();    i    <    getRhsOffset();    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  getNumObjectiveFunctions();  i  <  getRhsOffset();  i++)  {  coefficients[i]  =  0;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  getNumObjectiveFunctions();  i  <  getRhsOffset();  i++)  {  coefficients[i]  =  0;  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  getNumObjectiveFunctions();  i  <  getRhsOffset();  i++)  {  coefficients[i]  =  0;	      if(basicRow    ==    null)    {    for(int    i    =    getNumObjectiveFunctions();    i    <    getRhsOffset();    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
10	[BUG]  [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[i]  =  0;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[i]  =  0;  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[i]  =  0;	      if(basicRow    ==    null)    {    for(int    j    =    getNumObjectiveFunctions();    j    <    getRhsOffset();    j++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
11	[BUG]  [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getSize();  j++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getSize();  j++)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  j  =  getNumObjectiveFunctions();  j  <  getSize();  j++)  {  coefficients[i]  =  0;  }	      if(basicRow    ==    null)    {    for(int    j    =    getNumObjectiveFunctions();    j    <    getRhsOffset();    j++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0,    len    =    basicRow.length;    i    <    len;    ++i)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  ++i)  {  if(basicRow.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  ++i)  {  if(basicRow.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  ++i)  {  if(basicRow.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0,    len    =    basicRow.length;    i    <    len;    ++i)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  basicRow.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  For(int  i  =  0,  len  =  basicRow.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	For(int  i  =  0,  len  =  basicRow.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0,    len    =    basicRow.length;    i    <    len;    ++i)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    coefficients.length;    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    coefficients.length;    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    coefficients.length;    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  basicRow.length;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  baseRow.length;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[j]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[j]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[j]  =  0;  }	      if(basicRow!=    null)    {    for(int    j    =    getNumObjectiveFunctions();    j    <    getRhsOffset();    j++)    {    coefficients[j]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
21	[BUG]  [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getLhsOffset();  j++)  {  coefficients[j]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getLhsOffset();  j++)  {  coefficients[j]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  j  =  getNumObjectiveFunctions();  j  <  getLhsOffset();  j++)  {  coefficients[j]  =  0;  }	      if(basicRow!=    null)    {    for(int    j    =    getNumObjectiveFunctions();    j    <    getRhsOffset();    j++)    {    coefficients[j]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
22	[BUG]  [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[j]  =  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[j]  =  0;  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[j]  =  0;	      if(basicRow!=    null)    {    for(int    j    =    getNumObjectiveFunctions();    j    <    getRhsOffset();    j++)    {    coefficients[j]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
23	[BUG]  [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset())));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset())));  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	(basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset())));	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset())));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions())));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions())));  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions())));	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset())));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
25	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getLhsOffset())));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getLhsOffset())));  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getLhsOffset())));	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset())));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    coefficients.length;    i++)    {    if(tableau.getEntry(basicRow,    i)!=    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(basicRow.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    coefficients.length;    i++)    {    if(tableau.getEntry(basicRow,    i)!=    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  i++)  {  if(tableau.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  i++)  {  if(tableau.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  i++)  {  if(tableau.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0,    len    =    basicRow.length;    i    <    len;    i++)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  i++)  {  if(basicRow.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  i++)  {  if(basicRow.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  i++)  {  if(basicRow.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0,    len    =    basicRow.length;    i    <    len;    i++)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  basicRow.length  -  1;  i  <  len;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0,  len  =  basicRow.length  -  1;  i  <  len;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0,  len  =  basicRow.length  -  1;  i  <  len;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0,    len    =    basicRow.length;    i    <    len;    i++)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
31	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow!=  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow!=  null?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow!=  null?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
32	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  ==  null?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  ==  null?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  ==  null?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  getNumObjectiveFunctions();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  getNumObjectiveFunctions();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
34	[BUG]  [BUGGY]  int  len  =  basicRow.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  len  =  basicRow.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	int  len  =  basicRow.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0,    len    =    basicRow.length;    i    <    len;    ++i)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  baseRow.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0,  len  =  baseRow.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0,  len  =  baseRow.length;  i  <  len;  ++i)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0,    len    =    basicRow.length;    i    <    len;    ++i)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
36	[BUG]  [BUGGY]  while(basicRow!=  null)  {  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  while(basicRow!=  null)  {  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	while(basicRow!=  null)  {  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[i]  =  0;  }	      if(basicRow!=    null)    {    for(int    j    =    getNumObjectiveFunctions();    j    <    getRhsOffset();    j++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
37	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getBassOffset())));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getBassOffset())));  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getBassOffset())));	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset())));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bases.length;  i++)  {  if(tableau.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  bases.length;  i++)  {  if(tableau.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  bases.length;  i++)  {  if(tableau.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(tableau.getEntry(basicRow,    i)!=    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  while(basicRow!=  null)  {  for(int  i  =  getNumObjectiveFunctions();  i  <  getRhsOffset();  i++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  while(basicRow!=  null)  {  for(int  i  =  getNumObjectiveFunctions();  i  <  getRhsOffset();  i++)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	while(basicRow!=  null)  {  for(int  i  =  getNumObjectiveFunctions();  i  <  getRhsOffset();  i++)  {  coefficients[i]  =  0;  }	      if(basicRow!=    null)    {    for(int    i    =    getNumObjectiveFunctions();    i    <    getRhsOffset();    i++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
40	[BUG]  [BUGGY]  if(basicRow  ==  null)  {  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[j]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  if(basicRow  ==  null)  {  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[j]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	if(basicRow  ==  null)  {  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[j]  =  0;  }	      if(basicRow!=    null)    {    for(int    j    =    getNumObjectiveFunctions();    j    <    getRhsOffset();    j++)    {    coefficients[j]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
41	[BUG]  [BUGGY]  while(basicRow!=  null)  {  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[j]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  while(basicRow!=  null)  {  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[j]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	while(basicRow!=  null)  {  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[j]  =  0;  }	      if(basicRow!=    null)    {    for(int    j    =    getNumObjectiveFunctions();    j    <    getRhsOffset();    j++)    {    coefficients[j]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
42	[BUG]  [BUGGY]  int  len  =  basicRow.length;  i  <  len;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  int  len  =  basicRow.length;  i  <  len;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	int  len  =  basicRow.length;  i  <  len;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0,    len    =    basicRow.length;    i    <    len;    i++)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  baseRow.length;  i  <  len;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0,  len  =  baseRow.length;  i  <  len;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0,  len  =  baseRow.length;  i  <  len;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0,    len    =    basicRow.length;    i    <    len;    i++)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(tableau.getEntry(basicRow,  basicRow)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(tableau.getEntry(basicRow,  basicRow)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(tableau.getEntry(basicRow,  basicRow)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    coefficients.length;    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
45	[BUG]  [BUGGY]  while(basicRow!=  null)  {  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[i]  =  0;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  while(basicRow!=  null)  {  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[i]  =  0;  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	while(basicRow!=  null)  {  for(int  j  =  getNumObjectiveFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[i]  =  0;	      if(basicRow    ==    null)    {    for(int    j    =    getNumObjectiveFunctions();    j    <    getRhsOffset();    j++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  bases.length;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  bases.length;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  bases.length;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
47	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicNegative?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicNegative?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
48	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRestrictToNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRestrictToNonNegative?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRestrictToNonNegative?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
49	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (restrictToNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (restrictToNonNegative?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getNumObjectiveFunctions()))-  (restrictToNonNegative?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRow.size();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRow.size();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  basicRow.size();  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    coefficients.length;    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRow.size();  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRow.size();  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  basicRow.size();  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    coefficients.length;    i++)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
52	[BUG]  [BUGGY]  Coefficients[i]  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  Coefficients[i]  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	Coefficients[i]  =  basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()));	      if(basicRow    ==    null)    {    for(int    j    =    getNumObjectiveFunctions();    j    <    getRhsOffset();    j++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
53	[BUG]  [BUGGY]  if(basicRow!=  null)  {  for(int  j  =  getNumRestricteFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  if(basicRow!=  null)  {  for(int  j  =  getNumRestricteFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	if(basicRow!=  null)  {  for(int  j  =  getNumRestricteFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[i]  =  0;  }	      if(basicRow!=    null)    {    for(int    j    =    getNumObjectiveFunctions();    j    <    getRhsOffset();    j++)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  i++)  {  if(!tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  i++)  {  if(!tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  i++)  {  if(!tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0,    len    =    basicRow.length;    i    <    len;    i++)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(tableau.getEntry(basicRow,  basicRow)!=  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(tableau.getEntry(basicRow,  basicRow)!=  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  coefficients.length;  i++)  {  if(tableau.getEntry(basicRow,  basicRow)!=  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    coefficients.length;    i++)    {    if(tableau.getEntry(basicRow,    i)!=    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
56	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  ++i)  {  if(!tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  ++i)  {  if(!tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0,  len  =  basicRow.length;  i  <  len;  ++i)  {  if(!tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0,    len    =    basicRow.length;    i    <    len;    ++i)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
58	[BUG]  [BUGGY]  if(basicRow!=  null)  {  for(int  j  =  getNumRestricteFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[j]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  if(basicRow!=  null)  {  for(int  j  =  getNumRestricteFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[j]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	if(basicRow!=  null)  {  for(int  j  =  getNumRestricteFunctions();  j  <  getRhsOffset();  j++)  {  coefficients[j]  =  0;  }	      if(basicRow!=    null)    {    for(int    j    =    getNumObjectiveFunctions();    j    <    getRhsOffset();    j++)    {    coefficients[j]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
59	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRow;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRow;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  basicRow;  i++)  {  if(tableau.getEntry(basicRow,  i)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(tableau.getEntry(basicRow,    i)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRow;  i++)  {  if(tableau.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRow;  i++)  {  if(tableau.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  basicRow;  i++)  {  if(tableau.getEntry(basicRow,  i)!=  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(tableau.getEntry(basicRow,    i)!=    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRow;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  RealPointValuePair  getSolution()  {  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  Integer  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  getOriginalNumDecisionVariables());  double  mostNegative  =  basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset());  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  basicRow  =  getBasicRow(getNumObjectiveFunctions()  +  i);      [BUGGY]  for(int  i  =  0;  i  <  basicRow;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  if  (basicRow  !=  null)  {  for  (int  j  =  getNumObjectiveFunctions();  j  <  getNumObjectiveFunctions()  +  i;  j++)  {  if  (tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }  }  }  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double[]  coefficients  double  coefficient  epsilon  mostNegative  sum  LinearObjectiveFunction  f  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  destPos  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	333	335	1	replace	for(int  i  =  0;  i  <  basicRow;  i++)  {  if(tableau.getEntry(basicRow,  j)  ==  1)  {  coefficients[i]  =  0;  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    if(tableau.getEntry(basicRow,    j)    ==    1)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
