bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j  +  1);	      for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  for(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	for(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	      for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  height;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  for(int  i  =  0;  i  <  height;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	for(int  i  =  0;  i  <  height;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	      for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  For(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	For(int  i  =  0;  i  <  width  -  1;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	      for(int    i    =    0;    i    <    width;    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j);  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][0]  =  getEntry(i  +  1,  j);	      matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(j  +  1,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][0]  =  getEntry(j  +  1,  getRhsOffset());  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][0]  =  getEntry(j  +  1,  getRhsOffset());	      matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j,  getRhsOffset());  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][0]  =  getEntry(i  +  1,  j,  getRhsOffset());	      matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
8	[BUG]  [BUGGY]  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][1]  =  getEntry(i  +  1,  getRhsOffset());	      matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
9	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j  +  1);  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  j  +  1);	  matrix[i][width    -    1]    =    getEntry(j    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j);  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  j);	  matrix[i][width    -    1]    =    getEntry(j    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width  +  1);  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  width  +  1);	  matrix[i][width    -    1]    =    getEntry(j    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  j  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  j  +  1);  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][width  -  1]  =  getEntry(i  +  1,  j  +  1);	  matrix[i][width    -    1]    =    getEntry(j    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  getRhsOffset());  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  getRhsOffset());	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
14	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  j,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  j,  getRhsOffset());  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  +  1]  =  getEntry(i  +  1,  j,  getRhsOffset());	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  getColumnOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  getColumnOffset());  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  j,  getColumnOffset());	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  getRhsOffset());  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  width,  getRhsOffset());	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
17	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	for(int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	for(int  j  =  0;  j  <  numSlackVariables.length;  j++)  {  matrix[i][j]  =  getEntry(j  +  1,  j  +  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
21	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j);  this.tableau  =  new  RealMatrixImpl(matrix);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j);  this.tableau  =  new  RealMatrixImpl(matrix);  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  j);  this.tableau  =  new  RealMatrixImpl(matrix);	      matrix[i][j    -    1]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau    =    new    RealMatrixImpl(matrix);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
22	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j  +  1);  this.tableau  =  new  RealMatrixImpl(matrix);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  j  +  1);  this.tableau  =  new  RealMatrixImpl(matrix);  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  j  +  1);  this.tableau  =  new  RealMatrixImpl(matrix);	      matrix[i][j    -    1]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau    =    new    RealMatrixImpl(matrix);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
23	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  width);  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  width);	      matrix[i][j    -    1]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau    =    new    RealMatrixImpl(matrix);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
24	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  j  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  j  +  1);  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  +  1]  =  getEntry(i  +  1,  j  +  1);	  matrix[i][j    +    1]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(width  +  1,  j  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  +  1]  =  getEntry(width  +  1,  j  +  1);  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  +  1]  =  getEntry(width  +  1,  j  +  1);	  matrix[i][j    +    1]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  width  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  width  +  1);  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  +  1]  =  getEntry(i  +  1,  width  +  1);	  matrix[i][j    +    1]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
27	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  j);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  j);  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  +  1]  =  getEntry(i  +  1,  j);	  matrix[i][j    +    1]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  width;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  for(int  i  =  0;  i  <  width;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	for(int  i  =  0;  i  <  width;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset());  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
29	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j);  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j);	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  width;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  for(int  i  =  0;  i  <  width;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	for(int  i  =  0;  i  <  width;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  j,  getRhsOffset());  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j]  =  getEntry(i  +  1,  j,  getRhsOffset());	      matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
32	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  width);  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j]  =  getEntry(i  +  1,  width);	      matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
33	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(width  +  1,  j  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  -  1]  =  getEntry(width  +  1,  j  +  1);  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  -  1]  =  getEntry(width  +  1,  j  +  1);	  matrix[i][j    -    1]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j);  this.tableau  =  new  RealMatrixImpl(matrix);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  j);  this.tableau  =  new  RealMatrixImpl(matrix);  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][0]  =  getEntry(i  +  1,  j);  this.tableau  =  new  RealMatrixImpl(matrix);	      matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau    =    new    RealMatrixImpl(matrix);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
35	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(j  +  1,  getRhsOffset());  this.tableau  =  new  RealMatrixImpl(matrix);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][0]  =  getEntry(j  +  1,  getRhsOffset());  this.tableau  =  new  RealMatrixImpl(matrix);  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][0]  =  getEntry(j  +  1,  getRhsOffset());  this.tableau  =  new  RealMatrixImpl(matrix);	      matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau    =    new    RealMatrixImpl(matrix);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
36	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  width);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  width);  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  +  1]  =  getEntry(i  +  1,  width);	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  height);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  height);  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  height);	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
38	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset()  -  1);	      matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau    =    new    RealMatrixImpl(matrix);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  0,  j);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  0,  j);  }  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	for(int  i  =  0;  i  <  numSlackVariables;  i++)  {  matrix[i][j]  =  getEntry(i  +  0,  j);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  width);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  width);  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  width);	      matrix[i][j    -    1]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau    =    new    RealMatrixImpl(matrix);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
43	[BUG]  [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  j,  height);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  j,  height);  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][width  -  1]  =  getEntry(i  +  1,  j,  height);	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  for(int  i  =  0;  i  <  size;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	for(int  i  =  0;  i  <  size;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
45	[BUG]  [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  width  -  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  +  1]  =  getEntry(i  +  1,  width  -  1);  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  +  1]  =  getEntry(i  +  1,  width  -  1);	  matrix[i][j    +    1]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
46	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i,  j  +  1,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  -  1]  =  getEntry(i,  j  +  1,  getRhsOffset());  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  -  1]  =  getEntry(i,  j  +  1,  getRhsOffset());	  matrix[i][j    -    1]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
47	[BUG]  [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  this.tableau  =  new  RealMatrixImpl(matrix);  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	this.tableau  =  new  RealMatrixImpl(matrix);	      matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau    =    new    RealMatrixImpl(matrix);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset(),  j);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset(),  j);  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][0]  =  getEntry(i  +  1,  getRhsOffset(),  j);	      matrix[i][0]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau    =    new    RealMatrixImpl(matrix);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
49	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
50	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	for(int  j  =  0;  j  <  numSlackVariables;  j++)  {  matrix[j][j]  =  getEntry(i  +  1,  j  +  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
51	[BUG]  [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  j,  this.getRhsOffset());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][width  -  1]  =  getEntry(i  +  1,  j,  this.getRhsOffset());  [BUGGY]    }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][width  -  1]  =  getEntry(i  +  1,  j,  this.getRhsOffset());	  matrix[i][width    -    1]    =    getEntry(i    +    1,    j,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  height;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  for(int  i  =  0;  i  <  height;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	for(int  i  =  0;  i  <  height;  i++)  {  matrix[i][j]  =  getEntry(i  +  1,  j);  }	      for(int    i    =    0;    i    <    getRhsOffset();    i++)    {    matrix[i][j]    =    getEntry(i    +    1,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
53	[BUG]  [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  1);  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j]  =  getEntry(i  +  1,  getRhsOffset()  -  1);	      matrix[i][j]    =    getEntry(i    +    1,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  0);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (numArtificialVariables  ==  0)  {  return;  }  int  width  =  getWidth()  -  numArtificialVariables  -  1;  int  height  =  getHeight()  -  1;  double[][]  matrix  =  new  double[height][width];  for  (int  i  =  0;  i  <  height;  i++)  {  for  (int  j  =  0;  j  <  width  -  1;  j++)  {  matrix[i][j]  =  getEntry(i  +  1,  j  +  1);  }    [BUGGY]  matrix[i][j  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  0);  [BUGGY]    matrix[i][width  -  1]  =  getEntry(i  +  1,  getRhsOffset());  }  this.tableau  =  new  RealMatrixImpl(matrix);  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  discardArtificialVariables  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  Collection  constraints  long  serialVersionUID  int  artificialVar  col  count  height  i  j  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.3333333333333333	300	300	1	replace	matrix[i][j  -  1]  =  getEntry(i  +  1,  getRhsOffset(),  0);	      matrix[i][j    -    1]    =    getEntry(i    +    1,    getRhsOffset());    this.tableau    =    new    RealMatrixImpl(matrix);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
