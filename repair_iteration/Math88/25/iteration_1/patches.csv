bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  matrix[0][0]  =  3;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  matrix[0][0]  =  3;  [BUGGY]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[0][0]  =  3;	  matrix[0][0]    =    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size()  -  1;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().size()  -  1;	      int    zIndex    =    getNumObjectiveFunctions().size();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
3	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size()  +  1;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().size()  +  1;	      int    zIndex    =    getNumObjectiveFunctions().size();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
4	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size()  -  2;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size()  -  2;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().size()  -  2;	      int    zIndex    =    getNumObjectiveFunctions().size();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
5	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size();  matrix[0][0]  =  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size();  matrix[0][0]  =  1;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().size();  matrix[0][0]  =  1;	      int    zIndex    =    getNumObjectiveFunctions().size();    matrix[0][0]    =    -1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size()  +  1;  matrix[0][0]  =  -1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size()  +  1;  matrix[0][0]  =  -1;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().size()  +  1;  matrix[0][0]  =  -1;	      int    zIndex    =    getNumObjectiveFunctions().size();    matrix[0][0]    =    -1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions()  +  1;  matrix[0][0]  =  -1;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =  getNumObjectiveFunctions()  +  1;  matrix[0][0]  =  -1;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions()  +  1;  matrix[0][0]  =  -1;	      int    zIndex    =    getNumObjectiveFunctions();    matrix[0][0]    =    -1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions()  -  1;  matrix[0][0]  =  -1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =  getNumObjectiveFunctions()  -  1;  matrix[0][0]  =  -1;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions()  -  1;  matrix[0][0]  =  -1;	      int    zIndex    =    getNumObjectiveFunctions();    matrix[0][0]    =    -1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  matrix[1][0]  =  0;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  matrix[1][0]  =  0;  [BUGGY]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[1][0]  =  0;	  matrix[0][0]    =    0;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
10	[BUG]  [BUGGY]  matrix[1][0]  =  1;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  matrix[1][0]  =  1;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[1][0]  =  1;	      matrix[1][0]    =    -1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
11	[BUG]  [BUGGY]  matrix[0][0]  =  0,  height  =  0;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  matrix[0][0]  =  0,  height  =  0;  [BUGGY]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[0][0]  =  0,  height  =  0;	  matrix[0][0]    =    2;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  {  2)?  0  :  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  {  2)?  0  :  1;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =(getNumObjectiveFunctions()  {  2)?  0  :  1;	      int    zIndex    =(getNumObjectiveFunctions()    <    2)?    0    :    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
13	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  <  1)?  0  :  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  <  1)?  0  :  1;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =(getNumObjectiveFunctions()  <  1)?  0  :  1;	      int    zIndex    =(getNumObjectiveFunctions()    <    2)?    0    :    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
14	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >  2)?  0  :  1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  >  2)?  0  :  1;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =(getNumObjectiveFunctions()  >  2)?  0  :  1;	      int    zIndex    =(getNumObjectiveFunctions()    <    2)?    0    :    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
15	[BUG]  [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions();  [BUGGY]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[zIndex][0]  =  getNumObjectiveFunctions();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions()  -  1;  [BUGGY]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[zIndex][0]  =  getNumObjectiveFunctions()  -  1;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  matrix[zIndex][0]  =  getNumObjectiveFunctions()  +  1;  [BUGGY]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[zIndex][0]  =  getNumObjectiveFunctions()  +  1;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  matrix[zIndex][0]  =  Math.abs(getNumObjectiveFunctions()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  matrix[zIndex][0]  =  Math.abs(getNumObjectiveFunctions()  -  1);  [BUGGY]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[zIndex][0]  =  Math.abs(getNumObjectiveFunctions()  -  1);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  {  1)?  0  :  1;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  {  1)?  0  :  1;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =(getNumObjectiveFunctions()  {  1)?  0  :  1;	      int    zIndex    =(getNumObjectiveFunctions()    ==    2)?    0    :    1;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
20	[BUG]  [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =(getNumObjectiveFunctions()  ==  1)?  0  :  1;	      int    zIndex    =(getNumObjectiveFunctions()    ==    2)?    0    :    1;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
21	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  constraints.get(1);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  LinearObjectiveFunction  f  =  constraints.get(1);  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	LinearObjectiveFunction  f  =  constraints.get(1);	      LinearObjectiveFunction    f    =    constraints.get(0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
22	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  constraints.get(0,  height);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  LinearObjectiveFunction  f  =  constraints.get(0,  height);  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	LinearObjectiveFunction  f  =  constraints.get(0,  height);	      LinearObjectiveFunction    f    =    constraints.get(0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
23	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions()  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =  getNumObjectiveFunctions()  +  1;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions()  +  1;	      int    zIndex    =    getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
24	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions()  +  2;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =  getNumObjectiveFunctions()  +  2;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions()  +  2;	      int    zIndex    =    getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
25	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =  getNumObjectiveFunctions()  -  1;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions()  -  1;	      int    zIndex    =    getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
26	[BUG]  [BUGGY]  matrix[0][0]  =  constraint?  getNumObjectiveFunctions()  :  0;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  matrix[0][0]  =  constraint?  getNumObjectiveFunctions()  :  0;  [BUGGY]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[0][0]  =  constraint?  getNumObjectiveFunctions()  :  0;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
27	[BUG]  [BUGGY]  matrix[0][0]  =  constraint?  1  :  0;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  matrix[0][0]  =  constraint?  1  :  0;  [BUGGY]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[0][0]  =  constraint?  1  :  0;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
28	[BUG]  [BUGGY]  matrix[0][0]  =  constraint?  getNumObjectiveFunctions()  :  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  matrix[0][0]  =  constraint?  getNumObjectiveFunctions()  :  1;  [BUGGY]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[0][0]  =  constraint?  getNumObjectiveFunctions()  :  1;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  matrix[0][0]  =  constraint?  getNumObjectiveFunctions()  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  matrix[0][0]  =  constraint?  getNumObjectiveFunctions()  :  null;  [BUGGY]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[0][0]  =  constraint?  getNumObjectiveFunctions()  :  null;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
30	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  constraints.get(2);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  LinearObjectiveFunction  f  =  constraints.get(2);  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	LinearObjectiveFunction  f  =  constraints.get(2);	      LinearObjectiveFunction    f    =    constraints.get(0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
31	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().length;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().length;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().length;	      int    zIndex    =    getNumObjectiveFunctions().size();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
32	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size()  +  2;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size()  +  2;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().size()  +  2;	      int    zIndex    =    getNumObjectiveFunctions().size();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
33	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions(2);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =  getNumObjectiveFunctions(2);  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions(2);	      int    zIndex    =    getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  matrix[1][0]  =  2;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  matrix[1][0]  =  2;  [BUGGY]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[1][0]  =  2;	  matrix[0][0]    =    2;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
35	[BUG]  [BUGGY]  matrix[0][1]  =  0;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  matrix[0][1]  =  0;  [BUGGY]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[0][1]  =  0;	  matrix[0][0]    =    0;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions();  matrix[0][0]  =  0;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =  getNumObjectiveFunctions();  matrix[0][0]  =  0;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions();  matrix[0][0]  =  0;	      int    zIndex    =    getNumObjectiveFunctions();    matrix[0][0]    =    -1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  matrix[0][0]  =  getNumObjectiveFunctions()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  matrix[0][0]  =  getNumObjectiveFunctions()  -  1;  [BUGGY]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[0][0]  =  getNumObjectiveFunctions()  -  1;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
38	[BUG]  [BUGGY]  matrix[0][0]  =  getNumObjectiveFunctions();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  matrix[0][0]  =  getNumObjectiveFunctions();  [BUGGY]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[0][0]  =  getNumObjectiveFunctions();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  matrix[0][0]  =  getNumObjectiveFunctions()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  matrix[0][0]  =  getNumObjectiveFunctions()  +  1;  [BUGGY]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[0][0]  =  getNumObjectiveFunctions()  +  1;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  matrix[0][0]  =  getNumObjectiveFunctions().size();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  matrix[0][0]  =  getNumObjectiveFunctions().size();  [BUGGY]    }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[0][0]  =  getNumObjectiveFunctions().size();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size();  matrix[0][0]  =  0;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {    [BUGGY]  int  zIndex  =  getNumObjectiveFunctions().size();  matrix[0][0]  =  0;  [BUGGY]    matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	int  zIndex  =  getNumObjectiveFunctions().size();  matrix[0][0]  =  0;	      int    zIndex    =    getNumObjectiveFunctions().size();    matrix[0][0]    =    -1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
