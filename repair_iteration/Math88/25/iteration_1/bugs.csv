bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  matrix[0][0]  =  0;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]    List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]  matrix[0][0]  =  0;  [BUGGY]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[0][0]  =  0;	matrix[0][0]  =  -1;  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
2	[BUG]  [BUGGY]  matrix[0][0]  =  1;  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]    List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]  matrix[0][0]  =  1;  [BUGGY]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[0][0]  =  1;	matrix[0][0]  =  -1;  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
3	[BUG]  [BUGGY]  matrix[0][0]  =  2;  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]    List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]  matrix[0][0]  =  2;  [BUGGY]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	matrix[0][0]  =  2;	matrix[0][0]  =  -1;  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]    List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]    [BUGGY]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	  	matrix[0][0]  =  -1;  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
5	[BUG]  [BUGGY]    int  zIndex  =  getNumObjectiveFunctions();  matrix[0][0]  =  -1;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]    List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]    int  zIndex  =  getNumObjectiveFunctions();  matrix[0][0]  =  -1;  [BUGGY]  matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	    int  zIndex  =  getNumObjectiveFunctions();  matrix[0][0]  =  -1;		non-compiled	[CE]  illegal  start  of  type	50	None	add
6	[BUG]  [BUGGY]    int  zIndex  =  getNumObjectiveFunctions();  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]    List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]    int  zIndex  =  getNumObjectiveFunctions();  [BUGGY]  matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	    int  zIndex  =  getNumObjectiveFunctions();		non-compiled	[CE]  illegal  start  of  type	50	None	add
7	[BUG]  [BUGGY]    int  zIndex  =  getNumObjectiveFunctions().size();  matrix[0][0]  =  -1;  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]    List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]    int  zIndex  =  getNumObjectiveFunctions().size();  matrix[0][0]  =  -1;  [BUGGY]  matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	    int  zIndex  =  getNumObjectiveFunctions().size();  matrix[0][0]  =  -1;		non-compiled	[CE]  illegal  start  of  type	50	None	add
8	[BUG]  [BUGGY]    int  zIndex  =  getNumObjectiveFunctions().size();  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]    List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]    int  zIndex  =  getNumObjectiveFunctions().size();  [BUGGY]  matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	    int  zIndex  =  getNumObjectiveFunctions().size();		non-compiled	[CE]  illegal  start  of  type	50	None	add
9	[BUG]  [BUGGY]    matrix[1][0]  =  -1;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]    List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]    matrix[1][0]  =  -1;  [BUGGY]  matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	    matrix[1][0]  =  -1;		non-compiled	[CE]  illegal  start  of  type	50	None	add
10	[BUG]  [BUGGY]    LinearObjectiveFunction  f  =  constraints.get(0);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]    List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]    LinearObjectiveFunction  f  =  constraints.get(0);  [BUGGY]  matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	    LinearObjectiveFunction  f  =  constraints.get(0);		non-compiled	[CE]  illegal  start  of  type	50	None	add
11	[BUG]  [BUGGY]    int  zIndex  =(getNumObjectiveFunctions()  ==  2)?  0  :  1;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]    List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]    int  zIndex  =(getNumObjectiveFunctions()  ==  2)?  0  :  1;  [BUGGY]  matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	    int  zIndex  =(getNumObjectiveFunctions()  ==  2)?  0  :  1;		non-compiled	[CE]  illegal  start  of  type	50	None	add
12	[BUG]  [BUGGY]    int  zIndex  =(getNumObjectiveFunctions()  <  2)?  0  :  1;  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]    List<LinearConstraint>  constraints  =  getNormalizedConstraints();  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  double[][]  matrix  =  new  double[height][width];  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]    int  zIndex  =(getNumObjectiveFunctions()  <  2)?  0  :  1;  [BUGGY]  matrix[0][0]  =  -1;  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix[zIndex][zIndex]  =  maximize  ?  1  :  -1;  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.getData(),  matrix[zIndex],  getNumObjectiveFunctions());  matrix[zIndex][width  -  1]  =  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm();  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  double[][]  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  double[][]  matrix  LinearConstraint  constraint  Collection  constraints  List  constraints  long  serialVersionUID  int  artificialVar  height  i  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  	projects/Math88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.31622776601683794	134	134	1	replace	    int  zIndex  =(getNumObjectiveFunctions()  <  2)?  0  :  1;		non-compiled	[CE]  illegal  start  of  type	50	None	add
