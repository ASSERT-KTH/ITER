projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,n.getFirstChild());
