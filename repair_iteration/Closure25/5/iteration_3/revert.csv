projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope,false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverse(constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(registry,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(registry,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=n.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=scope.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=constructor.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=n.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Preconditions.checkState(constructor!=null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,operationScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,operationScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope,constructor.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope,constructor.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(true));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(false,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(false),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(constructor));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(n,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,null,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,newFlowScope(n,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseChildren(constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,constructor.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038NodeTraversal.traverse(compiler,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038NodeTraversal.traverse(compiler,constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,null,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,constructor,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope,output));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(n,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),output);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,newFlowScope(n,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,constructor.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor,n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,registry,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(config,constructor,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(functionScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(compiler));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseScope(constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,operationScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,operationScope,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=constructor.restrictByNotNullOrUndefined();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor.getString();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n.removeFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,buildor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNode(constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseChildren(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(n,constructor));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(functionScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(builder,newFlowScope(n,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor.getNext());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor.getString());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor.getJSType(),newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseBoolean(constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(n,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(builder,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,scope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,operationScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseChildren(constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseChildren(constructor,scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseChildren(constructor,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseChildren(builder,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseChildren(buildor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(registry,constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,n,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(registry,constructor,context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(registry,constructor,compiler);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,registry,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(registry,constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(constructor,scope),context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(constructor,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(n,scope),context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(scope,output));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(scope,output));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,newFlowScope(constructor));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope,output,false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(scope,output));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(constructor,false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(n,scope),false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(n,scope),false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(constructor,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038NodeTraversal.traverse(compiler,n,scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038NodeTraversal.traverse(compiler,n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038NodeTraversal.traverse(compiler,n,scope,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038NodeTraversal.traverse(compiler,n,scope,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038NodeTraversal.traverse(compiler,n,scope,declarationFunctionsMap);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038NodeTraversal.traverse(compiler,n,context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038ConstructorTraversal.traverse(compiler,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=scope.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=scope.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getLastChild(),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,n,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getLastChild(),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getLastChild(),0);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseScope(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseScope(constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseScope(constructor,scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseScope(compiler,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseScope(constructor,context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseScope(constructor,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(compiler));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(constructor));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,newFlowScope(compiler));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(compiler));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(constructor));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,newFlowScope(functionScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,n,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,null,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(compiler,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,newFlowScope(n,scope),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,newFlowScope(n,scope),syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,newFlowScope(n,scope),true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(n,newFlowScope(constructor,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,buildor,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,buildor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,buildor,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(registry,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverse(registry,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(register,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseScope(registry,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(buildor));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,newFlowScope(n,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getNext());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getChildCount());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getRawParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getLocalPart());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(register,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(status,scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(constructor,scope),output);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(n,scope),output);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=node.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor,scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,constructor,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,constructor,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor,null.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(true));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,null,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,null,scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,null,scope,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,null,scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,null,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor,n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(n,scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(scope,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(compiler,scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(registry,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=constructor!=null?null:constructor.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=constructor==null?null:constructor.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=constructor.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=constructor.getParent();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,n,constructor.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,n,constructor.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope,true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=n.restrictByNotNullOrUndefined();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=scope.restrictByNotNullOrUndefined();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=context.restrictByNotNullOrUndefined();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseChildren(n,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverseChildren(constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseChildren(constructor.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNode(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNode(constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor.getNext());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(n,scope),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(constructor,scope),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(n,scope),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(scope,constructor));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(scope,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(scope,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,newFlowScope(true));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(n,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,newFlowScope(false,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,newFlowScope(false),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(compiler,newFlowScope(true));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope,constructor.getLastChild(),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope,constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(true));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(false,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(false),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(n));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(scope),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(scope,operationScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(scope,false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(functionScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,n,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,operationScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,operationScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,constructor,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,operationScope,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor.removeFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n.removeFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n.getNext());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n.removeLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(constructor,scope),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(n,scope),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,newFlowScope(n,constructor));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Preconditions.checkState(constructor==null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Preconditions.checkState(constructor!=null&&constructor.getType()==Token.FUNCTION);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Preconditions.checkState(constructor!=null&&constructor.getType()==Token.NAME);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Preconditions.checkState(compiler!=null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Preconditions.checkArgument(constructor!=null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,constructor,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor,null.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,constructor,n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,functionScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,constructor,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,n,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(scope),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,newFlowScope(constructor),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(scope),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(ct,newFlowScope(scope),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,n.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(n,scope),syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(n,scope),operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(n,scope),context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(n,scope),true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038NodeTraversal.traverse(compiler,constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Traversal.traverse(compiler,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Context.traverse(compiler,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038NodeTraversal.traverse(registry,constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverse(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverse(constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverse(constructor,scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverse(scope,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverse(constructor,scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverse(functionScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor.next();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor.nextChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor.cloneTree();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor.getParent();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n.cloneTree(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,operationScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,newFlowScope(n));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(false,false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(false,true));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(true));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(true,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,constructor,n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor,scope.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor,null.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(registry,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,n,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,constructor,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(constructor,scope),operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,newFlowScope(n,scope),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope,true));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(scope,false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,newFlowScope(constructor,false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(scope,false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,registry,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(register,constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,registry,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor.getNext(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor.getType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor.getParent(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor.getQualifiedName();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor.getType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,n.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,n,n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,newFlowScope(true));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor.getArgumentFunction();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor.getArgumentCount();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,syntacticScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,scope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,functionScope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,syntacticScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(cloneTree,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope,constructor.getLeastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope,constructor.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(registry,constructor,config);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(config,n,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(status,constructor,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(true),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(false),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,operationScope,true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,operationScope,true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope,operationScope,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,scope,operationScope,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,scope,operationScope,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,scope,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,operationScope,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=n.getParent();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=n.getConstructor();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=n.getPreviousChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,null,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(compiler,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getLeastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,null,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,null,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,null,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(false,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(false,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,newFlowScope(false,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,null,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverse(constructor,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverse(compiler,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(constructor,true));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(n,scope),true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope)+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(registry,n,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverse(registry,n,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(registry,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(register,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,n,constructor.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,constructor,constructor.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,registry,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038NodeTraversal.traverse(compiler,arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038NodeTraversal.traverse(compiler,scope,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=n.getChildCount();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=constructor.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor==null?null:constructor.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor!=null?null:constructor.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor!=null?scope.getLastChild():constructor.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=n.removeFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(buildor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,newFlowScope(n));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseChildren(constructor,newFlowScope(n.getLastChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseChildren(constructor,newFlowScope(n.getFirstChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseChildren(constructor,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor==null?null:constructor.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor!=null?null:constructor.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor!=null?scope.getParent():constructor.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(registry,constructor,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(config,constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,config);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,scope,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,n,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Preconditions.checkState(constructor!=null&&constructor.getType()==Token.EXPR_RESULT);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,node.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,compiler);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(status,compiler,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor==null?null:constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor!=null?null:constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor==null?null:constructor.getString();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor!=null?null:constructor.getString();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor!=null?scope.getArgumentFunction():constructor.getString();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=getNativeType(UNKNOWN_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=constructor.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getParent(),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getParent(),true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor==null?null:constructor.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor!=null?null:constructor.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=n.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,newFlowScope(scope,output));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope,output),false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,output));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,syntacticScope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,constructor,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,scope.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(scope,constructor));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope,functionScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,newFlowScope(scope,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,syntacticScope,operationScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(n,scope),output);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038if(constructor!=null){scope=traverse(n,newFlowScope(scope));}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(fn,constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,newFlowScope(n,scope),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,functionScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(constructor,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNode(constructor,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,null,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,n,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(compiler,constructor,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(functionScope,constructor,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,functionScope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverse(constructor,newFlowScope(n,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverse(constructor,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(fn,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(false),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=constructor==null?scope:constructor.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,buildor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseScope(constructor,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseScope(buildor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseScope(functionScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseScope(functionScope,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,newFlowScope(false,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(false,null));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(fn,newFlowScope(scope),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope),constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(fn,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,functionScope,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,operationScope,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,syntacticScope,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,constructor,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseFunction(constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=n!=null?scope.getLastChild():n.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=n==null?scope.getLastChild():n.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=n!=null?scope.getFirstChild():n.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=n==null?scope.getFirstChild():n.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseChildren(functionScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,registry,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,newFlowScope(0));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038if(constructor!=null){scope=traverse(n,newFlowScope(false));}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,constructor,constructor.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(newFlowScope(functionScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038NodeTraversal.traverse(compiler,n,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038NodeTraversal.traverse(compiler,n,this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038NodeTraversal.traverse(compiler,n,scope,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,newFlowScope(n,scope),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,newFlowScope(n,scope),output);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,newFlowScope(n,scope),false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseChildren(constructor,scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(builder,scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseChildren(constructor,newFlowScope(n,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=constructor!=null?scope.restrictByNotNullOrUndefined():constructor;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=getNativeType(UNKNOWN_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,scope.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor.removeFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(syntacticScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor!=null?scope.getArgumentValue():constructor.getString();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverse(constructor,context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverse(constructor,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverse(constructor,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverse(constructor,n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,operationScope,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,scope,operationScope,true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,null,scope,getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,null,scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,null,scope,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor.getString(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(config,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(number,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope,context));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope,constructor));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope,operationScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope,compiler));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor!=null?n.getFirstChild():constructor.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor==null?n.getFirstChild():constructor.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor!=null?n.getLastChild():constructor.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor==null?n.getLastChild():constructor.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n.getJSType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),compiler);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(builder,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038if(constructor!=null){scope=traverse(functionScope,newFlowScope(false));}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038if(constructor!=null){scope=traverse(functionScope,newFlowScope(false));}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038if(constructor!=null){scope=traverse(functionScope,newFlowScope(false));}else{thrownewIllegalArgumentException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038if(constructor!=null){scope=traverse(functionScope,newFlowScope(false));}else{returnscope;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor!=null?scope:constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor==null?scope:constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor==null?"null":constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n.getChildCount());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(builder,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseChildren(constructor,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope,getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope,compiler);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope,constructor.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,null,scope.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(registered,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(scope,constructor));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope,output),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(false,scope),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor.cloneTree(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,node,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=n.cloneTree();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor!=null?scope.getArgumentCount():n.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor!=null?scope.getArgumentCount():n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor.removeFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getParent(),false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(builder,newFlowScope(constructor));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor,n.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor,n.getChildCount());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(compiler,false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope,null));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.removeFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(n,scope),compiler);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(constructor,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=constructor!=null?getNativeType(UNKNOWN_TYPE):constructor.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=constructor==null?getNativeType(UNKNOWN_TYPE):constructor.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=constructor!=null?context.getJSType():null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=constructor==null?scope.getNativeType(UNKNOWN_TYPE):constructor.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=constructor!=null?scope.getNativeType(UNKNOWN_TYPE):constructor.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,null,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,node,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038NodeTraversal.traverse(compiler,constructor,this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Constructor<?>constructor=compiler.getConstructor(n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,null,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,operationScope,n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,operationScope,n,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,operationScope,n,context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,operationScope,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,operationScope,n,true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope)/2.0,true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope)/2,true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor.getNext());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=n.getOwnerFunction();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Preconditions.checkState(constructor!=null||constructor.getType()==Token.FUNCTION);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Preconditions.checkState(constructor!=null,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope)&&false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope)/2,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,scope,operationScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,context,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope),constructor,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope),constructor,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor.nextChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(buildor,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor,n.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor!=null?scope.getArgumentFunction():constructor.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,constructor.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(0));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,context,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038if(constructor!=null){scope=traverse(functionScope,newFlowScope(n,scope));}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038if(constructor!=null){scope=traverse(functionScope,newFlowScope(n,scope));}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038if(constructor!=null){scope=traverse(functionScope,newFlowScope(n,scope));}else{thrownewIllegalArgumentException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,buildor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,buildor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038if(constructor!=null){scope=traverse(n,newFlowScope(false));}else{thrownewIllegalArgumentException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038if(constructor!=null){scope=traverse(n,newFlowScope(false));}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,scope,operationScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,registry,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(config,constructor,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,syntacticScope,context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),constructor,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(visitor,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,registry,n,scope);
