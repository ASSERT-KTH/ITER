projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope,false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Scopescope=traverse(constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(registry,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(registry,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(scope,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=n.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=scope.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=constructor.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodeconstructor=n.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Preconditions.checkState(constructor!=null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,operationScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,operationScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope,constructor.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope,constructor.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(true));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(false,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(false),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,newFlowScope(constructor));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,newFlowScope(n,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,null,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(n,constructor.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,newFlowScope(n,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseChildren(constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,constructor.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038NodeTraversal.traverse(compiler,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038NodeTraversal.traverse(compiler,constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,null,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(compiler,constructor,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope,output));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(functionScope,newFlowScope(n,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),output);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(buildor,newFlowScope(n,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,constructor.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor,n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,registry,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(config,constructor,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNew(constructor,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(scope),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(functionScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(compiler));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,newFlowScope(n,scope),context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n,scope.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseScope(constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,operationScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,scope,operationScope,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(structor,scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038JSTypeconstructorType=constructor.restrictByNotNullOrUndefined();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor.getString();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038Nodearg=constructor.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,n.removeFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,buildor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverse(constructor,constructor,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseNode(constructor,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1038scope=traverseChildren(n,scope);
