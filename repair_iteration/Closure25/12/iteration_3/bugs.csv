bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(constructorType!=  null  ||  ct.isFunctionType()  ||  ct.isConstructor())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  ||  ct.isFunctionType()  ||  ct.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  ||  ct.isFunctionType()  ||  ct.isConstructor())  {	  if(ct!=    null    &&    ct.isFunctionType()    ||    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	43	None	replace
2	[BUG]  [BUGGY]  if(ct!=  null  ||  ct.isFunctionType()  ||  ct.isConstructor())  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  ||  ct.isFunctionType()  ||  ct.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  ||  ct.isFunctionType()  ||  ct.isConstructor())  {	  if(ct!=    null    &&    ct.isFunctionType()    ||    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	43	None	replace
3	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.isConstructor()  ||  ct.isFunctionType())  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.isConstructor()  ||  ct.isFunctionType())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.isConstructor()  ||  ct.isFunctionType())  {	  if(ct!=    null    &&    ct.isFunctionType()    ||    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	43	None	replace
4	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.isFunctionType()  &&  ct.isConstructor())  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.isFunctionType()  &&  ct.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.isFunctionType()  &&  ct.isConstructor())  {	  if(ct!=    null    &&    ct.isFunctionType()    ||    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	43	None	replace
5	[BUG]  [BUGGY]  if(ct  instanceof  FunctionType  &&  ct.getConstructor()!=  null)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  instanceof  FunctionType  &&  ct.getConstructor()!=  null)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  instanceof  FunctionType  &&  ct.getConstructor()!=  null)  {	  if(constructorType    instanceof    FunctionType    &&    ct.getConstructor()!=    null)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
6	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.getConstructor()  ==  null)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.getConstructor()  ==  null)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct.getConstructor()  ==  null)  {	  if(constructorType    instanceof    FunctionType    &&    ct.getConstructor()!=    null)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
7	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.getFunctionType()!=  null)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.getFunctionType()!=  null)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct.getFunctionType()!=  null)  {	  if(constructorType    instanceof    FunctionType    &&    ct.getConstructor()!=    null)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
8	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  ||  ct.getConstructor()!=  null)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  ||  ct.getConstructor()!=  null)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  ||  ct.getConstructor()!=  null)  {	  if(constructorType    instanceof    FunctionType    &&    ct.getConstructor()!=    null)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
9	[BUG]  [BUGGY]  if(constructorType  ==  null  ||  ct.isFunctionType())  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  ==  null  ||  ct.isFunctionType())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  ==  null  ||  ct.isFunctionType())  {	  if(constructorType!=    null    ||    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	9	None	replace
10	[BUG]  [BUGGY]  if(constructorType  ==  null  &&  ct.getInstanceType()  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  ==  null  &&  ct.getInstanceType()  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  ==  null  &&  ct.getInstanceType()  instanceof  FunctionType)  {	  if(constructorType!=    null    &&    ct.getInstanceType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
11	[BUG]  [BUGGY]  if(constructorType!=  null  ||  ct.getInstanceType()  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  ||  ct.getInstanceType()  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  ||  ct.getInstanceType()  instanceof  FunctionType)  {	  if(constructorType!=    null    &&    ct.getInstanceType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
12	[BUG]  [BUGGY]  if(ct  ==  null  &&  ct.getInstanceType()  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  ==  null  &&  ct.getInstanceType()  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  ==  null  &&  ct.getInstanceType()  instanceof  FunctionType)  {	  if(constructorType!=    null    &&    ct.getInstanceType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
13	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct  instanceof  FunctionType)  {	  if(constructorType    instanceof    FunctionType    ||    ct    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
14	[BUG]  [BUGGY]  if(ct  instanceof  FunctionType  ||  ct  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  instanceof  FunctionType  ||  ct  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  instanceof  FunctionType  ||  ct  instanceof  FunctionType)  {	  if(constructorType    instanceof    FunctionType    ||    ct    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
15	[BUG]  [BUGGY]  if(ct  instanceof  FunctionType  ||  constructorType  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  instanceof  FunctionType  ||  constructorType  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  instanceof  FunctionType  ||  constructorType  instanceof  FunctionType)  {	  if(constructorType    instanceof    FunctionType    ||    ct    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
16	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  ||  ct  instanceof  FunctionType  ||  ct  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  ||  ct  instanceof  FunctionType  ||  ct  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  ||  ct  instanceof  FunctionType  ||  ct  instanceof  FunctionType)  {	  if(constructorType    instanceof    FunctionType    ||    ct    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
17	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  ||  ct.isConstructor())  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  ||  ct.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  ||  ct.isConstructor())  {	  if(constructorType    instanceof    FunctionType    &&    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
18	[BUG]  [BUGGY]  if(ct  instanceof  FunctionType  &&  ct.isConstructor())  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  instanceof  FunctionType  &&  ct.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  instanceof  FunctionType  &&  ct.isConstructor())  {	  if(constructorType    instanceof    FunctionType    &&    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
19	[BUG]  [BUGGY]  if(ct  instanceof  FunctionType  &&  ct.isFunctionType())  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  instanceof  FunctionType  &&  ct.isFunctionType())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  instanceof  FunctionType  &&  ct.isFunctionType())  {	  if(constructorType    instanceof    FunctionType    &&    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	13	None	replace
20	[BUG]  [BUGGY]  FunctionType  constructorType  =  ct.getConstructorType();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  constructorType  =  ct.getConstructorType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  constructorType  =  ct.getConstructorType();	  FunctionType    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	30	None	replace
21	[BUG]  [BUGGY]  FunctionType  constructorType  =  ct.getFunctionType();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  constructorType  =  ct.getFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  constructorType  =  ct.getFunctionType();	  FunctionType    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	30	None	replace
22	[BUG]  [BUGGY]  FunctionType  constructorType  =  ct.toMaybeFunctionType();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  constructorType  =  ct.toMaybeFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  constructorType  =  ct.toMaybeFunctionType();	  FunctionType    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	30	None	replace
23	[BUG]  [BUGGY]  FunctionType  constructorType  =  ct.getInterfaceType();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  constructorType  =  ct.getInterfaceType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  constructorType  =  ct.getInterfaceType();	  FunctionType    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	30	None	replace
24	[BUG]  [BUGGY]  FunctionType  constructorType  =  type.getInstanceType();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  constructorType  =  type.getInstanceType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  constructorType  =  type.getInstanceType();	  FunctionType    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	30	None	replace
25	[BUG]  [BUGGY]  FunctionType  ct  =  type.toMaybeFunctionType();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  ct  =  type.toMaybeFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  type.toMaybeFunctionType();	  FunctionType    ct    =    constructorType.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	20	None	replace
26	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getFunctionType();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  ct  =  constructorType.getFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  constructorType.getFunctionType();	  FunctionType    ct    =    constructorType.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	20	None	replace
27	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getConstructorType();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  ct  =  constructorType.getConstructorType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  constructorType.getConstructorType();	  FunctionType    ct    =    constructorType.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	20	None	replace
28	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.toFunctionType();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  ct  =  constructorType.toFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  constructorType.toFunctionType();	  FunctionType    ct    =    constructorType.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	20	None	replace
29	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.toMaybeFunctionType();  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  ct  =  functionScope.toMaybeFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  functionScope.toMaybeFunctionType();	  FunctionType    ct    =    constructorType.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	20	None	replace
30	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getInstanceType();  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  ct  =  constructorType.getInstanceType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  constructorType.getInstanceType();	  FunctionType    ct    =    constructorType.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	20	None	replace
31	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getConstructor();  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  ct  =  constructorType.getConstructor();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  constructorType.getConstructor();	  FunctionType    ct    =    constructorType.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	20	None	replace
32	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  ||  ct.isFunctionType())  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  ||  ct.isFunctionType())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  ||  ct.isFunctionType())  {	  if(constructorType    instanceof    FunctionType    &&    ct.isFunctionType())    {    	non-compiled	[CE]  ';'  expected	14	None	replace
33	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.isFunctionType()  ||  ct.isConstructor())  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.isFunctionType()  ||  ct.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct.isFunctionType()  ||  ct.isConstructor())  {	  if(constructorType    instanceof    FunctionType    &&    ct.isFunctionType())    {    	non-compiled	[CE]  ';'  expected	14	None	replace
34	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.isFunctionType()  ||  constructorType  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.isFunctionType()  ||  constructorType  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct.isFunctionType()  ||  constructorType  instanceof  FunctionType)  {	  if(constructorType    instanceof    FunctionType    &&    ct.isFunctionType())    {    	non-compiled	[CE]  ';'  expected	14	None	replace
35	[BUG]  [BUGGY]  JSType  constructorType  =  ct.getConstructorType();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  JSType  constructorType  =  ct.getConstructorType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	JSType  constructorType  =  ct.getConstructorType();	  JSType    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	31	None	replace
36	[BUG]  [BUGGY]  JSType  constructorType  =  ct.getFunctionType();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  JSType  constructorType  =  ct.getFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	JSType  constructorType  =  ct.getFunctionType();	  JSType    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	31	None	replace
37	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  ||  ct.isInterface())  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  ||  ct.isInterface())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunctionType()  ||  ct.isInterface())  {	  if(ct!=    null    &&    ct.isFunctionType()    ||    ct.isInterface())    {    	non-compiled	[CE]  ';'  expected	44	None	replace
38	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.isConstructor()  ||  ct.isInterface())  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.isConstructor()  ||  ct.isInterface())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.isConstructor()  ||  ct.isInterface())  {	  if(ct!=    null    &&    ct.isFunctionType()    ||    ct.isInterface())    {    	non-compiled	[CE]  ';'  expected	44	None	replace
39	[BUG]  [BUGGY]  if(constructorType!=  null  ||  ct.isFunctionType()  ||  ct.isInterface())  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  ||  ct.isFunctionType()  ||  ct.isInterface())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  ||  ct.isFunctionType()  ||  ct.isInterface())  {	  if(ct!=    null    &&    ct.isFunctionType()    ||    ct.isInterface())    {    	non-compiled	[CE]  ';'  expected	44	None	replace
40	[BUG]  [BUGGY]  if(ct!=  null  ||  ct.isFunctionType()  ||  ct.isInterface())  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  ||  ct.isFunctionType()  ||  ct.isInterface())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  ||  ct.isFunctionType()  ||  ct.isInterface())  {	  if(ct!=    null    &&    ct.isFunctionType()    ||    ct.isInterface())    {    	non-compiled	[CE]  ';'  expected	44	None	replace
41	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.isFunctionType()  &&  ct.isInterface())  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.isFunctionType()  &&  ct.isInterface())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.isFunctionType()  &&  ct.isInterface())  {	  if(ct!=    null    &&    ct.isFunctionType()    ||    ct.isInterface())    {    	non-compiled	[CE]  ';'  expected	44	None	replace
42	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.getType()  ==  Token.FUNCTION)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.getType()  ==  Token.FUNCTION)  {	  if(ct!=    null    &&    ct.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
43	[BUG]  [BUGGY]  if(ct  ==  null  &&  ct.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  ==  null  &&  ct.getType()  ==  Token.FUNCTION)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  ==  null  &&  ct.getType()  ==  Token.FUNCTION)  {	  if(ct!=    null    &&    ct.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
44	[BUG]  [BUGGY]  if(ct!=  null  ||  ct.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  ||  ct.getType()  ==  Token.FUNCTION)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  ||  ct.getType()  ==  Token.FUNCTION)  {	  if(ct!=    null    &&    ct.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
45	[BUG]  [BUGGY]  if(constructorType  ==  null  &&  ct.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  ==  null  &&  ct.getType()  ==  Token.FUNCTION)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  ==  null  &&  ct.getType()  ==  Token.FUNCTION)  {	  if(ct!=    null    &&    ct.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
46	[BUG]  [BUGGY]  if(constructorType!=  null  ||  ct.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  ||  ct.getType()  ==  Token.FUNCTION)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  ||  ct.getType()  ==  Token.FUNCTION)  {	  if(ct!=    null    &&    ct.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
47	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.isFunctionPrototype())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.isFunctionPrototype())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.isFunctionPrototype())  {	  if(constructorType!=    null    &&    ct.isFunctionPrototype())    {    	non-compiled	[CE]  ';'  expected	41	None	replace
48	[BUG]  [BUGGY]  if(constructorType  ==  null  &&  ct.isFunctionPrototype())  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  ==  null  &&  ct.isFunctionPrototype())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  ==  null  &&  ct.isFunctionPrototype())  {	  if(constructorType!=    null    &&    ct.isFunctionPrototype())    {    	non-compiled	[CE]  ';'  expected	41	None	replace
49	[BUG]  [BUGGY]  if(constructorType!=  null  ||  ct.isFunctionPrototype())  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  ||  ct.isFunctionPrototype())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  ||  ct.isFunctionPrototype())  {	  if(constructorType!=    null    &&    ct.isFunctionPrototype())    {    	non-compiled	[CE]  ';'  expected	41	None	replace
50	[BUG]  [BUGGY]  if(ct  ==  null  &&  ct.isFunctionPrototype())  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  ==  null  &&  ct.isFunctionPrototype())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  ==  null  &&  ct.isFunctionPrototype())  {	  if(constructorType!=    null    &&    ct.isFunctionPrototype())    {    	non-compiled	[CE]  ';'  expected	41	None	replace
51	[BUG]  [BUGGY]  JSType  constructorType  =  ct.toMaybeFunctionType();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  JSType  constructorType  =  ct.toMaybeFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	JSType  constructorType  =  ct.toMaybeFunctionType();	  JSType    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	17	None	replace
52	[BUG]  [BUGGY]  Type  ct  =  ct.getConstructor();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Type  ct  =  ct.getConstructor();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  ct  =  ct.getConstructor();	  Type    ct    =    ct.getConstructorType();    	non-compiled	[CE]  ';'  expected	23	None	replace
53	[BUG]  [BUGGY]  Type  ct  =  constructorType.getConstructorType();  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Type  ct  =  constructorType.getConstructorType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  ct  =  constructorType.getConstructorType();	  Type    ct    =    ct.getConstructorType();    	non-compiled	[CE]  ';'  expected	23	None	replace
54	[BUG]  [BUGGY]  Type  ct  =  ct.getInstanceType();  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Type  ct  =  ct.getInstanceType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  ct  =  ct.getInstanceType();	  Type    ct    =    ct.getConstructorType();    	non-compiled	[CE]  ';'  expected	23	None	replace
55	[BUG]  [BUGGY]  Type  ct  =  ct.toMaybeFunctionType();  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Type  ct  =  ct.toMaybeFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  ct  =  ct.toMaybeFunctionType();	  Type    ct    =    ct.getConstructorType();    	non-compiled	[CE]  ';'  expected	23	None	replace
56	[BUG]  [BUGGY]  Type  ct  =  type.getConstructorType();  [CE]  ';'  expected  [FE]                                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Type  ct  =  type.getConstructorType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  ct  =  type.getConstructorType();	  Type    ct    =    ct.getConstructorType();    	non-compiled	[CE]  ';'  expected	23	None	replace
57	[BUG]  [BUGGY]  Type  ct  =  ct.getFunctionType();  [CE]  ';'  expected  [FE]                                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Type  ct  =  ct.getFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  ct  =  ct.getFunctionType();	  Type    ct    =    ct.getConstructorType();    	non-compiled	[CE]  ';'  expected	23	None	replace
58	[BUG]  [BUGGY]  if(constructorType  ==  null  ||  ct.isConstructor())  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  ==  null  ||  ct.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  ==  null  ||  ct.isConstructor())  {	  if(ct    ==    null    ||    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	40	None	replace
59	[BUG]  [BUGGY]  if(ct  ==  null  &&  ct.isFunction())  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  ==  null  &&  ct.isFunction())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  ==  null  &&  ct.isFunction())  {	  if(ct!=    null    &&    ct.isFunction())    {    	non-compiled	[CE]  ';'  expected	42	None	replace
60	[BUG]  [BUGGY]  Type  constructorType  =  ct.getConstructorType();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Type  constructorType  =  ct.getConstructorType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  constructorType  =  ct.getConstructorType();	  Type    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	33	None	replace
61	[BUG]  [BUGGY]  Type  constructorType  =  ct.getConstructor();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Type  constructorType  =  ct.getConstructor();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  constructorType  =  ct.getConstructor();	  Type    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	33	None	replace
62	[BUG]  [BUGGY]  Type  constructorType  =  ct.getFunctionType();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Type  constructorType  =  ct.getFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  constructorType  =  ct.getFunctionType();	  Type    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	33	None	replace
63	[BUG]  [BUGGY]  Type  constructorType  =  ct.toMaybeFunctionType();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Type  constructorType  =  ct.toMaybeFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  constructorType  =  ct.toMaybeFunctionType();	  Type    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	33	None	replace
64	[BUG]  [BUGGY]  Type  constructorType  =  type.getInstanceType();  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Type  constructorType  =  type.getInstanceType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  constructorType  =  type.getInstanceType();	  Type    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	33	None	replace
65	[BUG]  [BUGGY]  Type  constructorType  =  ct.getDeclaredType();  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Type  constructorType  =  ct.getDeclaredType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  constructorType  =  ct.getDeclaredType();	  Type    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	33	None	replace
66	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.getType()  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.getType()  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.getType()  instanceof  FunctionType)  {	  if(ct!=    null    &&    ct.getType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
67	[BUG]  [BUGGY]  if(ct  ==  null  &&  ct.getType()  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  ==  null  &&  ct.getType()  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  ==  null  &&  ct.getType()  instanceof  FunctionType)  {	  if(ct!=    null    &&    ct.getType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
68	[BUG]  [BUGGY]  if(constructorType  ==  null  &&  ct.getType()  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  ==  null  &&  ct.getType()  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  ==  null  &&  ct.getType()  instanceof  FunctionType)  {	  if(ct!=    null    &&    ct.getType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
69	[BUG]  [BUGGY]  if(ct!=  null  ||  ct.getType()  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  ||  ct.getType()  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  ||  ct.getType()  instanceof  FunctionType)  {	  if(ct!=    null    &&    ct.getType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
70	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.getType()  instanceof  FunctionType  ||  ct.getType()  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.getType()  instanceof  FunctionType  ||  ct.getType()  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.getType()  instanceof  FunctionType  ||  ct.getType()  instanceof  FunctionType)  {	  if(ct!=    null    &&    ct.getType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
71	[BUG]  [BUGGY]  FunctionType  constructorType  =  ct.getConstructorInstanceType();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  constructorType  =  ct.getConstructorInstanceType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  constructorType  =  ct.getConstructorInstanceType();	  FunctionType    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	19	None	replace
72	[BUG]  [BUGGY]  FunctionType  constructorType  =  ct.getConstructorInstance();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  constructorType  =  ct.getConstructorInstance();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  constructorType  =  ct.getConstructorInstance();	  FunctionType    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	19	None	replace
73	[BUG]  [BUGGY]  FunctionType  constructorType  =  type.getConstructor();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  constructorType  =  type.getConstructor();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  constructorType  =  type.getConstructor();	  FunctionType    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	19	None	replace
74	[BUG]  [BUGGY]  if(constructorType!=  null  ||  ct.isFunctionType()  ||!constructorType.isConstructor())  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  ||  ct.isFunctionType()  ||!constructorType.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  ||  ct.isFunctionType()  ||!constructorType.isConstructor())  {	  if(constructorType!=    null    &&    ct.isFunctionType()    ||!constructorType.isConstructor())    {    	non-compiled	[CE]  ';'  expected	46	None	replace
75	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  ||!ct.isConstructor())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  ||!ct.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunctionType()  ||!ct.isConstructor())  {	  if(constructorType!=    null    &&    ct.isFunctionType()    ||!constructorType.isConstructor())    {    	non-compiled	[CE]  ';'  expected	46	None	replace
76	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isConstructor()  ||!constructorType.isFunctionType())  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isConstructor()  ||!constructorType.isFunctionType())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isConstructor()  ||!constructorType.isFunctionType())  {	  if(constructorType!=    null    &&    ct.isFunctionType()    ||!constructorType.isConstructor())    {    	non-compiled	[CE]  ';'  expected	46	None	replace
77	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isConstructor()  ||!constructorType.isConstructor())  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isConstructor()  ||!constructorType.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isConstructor()  ||!constructorType.isConstructor())  {	  if(constructorType!=    null    &&    ct.isFunctionType()    ||!constructorType.isConstructor())    {    	non-compiled	[CE]  ';'  expected	46	None	replace
78	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.getConstructor()  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.getConstructor()  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.getConstructor()  instanceof  FunctionType)  {	  if(ct!=    null    &&    ct.getInstanceType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
79	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.getInstanceType()  instanceof  FunctionType  ||  ct.getInstanceType()  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.getInstanceType()  instanceof  FunctionType  ||  ct.getInstanceType()  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.getInstanceType()  instanceof  FunctionType  ||  ct.getInstanceType()  instanceof  FunctionType)  {	  if(ct!=    null    &&    ct.getInstanceType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
80	[BUG]  [BUGGY]  if(ct!=  null  ||  constructorType  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  ||  constructorType  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  ||  constructorType  instanceof  FunctionType)  {	  if(constructorType!=    null    ||    constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
81	[BUG]  [BUGGY]  FunctionType  ct  =  type.getInstanceType();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  ct  =  type.getInstanceType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  type.getInstanceType();	  FunctionType    ct    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	22	None	replace
82	[BUG]  [BUGGY]  FunctionType  ct  =  ct.getConstructorType();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  ct  =  ct.getConstructorType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  ct.getConstructorType();	  FunctionType    ct    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	22	None	replace
83	[BUG]  [BUGGY]  if(ct  instanceof  FunctionType  &&!(ct  instanceof  FunctionType  ||  ct  instanceof  FunctionType))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  instanceof  FunctionType  &&!(ct  instanceof  FunctionType  ||  ct  instanceof  FunctionType))  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  instanceof  FunctionType  &&!(ct  instanceof  FunctionType  ||  ct  instanceof  FunctionType))  {	  if(ct    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
84	[BUG]  [BUGGY]  if(ct.isFunctionType())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct.isFunctionType())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct.isFunctionType())  {	  if(ct    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
85	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  ||  ct.isInterface())  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  ||  ct.isInterface())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  ||  ct.isInterface())  {	  if(constructorType    instanceof    FunctionType    &&    ct.isInterface())    {    	non-compiled	[CE]  ';'  expected	15	None	replace
86	[BUG]  [BUGGY]  if(ct  instanceof  FunctionType  &&  ct.isInterface())  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  instanceof  FunctionType  &&  ct.isInterface())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  instanceof  FunctionType  &&  ct.isInterface())  {	  if(constructorType    instanceof    FunctionType    &&    ct.isInterface())    {    	non-compiled	[CE]  ';'  expected	15	None	replace
87	[BUG]  [BUGGY]  Constructor  <?>  constructorType  =  ct.getFunctionType();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Constructor  <?>  constructorType  =  ct.getFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Constructor  <?>  constructorType  =  ct.getFunctionType();	  Constructor    <?>    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	32	None	replace
88	[BUG]  [BUGGY]  Constructor  <?>  constructorType  =  ct.getInstanceType();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Constructor  <?>  constructorType  =  ct.getInstanceType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Constructor  <?>  constructorType  =  ct.getInstanceType();	  Constructor    <?>    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	32	None	replace
89	[BUG]  [BUGGY]  Constructor  <?>  constructorType  =  ct.getConstructorInstanceType();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Constructor  <?>  constructorType  =  ct.getConstructorInstanceType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Constructor  <?>  constructorType  =  ct.getConstructorInstanceType();	  Constructor    <?>    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	32	None	replace
90	[BUG]  [BUGGY]  Constructor  <?>  constructorType  =  ct.getConstructorInstance();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Constructor  <?>  constructorType  =  ct.getConstructorInstance();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Constructor  <?>  constructorType  =  ct.getConstructorInstance();	  Constructor    <?>    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	32	None	replace
91	[BUG]  [BUGGY]  Constructor  <?>  constructorType  =  ct.toConstructor();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Constructor  <?>  constructorType  =  ct.toConstructor();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Constructor  <?>  constructorType  =  ct.toConstructor();	  Constructor    <?>    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	32	None	replace
92	[BUG]  [BUGGY]  Constructor  <?>  constructorType  =  ct.getConstructor(type);  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Constructor  <?>  constructorType  =  ct.getConstructor(type);  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Constructor  <?>  constructorType  =  ct.getConstructor(type);	  Constructor    <?>    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	32	None	replace
93	[BUG]  [BUGGY]  if(constructorType  ==  null  &&  ct.getConstructor()  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  ==  null  &&  ct.getConstructor()  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  ==  null  &&  ct.getConstructor()  instanceof  FunctionType)  {	  if(constructorType!=    null    &&    ct.getConstructor()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
94	[BUG]  [BUGGY]  if(constructorType!=  null  ||  ct.getConstructor()  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  ||  ct.getConstructor()  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  ||  ct.getConstructor()  instanceof  FunctionType)  {	  if(constructorType!=    null    &&    ct.getConstructor()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
95	[BUG]  [BUGGY]  if(ct  ==  null  &&  ct.getConstructor()  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  ==  null  &&  ct.getConstructor()  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  ==  null  &&  ct.getConstructor()  instanceof  FunctionType)  {	  if(constructorType!=    null    &&    ct.getConstructor()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
96	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isConstructor()  ||!constructorType.isInterface())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isConstructor()  ||!constructorType.isInterface())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isConstructor()  ||!constructorType.isInterface())  {	  if(constructorType!=    null    &&    ct.isFunctionType()    ||!constructorType.isInterface())    {    	non-compiled	[CE]  ';'  expected	47	None	replace
97	[BUG]  [BUGGY]  if(constructorType!=  null  ||  ct.isFunctionType()  ||!constructorType.isInterface())  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  ||  ct.isFunctionType()  ||!constructorType.isInterface())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  ||  ct.isFunctionType()  ||!constructorType.isInterface())  {	  if(constructorType!=    null    &&    ct.isFunctionType()    ||!constructorType.isInterface())    {    	non-compiled	[CE]  ';'  expected	47	None	replace
98	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  ||!ct.isInterface())  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  ||!ct.isInterface())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunctionType()  ||!ct.isInterface())  {	  if(constructorType!=    null    &&    ct.isFunctionType()    ||!constructorType.isInterface())    {    	non-compiled	[CE]  ';'  expected	47	None	replace
99	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  ||!constructorType.isFunctionType())  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  ||!constructorType.isFunctionType())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunctionType()  ||!constructorType.isFunctionType())  {	  if(constructorType!=    null    &&    ct.isFunctionType()    ||!constructorType.isInterface())    {    	non-compiled	[CE]  ';'  expected	47	None	replace
100	[BUG]  [BUGGY]  type  =  getNativeType(CONSTRUCTOR_TYPE);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  type  =  getNativeType(CONSTRUCTOR_TYPE);  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	type  =  getNativeType(CONSTRUCTOR_TYPE);	  type    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
101	[BUG]  [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  ct);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  ct);  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	type  =  getNativeType(UNKNOWN_TYPE,  ct);	  type    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
102	[BUG]  [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  ct.getInstanceType());  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  ct.getInstanceType());  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	type  =  getNativeType(UNKNOWN_TYPE,  ct.getInstanceType());	  type    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
103	[BUG]  [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  ct.getConstructor());  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  ct.getConstructor());  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	type  =  getNativeType(UNKNOWN_TYPE,  ct.getConstructor());	  type    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
104	[BUG]  [BUGGY]  type  =  getNativeType(TEMPLATE_TYPE_NOT_OBJECT_TYPE);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  type  =  getNativeType(TEMPLATE_TYPE_NOT_OBJECT_TYPE);  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	type  =  getNativeType(TEMPLATE_TYPE_NOT_OBJECT_TYPE);	  type    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
105	[BUG]  [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  ct.type);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  ct.type);  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	type  =  getNativeType(UNKNOWN_TYPE,  ct.type);	  type    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
106	[BUG]  [BUGGY]  if(ct!=  null)  {  if(ct.isConstructor())  {  type  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null)  {  if(ct.isConstructor())  {  type  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null)  {  if(ct.isConstructor())  {  type  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    type    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	50	None	replace
107	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    type    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	50	None	replace
108	[BUG]  [BUGGY]  type  =  ct.getInstanceType();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  type  =  ct.getInstanceType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	type  =  ct.getInstanceType();	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    type    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	50	None	replace
109	[BUG]  [BUGGY]  if(constructorType!=  null)  {  if(ct.isFunction())  {  type  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null)  {  if(ct.isFunction())  {  type  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null)  {  if(ct.isFunction())  {  type  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    type    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	50	None	replace
110	[BUG]  [BUGGY]  if(constructorType!=  null)  {  if(ct.isFunctionType())  {  type  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null)  {  if(ct.isFunctionType())  {  type  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null)  {  if(ct.isFunctionType())  {  type  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    type    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	50	None	replace
111	[BUG]  [BUGGY]  if(ct!=  null)  {  if(ct.isConstructor())  {  ct  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null)  {  if(ct.isConstructor())  {  ct  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null)  {  if(ct.isConstructor())  {  ct  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    ct    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
112	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.isConstructor())  {  ct  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.isConstructor())  {  ct  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.isConstructor())  {  ct  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    ct    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
113	[BUG]  [BUGGY]  if(constructorType!=  null)  {  if(ct.isFunction())  {  ct  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null)  {  if(ct.isFunction())  {  ct  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null)  {  if(ct.isFunction())  {  ct  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    ct    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
114	[BUG]  [BUGGY]  ct  =  ct.getInstanceType();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  ct  =  ct.getInstanceType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	ct  =  ct.getInstanceType();	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    ct    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
115	[BUG]  [BUGGY]  ConstructorType  ct  =  constructorType.toMaybeFunctionType();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  ConstructorType  ct  =  constructorType.toMaybeFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	ConstructorType  ct  =  constructorType.toMaybeFunctionType();	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    ct    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
116	[BUG]  [BUGGY]  if(constructorType  ==  null  &&  ct.isFunction())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  ==  null  &&  ct.isFunction())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  ==  null  &&  ct.isFunction())  {	  if(constructorType!=    null    &&    ct.isFunction())    {    	non-compiled	[CE]  ';'  expected	8	None	replace
117	[BUG]  [BUGGY]  if(constructorType!=  null  ||  ct.isFunction())  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  ||  ct.isFunction())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  ||  ct.isFunction())  {	  if(constructorType!=    null    &&    ct.isFunction())    {    	non-compiled	[CE]  ';'  expected	8	None	replace
118	[BUG]  [BUGGY]  if(constructorType!=  null  ||  constructorType.isFunctionType())  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  ||  constructorType.isFunctionType())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  ||  constructorType.isFunctionType())  {	  if(constructorType!=    null    &&    constructorType.isFunctionType())    {    	non-compiled	[CE]  ';'  expected	34	None	replace
119	[BUG]  [BUGGY]  if(constructorType!=  null  &&  constructorType.isConstructor())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  constructorType.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  constructorType.isConstructor())  {	  if(constructorType!=    null    &&    constructorType.isFunctionType())    {    	non-compiled	[CE]  ';'  expected	34	None	replace
120	[BUG]  [BUGGY]  if(constructorType  ==  null  &&  constructorType.isFunctionType())  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  ==  null  &&  constructorType.isFunctionType())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  ==  null  &&  constructorType.isFunctionType())  {	  if(constructorType!=    null    &&    constructorType.isFunctionType())    {    	non-compiled	[CE]  ';'  expected	34	None	replace
121	[BUG]  [BUGGY]  if(ct  instanceof  FunctionType  &&  ct.isFunction())  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  instanceof  FunctionType  &&  ct.isFunction())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  instanceof  FunctionType  &&  ct.isFunction())  {	  if(constructorType    instanceof    FunctionType    &&    ct.isFunction())    {    	non-compiled	[CE]  ';'  expected	38	None	replace
122	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  ||  ct.isFunction())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  ||  ct.isFunction())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  ||  ct.isFunction())  {	  if(constructorType    instanceof    FunctionType    &&    ct.isFunction())    {    	non-compiled	[CE]  ';'  expected	38	None	replace
123	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.isFunction()  ||  ct.isConstructor())  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.isFunction()  ||  ct.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct.isFunction()  ||  ct.isConstructor())  {	  if(constructorType    instanceof    FunctionType    &&    ct.isFunction())    {    	non-compiled	[CE]  ';'  expected	38	None	replace
124	[BUG]  [BUGGY]  if(ct  instanceof  FunctionType  &&  constructorType.isFunction())  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  instanceof  FunctionType  &&  constructorType.isFunction())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  instanceof  FunctionType  &&  constructorType.isFunction())  {	  if(constructorType    instanceof    FunctionType    &&    ct.isFunction())    {    	non-compiled	[CE]  ';'  expected	38	None	replace
125	[BUG]  [BUGGY]  FunctionType  ct  =  type.getConstructor();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  ct  =  type.getConstructor();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  type.getConstructor();	  FunctionType    ct    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	21	None	replace
126	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getConstructor();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  ct  =  functionScope.getConstructor();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  functionScope.getConstructor();	  FunctionType    ct    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	21	None	replace
127	[BUG]  [BUGGY]  FunctionType  ct  =  context.getConstructor();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  ct  =  context.getConstructor();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  context.getConstructor();	  FunctionType    ct    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	21	None	replace
128	[BUG]  [BUGGY]  FunctionType  ct  =  scope.getConstructor();  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  ct  =  scope.getConstructor();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  scope.getConstructor();	  FunctionType    ct    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	21	None	replace
129	[BUG]  [BUGGY]  if(ct!=  null  ||  ct  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  ||  ct  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  ||  ct  instanceof  FunctionType)  {	  if(constructorType!=    null    ||    ct    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
130	[BUG]  [BUGGY]  if(constructorType  ==  null  ||  ct  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  ==  null  ||  ct  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  ==  null  ||  ct  instanceof  FunctionType)  {	  if(constructorType!=    null    ||    ct    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
131	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isConstructor()  ||  ct.isFunctionType())  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isConstructor()  ||  ct.isFunctionType())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isConstructor()  ||  ct.isFunctionType())  {	  if(constructorType!=    null    &&    ct.isFunctionType()    ||    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	45	None	replace
132	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  ||  ct.isInstanceType())  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  ||  ct.isInstanceType())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunctionType()  ||  ct.isInstanceType())  {	  if(constructorType!=    null    &&    ct.isFunctionType()    ||    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	45	None	replace
133	[BUG]  [BUGGY]  if(constructorType  ==  null  &&  ct.isFunctionType()  ||  ct.isConstructor())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  ==  null  &&  ct.isFunctionType()  ||  ct.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  ==  null  &&  ct.isFunctionType()  ||  ct.isConstructor())  {	  if(constructorType!=    null    &&    ct.isFunctionType()    ||    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	45	None	replace
134	[BUG]  [BUGGY]  if(ct  instanceof  FunctionType  &&  ct.getInstanceType()!=  null)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  instanceof  FunctionType  &&  ct.getInstanceType()!=  null)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  instanceof  FunctionType  &&  ct.getInstanceType()!=  null)  {	  if(constructorType    instanceof    FunctionType    &&    ct.getInstanceType()!=    null)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
135	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.getInstanceType()  ==  null)  {  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.getInstanceType()  ==  null)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct.getInstanceType()  ==  null)  {	  if(constructorType    instanceof    FunctionType    &&    ct.getInstanceType()!=    null)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
136	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  ||  ct.getInstanceType()!=  null)  {  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  ||  ct.getInstanceType()!=  null)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  ||  ct.getInstanceType()!=  null)  {	  if(constructorType    instanceof    FunctionType    &&    ct.getInstanceType()!=    null)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
137	[BUG]  [BUGGY]  if(ct  instanceof  FunctionType  &&  constructorType!=  null)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  instanceof  FunctionType  &&  constructorType!=  null)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  instanceof  FunctionType  &&  constructorType!=  null)  {	  if(constructorType    instanceof    FunctionType    &&    ct!=    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
138	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct  ==  null)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct  ==  null)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct  ==  null)  {	  if(constructorType    instanceof    FunctionType    &&    ct!=    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
139	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  ||  ct!=  null)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  ||  ct!=  null)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  ||  ct!=  null)  {	  if(constructorType    instanceof    FunctionType    &&    ct!=    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
140	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct  >=  null)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct  >=  null)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct  >=  null)  {	  if(constructorType    instanceof    FunctionType    &&    ct!=    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
141	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  constructorType  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  &&  constructorType  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  constructorType  instanceof  FunctionType)  {	  if(constructorType    instanceof    FunctionType    ||    constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
142	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  buildorType  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  &&  buildorType  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  buildorType  instanceof  FunctionType)  {	  if(constructorType    instanceof    FunctionType    ||    constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
143	[BUG]  [BUGGY]  Type  ct  =  ct.getConstructorInstanceType();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Type  ct  =  ct.getConstructorInstanceType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  ct  =  ct.getConstructorInstanceType();	  Type    ct    =    ct.getConstructorType();    	non-compiled	[CE]  ';'  expected	23	None	replace
144	[BUG]  [BUGGY]  if(constructorType  ==  null  ||  constructorType  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  ==  null  ||  constructorType  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  ==  null  ||  constructorType  instanceof  FunctionType)  {	  if(constructorType    instanceof    FunctionType    ||    constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
145	[BUG]  [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  ct.toMaybeFunctionType());  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  ct.toMaybeFunctionType());  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	type  =  getNativeType(UNKNOWN_TYPE,  ct.toMaybeFunctionType());	  type    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
146	[BUG]  [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  constructorType);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  constructorType);  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	type  =  getNativeType(UNKNOWN_TYPE,  constructorType);	  type    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
147	[BUG]  [BUGGY]  if(ct  ==  null  ||  ct  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  ==  null  ||  ct  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  ==  null  ||  ct  instanceof  FunctionType)  {	  if(ct    ==    null    &&    ct    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
148	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.getInstanceType()  ==  FunctionType.UNKNOWN)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.getInstanceType()  ==  FunctionType.UNKNOWN)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.getInstanceType()  ==  FunctionType.UNKNOWN)  {	  if(ct!=    null    &&    ct.getInstanceType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
149	[BUG]  [BUGGY]  Constructor  <?>  constructorType  =  ct.toMaybeFunctionType();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Constructor  <?>  constructorType  =  ct.toMaybeFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Constructor  <?>  constructorType  =  ct.toMaybeFunctionType();	  Constructor    <?>    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	32	None	replace
150	[BUG]  [BUGGY]  Constructor  <?>  constructorType  =  ct.getOwnerFunctionType();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Constructor  <?>  constructorType  =  ct.getOwnerFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Constructor  <?>  constructorType  =  ct.getOwnerFunctionType();	  Constructor    <?>    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	32	None	replace
151	[BUG]  [BUGGY]  FunctionType  ct  =  functionType.toMaybeFunctionType();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  ct  =  functionType.toMaybeFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  functionType.toMaybeFunctionType();	  FunctionType    ct    =    constructorType.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	20	None	replace
152	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.getConstructor()!=  null)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.getConstructor()!=  null)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.getConstructor()!=  null)  {	  if(constructorType    instanceof    FunctionType    &&    ct.getConstructor()!=    null)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
153	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.getConstructor()!=  null)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.getConstructor()!=  null)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.getConstructor()!=  null)  {	  if(constructorType    instanceof    FunctionType    &&    ct.getConstructor()!=    null)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
154	[BUG]  [BUGGY]  if(constructorType!=  null  &&  constructorType.isUnknownType())  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  constructorType.isUnknownType())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  constructorType.isUnknownType())  {	  if(constructorType!=    null    &&    constructorType.isFunctionType())    {    	non-compiled	[CE]  ';'  expected	34	None	replace
155	[BUG]  [BUGGY]  if(constructorType!=  null  &&  constructorType  instanceof  FunctionType  &&  ct!=  null)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  constructorType  instanceof  FunctionType  &&  ct!=  null)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  constructorType  instanceof  FunctionType  &&  ct!=  null)  {	  if(constructorType    instanceof    FunctionType    &&    ct!=    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
156	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.getInstanceType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.getInstanceType()  ==  Token.FUNCTION)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.getInstanceType()  ==  Token.FUNCTION)  {	  if(ct!=    null    &&    ct.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
157	[BUG]  [BUGGY]  if(ct  ==  null  ||  ct.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  ==  null  ||  ct.getType()  ==  Token.FUNCTION)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  ==  null  ||  ct.getType()  ==  Token.FUNCTION)  {	  if(ct!=    null    &&    ct.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
158	[BUG]  [BUGGY]  if(ct  ==  null  &&  ct.isFunctionType()  ||  ct.isInterface())  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  ==  null  &&  ct.isFunctionType()  ||  ct.isInterface())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  ==  null  &&  ct.isFunctionType()  ||  ct.isInterface())  {	  if(ct!=    null    &&    ct.isFunctionType()    ||    ct.isInterface())    {    	non-compiled	[CE]  ';'  expected	44	None	replace
159	[BUG]  [BUGGY]  Type  constructorType  =  ct!=  null?  ct.getInstanceType()  :  null;  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Type  constructorType  =  ct!=  null?  ct.getInstanceType()  :  null;  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  constructorType  =  ct!=  null?  ct.getInstanceType()  :  null;	  Type    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	33	None	replace
160	[BUG]  [BUGGY]  Type  constructorType  =  ct!=  null?  ct.getConstructorType()  :  null;  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Type  constructorType  =  ct!=  null?  ct.getConstructorType()  :  null;  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  constructorType  =  ct!=  null?  ct.getConstructorType()  :  null;	  Type    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	33	None	replace
161	[BUG]  [BUGGY]  if(ct  instanceof  FunctionType  &&!(ct  instanceof  FunctionType))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  instanceof  FunctionType  &&!(ct  instanceof  FunctionType))  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  instanceof  FunctionType  &&!(ct  instanceof  FunctionType))  {	  if(ct    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
162	[BUG]  [BUGGY]  if(ct  ==  null)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  ==  null)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  ==  null)  {	  if(ct    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
163	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.getInstanceType()!=  null)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.getInstanceType()!=  null)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.getInstanceType()!=  null)  {	  if(constructorType    instanceof    FunctionType    &&    ct.getInstanceType()!=    null)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
164	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.getInstanceType()  ==  FunctionType.FUNCTION_TYPE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.getInstanceType()  ==  FunctionType.FUNCTION_TYPE)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.getInstanceType()  ==  FunctionType.FUNCTION_TYPE)  {	  if(constructorType!=    null    &&    ct.getInstanceType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
165	[BUG]  [BUGGY]  FunctionType  constructorType  =  ct!=  null?  ct.getConstructor()  :  null;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  constructorType  =  ct!=  null?  ct.getConstructor()  :  null;  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  constructorType  =  ct!=  null?  ct.getConstructor()  :  null;	  FunctionType    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	19	None	replace
166	[BUG]  [BUGGY]  FunctionType  constructorType  =  ct.getConstructor()  ||  ct.isInterface();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  constructorType  =  ct.getConstructor()  ||  ct.isInterface();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  constructorType  =  ct.getConstructor()  ||  ct.isInterface();	  FunctionType    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	19	None	replace
167	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.getType()  ==  FunctionType.FUNCTION_TYPE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.getType()  ==  FunctionType.FUNCTION_TYPE)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.getType()  ==  FunctionType.FUNCTION_TYPE)  {	  if(ct!=    null    &&    ct.getType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
168	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.getType()  ==  FunctionType.FUNCTION)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.getType()  ==  FunctionType.FUNCTION)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.getType()  ==  FunctionType.FUNCTION)  {	  if(ct!=    null    &&    ct.getType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
169	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.getType()  ==  FunctionType.UNKNOWN)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.getType()  ==  FunctionType.UNKNOWN)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.getType()  ==  FunctionType.UNKNOWN)  {	  if(ct!=    null    &&    ct.getType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
170	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isConstructor())  {  ct  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isConstructor())  {  ct  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isConstructor())  {  ct  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    ct    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
171	[BUG]  [BUGGY]  if(constructorType!=  null)  {  if(ct.isConstructor()  ||  ct.isConstructor())  {  ct  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null)  {  if(ct.isConstructor()  ||  ct.isConstructor())  {  ct  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null)  {  if(ct.isConstructor()  ||  ct.isConstructor())  {  ct  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    ct    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
172	[BUG]  [BUGGY]  if(constructorType!=  null)  {  if(ct.isConstructor()  ||  ct.isFunctionType())  {  ct  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null)  {  if(ct.isConstructor()  ||  ct.isFunctionType())  {  ct  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null)  {  if(ct.isConstructor()  ||  ct.isFunctionType())  {  ct  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    ct    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
173	[BUG]  [BUGGY]  if(ct  ==  null  &&  ct.isFunctionType()  ||  ct.isConstructor())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  ==  null  &&  ct.isFunctionType()  ||  ct.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  ==  null  &&  ct.isFunctionType()  ||  ct.isConstructor())  {	  if(ct!=    null    &&    ct.isFunctionType()    ||    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	43	None	replace
174	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isInterface())  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isInterface())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isInterface())  {	  if(constructorType    instanceof    FunctionType    &&    ct.isInterface())    {    	non-compiled	[CE]  ';'  expected	15	None	replace
175	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.isInterface())  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.isInterface())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.isInterface())  {	  if(constructorType    instanceof    FunctionType    &&    ct.isInterface())    {    	non-compiled	[CE]  ';'  expected	15	None	replace
176	[BUG]  [BUGGY]  FunctionType  constructorType  =  ct!=  null?  ct.getConstructorType()  :  null;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  constructorType  =  ct!=  null?  ct.getConstructorType()  :  null;  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  constructorType  =  ct!=  null?  ct.getConstructorType()  :  null;	  FunctionType    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	30	None	replace
177	[BUG]  [BUGGY]  FunctionType  constructorType  =  ct!=  null?  ct.getInstanceType()  :  null;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  constructorType  =  ct!=  null?  ct.getInstanceType()  :  null;  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  constructorType  =  ct!=  null?  ct.getInstanceType()  :  null;	  FunctionType    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	30	None	replace
178	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getInstanceType();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  ct  =  functionScope.getInstanceType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  functionScope.getInstanceType();	  FunctionType    ct    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	22	None	replace
179	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  &&  ct.isConstructor())  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  &&  ct.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunctionType()  &&  ct.isConstructor())  {	  if(constructorType!=    null    &&    ct.isFunctionType()    ||    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	45	None	replace
180	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    type    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	50	None	replace
181	[BUG]  [BUGGY]  if(constructorType!=  null)  {  if(!ct.isConstructor())  {  type  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null)  {  if(!ct.isConstructor())  {  type  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null)  {  if(!ct.isConstructor())  {  type  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    type    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	50	None	replace
182	[BUG]  [BUGGY]  if(constructorType!=  null)  {  if(ct.isConstructor())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null)  {  if(ct.isConstructor())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null)  {  if(ct.isConstructor())  {  type  =  getNativeType(UNKNOWN_TYPE);  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    type    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	50	None	replace
183	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  &&!constructorType.isInterface())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  &&!constructorType.isInterface())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunctionType()  &&!constructorType.isInterface())  {	  if(constructorType!=    null    &&    ct.isFunctionType()    ||!constructorType.isInterface())    {    	non-compiled	[CE]  ';'  expected	47	None	replace
184	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct!=  null  &&  ct.isFunctionType())  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct!=  null  &&  ct.isFunctionType())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct!=  null  &&  ct.isFunctionType())  {	  if(constructorType    instanceof    FunctionType    &&    ct!=    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
185	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct!=  null  &&  ct.isConstructor())  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct!=  null  &&  ct.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct!=  null  &&  ct.isConstructor())  {	  if(constructorType    instanceof    FunctionType    &&    ct!=    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
186	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct!=  null  &&  ct.isFunction())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct!=  null  &&  ct.isFunction())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct!=  null  &&  ct.isFunction())  {	  if(constructorType    instanceof    FunctionType    &&    ct!=    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
187	[BUG]  [BUGGY]  if(ct  ==  null  ||  ct.isFunctionType()  ||  ct.isConstructor())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  ==  null  ||  ct.isFunctionType()  ||  ct.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  ==  null  ||  ct.isFunctionType()  ||  ct.isConstructor())  {	  if(ct!=    null    &&    ct.isFunctionType()    ||    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	43	None	replace
188	[BUG]  [BUGGY]  Type  ct  =  ct.getConstructorParameterType(0);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Type  ct  =  ct.getConstructorParameterType(0);  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  ct  =  ct.getConstructorParameterType(0);	  Type    ct    =    ct.getConstructorType();    	non-compiled	[CE]  ';'  expected	23	None	replace
189	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.isFunctionType()  ||  ct.isInterface())  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.isFunctionType()  ||  ct.isInterface())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct.isFunctionType()  ||  ct.isInterface())  {	  if(constructorType    instanceof    FunctionType    &&    ct.isFunctionType())    {    	non-compiled	[CE]  ';'  expected	14	None	replace
190	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunction()  ||  ct.isConstructor())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isFunction()  ||  ct.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunction()  ||  ct.isConstructor())  {	  if(constructorType!=    null    &&    ct.isFunction())    {    	non-compiled	[CE]  ';'  expected	8	None	replace
191	[BUG]  [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  ct.instanceType);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  ct.instanceType);  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	type  =  getNativeType(UNKNOWN_TYPE,  ct.instanceType);	  type    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
192	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.getConstructor()!=  null  &&  ct.isFunctionType())  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.getConstructor()!=  null  &&  ct.isFunctionType())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct.getConstructor()!=  null  &&  ct.isFunctionType())  {	  if(constructorType    instanceof    FunctionType    &&    ct.getConstructor()!=    null)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
193	[BUG]  [BUGGY]  FunctionType  ct  =  ct.getFunctionType();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  ct  =  ct.getFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  ct.getFunctionType();	  FunctionType    ct    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	21	None	replace
194	[BUG]  [BUGGY]  FunctionType  ct  =  ct.toFunctionType();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  ct  =  ct.toFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  ct.toFunctionType();	  FunctionType    ct    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	21	None	replace
195	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  ||  ct.isFunctionType())  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  ||  ct.isFunctionType())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunctionType()  ||  ct.isFunctionType())  {	  if(constructorType!=    null    &&    ct.isFunctionType()    ||    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	45	None	replace
196	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunction())  {  type  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isFunction())  {  type  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunction())  {  type  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    type    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	50	None	replace
197	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType())  {  type  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType())  {  type  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunctionType())  {  type  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    type    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	50	None	replace
198	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.isFunctionType())  {  type  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.isFunctionType())  {  type  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.isFunctionType())  {  type  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    type    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	50	None	replace
199	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunction())  {  ct  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isFunction())  {  ct  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunction())  {  ct  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    ct    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
200	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.isFunctionType())  {  ct  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.isFunctionType())  {  ct  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.isFunctionType())  {  ct  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    ct    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
201	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType())  {  ct  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType())  {  ct  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunctionType())  {  ct  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    ct    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
202	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.isFunction())  {  ct  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.isFunction())  {  ct  =  ct.getInstanceType();  }  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.isFunction())  {  ct  =  ct.getInstanceType();  }	  if(constructorType!=    null)    {    if(ct.isConstructor())    {    ct    =    ct.getInstanceType();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
203	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.getFunctionType()  ==  FunctionType.FUNCTION)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.getFunctionType()  ==  FunctionType.FUNCTION)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.getFunctionType()  ==  FunctionType.FUNCTION)  {	  if(ct!=    null    &&    ct.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
204	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.getConstructor()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.getConstructor()  ==  Token.FUNCTION)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.getConstructor()  ==  Token.FUNCTION)  {	  if(ct!=    null    &&    ct.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
205	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.getInstanceType()  ==  FunctionType.UNKNOWN_TYPE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.getInstanceType()  ==  FunctionType.UNKNOWN_TYPE)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.getInstanceType()  ==  FunctionType.UNKNOWN_TYPE)  {	  if(constructorType!=    null    &&    ct.getInstanceType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
206	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.getInstanceType()  ==  FunctionType.UNKNOWN)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.getInstanceType()  ==  FunctionType.UNKNOWN)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.getInstanceType()  ==  FunctionType.UNKNOWN)  {	  if(constructorType!=    null    &&    ct.getInstanceType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
207	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionPrototype()  ||  ct.isConstructor())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionPrototype()  ||  ct.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunctionPrototype()  ||  ct.isConstructor())  {	  if(constructorType!=    null    &&    ct.isFunctionPrototype())    {    	non-compiled	[CE]  ';'  expected	41	None	replace
208	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.isFunctionType()  ||!constructorType.isFunctionType())  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.isFunctionType()  ||!constructorType.isFunctionType())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.isFunctionType()  ||!constructorType.isFunctionType())  {	  if(constructorType!=    null    &&    ct.isFunctionType()    ||!constructorType.isConstructor())    {    	non-compiled	[CE]  ';'  expected	46	None	replace
209	[BUG]  [BUGGY]  JSType  constructorType  =  ct.getConstructor()!=  null?  ct.getConstructor()  :  null;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  JSType  constructorType  =  ct.getConstructor()!=  null?  ct.getConstructor()  :  null;  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	JSType  constructorType  =  ct.getConstructor()!=  null?  ct.getConstructor()  :  null;	  JSType    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	17	None	replace
210	[BUG]  [BUGGY]  JSType  constructorType  =  ct.getConstructor()  ==  null?  ct.getConstructor()  :  null;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  JSType  constructorType  =  ct.getConstructor()  ==  null?  ct.getConstructor()  :  null;  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	JSType  constructorType  =  ct.getConstructor()  ==  null?  ct.getConstructor()  :  null;	  JSType    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	17	None	replace
211	[BUG]  [BUGGY]  if(ct  ==  null  ||  ct.isFunction())  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct  ==  null  ||  ct.isFunction())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  ==  null  ||  ct.isFunction())  {	  if(ct!=    null    &&    ct.isFunction())    {    	non-compiled	[CE]  ';'  expected	42	None	replace
212	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.isFunction()  ||  ct.isConstructor())  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.isFunction()  ||  ct.isConstructor())  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.isFunction()  ||  ct.isConstructor())  {	  if(ct!=    null    &&    ct.isFunction())    {    	non-compiled	[CE]  ';'  expected	42	None	replace
213	[BUG]  [BUGGY]  FunctionType  constructorType  =  ct.toFunctionType();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  constructorType  =  ct.toFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  constructorType  =  ct.toFunctionType();	  FunctionType    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	19	None	replace
214	[BUG]  [BUGGY]  FunctionType  constructorType  =  ct.getOwnerFunctionType();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  constructorType  =  ct.getOwnerFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  constructorType  =  ct.getOwnerFunctionType();	  FunctionType    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	19	None	replace
215	[BUG]  [BUGGY]  Type  constructorType  =  ct.toFunctionType();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Type  constructorType  =  ct.toFunctionType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  constructorType  =  ct.toFunctionType();	  Type    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	33	None	replace
216	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.getInstanceType()  ==  FunctionType.FUNCTION_TYPE)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.getInstanceType()  ==  FunctionType.FUNCTION_TYPE)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.getInstanceType()  ==  FunctionType.FUNCTION_TYPE)  {	  if(ct!=    null    &&    ct.getInstanceType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
217	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.getInstanceType()  ==  FunctionType.UNKNOWN_TYPE)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(ct!=  null  &&  ct.getInstanceType()  ==  FunctionType.UNKNOWN_TYPE)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.getInstanceType()  ==  FunctionType.UNKNOWN_TYPE)  {	  if(ct!=    null    &&    ct.getInstanceType()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
218	[BUG]  [BUGGY]  FunctionType  constructorType  =  ct!=  null?  ct.getConstructor()  :  ct.getInstanceType();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  FunctionType  constructorType  =  ct!=  null?  ct.getConstructor()  :  ct.getInstanceType();  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  constructorType  =  ct!=  null?  ct.getConstructor()  :  ct.getInstanceType();	  FunctionType    constructorType    =    ct.getInstanceType();    	non-compiled	[CE]  ';'  expected	30	None	replace
219	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.getConstructor()  ==  null)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  ct.getConstructor()  ==  null)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.getConstructor()  ==  null)  {	  if(constructorType!=    null    &&    ct.getConstructor()    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
220	[BUG]  [BUGGY]  if(constructorType!=  null  &&  buildorType  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  if(constructorType!=  null  &&  buildorType  instanceof  FunctionType)  {  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  buildorType  instanceof  FunctionType)  {	  if(constructorType    ==    null    &&    constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	35	None	replace
221	[BUG]  [BUGGY]  Constructor  <?>  constructorType  =  ct.getConstructorParameterType(0);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();      [BUGGY]  Constructor  <?>  constructorType  =  ct.getConstructorParameterType(0);  [BUGGY]          ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Constructor  <?>  constructorType  =  ct.getConstructorParameterType(0);	  Constructor    <?>    constructorType    =    ct.getConstructor();    	non-compiled	[CE]  ';'  expected	32	None	replace
