bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(constructorType  ==  null  &&  ct.isConstructor())  {  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType  ==  null  &&  ct.isConstructor())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  ==  null  &&  ct.isConstructor())  {	  if(ct    ==    null    &&    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
2	[BUG]  [BUGGY]  if(ct  ==  null  &&  ct.isFunctionType())  {  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(ct  ==  null  &&  ct.isFunctionType())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  ==  null  &&  ct.isFunctionType())  {	  if(ct    ==    null    &&    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
3	[BUG]  [BUGGY]  if(ct!=  null  ||  ct.isConstructor())  {  [CE]  ';'  expected  [FE]                      ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(ct!=  null  ||  ct.isConstructor())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  ||  ct.isConstructor())  {	  if(ct    ==    null    &&    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
4	[BUG]  [BUGGY]  if(constructorType  ==  null  &&  ct.isFunctionType())  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType  ==  null  &&  ct.isFunctionType())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  ==  null  &&  ct.isFunctionType())  {	  if(constructorType!=    null    &&    ct.isFunctionType())    {    	non-compiled	[CE]  ';'  expected	8	None	replace
5	[BUG]  [BUGGY]  if(constructorType!=  null  ||  ct.isFunctionType())  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType!=  null  ||  ct.isFunctionType())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  ||  ct.isFunctionType())  {	  if(constructorType!=    null    &&    ct.isFunctionType())    {    	non-compiled	[CE]  ';'  expected	8	None	replace
6	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.getConstructor()  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType!=  null  &&  ct.getConstructor()  instanceof  FunctionType)  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.getConstructor()  instanceof  FunctionType)  {	  if(constructorType!=    null    &&    constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
7	[BUG]  [BUGGY]  if(constructorType!=  null  ||  constructorType  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType!=  null  ||  constructorType  instanceof  FunctionType)  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  ||  constructorType  instanceof  FunctionType)  {	  if(constructorType!=    null    &&    constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
8	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunction())  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType!=  null  &&  ct.isFunction())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunction())  {	  if(constructorType!=    null    &&    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	10	None	replace
9	[BUG]  [BUGGY]  if(constructorType!=  null  ||  ct.isConstructor())  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType!=  null  ||  ct.isConstructor())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  ||  ct.isConstructor())  {	  if(constructorType!=    null    &&    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	10	None	replace
10	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  ||  ct  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType  instanceof  FunctionType  ||  ct  instanceof  FunctionType)  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  ||  ct  instanceof  FunctionType)  {	  if(constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
11	[BUG]  [BUGGY]  if(ct  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(ct  instanceof  FunctionType)  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  instanceof  FunctionType)  {	  if(constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
12	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  ||  constructorType  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType  instanceof  FunctionType  ||  constructorType  instanceof  FunctionType)  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  ||  constructorType  instanceof  FunctionType)  {	  if(constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
13	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.isConstructor())  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.isConstructor())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct.isConstructor())  {	  if(constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
14	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.isFunctionType())  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.isFunctionType())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct.isFunctionType())  {	  if(constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
15	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.isInterface())  {  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.isInterface())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct.isInterface())  {	  if(constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
16	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.getInstanceType()!=  null)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.getInstanceType()!=  null)  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct.getInstanceType()!=  null)  {	  if(constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
17	[BUG]  [BUGGY]  JSType  constructorType  =  ct.getConstructor();  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  JSType  constructorType  =  ct.getConstructor();  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	JSType  constructorType  =  ct.getConstructor();	      	non-compiled	[CE]  ';'  expected	7	None	replace
18	[BUG]  [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]                      ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE);  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	type  =  getNativeType(UNKNOWN_TYPE);	      	non-compiled	[CE]  ';'  expected	7	None	replace
19	[BUG]  [BUGGY]  FunctionType  constructorType  =  ct.getConstructor();  [CE]  ';'  expected  [FE]                        ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  FunctionType  constructorType  =  ct.getConstructor();  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  constructorType  =  ct.getConstructor();	      	non-compiled	[CE]  ';'  expected	7	None	replace
20	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.toMaybeFunctionType();  [CE]  ';'  expected  [FE]                          ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  FunctionType  ct  =  constructorType.toMaybeFunctionType();  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  constructorType.toMaybeFunctionType();	      	non-compiled	[CE]  ';'  expected	7	None	replace
21	[BUG]  [BUGGY]  FunctionType  ct  =  ct.getConstructor();  [CE]  ';'  expected  [FE]                            ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  FunctionType  ct  =  ct.getConstructor();  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  ct.getConstructor();	      	non-compiled	[CE]  ';'  expected	7	None	replace
22	[BUG]  [BUGGY]  FunctionType  ct  =  ct.getInstanceType();  [CE]  ';'  expected  [FE]                              ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  FunctionType  ct  =  ct.getInstanceType();  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  ct  =  ct.getInstanceType();	      	non-compiled	[CE]  ';'  expected	7	None	replace
23	[BUG]  [BUGGY]  Type  ct  =  ct.getConstructorType();  [CE]  ';'  expected  [FE]                                ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  Type  ct  =  ct.getConstructorType();  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  ct  =  ct.getConstructorType();	      	non-compiled	[CE]  ';'  expected	7	None	replace
24	[BUG]  [BUGGY]  if(ct  ==  null  &&  ct  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(ct  ==  null  &&  ct  instanceof  FunctionType)  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  ==  null  &&  ct  instanceof  FunctionType)  {	  if(ct!=    null    &&    ct    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
25	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.getType()  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(ct!=  null  &&  ct.getType()  instanceof  FunctionType)  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.getType()  instanceof  FunctionType)  {	  if(ct!=    null    &&    ct    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
26	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(ct!=  null  &&  ct.getType()  ==  Token.FUNCTION)  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.getType()  ==  Token.FUNCTION)  {	  if(ct!=    null    &&    ct    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
27	[BUG]  [BUGGY]  if(ct!=  null  ||  ct.isFunctionType())  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(ct!=  null  ||  ct.isFunctionType())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  ||  ct.isFunctionType())  {	  if(ct!=    null    &&    ct.isFunctionType())    {    	non-compiled	[CE]  ';'  expected	3	None	replace
28	[BUG]  [BUGGY]  if(constructorType  ==  null  &&  ct  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType  ==  null  &&  ct  instanceof  FunctionType)  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  ==  null  &&  ct  instanceof  FunctionType)  {	  if(constructorType!=    null    &&    ct    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
29	[BUG]  [BUGGY]  if(constructorType!=  null  ||  ct  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType!=  null  ||  ct  instanceof  FunctionType)  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  ||  ct  instanceof  FunctionType)  {	  if(constructorType!=    null    &&    ct    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
30	[BUG]  [BUGGY]  FunctionType  constructorType  =  ct.getInstanceType();  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  FunctionType  constructorType  =  ct.getInstanceType();  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	FunctionType  constructorType  =  ct.getInstanceType();	      	non-compiled	[CE]  ';'  expected	7	None	replace
31	[BUG]  [BUGGY]  JSType  constructorType  =  ct.getInstanceType();  [CE]  ';'  expected  [FE]                      ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  JSType  constructorType  =  ct.getInstanceType();  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	JSType  constructorType  =  ct.getInstanceType();	      	non-compiled	[CE]  ';'  expected	7	None	replace
32	[BUG]  [BUGGY]  Constructor  <?>  constructorType  =  ct.getConstructor();  [CE]  ';'  expected  [FE]                        ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  Constructor  <?>  constructorType  =  ct.getConstructor();  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Constructor  <?>  constructorType  =  ct.getConstructor();	      	non-compiled	[CE]  ';'  expected	7	None	replace
33	[BUG]  [BUGGY]  Type  constructorType  =  ct.getInstanceType();  [CE]  ';'  expected  [FE]                          ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  Type  constructorType  =  ct.getInstanceType();  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	Type  constructorType  =  ct.getInstanceType();	      	non-compiled	[CE]  ';'  expected	7	None	replace
34	[BUG]  [BUGGY]  if(constructorType!=  null  &&  constructorType.isFunctionType())  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType!=  null  &&  constructorType.isFunctionType())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  constructorType.isFunctionType())  {	  if(constructorType!=    null    &&    constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
35	[BUG]  [BUGGY]  if(constructorType  ==  null  &&  constructorType  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType  ==  null  &&  constructorType  instanceof  FunctionType)  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  ==  null  &&  constructorType  instanceof  FunctionType)  {	  if(constructorType!=    null    &&    constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
36	[BUG]  [BUGGY]  if(ct  ==  null  ||  ct.isFunctionType())  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(ct  ==  null  ||  ct.isFunctionType())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  ==  null  ||  ct.isFunctionType())  {	  if(ct!=    null    &&    ct.isFunctionType())    {    	non-compiled	[CE]  ';'  expected	3	None	replace
37	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct!=  null)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct!=  null)  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct!=  null)  {	  if(constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
38	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.isFunction())  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.isFunction())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct.isFunction())  {	  if(constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
39	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.getInstanceType()  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType!=  null  &&  ct.getInstanceType()  instanceof  FunctionType)  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.getInstanceType()  instanceof  FunctionType)  {	  if(constructorType!=    null    &&    ct    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
40	[BUG]  [BUGGY]  if(ct  ==  null  ||  ct.isConstructor())  {  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(ct  ==  null  ||  ct.isConstructor())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct  ==  null  ||  ct.isConstructor())  {	  if(ct    ==    null    &&    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
41	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionPrototype())  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionPrototype())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunctionPrototype())  {	  if(constructorType!=    null    &&    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	10	None	replace
42	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.isFunction())  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(ct!=  null  &&  ct.isFunction())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.isFunction())  {	  if(constructorType!=    null    &&    ct.isConstructor())    {    	non-compiled	[CE]  ';'  expected	10	None	replace
43	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.isFunctionType()  ||  ct.isConstructor())  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(ct!=  null  &&  ct.isFunctionType()  ||  ct.isConstructor())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.isFunctionType()  ||  ct.isConstructor())  {	  if(ct!=    null    &&    ct.isFunctionType())    {    	non-compiled	[CE]  ';'  expected	3	None	replace
44	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.isFunctionType()  ||  ct.isInterface())  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(ct!=  null  &&  ct.isFunctionType()  ||  ct.isInterface())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.isFunctionType()  ||  ct.isInterface())  {	  if(ct!=    null    &&    ct.isFunctionType())    {    	non-compiled	[CE]  ';'  expected	3	None	replace
45	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  ||  ct.isConstructor())  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  ||  ct.isConstructor())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunctionType()  ||  ct.isConstructor())  {	  if(constructorType!=    null    &&    ct.isFunctionType())    {    	non-compiled	[CE]  ';'  expected	8	None	replace
46	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  ||!constructorType.isConstructor())  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  ||!constructorType.isConstructor())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunctionType()  ||!constructorType.isConstructor())  {	  if(constructorType!=    null    &&    ct.isFunctionType())    {    	non-compiled	[CE]  ';'  expected	8	None	replace
47	[BUG]  [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  ||!constructorType.isInterface())  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType!=  null  &&  ct.isFunctionType()  ||!constructorType.isInterface())  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null  &&  ct.isFunctionType()  ||!constructorType.isInterface())  {	  if(constructorType!=    null    &&    ct.isFunctionType())    {    	non-compiled	[CE]  ';'  expected	8	None	replace
48	[BUG]  [BUGGY]  if(ct!=  null  &&  ct.getInstanceType()  instanceof  FunctionType)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(ct!=  null  &&  ct.getInstanceType()  instanceof  FunctionType)  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(ct!=  null  &&  ct.getInstanceType()  instanceof  FunctionType)  {	  if(ct!=    null    &&    ct    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
49	[BUG]  [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.getConstructor()!=  null)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType  instanceof  FunctionType  &&  ct.getConstructor()!=  null)  {  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType  instanceof  FunctionType  &&  ct.getConstructor()!=  null)  {	  if(constructorType    instanceof    FunctionType)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
50	[BUG]  [BUGGY]  if(constructorType!=  null)  {  if(ct.isConstructor())  {  type  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType!=  null)  {  if(ct.isConstructor())  {  type  =  ct.getInstanceType();  }  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null)  {  if(ct.isConstructor())  {  type  =  ct.getInstanceType();  }	      	non-compiled	[CE]  ';'  expected	7	None	replace
51	[BUG]  [BUGGY]  if(constructorType!=  null)  {  if(ct.isConstructor())  {  ct  =  ct.getInstanceType();  }  [CE]  ';'  expected  [FE]                      ComparisonFailure    [CONTEXT]    if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  FunctionType  ct  =  constructorType.toMaybeFunctionType();    [BUGGY]  if(constructorType!=  null)  {  if(ct.isConstructor())  {  ct  =  ct.getInstanceType();  }  [BUGGY]        ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1047	1047	1	replace	if(constructorType!=  null)  {  if(ct.isConstructor())  {  ct  =  ct.getInstanceType();  }	      	non-compiled	[CE]  ';'  expected	7	None	replace
