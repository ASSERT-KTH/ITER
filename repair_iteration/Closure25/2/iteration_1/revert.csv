projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild()),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope.getParent()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild()+1));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegate(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(syntacticScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope()).scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(0));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild(),scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild()),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getFirstChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n,scope.getFirstChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.cloneTree(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,n.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getFunctionScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEgative(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverse(n.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverse(n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getLastChild()-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(1));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(3));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope&0xFFFF);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEw(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(functionScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getLastChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n,scope.getLastChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild()+1));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope()).createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().getNativeType(JSTypeNative.NEW_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(global));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(registry));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope&TEMPLATE_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getChildCount());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,NEW);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288n=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNeighbor(n,scope);
