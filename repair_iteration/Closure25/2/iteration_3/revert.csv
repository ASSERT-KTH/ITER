projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild()),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope.getParent()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild()+1));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegate(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(syntacticScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope()).scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(0));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild(),scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild()),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getFirstChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n,scope.getFirstChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.cloneTree(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,n.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getFunctionScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEgative(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverse(n.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverse(n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getLastChild()-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(1));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(3));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope&0xFFFF);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEw(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(functionScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getLastChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n,scope.getLastChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild()+1));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope()).createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().getNativeType(JSTypeNative.NEW_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(global));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(registry));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope&TEMPLATE_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getChildCount());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,NEW);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288n=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNeighbor(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getType()-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getParent()-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(registry,newFlowScope(n));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(registry,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(scope,newFlowScope(n));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getParent()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getParent(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,n.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getParent(),null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverse(n,scope.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverse(n,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverse(n,n.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverse(n.getLastChild(),scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.cloneTree()+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope+2);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNeighbor(n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNeighbor(n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEighbor(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNeighbor(n,scope.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNeighbor(n,scope.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNeighbor(n,NEW);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n.getLastChild(),newFlowScope(n.getLastChild()),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild()+1),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.cloneTree(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,n.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getFunctionScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getType(),castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getScopeType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getType(),registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEw(n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEw(n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEw(n,scope.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEw(n,scope.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEw(n,scope.getScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,n.cloneTree(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n.getFirstChild(),scope.cloneTree(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.copyCurrentScope(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n.cloneTree(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,type.cloneTree(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.cloneTree(),this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope()).scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getNext(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild(),scope),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getChildCount(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope,scope.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getType(),scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getType(),castType));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(scope,newFlowScope(n.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope,registry.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getType()),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getFunctionScope(),syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getFunctionScope(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,n.getFunctionScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getSyntacticScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getFunctionScope(),operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getFirstChild(),null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(functionScope,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(functionScope),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scriptScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(global,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(global),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(compiler));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),castType,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(scope,newFlowScope(n),castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),castType,true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),castType,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),castType,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getScopeType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getType(),castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getThreshold());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getLastChild(),n.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild(),scope.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope.getType()),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope.getType(),castType));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope.getReturnType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),scope).createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope).createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),scope.createChildFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),scope.createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().cloneTree()).createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),scope),createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getFirstChild()),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n.getFirstChild(),newFlowScope(n.getFirstChild()),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.cloneTree(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,n.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getFunctionScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),this,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),scope,this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),status);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().getNativeType(UNKNOWN_TYPE),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),scope.getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().getNativeType(NOT_OBJECT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().getNativeType(TEMPLATE_TYPE_NOT_OBJECT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().getNativeType(UNKNOWN_TYPE,castType));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().getNativeType(CONSTRUCTOR_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n.getFirstChild(),NEW);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope,registry.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope,n.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope,registry.scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope,map.scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope,map.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope.getLastChild()+1));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope.getFirstChild()+1));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild()+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope&FUNCTION_LITERAL_UNDEFINED_THIS);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope&TEMPLATE_TYPE_NOT_OBJECT_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope&FUNCTION_TYPE_NOT_OBJECT_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope&TEMPLATE_TYPE_OF_THIS);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope&TEMPLATE_TYPE_OF_THIS_EXPECTED);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getLastChild(),n));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n.getLastChild(),newFlowScope(n.getLastChild(),scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope).scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getFirstChild(),scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getFirstChild()),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope,n.getFirstChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(registry.getFirstChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),functionScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEgative(n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEgative(n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEgative(n,scope.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEgative(n,scope.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEgative(n,scope.getScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,n.getFirstChild().cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,n.getLastChild().cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,n.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288n=n.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288n=scope.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverse(n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288ncen=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288Noden=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),script);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(2));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(3),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(4));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegate(n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEgate(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegate(n,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegate(n,scope.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegate(n,scope.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getParent(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getNext());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,n.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getParent(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getNext());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,n.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.cloneTree(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getFunctionScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,n.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getLastChild(),null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getLastChild(),this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scopeScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scopeFunctionScope.scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scopeFactory.scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(syntacticScope,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(syntacticScope),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(syntacticScope,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(scope,newFlowScope(syntacticScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(0),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),n.getNext()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope.getNext()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild(),scope.getParent()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getLastChild(),n.getParent()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),n.getParent()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getLastChild(),n.getNext()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverse(n,newFlowScope(n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288Scopescope=traverseNew(n,newFlowScope(n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n.getFirstChild(),null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,null,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,typeFunctionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getTree(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,n.getTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getTree(),null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope,functionScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope,castType));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope,scope),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope,script));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope,status));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope+0xFFFF);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope&1xFFFF);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope&0xFFFFL);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope&0xFFFFF);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().getNativeType(JSTypeNative.NEW_TYPE),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().getNativeType(JSTypeNative.NEW_TYPE,castType));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),scope.getNativeType(JSTypeNative.NEW_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getNativeType(JSTypeNative.NEW_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().getNativeType(JSTypeNative.NOT_OBJECT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newJSTypeNative().getNativeType(JSTypeNative.NEW_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getLastChild(),null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getLastChild(),this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getLastChild(),true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getParent(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getNext());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,n.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getScope(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,n.getScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getScope(),syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getScope(),null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getScope(),true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n.getFirstChild(),newFlowScope()).scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope()),scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,newFlowScope(scope),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,newFlowScope(scope,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,newFlowScope(syntacticScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,newFlowScope(scope.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,newFlowScope(scope),this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,newFlowScope(scope),castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n.getNext(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,n.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegate(n.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getLastChild()),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getLastChild(),scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(registry.getLastChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverse(n,scope.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverse(n,scope.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverse(scope.getFirstChild(),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverse(n.getFirstChild(),scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(1),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getFirstChild(),null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getFirstChild(),n));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild(),scope),syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(syntacticScope.getFirstChild(),scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope,n.getLastChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n,n.getLastChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n,scope.getLastChild()),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild(),scope.getFirstChild()+1));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild(),scope.getLastChild()+1));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild()).scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n,scope.getFirstChild()),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n,scope.getNext()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n,scope.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n,scope.getLeastChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getLastChild(),null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n.getFirstChild(),scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,newFlowScope(scope),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,newFlowScope(scope,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,newFlowScope(syntacticScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,newFlowScope(scope),castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(scope,newFlowScope(n));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,newFlowScope(scope.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getScopeType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getType(),castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getChildCount());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getChildCount()-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,n.getChildCount());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getChildCount()-2);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n.getFirstChild(),scope.getChildCount());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getChildCount()+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getType(),castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getScopeType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getChildCount());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,n.getLastChild()-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n.getLastChild(),scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getFirstChild()-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n.getLastChild(),scope.getLastChild()-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n.getFirstChild(),newFlowScope(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),scope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),scope.scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),scope.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,newFlowScope(scope),syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,newFlowScope(scope),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEgative(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n,scope.getFirstChild(),scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getParent(),null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope-2);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNeighbor(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNeighbor(n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,newFlowScope<Node>());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild(),scope.getLastChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n,this.scope.getLastChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(this,syntacticScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(syntacticScope.getFirstChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n,scope.getChildCount()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope,n.cloneTree()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.cloneTree()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),castType,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope&0xFFF);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope-0xFFFF);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild(),scope+1));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),registry.getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),functionScope.getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(functionScope),syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,typeFunctionScope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope),syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),this));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.cloneTree(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,typeFunctionScope.cloneTree(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.cloneTree(),null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getLastChild(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,typeFunctionScope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope.getFirstChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope.getParent()),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope.get1));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,null&&scope.getType()==Token.NEW);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getFirstChild(),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverse(n.getLastChild(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverse(n.getLastChild(),this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,typeFunctionScope.scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scopeFunctionsMap.scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(functionScope),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(syntacticScope),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegate(n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegate(n,NEW);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegate(n,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(this,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,type.getLastChild()-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEw(n,scope&TEMPLATE_TYPE_OF_THIS);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEw(n,scope&TEMPLATE_TYPE_NOT_NEW);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEw(n,scope&TEMPLATE_TYPE_OF_NEW);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEw(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(8));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n.getLastChild(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEgative(n,scope&TEMPLATE_TYPE_NOT_NEW);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEgative(n,scope&TEMPLATE_TYPE_OF_THIS);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEgative(n,scope&TEMPLATE_TYPE_OF_NEW);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getLastChild()),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,newFlowScope(scope),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,newFlowScope(functionScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope&FUNCTION_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope&FUNCTION_LITERAL);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope&FUNCTION_NOT_OBJECT_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope&FUNCTION_TYPE_OF_THIS);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),typeFunctionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),this.scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),registry.getNativeType(JSTypeNative.NEW_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n.getFirstChild(),newFlowScope(n.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traversenew(n,newFlowScope(n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope+3);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(cloneTree(n,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope,taskScope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope,output));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope,this));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope,syntacticScope.getFunctionScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,functionScope.getFunctionScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getChildCount());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(syntacticScope.getLastChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scopeFactory.getScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope,scope.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),scope).scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),this).scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope,functionScope.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(registry.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope,name.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope,status.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope*1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n,typeFactory.getLastChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,newFlowScope(scope.getLastChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,this.scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.createScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope,n.getScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNode(n.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope),true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().createChildFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope)&TEMPLATE_TYPE_OF_THIS_EXPECTED;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),operationScope.getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().getNativeType(NOT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traversenew(n,newFlowScope(n.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.restrictByNotNullOrUndefined());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getFirstChild(),scope.getFirstChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope.restrictByNotNullOrUndefined());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),castType,this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(register.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope,n.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),this.scope.getParent()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(6));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,this.scope.getLastChild()-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,n.getFirstChild()-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEgative(n,scope)&&n.getFirstChild()==n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEgative(n,scope)&&n.getFirstChild()!=n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope.getJSType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNeighbor(n,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().getScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope.getChildCount()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),this,castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(),scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope*1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(scope),currentScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(this.functionScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.removeFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,newFlowScope(global));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,newFlowScope(scope),this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,newFlowScope(scope.getLastChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,this.scope.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope,registry.getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getValue()-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getValue());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(clone));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverse(n,newFlowScope(n.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNext(n,scope,registry.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().getNativeType(JSTypeNative.NOT_NEW_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope().getNativeType(JSTypeNative.NO_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288n=n,scope.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288n=n.removeFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope()),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope())/.scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEw(n,scope)&&n.getFirstChild().getType()==Token.NEW;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEw(n,scope)&&n.getFirstChild().getType()!=Token.NEW;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEw(n,scope)&&n.getFirstChild()!=n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEw(n,scope)&&n.getFirstChild()==n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,newNode(Token.NEW));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,newFlowScope(n.getFirstChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope.getCurrentTree(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNEW(n,scope&0xFFFF)+1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,newFlowScope(n.getLastChild(),scope.getLastChild()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getInstanceType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,type.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNegative(n,scope.getFirstChild(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope,taskScope.getFunctionScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope,registry.getFunctionScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java288scope=traverseNew(n,scope,n.getFunctionScope());
