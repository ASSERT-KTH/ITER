projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,ct);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);scope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);scope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=n.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.next();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=n.getType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getInstanceType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);JSTypefunctionScope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);ScopefunctionScope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);FunctionTypefunctionScope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);functionScope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);ScopefunctionScope=traverse(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);JSTypefunctionScope=traverse(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,scope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg.next());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(ct,arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n.getJSType(),arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(g,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n.getJSType(),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functionScope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(syntacticScope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,ct);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,constructorType,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,type,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,type,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,constructor,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,type,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);FunctionScopefunctionScope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);FunctionScopefunctionScope=traverse(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);FunctionTypefunctionScope=n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,context,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,output);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,output);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(NO_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(functionScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functionScope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functionScope,arg,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,arg,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,n,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(n.getJSType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(type));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(structor,arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(FUNCTION_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(config,arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(structor,arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructorType,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(structor,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,compiler);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);if(functionScope!=null){scope=traverse(arg,functionScope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);scope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);NodefunctionScope=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n);NodefunctionScope=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,scope);NodefunctionScope=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,scope);NodefunctionScope=n.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060NodefunctionScope=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,functionScope);NodefunctionScope=arg.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060NodefunctionScope=arg.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);NodefunctionScope=n.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(functionScope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(n,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(n,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(scope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,functionScope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060Scopescope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.getFirstChild().getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.cloneTree();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);scope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);scope=traverse(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);scope=traverse(arg,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,functionScope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functionScope,n,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);if(functionScope!=null){scope=traverse(arg,functionScope);}scope=traverse(arg,functionScope);if(functionScope!=null){scope=traverse(arg,functionScope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);if(functionScope!=null){scope=traverse(arg,functionScope);}functionScope=traverse(arg,functionScope);if(functionScope!=null){scope=traverse(arg,functionScope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);if(functionScope!=null){scope=traverse(arg,functionScope);}scope=traverse(arg,functionScope);if(functionScope==null){scope=traverse(arg,functionScope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);if(functionScope!=null){scope=traverse(arg,functionScope);}NodefunctionScope=arg.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);if(functionScope!=null){scope=traverse(arg,functionScope);}JSTypefunctionScope=n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);if(functionScope!=null){scope=traverse(arg,functionScope);}functionScope=traverse(arg,functionScope);if(functionScope==null){scope=traverse(arg,functionScope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);if(functionScope!=null){scope=traverse(arg,functionScope);}scope=traverse(arg,functionScope);if(functionScope>=null){scope=traverse(arg,functionScope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);if(functionScope!=null){scope=traverse(arg,functionScope);}FunctionTypefunctionScope=arg.getFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060Scopescope=traverse(arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060Statestate=n.getState();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg.getJSType(),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,n.getJSType(),arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,constructor.getJSType(),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n.getJSType(),constructor,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n.getJSType(),arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg.getNext());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg.getString());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n.getJSType(),scope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n.getJSType(),scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg.getJSType(),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,n,arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg,constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg,type,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,type,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg,constructorType,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg,null,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg,type,context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(ct.getInstanceType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060FunctionTypefunctionScope=traverse(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);FunctionTypefunctionScope=traverse(scope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,functionScope);FunctionTypefunctionScope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);FunctionTypefunctionScope=traverse(functionScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060FunctionTypefunctionScope=traverse(arg,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);FunctionTypefunctionScope=traverse(functionScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060FunctionTypefunctionScope=traverse(scope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(constructorType);n.setJSType(constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(constructorType);for(Nodearg=constructor.getNext();arg!=null;arg.isConstructor()){n.setJSType(constructorType);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(constructorType);for(Nodearg=constructor.getNext();arg!=null;arg.getNext()){n.setJSType(constructorType);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(constructorType);for(Nodearg=constructor.getNext();arg!=null;arg.hasNext()){n.setJSType(constructorType);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(constructorType);for(Nodearg=constructor.getNext();arg!=null;arg<arg.getNext()){n.setJSType(constructorType);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(constructorType);for(Nodearg=constructor.getNext();arg!=null;arg.isConstructor()){type=arg.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(constructorType);for(Nodearg=constructor.getNext();arg!=null;arg.hasNext()){scope=n.getJSType(constructorType);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(constructorType);if(constructorType!=null){n.setJSType(constructorType);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,constructor,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()!=Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.NAME||arg.getType()!=Token.FUNCTION){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}else{thrownewIllegalArgumentException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()!=Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}else{thrownewIllegalArgumentException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());n.setJSType(arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());for(Nodearg=constructor.getNext();arg!=null;arg.isConstructor()){n.setJSType(arg.getJSType());}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());for(Nodearg=constructor.getNext();arg!=null;arg.getNext()){n.setJSType(arg.getJSType());}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());for(Nodearg=constructor.getNext();arg!=null;arg.hasNext()){n.setJSType(arg.getJSType());}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());for(Nodearg=constructor.getNext();arg!=null;arg<arg.getNext()){n.setJSType(arg.getJSType());}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());for(Nodearg=constructor.getNext();arg!=null;arg.next()){n.setJSType(arg.getJSType());}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());Nodearg=constructor.getNext();n.setJSType(arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());Nodearg=constructor.getFirstChild();n.setJSType(arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,constructorType,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,constructorType,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(g,constructorType,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructorType,n,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,syntacticScope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,syntacticScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functionScope,arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(syntacticScope,arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope,n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}scope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}Scopescope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}scope=traverse(arg,null);if(scope==null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,type,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,type.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg,type,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,type.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,scope,arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n,arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n,type,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n,arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,n,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,this.functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,state.scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,type,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,constructor,arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,type,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,n,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,constructor,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,type,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(structor,n,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg.n,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,node.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,type.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);functionScope=traverse(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);functionScope=traverse(arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);functionScope=traverse(arg,trueScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,scope);functionScope=traverse(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);functionScope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);functionScope=traverse(arg,falseScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg,type,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,type,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,type,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,type,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,type,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(scope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(ct,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,scope);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,constructorType);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,ct);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,type);n.setJSType(functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(TYPE_NOT_OBJECT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(TEMPLATE_TYPE_NOT_OBJECT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(TEMPLATE_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(TEMPLATE_TYPE_OF_THIS));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(OPTIONAL_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,functionScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,constructor,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(compiler,arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060JSTypefunctionScope=traverse(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060JSTypefunctionScope=traverse(scope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060JSTypefunctionScope=traverse(arg,scope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060JSTypefunctionScope=traverse(arg,scope.functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060JSTypefunctionScope=traverse(arg,scope.scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,newFlowScope(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,type,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,null,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,newFlowScope(arg));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(scope,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(scope,type));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(scope,functionScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(scope,output));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,constructor,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,functionScope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,syntacticScope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,syntacticScope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,syntacticScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,constructorType,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,constructor,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg,constructor,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,constructor,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,constructor,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}scope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}scope=traverse(arg,null);if(arg.getType()==Token.GETPROP){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(arg.getType()==Token.GETPROP){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}scope=traverse(arg,null);if(arg.getType()==Token.FOR){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,registry);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,registry.getNativeType(UNKNOWN_TYPE));n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,registry.getNativeType(JSTypeNative.UNKNOWN_TYPE));n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,context);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg);n.removeChild(arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg);Nodearg=constructor.getNext();n.removeChild(arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg);Nodearg=constructor.getFirstChild();n.removeChild(arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg);Nodearg=constructor.getLastChild();n.removeChild(arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg);NodeUtil.removeChild(arg);n.removeChild(arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg);Nodearg=arg.getNext();n.removeChild(arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg);NodeUtil.removeChild(arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg);NodeUtil.removeChild(arg,scope);n.removeChild(arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.nextToken();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)n.next();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg,n.next();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.next(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,constructor,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(g,constructor,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060FunctionScopefunctionScope=traverse(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);FunctionScopefunctionScope=traverse(scope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);FunctionScopefunctionScope=traverse(scope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060functionScope=traverse(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060FunctionScopefunctionScope=traverse(arg,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060FunctionScopefunctionScope=traverse(scope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n,arg.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n,arg.type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n,arg.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}scope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg!=null){scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg!=null){scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}scope=traverse(arg,null);if(arg==null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.NAME){scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg.getNext(),newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg.next(),newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,newFlowScope(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,newFlowScope(arg.getType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(UNKNOWN_TYPE),arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(UNKNOWN_TYPE,arg));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(UNKNOWN_TYPE)+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,functionScope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functionScope,n,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(syntacticScope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(g,arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,ct,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(n.getJSType(),type));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,newFlowScope(arg.getJSType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(scope.getJSType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(constructor.getJSType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,newFlowScope(arg.getJSType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(type.getJSType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(n.getJSType()+1));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);JSTypefunctionScope=traverse(scope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);JSTypefunctionScope=traverse(functionScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060JSTypefunctionScope=traverse(arg,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg);JSTypefunctionScope=traverse(scope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,type,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,type,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);scope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,constructor,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,n,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,n,constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,constructor,n,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(constructor,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,constructor,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(n,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,nScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=arg.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=n.getJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=ct.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=constructor.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=type.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=n.getJSType()+1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}Scopescope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}scope=traverse(arg,null);if(scope==null){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}if(scope!=null){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}if(arg!=null){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);ScopefunctionScope=traverse(arg,functionScope);scope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);functionScope=traverse(arg,functionScope);scope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);JSTypefunctionScope=traverse(arg,functionScope);scope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);NodefunctionScope=arg.getNext();scope=traverse(functionScope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);NodefunctionScope=arg.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}scope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}scope=traverse(arg,null);if(arg.getType()==Token.NAME||arg.getType()!=Token.FUNCTION){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}if(arg.getType()==Token.NAME){scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}if(arg.getType()==Token.NAME){scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}Scopescope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}scope=traverse(arg,null);if(arg.getType()==Token.FOR||arg.getType()!=Token.NAME){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructorType,arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,syntacticScope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(syntacticScope,n,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(structor,syntacticScope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(g,syntacticScope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(syntacticScope,arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functionScope,syntacticScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functionScope,n,arg,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.clonePath();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.cloneBinary();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.clone(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,n.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,constructorType,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,type,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(g,n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,null,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,null,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,null,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,null,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,registry,null,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope,output);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,syntaxNode);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,status);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,functionScope,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,functionScope,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functionScope,arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,type,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,functionScope,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,ct.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);ScopefunctionScope=traverse(scope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);ScopefunctionScope=traverse(functionScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=arg.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=arg.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=n.getLastChild()+1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=n.getLastChild().getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=ct.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functionScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functacticScope,n,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,functionScope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg.getJSType(),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n.getJSType(),arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n.getJSType(),type,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope.getJSType(),arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n.getJSType(),constructor,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}scope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}Scopescope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}scope=traverse(arg,null);if(arg.getType()==Token.GETPROP){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(arg.getType()==Token.GETPROP){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getString());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=arg.getType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=n.getInstanceType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=n.getScopeType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=n.getScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=constructor.getType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,null,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,n,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,null,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,null,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,null,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n,arg,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,syntacticScope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,functionScope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,syntacticScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,syntacticScope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,type,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,functionScope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,functionScope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functionScope,n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,functionScope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,functionScope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(type,functionScope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,type,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,newFlowScope(),arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(),functionScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,newFlowScope(),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functionScope,newFlowScope(),arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(),scope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(),functionScope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n.getJSType(),type,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n.getJSType(),constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){n.setJSType(type);}else{thrownewIllegalArgumentException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){n.setJSType(type);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){n.setJSType(type);}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);if(arg.getType()==Token.FUNCTION){n.setJSType(type);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){n.setJSType(type);}else{scope.putProp(Node.SOURCENAME_PROP,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){n.setJSType(type);}else{traverseNew=true;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){n.setJSType(type);}else{scope.putProp(Node.SOURCENAME_PROP,type);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(true));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(false,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(false),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,newFlowScope(false));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}scope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}Scopescope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,type,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,null,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,null,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type.getInstanceType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg,scope.getInstanceType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type,arg.getInstanceType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(constructor.getInstanceType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(scope.getInstanceType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(structor.getInstanceType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,syntacticScope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,syntacticScope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,constructorType,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,constructorType,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,constructorType,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,constructorType,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,n.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,n,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,type,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,n,type.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,syntacticScope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,syntacticScope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functionScope,arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,syntacticScope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functionScope,syntacticScope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(type,syntacticScope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,null,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,type,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,null,arg.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(n,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,n.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,n,constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,n.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,n.getJSType(),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}scope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}Scopescope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}scope=traverse(arg,null);if(scope==null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.NAME){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);scope=traverse(arg,null);scope=traverse(arg,null);n.setJSType(type);scope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);scope=traverse(arg,null);scope=traverse(arg,null);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);n.setJSType(type);scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);scope=traverse(arg,null);n.setJSType(type);scope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);n.setJSType(type);scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);scope=traverse(arg,null);type=traverse(arg,null);n.setJSType(type);scope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);scope=traverse(arg,functionScope);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);JSTypefunctionScope=traverse(arg,functionScope);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);ScopefunctionScope=traverse(arg,functionScope);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);functionScope=traverse(arg,functionScope);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);FunctionTypefunctionScope=n.getFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);NodefunctionScope=arg.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);NodefunctionScope=arg.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,syntacticScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(scope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(functionScope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(n,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,syntacticScope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,syntacticScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(UNKNOWN_TYPE));n.setJSType(getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(UNKNOWN_TYPE));Nodearg=constructor.getNext();n.setJSType(getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(UNKNOWN_TYPE));NodeUtil.setJSType(getNativeType(UNKNOWN_TYPE));n.setJSType(getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(UNKNOWN_TYPE));NodeUtil.setJSType(getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(UNKNOWN_TYPE));((UnknownType)arg).setJSType(getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(UNKNOWN_TYPE));n.setJSType(getNativeType(UNKNOWN_TYPE));}elseif(arg.getType()==Token.FUNCTION){returnscope;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,nameNode);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,scope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,nameNode);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,null,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,null,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,null,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,null,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(syntacticScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,newFlowScope(functionScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(functionScope,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,newFlowScope(functionScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(functionScope,type));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(compiler,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,compiler);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,compiler);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,compiler,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.getNext(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.getNext(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);scope=traverse(arg,null);scope=traverse(arg,null);scope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);scope=traverse(arg,null);}else{thrownewIllegalArgumentException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);scope=traverse(arg,null);Scopescope=traverse(arg,null);scope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060ScopefunctionScope=traverse(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060ScopefunctionScope=traverse(scope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060ScopefunctionScope=traverse(arg,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060ScopefunctionScope=traverse(arg,scope.scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060ScopefunctionScope=traverse(arg,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);n.setJSType(type);scope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);scope=traverse(arg,functionScope);ScopefunctionScope=traverse(arg,functionScope);n.setJSType(type);scope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);scope=traverse(arg,functionScope);n.setJSType(type);scope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);scope=traverse(arg,functionScope);ScopefunctionScope=traverse(arg,functionScope);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);n.setJSType(type);type=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n.next());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,n.next());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,scope.next());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg.next(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg.next());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg.next(),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg.getNext());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(),scope,syntax);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(),scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(),scope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(),scope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,scope);scope=traverse(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,scope);Scopen=traverse(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,scope);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,scope);n.setJSType(type);scope=traverse(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,scope);Scopescope=traverse(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,scope);n=traverse(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,scope);n.setJSType(type);scope=traverse(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,n,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,null,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,newFlowScope(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,type,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg.getNext(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg.next,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg.next(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);scope=traverse(arg,null);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);Scopescope=traverse(arg,null);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);Scopearg=traverse(arg,null);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);traverse(arg,null);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);Nodearg=constructor.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);Nodearg=constructor.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(g,arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,structor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);NodefunctionScope=n.getFirstChild();scope=traverse(arg,functionScope);NodefunctionScope=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);NodefunctionScope=n.getFirstChild();scope=traverse(arg,functionScope);Noden=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);NodefunctionScope=n.getFirstChild();NodefunctionScope=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);NodefunctionScope=n.getFirstChild();Scopescope=traverse(arg,functionScope);NodefunctionScope=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);NodefunctionScope=n.getFirstChild();ScopefunctionScope=traverse(arg,functionScope);NodefunctionScope=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);NodefunctionScope=n.getFirstChild();ScopefunctionScope=traverse(arg,functionScope);Noden=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);NodefunctionScope=n.getFirstChild();FunctionTypefunctionScope=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);NodefunctionScope=n.getFirstChild();NodefunctionScope=n.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,newScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,newScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n.newScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n,arg.getNext());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg.getNext(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg.node,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(n,scope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg.next,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseScope(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,constructor,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,constructor,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(STRING_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(OBJECT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);FunctionScopefunctionScope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,functionScope);FunctionScopefunctionScope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,scope);FunctionScopefunctionScope=traverse(scope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,scope);FunctionScopefunctionScope=traverse(functionScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);FunctionScopefunctionScope=traverse(functionScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}Scopescope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}scope=traverse(arg,null);if(scope==null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(constructorType));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(compiler,type));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(type,scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,newFlowScope(type));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,type,constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getFirstChild().getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType()+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getNext());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType()||arg.getJSType()!=null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060FunctionTypefunctionScope=n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n);FunctionTypefunctionScope=n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,functionScope);FunctionTypefunctionScope=arg.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg);FunctionTypefunctionScope=n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,scope);FunctionTypefunctionScope=n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,functionScope);FunctionTypefunctionScope=n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,scope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,scope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,scope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060Statestate=arg.getState();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,context,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,type,constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,constructorType,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,n,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.removeFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.ext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=travers
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntaxScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);ScopefunctionScope=traverse(functionScope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);ScopefunctionScope=traverse(functionScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}if(scope!=null){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}if(arg!=null){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}if(scope!=null){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg);NodeTraversal.traverse(compiler,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg);Nodearg=constructor.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg);NodeTraversal.traverse(compiler,n,this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n,constructor,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.NAME){scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.STRING){scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.NAME){scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.NAME){scope=traverse(arg,null);if(arg.getType()==Token.GETPROP){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.GETPROP){scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg.getString(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNodeForType(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg.next(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}if(arg!=null){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}if(scope!=null){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}scope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(false),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);NodefunctionScope=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,type);NodefunctionScope=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);scope=traverse(arg,null);scope=traverse(arg,null);n.setJSType(type);type=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,scope);Noden=arg.getNext();scope=traverse(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,scope);n.setJSType(constructorType);scope=traverse(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,scope);n.setJSType(constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(syntacticScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);FunctionTypefunctionScope=n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg==null?null:arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg!=null?null:arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,scope,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=constructor.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=functionScope.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);FunctionScopefunctionScope=traverse(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.toString());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getInitialValue());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()!=Token.NAME||arg.getType()!=Token.FUNCTION){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverseFunction(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.NAME){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);n.setJSType(constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,constructor);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=functionScope.getType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=type.getType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);FunctionTypefunctionScope=n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);FunctionScopefunctionScope=traverse(functionScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060FunctionScopefunctionScope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(ARRAY_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(),syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(),functionScope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(),functionScope,output);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(),functionScope,syntax);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,n,arg,type.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,n,type,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}if(scope!=null){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}if(arg!=null){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}if(scope!=null){scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,nu
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,n,constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,scope,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);((FunctionType)arg).setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);n.setJSType(constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);n.setJSType(type,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);n.setJSType(arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);n.setJSType(value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(scope),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(scope),syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope,type,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope,functionScope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,constructor.next());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,constructor.next());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,compiler.next());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,context.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(constructorType);if(constructorType!=null){n.setJSType(constructorType);}else{thrownewIllegalArgumentException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(constructorType);if(constructorType!=null){n.setJSType(constructorType);}else{compiler.reportCodeChange();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(constructorType);if(constructorType!=null){n.setJSType(constructorType);}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(constructorType);if(constructorType!=null){n.setJSType(constructorType);}else{traverseNew=true;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(constructorType);if(constructorType!=null){n.setJSType(constructorType);}else{returnscope;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(constructorType);if(constructorType!=null){n.setJSType(constructorType);}else{traverseNew=false;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n,arg.toString());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg,type,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg,type,constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg,type.getInstanceType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,constructor.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,constructorType,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,n,type.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,constructorType.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,type,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,compiler,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,type,compiler);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg.getFirstChild(),newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,newFlowScope(arg));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);JSTypefunctionScope=traverse(scope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(newScope,functionScope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,registry.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,null,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,constructorType,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(g2,constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(g,constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,compiler.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,newScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);if(functionScope!=null){scope=traverse(arg,functionScope);}FunctionTypefunctionScope=n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);if(functionScope!=null){scope=traverse(arg,functionScope);}FunctionTypefunctionScope=n.getFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);if(functionScope!=null){scope=traverse(arg,functionScope);}FunctionScopefunctionScope=n.getFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);if(functionScope!=null){scope=traverse(arg,functionScope);}FunctionTypefunctionScope=(FunctionType)arg.getConstructor();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg!=null){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg!=null){scope=traverse(arg,null);}else{scope=traverse(n,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);JSTypefunctionScope=traverse(functionScope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060JSTypefunctionScope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);JSTypefunctionScope=traverse(functionScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,NON_GLOBAL_UNDEFINED_THIS);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,syntacticScope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,falseScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,n,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,output);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);JSTypefunctionScope=traverse(arg,functionScope);n.setJSType(functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);FunctionTypefunctionScope=constructor.getFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.NAME){scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.NEW){scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(arg.getType()==Token.GETPROP){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.NAME){scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,nu
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n.getJSType(),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION||arg.getType()==Token.GETPROP){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION||arg.getType()==Token.NAME){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.GETPROP){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(config,constructorType,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,constructorType.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);functionScope=traverse(arg,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);functionScope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(n,type));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(UNKNOWN_TYPE));((FunctionType)arg).setJSType(getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(UNKNOWN_TYPE));N.setJSType(getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(UNKNOWN_TYPE));n.setJSType(getNativeType(UNKNOWN_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(UNKNOWN_TYPE));n.setJSType(getNativeType(UNKNOWN_TYPE),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,type,constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,newFlowScope(),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,syntacticScope,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,functionScope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,functionScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=n.getJSType(arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=functionScope.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}if(scope!=null){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg!=null){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}if(scope!=null){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor.getJSType(),arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(syntacticScope,arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(syntacticScope,arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getConstructor());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);NodefunctionScope=n.getFirstChild();JSTypefunctionScope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);NodefunctionScope=n.getFirstChild();JSTypefunctionScope=traverse(arg,functionScope);NodefunctionScope=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);NodefunctionScope=n.getFirstChild();scope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);NodefunctionScope=n.getFirstChild();ScopefunctionScope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(config,constructor,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,null,constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,null,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,newFlowScope(functionScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,newFlowScope(),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);scope=traverse(arg,functionScope);JSTypefunctionScope=traverse(arg,functionScope);n.setJSType(type);scope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);scope=traverse(arg,functionScope);JSTypetype=traverse(arg,functionScope);n.setJSType(type);scope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);scope=traverse(arg,functionScope);JSTypefunctionScope=traverse(arg,functionScope);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n.getJSType(),constructorType,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n.getJSType(),type,constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.getParent();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,compiler.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functionScope,syntacticScope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,constructorType,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructorType,arg,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);scope=traverse(arg,null);scope=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);scope=traverse(arg,null);scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);scope=traverse(arg,null);}else{thrownewIllegalArgumentException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(),output);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(),operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.NAME||arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.NAME||arg.getType()==Token.GETPROP){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseChildren(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseFunction(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseWithType(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(functionScope),syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(functionScope,output));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(functionScope,falseScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null,constructorType,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,constructor.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(UNKNOWN_TYPE),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(UNKNOWN_TYPE),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.clone()?null:arg.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.clone()&&NodeUtil.mayHaveSideEffects(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(getNativeType(arg));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,syntacticScope);FunctionTypefunctionScope=traverse(functionScope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060functionScope=traverse(arg,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}if(arg.getType()==Token.NAME){scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(arg.getType()==Token.EXPR_RESULT){scope=traverse(arg,null);}else{scope=traverse(arg,nu
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}if(arg.getType()==Token.NAME){scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,nu
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}if(arg.getType()==Token.NAME){scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(newScope,syntacticScope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,constructor.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,constructorType.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n.getJSType(),functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);type=traverse(arg,null);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);n=traverse(arg,null);scope=traverse(arg,null);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);Nodearg=constructor.getNext();scope=traverse(arg,null);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);n.setJSType(constructorType);scope=traverse(arg,null);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);n=traverse(arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.EXPR_RESULT){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.GETPROP){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.NEW){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());for(Nodearg=constructor.getNext();arg!=null;arg=arg.getNext()){n.setJSType(arg.getJSType());}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());for(Nodearg=constructor.getNext();arg!=null;arg=arg.getNext()){type=arg.getJSType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());for(Nodearg=constructor.getNext();arg!=null;arg=arg.getNext()){scope=n.getJSType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());for(Nodearg=constructor.getNext();arg!=null;arg=arg.getNext()){compiler.reportCodeChange();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());for(Nodearg=constructor.getNext();arg!=null;arg=arg.getNext()){compiler.report(JSError.make(TEMPLATE_TYPE_OF_THIS_EXPECTED,type));}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());for(Nodearg=constructor.getNext();arg!=null;arg=arg.getNext()){compiler.report(JSError.make(TEMPLATE_TYPE_NOT_OBJECT_TYPE));}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());for(Nodearg=constructor.getNext();arg!=null;arg=arg.getNext()){n.setJSType(arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(functionScope.getJSType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(type,n.getJSType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.addChildToFront(arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.addChildToBack(arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.replaceChild(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.addChildToFront(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,this,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()!=Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.VAR){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()!=Token.FUNCTION){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,input);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,statusFunctionsMap);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(config,n.getJSType(),arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(structor,n.getJSType(),arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg.getString(),newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);JSTypetype=traverse(arg,functionScope);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);Scopescope=traverse(arg,functionScope);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);NodefunctionScope=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);NodefunctionScope=n.getParent();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);FunctionTypefunctionScope=n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(g2,n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,type,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=n.getParent();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,false);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);if(scope!=null){scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);if(scope!=null){scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);}else{scope=traverse(arg,functionScope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);if(scope!=null){scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);}else{returnscope;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);if(scope!=null){scope=traverse(arg,functionScope);scope=traverse(arg,functionScope);}else{scope=escape(arg,functionScope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(structor,arg,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()!=Token.NAME){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.STRING){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(structor,type,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.EXPR_RESULT){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.GETPROP){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.STRING){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,n,arg.getModule());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,scope,compiler);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(g2,arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(config,arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.GETPROP){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION||arg.getType()==Token.NAME){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.STRING){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg.getJSType(),constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}if(arg.getType()==Token.GETPROP){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{scope=traverse(arg,null);}}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);scope=traverse(arg,null);if(arg.getType()!=Token.FUNCTION){scope=traverse(arg,null);scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverseFunction(arg,null);scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);scope=traverse(arg,null);}else{returnscope;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}if(arg.getType()!=Token.FUNCTION){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(structor,arg,syntacticScope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);for(Nodearg=constructor.getFirstChild();arg!=null;arg.hasNext()){n.setJSType(type);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);for(Nodearg=constructor.getFirstChild();arg!=null;arg.hasNext()){Nodetype=arg.getNext();if(type!=null){type=type.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);for(Nodearg=constructor.getNext();arg!=null;arg.hasNext()){n.setJSType(type);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);for(Nodearg=constructor.getFirstChild();arg!=null;arg.isNext()){n.setJSType(type);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);for(Nodearg=constructor.getFirstChild();arg!=null;arg.hasNext()){Nodetype=arg.getNext();if(type!=null){type=type.getJSType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);for(Nodearg=constructor.getFirstChild();arg!=null;arg.hasNext()){Nodetype=arg.getNext();n.setJSType(type);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(type);for(Nodearg=constructor.getFirstChild();arg!=null;arg.hasNext()){Nodetype=arg.getNext();if(type!=null){thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,arg,this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,this,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,scope,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());if(arg!=null){n.setJSType(arg.getJSType());}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());if(arg!=null){n.setJSType(arg.getJSType());}else{thrownewIllegalArgumentException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());if(arg!=null){n.setJSType(arg.getJSType());}else{traverseNew=true;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());if(arg!=null){n.setJSType(arg.getJSType());}else{returnscope;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());if(arg!=null){n.setJSType(arg.getJSType());}else{traverseNew(scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType());if(arg!=null){n.setJSType(arg.getJSType());}else{traverseNew=false;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(compiler.getJSType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(structor.getJSType()));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg,compiler.getConstructorSupplier().next();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg,compiler.getConstructor().next();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(scope),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(scope,compiler));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()!=Token.FUNCTION){scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()!=Token.NAME){scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg!=null){scope=traverse(arg,null);}else{traverse(arg,null);}n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.STRING){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.GETPROP){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg,constructorType,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);if(functionScope!=null){scope=traverse(arg,functionScope);}NodefunctionScope=arg.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);if(functionScope!=null){scope=traverse(arg,functionScope);}JSTypefunctionScope=arg.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);if(functionScope!=null){scope=traverse(arg,functionScope);}JSTypefunctionScope=n.getJSType(arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}if(arg.getType()!=Token.FUNCTION){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()!=Token.FUNCTION){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,state);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,parent);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n,newFlowScope(type));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(false,type));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()!=Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.VAR){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=(Node)arg.getProp(Node.SOURCENAME_PROP);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg,syntacticScope,compiler);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(g2,arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}if(arg.getType()!=Token.FUNCTION){scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}if(scope!=null){scope=traverse(arg,null);}else{thrownewIllegalStateException("");}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(structor,n.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(type,n.getJSType(),arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(registry,arg,n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,arg.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,arg.next());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(structor,n.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,arg.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,n.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,arg,null,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,n,null,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,null,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,baseUri);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,null,constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);FunctionScopefunctionScope=traverse(scope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);FunctionScopefunctionScope=traverse(scope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseFunctionScope(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newFlowScope(),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,n,type.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,n,context.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope-=(Node)arg.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(structor,arg,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,scope);Noden=arg.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(arg.getType()==Token.FOR){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}if(arg.getType()==Token.FUNCTION){scope=traverse(arg,null);if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,null);}}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(structor,arg,syntacticScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functionScope,n);FunctionTypefunctionScope=n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);n.setJSType(type);n.setJSType(type);scope=traverse(arg,null);n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope-=arg.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=arg,n.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.NAME){scope=traverse(arg,null);if(arg.getType()==Token.VAR){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,null);if(arg.getType()==Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}if(arg.getType()==Token.NAME){scope=traverse(arg,null);if(arg.getType()==Token.ASSIGN){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(config,arg,constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.detachChildren();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(structor,n,arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060JSTypefunctionScope=traverse(arg,scope.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060JSTypefunctionScope=traverse(arg,scope.getFunctionScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);JSTypefunctionScope=traverse(scope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(structor,n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(n,functionScope,arg,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(syntacticScope,arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg);NodeTraversal.traverse(compiler,arg,newRuntimeException(""));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.removeChild(arg);NodeTraversal.traverse(compiler,arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION){scope=traverse(arg,functionScope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION){scope=traverse(arg,functionScope);}else{scope=traverse(arg,functionScope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION||arg.getType()!=Token.NAME){scope=traverse(arg,functionScope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.FUNCTION){scope=traverse(arg,functionScope);}else{scope=traverse(arg,syntacticScope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.NAME){scope=traverse(arg,functionScope);}else{scope=traverse(arg,functionScope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(arg.getJSType()||arg.getJSType()==null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverseNode(arg,n.createChildFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(constructorType);if(constructorType!=null){n.setJSType(constructorType);}else{traverseNew();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060n.setJSType(constructorType);NodeconstructorType=arg.getFirstChild();n.setJSType(constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()!=Token.NAME){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060if(arg.getType()==Token.ASSIGN){scope=traverse(arg,null);}else{traverse(arg,null);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);n.setJSType(type);scope=traverse(arg,functionScope);NodefunctionScope=arg.getFirstChild();n.setJSType(type);scope=traverse(arg,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(g2,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functionScope,arg,syntacticScope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,null,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(functionScope,arg);FunctionTypefunctionScope=traverse(scope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);FunctionTypefunctionScope=traverse(scope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(scope,arg);FunctionTypefunctionScope=traverse(scope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);FunctionTypefunctionScope=traverse(functionScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,n);functionScope=traverse(arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,arg,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060ScopefunctionScope=traverse(arg,scope.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);JSTypefunctionScope=traverse(functionScope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060JSTypefunctionScope=traverse(functionScope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg.getString(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,false,newFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,scopeScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,newScope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(structor,n,arg.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope,n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructor,arg,null,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(structor,arg,null,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(g2,constructorType,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructorType,arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(constructorType,null,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(structor,arg,null,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(config,arg,null,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(arg,functionScope);FunctionScopefunctionScope=traverse(functionScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(newFlowScope(arg,functionScope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1060scope=traverse(g,arg.getJSType());
