bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  FunctionType  ct  =  type.getCurrentType();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  type.getCurrentType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  type.getCurrentType();	  FunctionType    ct    =    constructorType.getCurrentType();    	non-compiled	[CE]  ';'  expected	40	None	replace
2	[BUG]  [BUGGY]  FunctionType  ct  =  scope.getCurrentType();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.getCurrentType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.getCurrentType();	  FunctionType    ct    =    constructorType.getCurrentType();    	non-compiled	[CE]  ';'  expected	40	None	replace
3	[BUG]  [BUGGY]  FunctionType  ct  =  type.getConstructorInstanceType();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  type.getConstructorInstanceType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  type.getConstructorInstanceType();	  FunctionType    ct    =    constructorType.getConstructorInstanceType();    	non-compiled	[CE]  ';'  expected	53	None	replace
4	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getConstructorInstanceType();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getConstructorInstanceType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getConstructorInstanceType();	  FunctionType    ct    =    constructorType.getConstructorInstanceType();    	non-compiled	[CE]  ';'  expected	53	None	replace
5	[BUG]  [BUGGY]  FunctionType  ct  =  scope.getConstructorInstanceType();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.getConstructorInstanceType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.getConstructorInstanceType();	  FunctionType    ct    =    constructorType.getConstructorInstanceType();    	non-compiled	[CE]  ';'  expected	53	None	replace
6	[BUG]  [BUGGY]  FunctionType  ct  =  context.getConstructorInstanceType();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  context.getConstructorInstanceType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  context.getConstructorInstanceType();	  FunctionType    ct    =    constructorType.getConstructorInstanceType();    	non-compiled	[CE]  ';'  expected	53	None	replace
7	[BUG]  [BUGGY]  FunctionType  ct  =  scope.getActualFunctionType(constructorType);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.getActualFunctionType(constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.getActualFunctionType(constructorType);	  FunctionType    ct    =    constructorType.getActualFunctionType(scope);    	non-compiled	[CE]  ';'  expected	55	None	replace
8	[BUG]  [BUGGY]  FunctionType  ct  =  type.getActualFunctionType(scope);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  type.getActualFunctionType(scope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  type.getActualFunctionType(scope);	  FunctionType    ct    =    constructorType.getActualFunctionType(scope);    	non-compiled	[CE]  ';'  expected	55	None	replace
9	[BUG]  [BUGGY]  FunctionType  ct  =  scope.getActualFunctionType();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.getActualFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.getActualFunctionType();	  FunctionType    ct    =    constructorType.getActualFunctionType(scope);    	non-compiled	[CE]  ';'  expected	55	None	replace
10	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getActualFunctionType(scope);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getActualFunctionType(scope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getActualFunctionType(scope);	  FunctionType    ct    =    constructorType.getActualFunctionType(scope);    	non-compiled	[CE]  ';'  expected	55	None	replace
11	[BUG]  [BUGGY]  FunctionType  ct  =  context.getActualFunctionType(scope);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  context.getActualFunctionType(scope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  context.getActualFunctionType(scope);	  FunctionType    ct    =    constructorType.getActualFunctionType(scope);    	non-compiled	[CE]  ';'  expected	55	None	replace
12	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getActualFunctionType(scope,  type);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getActualFunctionType(scope,  type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getActualFunctionType(scope,  type);	  FunctionType    ct    =    constructorType.getActualFunctionType(scope);    	non-compiled	[CE]  ';'  expected	55	None	replace
13	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getConstructorType(scope);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getConstructorType(scope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getConstructorType(scope);	  FunctionType    ct    =    constructorType.getActualFunctionType(scope);    	non-compiled	[CE]  ';'  expected	55	None	replace
14	[BUG]  [BUGGY]  FunctionType  ct  =  scope.getInstanceType();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.getInstanceType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.getInstanceType();	  FunctionType    ct    =    functionScope.getInstanceType();    	non-compiled	[CE]  ';'  expected	9	None	replace
15	[BUG]  [BUGGY]  FunctionType  ct  =  scope.getFunctionType();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.getFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.getFunctionType();	  FunctionType    ct    =    functionScope.getInstanceType();    	non-compiled	[CE]  ';'  expected	9	None	replace
16	[BUG]  [BUGGY]  FunctionType  ct  =  type.toMainFunctionType();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  type.toMainFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  type.toMainFunctionType();	  FunctionType    ct    =    constructorType.toMainFunctionType();    	non-compiled	[CE]  ';'  expected	43	None	replace
17	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.toMainFunctionType();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.toMainFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.toMainFunctionType();	  FunctionType    ct    =    constructorType.toMainFunctionType();    	non-compiled	[CE]  ';'  expected	43	None	replace
18	[BUG]  [BUGGY]  JSType  constructorType  =  getNativeType(UNKNOWN_TYPE,  n);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  JSType  constructorType  =  getNativeType(UNKNOWN_TYPE,  n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	JSType  constructorType  =  getNativeType(UNKNOWN_TYPE,  n);	  JSType    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	15	None	replace
19	[BUG]  [BUGGY]  JSType  constructorType  =  getNativeType(CONSTRUCTOR_TYPE);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  JSType  constructorType  =  getNativeType(CONSTRUCTOR_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	JSType  constructorType  =  getNativeType(CONSTRUCTOR_TYPE);	  JSType    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	15	None	replace
20	[BUG]  [BUGGY]  JSType  constructorType  =  getNativeType(UNKNOWN_TYPE,  type);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  JSType  constructorType  =  getNativeType(UNKNOWN_TYPE,  type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	JSType  constructorType  =  getNativeType(UNKNOWN_TYPE,  type);	  JSType    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	15	None	replace
21	[BUG]  [BUGGY]  JSType  constructorType  =  getNativeType(UNKNOWN_TYPE,  CONSTRUCTOR_TYPE);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  JSType  constructorType  =  getNativeType(UNKNOWN_TYPE,  CONSTRUCTOR_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	JSType  constructorType  =  getNativeType(UNKNOWN_TYPE,  CONSTRUCTOR_TYPE);	  JSType    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	15	None	replace
22	[BUG]  [BUGGY]  JSType  constructorType  =  getNativeType(UNKNOWN_TYPE,  scope);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  JSType  constructorType  =  getNativeType(UNKNOWN_TYPE,  scope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	JSType  constructorType  =  getNativeType(UNKNOWN_TYPE,  scope);	  JSType    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	15	None	replace
23	[BUG]  [BUGGY]  JSType  constructorType  =  getNativeType(UNKNOWN_TYPE,  context);  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  JSType  constructorType  =  getNativeType(UNKNOWN_TYPE,  context);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	JSType  constructorType  =  getNativeType(UNKNOWN_TYPE,  context);	  JSType    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	15	None	replace
24	[BUG]  [BUGGY]  FunctionType  ct  =  type.getReturnType();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  type.getReturnType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  type.getReturnType();	  FunctionType    ct    =    constructorType.getReturnType();    	non-compiled	[CE]  ';'  expected	49	None	replace
25	[BUG]  [BUGGY]  FunctionType  ct  =  buildorType.getInstanceType();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  buildorType.getInstanceType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  buildorType.getInstanceType();	  FunctionType    ct    =    type.getInstanceType();    	non-compiled	[CE]  ';'  expected	8	None	replace
26	[BUG]  [BUGGY]  FunctionType  ct  =  scope.getFunctionTypeDeclaration();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.getFunctionTypeDeclaration();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.getFunctionTypeDeclaration();	  FunctionType    ct    =    functionScope.getFunctionTypeDeclaration();    	non-compiled	[CE]  ';'  expected	29	None	replace
27	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getConstructorDeclaration();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getConstructorDeclaration();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getConstructorDeclaration();	  FunctionType    ct    =    functionScope.getFunctionTypeDeclaration();    	non-compiled	[CE]  ';'  expected	29	None	replace
28	[BUG]  [BUGGY]  FunctionType  ct  =  type.getFunctionTypeDeclaration();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  type.getFunctionTypeDeclaration();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  type.getFunctionTypeDeclaration();	  FunctionType    ct    =    functionScope.getFunctionTypeDeclaration();    	non-compiled	[CE]  ';'  expected	29	None	replace
29	[BUG]  [BUGGY]  FunctionType  ct  =  functionType.getInstanceType();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionType.getInstanceType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionType.getInstanceType();	  FunctionType    ct    =    functionType.toConstructorType();    	non-compiled	[CE]  ';'  expected	42	None	replace
30	[BUG]  [BUGGY]  FunctionType  ct  =  functionType.getFunctionType();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionType.getFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionType.getFunctionType();	  FunctionType    ct    =    functionType.toConstructorType();    	non-compiled	[CE]  ';'  expected	42	None	replace
31	[BUG]  [BUGGY]  FunctionType  ct  =  constructor.toConstructorType();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructor.toConstructorType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructor.toConstructorType();	  FunctionType    ct    =    functionType.toConstructorType();    	non-compiled	[CE]  ';'  expected	42	None	replace
32	[BUG]  [BUGGY]  FunctionType  ct  =  constructor.getConstructor();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructor.getConstructor();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructor.getConstructor();	  FunctionType    ct    =    functionType.getConstructor();    	non-compiled	[CE]  ';'  expected	38	None	replace
33	[BUG]  [BUGGY]  Constructor  <?>  ct  =  type.getConstructor();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  <?>  ct  =  type.getConstructor();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  <?>  ct  =  type.getConstructor();	  Constructor    <?>    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	50	None	replace
34	[BUG]  [BUGGY]  Constructor  <?>  ct  =  constructorType.getNativeType(UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  <?>  ct  =  constructorType.getNativeType(UNKNOWN_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  <?>  ct  =  constructorType.getNativeType(UNKNOWN_TYPE);	  Constructor    <?>    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	50	None	replace
35	[BUG]  [BUGGY]  Constructor  <?>  ct  =  constructorType.getConstructor(n);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  <?>  ct  =  constructorType.getConstructor(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  <?>  ct  =  constructorType.getConstructor(n);	  Constructor    <?>    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	50	None	replace
36	[BUG]  [BUGGY]  Constructor  <?>  ct  =  scope.getConstructor();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  <?>  ct  =  scope.getConstructor();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  <?>  ct  =  scope.getConstructor();	  Constructor    <?>    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	50	None	replace
37	[BUG]  [BUGGY]  Constructor  <?>  ct  =  constructorType.getRawClass();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  <?>  ct  =  constructorType.getRawClass();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  <?>  ct  =  constructorType.getRawClass();	  Constructor    <?>    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	50	None	replace
38	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.createFunctionType(type);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.createFunctionType(type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.createFunctionType(type);	  FunctionType    ct    =    functionScope.createFunctionType(constructorType);    	non-compiled	[CE]  ';'  expected	47	None	replace
39	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.createFunctionType(constructorType,  type);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.createFunctionType(constructorType,  type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.createFunctionType(constructorType,  type);	  FunctionType    ct    =    functionScope.createFunctionType(constructorType);    	non-compiled	[CE]  ';'  expected	47	None	replace
40	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.createFunctionType(getNativeType(UNKNOWN_TYPE));  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.createFunctionType(getNativeType(UNKNOWN_TYPE));  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.createFunctionType(getNativeType(UNKNOWN_TYPE));	  FunctionType    ct    =    functionScope.createFunctionType(constructorType);    	non-compiled	[CE]  ';'  expected	47	None	replace
41	[BUG]  [BUGGY]  FunctionType  ct  =  scope.createFunctionType(constructorType);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.createFunctionType(constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.createFunctionType(constructorType);	  FunctionType    ct    =    functionScope.createFunctionType(constructorType);    	non-compiled	[CE]  ';'  expected	47	None	replace
42	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.createFunctionType(functionType,  type);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.createFunctionType(functionType,  type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.createFunctionType(functionType,  type);	  FunctionType    ct    =    functionScope.createFunctionType(constructorType);    	non-compiled	[CE]  ';'  expected	47	None	replace
43	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.createFunctionType(compiler,  constructorType);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.createFunctionType(compiler,  constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.createFunctionType(compiler,  constructorType);	  FunctionType    ct    =    functionScope.createFunctionType(constructorType);    	non-compiled	[CE]  ';'  expected	47	None	replace
44	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getFunctionType(constructorType);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getFunctionType(constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getFunctionType(constructorType);	  FunctionType    ct    =    functionScope.getFunctionType(type);    	non-compiled	[CE]  ';'  expected	33	None	replace
45	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getConstructorType(type);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getConstructorType(type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getConstructorType(type);	  FunctionType    ct    =    functionScope.getFunctionType(type);    	non-compiled	[CE]  ';'  expected	33	None	replace
46	[BUG]  [BUGGY]  FunctionType  ct  =  scope.getFunctionType(constructorType);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.getFunctionType(constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.getFunctionType(constructorType);	  FunctionType    ct    =    functionScope.getFunctionType(type);    	non-compiled	[CE]  ';'  expected	33	None	replace
47	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getFunctionType(type);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getFunctionType(type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getFunctionType(type);	  FunctionType    ct    =    functionScope.getFunctionType(type);    	non-compiled	[CE]  ';'  expected	33	None	replace
48	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getFunctionType(functionType);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getFunctionType(functionType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getFunctionType(functionType);	  FunctionType    ct    =    functionScope.getFunctionType(type);    	non-compiled	[CE]  ';'  expected	33	None	replace
49	[BUG]  [BUGGY]  FunctionType  ct  =  type.getNativeType(UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  type.getNativeType(UNKNOWN_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  type.getNativeType(UNKNOWN_TYPE);	  FunctionType    ct    =    constructorType.getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	21	None	replace
50	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getNativeType(UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getNativeType(UNKNOWN_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getNativeType(UNKNOWN_TYPE);	  FunctionType    ct    =    constructorType.getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	21	None	replace
51	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getNativeType(UNKNOWN_TYPE,  type);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getNativeType(UNKNOWN_TYPE,  type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getNativeType(UNKNOWN_TYPE,  type);	  FunctionType    ct    =    constructorType.getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	21	None	replace
52	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getConstructorType(n);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getConstructorType(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getConstructorType(n);	  FunctionType    ct    =    functionScope.getConstructorType();    	non-compiled	[CE]  ';'  expected	2	None	replace
53	[BUG]  [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  constructorType);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	type  =  getNativeType(UNKNOWN_TYPE,  constructorType);	  type    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	16	None	replace
54	[BUG]  [BUGGY]  type  =  getNativeType(CONSTRUCTOR_TYPE);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  type  =  getNativeType(CONSTRUCTOR_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	type  =  getNativeType(CONSTRUCTOR_TYPE);	  type    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	16	None	replace
55	[BUG]  [BUGGY]  type  =  getNativeType(NO_TYPE);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  type  =  getNativeType(NO_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	type  =  getNativeType(NO_TYPE);	  type    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	16	None	replace
56	[BUG]  [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  constructorType.getConstructor());  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  constructorType.getConstructor());  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	type  =  getNativeType(UNKNOWN_TYPE,  constructorType.getConstructor());	  type    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	16	None	replace
57	[BUG]  [BUGGY]  type  =  getNativeType(NO_CONSTRUCTOR_TYPE);  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  type  =  getNativeType(NO_CONSTRUCTOR_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	type  =  getNativeType(NO_CONSTRUCTOR_TYPE);	  type    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	16	None	replace
58	[BUG]  [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  constructorType.getInstanceType());  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE,  constructorType.getInstanceType());  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	type  =  getNativeType(UNKNOWN_TYPE,  constructorType.getInstanceType());	  type    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	16	None	replace
59	[BUG]  [BUGGY]  FunctionType  constructorType  =  getConstructorType(n,  scope);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  getConstructorType(n,  scope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  getConstructorType(n,  scope);	  FunctionType    constructorType    =    getConstructorType(n);    	non-compiled	[CE]  ';'  expected	51	None	replace
60	[BUG]  [BUGGY]  FunctionType  constructorType  =  getConstructorType(n,  type);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  getConstructorType(n,  type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  getConstructorType(n,  type);	  FunctionType    constructorType    =    getConstructorType(n);    	non-compiled	[CE]  ';'  expected	51	None	replace
61	[BUG]  [BUGGY]  FunctionType  constructorType  =  getConstructorType(n.getJSType());  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  getConstructorType(n.getJSType());  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  getConstructorType(n.getJSType());	  FunctionType    constructorType    =    getConstructorType(n);    	non-compiled	[CE]  ';'  expected	51	None	replace
62	[BUG]  [BUGGY]  FunctionType  constructorType  =  getConstructorType(scope);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  getConstructorType(scope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  getConstructorType(scope);	  FunctionType    constructorType    =    getConstructorType(n);    	non-compiled	[CE]  ';'  expected	51	None	replace
63	[BUG]  [BUGGY]  FunctionType  constructorType  =  getConstructorType(n.getFirstChild());  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  getConstructorType(n.getFirstChild());  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  getConstructorType(n.getFirstChild());	  FunctionType    constructorType    =    getConstructorType(n);    	non-compiled	[CE]  ';'  expected	51	None	replace
64	[BUG]  [BUGGY]  FunctionType  constructorType  =  functionScope.getConstructorType(n);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  functionScope.getConstructorType(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  functionScope.getConstructorType(n);	  FunctionType    constructorType    =    functionScope.getFunctionType(n);    	non-compiled	[CE]  ';'  expected	32	None	replace
65	[BUG]  [BUGGY]  FunctionType  constructorType  =  functionScope.getFunctionType(n,  type);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  functionScope.getFunctionType(n,  type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  functionScope.getFunctionType(n,  type);	  FunctionType    constructorType    =    functionScope.getFunctionType(n);    	non-compiled	[CE]  ';'  expected	32	None	replace
66	[BUG]  [BUGGY]  FunctionType  constructorType  =  scope.getFunctionType(n);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  scope.getFunctionType(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  scope.getFunctionType(n);	  FunctionType    constructorType    =    functionScope.getFunctionType(n);    	non-compiled	[CE]  ';'  expected	32	None	replace
67	[BUG]  [BUGGY]  FunctionType  constructorType  =  n.getFunctionType();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  n.getFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  n.getFunctionType();	  FunctionType    constructorType    =    functionScope.getFunctionType(n);    	non-compiled	[CE]  ';'  expected	32	None	replace
68	[BUG]  [BUGGY]  FunctionType  constructorType  =  functionScope.getFunctionType(type);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  functionScope.getFunctionType(type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  functionScope.getFunctionType(type);	  FunctionType    constructorType    =    functionScope.getFunctionType(n);    	non-compiled	[CE]  ';'  expected	32	None	replace
69	[BUG]  [BUGGY]  FunctionType  constructorType  =  scope.getConstructorType(n);  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  scope.getConstructorType(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  scope.getConstructorType(n);	  FunctionType    constructorType    =    functionScope.getFunctionType(n);    	non-compiled	[CE]  ';'  expected	32	None	replace
70	[BUG]  [BUGGY]  FunctionType  constructorType  =  n.getFunctionType(functionScope);  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  n.getFunctionType(functionScope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  n.getFunctionType(functionScope);	  FunctionType    constructorType    =    functionScope.getFunctionType(n);    	non-compiled	[CE]  ';'  expected	32	None	replace
71	[BUG]  [BUGGY]  FunctionType  ct  =  scope.getConstructor(type);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.getConstructor(type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.getConstructor(type);	  FunctionType    ct    =    scope.getConstructor();    	non-compiled	[CE]  ';'  expected	6	None	replace
72	[BUG]  [BUGGY]  FunctionType  ct  =  scope.getConstructor(n);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.getConstructor(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.getConstructor(n);	  FunctionType    ct    =    scope.getConstructor();    	non-compiled	[CE]  ';'  expected	6	None	replace
73	[BUG]  [BUGGY]  FunctionType  ct  =  scope.getCurrentConstructor();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.getCurrentConstructor();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.getCurrentConstructor();	  FunctionType    ct    =    scope.getConstructor();    	non-compiled	[CE]  ';'  expected	6	None	replace
74	[BUG]  [BUGGY]  FunctionType  ct  =  context.getConstructorType(type);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  context.getConstructorType(type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  context.getConstructorType(type);	  FunctionType    ct    =    context.getConstructorType();    	non-compiled	[CE]  ';'  expected	54	None	replace
75	[BUG]  [BUGGY]  Constructor  constructorType  =  getConstructorType(UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  constructorType  =  getConstructorType(UNKNOWN_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  constructorType  =  getConstructorType(UNKNOWN_TYPE);	  Constructor    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
76	[BUG]  [BUGGY]  Constructor  constructorType  =  getNativeType(CONSTRUCTOR_TYPE);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  constructorType  =  getNativeType(CONSTRUCTOR_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  constructorType  =  getNativeType(CONSTRUCTOR_TYPE);	  Constructor    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
77	[BUG]  [BUGGY]  Constructor  constructorType  =  getNativeType(UNKNOWN_TYPE,  type);  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  constructorType  =  getNativeType(UNKNOWN_TYPE,  type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  constructorType  =  getNativeType(UNKNOWN_TYPE,  type);	  Constructor    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
78	[BUG]  [BUGGY]  Constructor  constructorType  =  getNativeType(UNKNOWN_TYPE,  n);  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  constructorType  =  getNativeType(UNKNOWN_TYPE,  n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  constructorType  =  getNativeType(UNKNOWN_TYPE,  n);	  Constructor    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
79	[BUG]  [BUGGY]  Constructor  constructorType  =  getNativeType(UNKNOWN_TYPE,  scope);  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  constructorType  =  getNativeType(UNKNOWN_TYPE,  scope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  constructorType  =  getNativeType(UNKNOWN_TYPE,  scope);	  Constructor    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
80	[BUG]  [BUGGY]  Constructor  constructorType  =  getNativeType(UNKNOWN_TYPE,  CONSTRUCTOR_TYPE);  [CE]  ';'  expected  [FE]                                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  constructorType  =  getNativeType(UNKNOWN_TYPE,  CONSTRUCTOR_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  constructorType  =  getNativeType(UNKNOWN_TYPE,  CONSTRUCTOR_TYPE);	  Constructor    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
81	[BUG]  [BUGGY]  FunctionType  constructorType  =  type.getConstructorType();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  type.getConstructorType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  type.getConstructorType();	  FunctionType    constructorType    =    type.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	46	None	replace
82	[BUG]  [BUGGY]  FunctionType  constructorType  =  n.toMaybeFunctionType();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  n.toMaybeFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  n.toMaybeFunctionType();	  FunctionType    constructorType    =    type.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	46	None	replace
83	[BUG]  [BUGGY]  FunctionType  constructorType  =  type.toFunctionType();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  type.toFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  type.toFunctionType();	  FunctionType    constructorType    =    type.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	46	None	replace
84	[BUG]  [BUGGY]  FunctionType  constructorType  =  type.getFunctionType();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  type.getFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  type.getFunctionType();	  FunctionType    constructorType    =    type.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	46	None	replace
85	[BUG]  [BUGGY]  FunctionType  constructorType  =  ct.toMaybeFunctionType();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  ct.toMaybeFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  ct.toMaybeFunctionType();	  FunctionType    constructorType    =    type.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	46	None	replace
86	[BUG]  [BUGGY]  FunctionType  constructorType  =  type.toConstructorType();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  type.toConstructorType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  type.toConstructorType();	  FunctionType    constructorType    =    type.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	46	None	replace
87	[BUG]  [BUGGY]  FunctionType  ct  =  getNativeType(UNKNOWN_TYPE,  constructorType);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  getNativeType(UNKNOWN_TYPE,  constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  getNativeType(UNKNOWN_TYPE,  constructorType);	  FunctionType    ct    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	25	None	replace
88	[BUG]  [BUGGY]  FunctionType  ct  =  getNativeType(CONSTRUCTOR_TYPE);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  getNativeType(CONSTRUCTOR_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  getNativeType(CONSTRUCTOR_TYPE);	  FunctionType    ct    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	25	None	replace
89	[BUG]  [BUGGY]  FunctionType  ct  =  getConstructorType(UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  getConstructorType(UNKNOWN_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  getConstructorType(UNKNOWN_TYPE);	  FunctionType    ct    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	25	None	replace
90	[BUG]  [BUGGY]  FunctionType  ct  =  getNativeType(NO_TYPE);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  getNativeType(NO_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  getNativeType(NO_TYPE);	  FunctionType    ct    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	25	None	replace
91	[BUG]  [BUGGY]  FunctionType  ct  =  getNativeType(UNKNOWN_TYPE,  type);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  getNativeType(UNKNOWN_TYPE,  type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  getNativeType(UNKNOWN_TYPE,  type);	  FunctionType    ct    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	25	None	replace
92	[BUG]  [BUGGY]  FunctionType  ct  =  getNativeType(STRING_TYPE);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  getNativeType(STRING_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  getNativeType(STRING_TYPE);	  FunctionType    ct    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	25	None	replace
93	[BUG]  [BUGGY]  FunctionType  constructorType  =  getNativeType(CONSTRUCTOR_TYPE);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  getNativeType(CONSTRUCTOR_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  getNativeType(CONSTRUCTOR_TYPE);	  FunctionType    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	31	None	replace
94	[BUG]  [BUGGY]  FunctionType  constructorType  =  getConstructorType(UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  getConstructorType(UNKNOWN_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  getConstructorType(UNKNOWN_TYPE);	  FunctionType    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	31	None	replace
95	[BUG]  [BUGGY]  FunctionType  constructorType  =  getNativeType(UNKNOWN_TYPE,  type);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  getNativeType(UNKNOWN_TYPE,  type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  getNativeType(UNKNOWN_TYPE,  type);	  FunctionType    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	31	None	replace
96	[BUG]  [BUGGY]  FunctionType  constructorType  =  getNativeType(UNKNOWN_TYPE,  n);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  getNativeType(UNKNOWN_TYPE,  n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  getNativeType(UNKNOWN_TYPE,  n);	  FunctionType    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	31	None	replace
97	[BUG]  [BUGGY]  FunctionType  constructorType  =  getNativeType(UNKNOWN_TYPE,  scope);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  getNativeType(UNKNOWN_TYPE,  scope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  getNativeType(UNKNOWN_TYPE,  scope);	  FunctionType    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	31	None	replace
98	[BUG]  [BUGGY]  FunctionType  constructorType  =  getNativeType(UNKNOWN_TYPE,  context);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  getNativeType(UNKNOWN_TYPE,  context);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  getNativeType(UNKNOWN_TYPE,  context);	  FunctionType    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	31	None	replace
99	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getConstructorType(n);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getConstructorType(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getConstructorType(n);	  FunctionType    ct    =    constructorType.getActualFunctionType(n);    	non-compiled	[CE]  ';'  expected	56	None	replace
100	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getActualFunctionType(n,  scope);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getActualFunctionType(n,  scope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getActualFunctionType(n,  scope);	  FunctionType    ct    =    constructorType.getActualFunctionType(n);    	non-compiled	[CE]  ';'  expected	56	None	replace
101	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getFunctionType(n);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getFunctionType(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getFunctionType(n);	  FunctionType    ct    =    constructorType.getActualFunctionType(n);    	non-compiled	[CE]  ';'  expected	56	None	replace
102	[BUG]  [BUGGY]  FunctionType  ct  =  type.getActualFunctionType(n);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  type.getActualFunctionType(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  type.getActualFunctionType(n);	  FunctionType    ct    =    constructorType.getActualFunctionType(n);    	non-compiled	[CE]  ';'  expected	56	None	replace
103	[BUG]  [BUGGY]  Type  ct  =  type.getConstructor();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  ct  =  type.getConstructor();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  ct  =  type.getConstructor();	  Type    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	17	None	replace
104	[BUG]  [BUGGY]  Type  ct  =  constructorType.getInstanceType();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  ct  =  constructorType.getInstanceType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  ct  =  constructorType.getInstanceType();	  Type    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	17	None	replace
105	[BUG]  [BUGGY]  Type  ct  =  constructorType.getNativeType(UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  ct  =  constructorType.getNativeType(UNKNOWN_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  ct  =  constructorType.getNativeType(UNKNOWN_TYPE);	  Type    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	17	None	replace
106	[BUG]  [BUGGY]  Type  ct  =  scope.getConstructor();  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  ct  =  scope.getConstructor();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  ct  =  scope.getConstructor();	  Type    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	17	None	replace
107	[BUG]  [BUGGY]  Type  ct  =  constructorType.getReturnType();  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  ct  =  constructorType.getReturnType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  ct  =  constructorType.getReturnType();	  Type    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	17	None	replace
108	[BUG]  [BUGGY]  Type  ct  =  constructorType.getGenericConstructor();  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  ct  =  constructorType.getGenericConstructor();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  ct  =  constructorType.getGenericConstructor();	  Type    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	17	None	replace
109	[BUG]  [BUGGY]  FunctionType  ct  =  scope.getFunctionType(UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.getFunctionType(UNKNOWN_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.getFunctionType(UNKNOWN_TYPE);	  FunctionType    ct    =    scope.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	30	None	replace
110	[BUG]  [BUGGY]  FunctionType  ct  =  buildorType.getConstructorType();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  buildorType.getConstructorType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  buildorType.getConstructorType();	  FunctionType    ct    =    buildorType.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	44	None	replace
111	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.toJavaType();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.toJavaType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.toJavaType();	  FunctionType    ct    =    buildorType.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	44	None	replace
112	[BUG]  [BUGGY]  Type  constructorType  =  getNativeType(CONSTRUCTOR_TYPE);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  constructorType  =  getNativeType(CONSTRUCTOR_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  constructorType  =  getNativeType(CONSTRUCTOR_TYPE);	  Type    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	14	None	replace
113	[BUG]  [BUGGY]  Type  constructorType  =  getNativeType(UNKNOWN_TYPE,  n);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  constructorType  =  getNativeType(UNKNOWN_TYPE,  n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  constructorType  =  getNativeType(UNKNOWN_TYPE,  n);	  Type    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	14	None	replace
114	[BUG]  [BUGGY]  Type  constructorType  =  getNativeType(UNKNOWN_TYPE,  scope);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  constructorType  =  getNativeType(UNKNOWN_TYPE,  scope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  constructorType  =  getNativeType(UNKNOWN_TYPE,  scope);	  Type    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	14	None	replace
115	[BUG]  [BUGGY]  Type  constructorType  =  getConstructorType(UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  constructorType  =  getConstructorType(UNKNOWN_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  constructorType  =  getConstructorType(UNKNOWN_TYPE);	  Type    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	14	None	replace
116	[BUG]  [BUGGY]  Type  constructorType  =  getNativeType(UNKNOWN_TYPE,  CONSTRUCTOR_TYPE);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  constructorType  =  getNativeType(UNKNOWN_TYPE,  CONSTRUCTOR_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  constructorType  =  getNativeType(UNKNOWN_TYPE,  CONSTRUCTOR_TYPE);	  Type    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	14	None	replace
117	[BUG]  [BUGGY]  Type  constructorType  =  getNativeType(UNKNOWN_TYPE,  INVALID_TYPE);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  constructorType  =  getNativeType(UNKNOWN_TYPE,  INVALID_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  constructorType  =  getNativeType(UNKNOWN_TYPE,  INVALID_TYPE);	  Type    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	14	None	replace
118	[BUG]  [BUGGY]  FunctionType  ct  =  type.getOwnerFunctionType();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  type.getOwnerFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  type.getOwnerFunctionType();	  FunctionType    ct    =    constructorType.getOwnerFunctionType();    	non-compiled	[CE]  ';'  expected	57	None	replace
119	[BUG]  [BUGGY]  FunctionType  ct  =  scope.getOwnerFunctionType();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.getOwnerFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.getOwnerFunctionType();	  FunctionType    ct    =    constructorType.getOwnerFunctionType();    	non-compiled	[CE]  ';'  expected	57	None	replace
120	[BUG]  [BUGGY]  FunctionType  ct  =  context.getOwnerFunctionType();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  context.getOwnerFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  context.getOwnerFunctionType();	  FunctionType    ct    =    constructorType.getOwnerFunctionType();    	non-compiled	[CE]  ';'  expected	57	None	replace
121	[BUG]  [BUGGY]  FunctionType  ct  =  scope.functionType();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.functionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.functionType();	  FunctionType    ct    =    functionScope.functionType();    	non-compiled	[CE]  ';'  expected	34	None	replace
122	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.functionType(constructorType);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.functionType(constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.functionType(constructorType);	  FunctionType    ct    =    functionScope.functionType();    	non-compiled	[CE]  ';'  expected	34	None	replace
123	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.functionType(type);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.functionType(type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.functionType(type);	  FunctionType    ct    =    functionScope.functionType();    	non-compiled	[CE]  ';'  expected	34	None	replace
124	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.functionType(n);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.functionType(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.functionType(n);	  FunctionType    ct    =    functionScope.functionType();    	non-compiled	[CE]  ';'  expected	34	None	replace
125	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType  ==  null?  null  :  constructorType.toFunctionType();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType  ==  null?  null  :  constructorType.toFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType  ==  null?  null  :  constructorType.toFunctionType();	  FunctionType    ct    =    constructorType!=    null?    null    :    constructorType.toFunctionType();    	non-compiled	[CE]  ';'  expected	41	None	replace
126	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType  ==  null?  null  :  constructorType.toString();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType  ==  null?  null  :  constructorType.toString();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType  ==  null?  null  :  constructorType.toString();	  FunctionType    ct    =    constructorType!=    null?    null    :    constructorType.toFunctionType();    	non-compiled	[CE]  ';'  expected	41	None	replace
127	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType!=  null?  null  :  constructorType.toString();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType!=  null?  null  :  constructorType.toString();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType!=  null?  null  :  constructorType.toString();	  FunctionType    ct    =    constructorType!=    null?    null    :    constructorType.toFunctionType();    	non-compiled	[CE]  ';'  expected	41	None	replace
128	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType  ==  null?  null  :  constructorType.getConstructorType();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType  ==  null?  null  :  constructorType.getConstructorType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType  ==  null?  null  :  constructorType.getConstructorType();	  FunctionType    ct    =    constructorType!=    null?    null    :    constructorType.toFunctionType();    	non-compiled	[CE]  ';'  expected	41	None	replace
129	[BUG]  [BUGGY]  FunctionType  ct  =  type.restrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  type.restrictByNotNullOrUndefined();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  type.restrictByNotNullOrUndefined();	  FunctionType    ct    =    constructorType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	58	None	replace
130	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.restrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.restrictByNotNullOrUndefined();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.restrictByNotNullOrUndefined();	  FunctionType    ct    =    constructorType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	58	None	replace
131	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getRestrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getRestrictByNotNullOrUndefined();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getRestrictByNotNullOrUndefined();	  FunctionType    ct    =    constructorType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	58	None	replace
132	[BUG]  [BUGGY]  FunctionType  ct  =  scope.toFunctionType();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.toFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.toFunctionType();	  FunctionType    ct    =    functionScope.toFunctionType();    	non-compiled	[CE]  ';'  expected	28	None	replace
133	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getFunctionType(n);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getFunctionType(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getFunctionType(n);	  FunctionType    ct    =    functionScope.getFunctionType();    	non-compiled	[CE]  ';'  expected	12	None	replace
134	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getConstructor(type);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getConstructor(type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getConstructor(type);	  FunctionType    ct    =    functionScope.getConstructor();    	non-compiled	[CE]  ';'  expected	5	None	replace
135	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getConstructor(n);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getConstructor(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getConstructor(n);	  FunctionType    ct    =    functionScope.getConstructor();    	non-compiled	[CE]  ';'  expected	5	None	replace
136	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getConstructor(scope);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getConstructor(scope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getConstructor(scope);	  FunctionType    ct    =    functionScope.getConstructor();    	non-compiled	[CE]  ';'  expected	5	None	replace
137	[BUG]  [BUGGY]  FunctionType  ct  =  scope.getFunctionDeclaration();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.getFunctionDeclaration();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.getFunctionDeclaration();	  FunctionType    ct    =    functionScope.getFunctionDeclaration();    	non-compiled	[CE]  ';'  expected	48	None	replace
138	[BUG]  [BUGGY]  FunctionType  ct  =  type.getFunctionDeclaration();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  type.getFunctionDeclaration();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  type.getFunctionDeclaration();	  FunctionType    ct    =    functionScope.getFunctionDeclaration();    	non-compiled	[CE]  ';'  expected	48	None	replace
139	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getFunctionDeclaration(n);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getFunctionDeclaration(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getFunctionDeclaration(n);	  FunctionType    ct    =    functionScope.getFunctionDeclaration();    	non-compiled	[CE]  ';'  expected	48	None	replace
140	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getFunctionConstructor();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getFunctionConstructor();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getFunctionConstructor();	  FunctionType    ct    =    functionScope.getFunctionDeclaration();    	non-compiled	[CE]  ';'  expected	48	None	replace
141	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getUnknownType();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getUnknownType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getUnknownType();	  FunctionType    ct    =    type.getUnknownType();    	non-compiled	[CE]  ';'  expected	27	None	replace
142	[BUG]  [BUGGY]  FunctionType  ct  =  buildorType.getUnknownType();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  buildorType.getUnknownType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  buildorType.getUnknownType();	  FunctionType    ct    =    type.getUnknownType();    	non-compiled	[CE]  ';'  expected	27	None	replace
143	[BUG]  [BUGGY]  FunctionType  ct  =  context.getConstructor(type);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  context.getConstructor(type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  context.getConstructor(type);	  FunctionType    ct    =    context.getConstructor();    	non-compiled	[CE]  ';'  expected	7	None	replace
144	[BUG]  [BUGGY]  Constructor  <?>  ct  =  type.getInstanceType();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  <?>  ct  =  type.getInstanceType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  <?>  ct  =  type.getInstanceType();	  Constructor    <?>    ct    =    constructorType.getInstanceType();    	non-compiled	[CE]  ';'  expected	52	None	replace
145	[BUG]  [BUGGY]  Constructor  <?>  ct  =  constructorType.getConstructorType();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  <?>  ct  =  constructorType.getConstructorType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  <?>  ct  =  constructorType.getConstructorType();	  Constructor    <?>    ct    =    constructorType.getInstanceType();    	non-compiled	[CE]  ';'  expected	52	None	replace
146	[BUG]  [BUGGY]  Constructor  <?>  ct  =  constructorType.getReturnType();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  <?>  ct  =  constructorType.getReturnType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  <?>  ct  =  constructorType.getReturnType();	  Constructor    <?>    ct    =    constructorType.getInstanceType();    	non-compiled	[CE]  ';'  expected	52	None	replace
147	[BUG]  [BUGGY]  Type  constructorType  =  n.getConstructorType();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  constructorType  =  n.getConstructorType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  constructorType  =  n.getConstructorType();	  Type    constructorType    =    type.getConstructorType();    	non-compiled	[CE]  ';'  expected	19	None	replace
148	[BUG]  [BUGGY]  Type  constructorType  =  scope.getConstructorType();  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  constructorType  =  scope.getConstructorType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  constructorType  =  scope.getConstructorType();	  Type    constructorType    =    type.getConstructorType();    	non-compiled	[CE]  ';'  expected	19	None	replace
149	[BUG]  [BUGGY]  Type  constructorType  =  ct.getConstructorType();  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  constructorType  =  ct.getConstructorType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  constructorType  =  ct.getConstructorType();	  Type    constructorType    =    type.getConstructorType();    	non-compiled	[CE]  ';'  expected	19	None	replace
150	[BUG]  [BUGGY]  Type  constructorType  =  type.getInstanceType();  [CE]  ';'  expected  [FE]                                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  constructorType  =  type.getInstanceType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  constructorType  =  type.getInstanceType();	  Type    constructorType    =    type.getConstructorType();    	non-compiled	[CE]  ';'  expected	19	None	replace
151	[BUG]  [BUGGY]  Type  constructorType  =  type.getConstructor();  [CE]  ';'  expected  [FE]                                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  constructorType  =  type.getConstructor();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  constructorType  =  type.getConstructor();	  Type    constructorType    =    type.getConstructorType();    	non-compiled	[CE]  ';'  expected	19	None	replace
152	[BUG]  [BUGGY]  FunctionType  ct  =  functionType.getCurrentType();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionType.getCurrentType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionType.getCurrentType();	  FunctionType    ct    =    functionType.getUnknownType();    	non-compiled	[CE]  ';'  expected	39	None	replace
153	[BUG]  [BUGGY]  FunctionType  ct  =  functionType!=  null?  functionType.getUnknownType()  :  null;  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionType!=  null?  functionType.getUnknownType()  :  null;  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionType!=  null?  functionType.getUnknownType()  :  null;	  FunctionType    ct    =    functionType.getUnknownType();    	non-compiled	[CE]  ';'  expected	39	None	replace
154	[BUG]  [BUGGY]  FunctionType  ct  =  scope.getConstructorType(type);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.getConstructorType(type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.getConstructorType(type);	  FunctionType    ct    =    scope.getConstructorType();    	non-compiled	[CE]  ';'  expected	3	None	replace
155	[BUG]  [BUGGY]  FunctionType  ct  =  type.getParameterType(0);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  type.getParameterType(0);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  type.getParameterType(0);	  FunctionType    ct    =    constructorType.getParameterType(0);    	non-compiled	[CE]  ';'  expected	36	None	replace
156	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getConstructorType(0);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getConstructorType(0);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getConstructorType(0);	  FunctionType    ct    =    constructorType.getParameterType(0);    	non-compiled	[CE]  ';'  expected	36	None	replace
157	[BUG]  [BUGGY]  FunctionType  ct  =  context.getFunctionType(type);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  context.getFunctionType(type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  context.getFunctionType(type);	  FunctionType    ct    =    context.getFunctionType();    	non-compiled	[CE]  ';'  expected	13	None	replace
158	[BUG]  [BUGGY]  FunctionType  ct  =  getNativeType(FUNCTION_TYPE);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  getNativeType(FUNCTION_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  getNativeType(FUNCTION_TYPE);	  FunctionType    ct    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	25	None	replace
159	[BUG]  [BUGGY]  FunctionType  ct  =  getNativeType(UNKNOWN_TYPE,  constructorType.getConstructor());  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  getNativeType(UNKNOWN_TYPE,  constructorType.getConstructor());  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  getNativeType(UNKNOWN_TYPE,  constructorType.getConstructor());	  FunctionType    ct    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	25	None	replace
160	[BUG]  [BUGGY]  FunctionType  ct  =  getNativeType(UNKNOWN_TYPE,  constructorType.getInstanceType());  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  getNativeType(UNKNOWN_TYPE,  constructorType.getInstanceType());  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  getNativeType(UNKNOWN_TYPE,  constructorType.getInstanceType());	  FunctionType    ct    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	25	None	replace
161	[BUG]  [BUGGY]  FunctionType  ct  =  contextType.restrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  contextType.restrictByNotNullOrUndefined();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  contextType.restrictByNotNullOrUndefined();	  FunctionType    ct    =    constructorType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	58	None	replace
162	[BUG]  [BUGGY]  FunctionType  ct  =  functionType.getActualFunctionType();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionType.getActualFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionType.getActualFunctionType();	  FunctionType    ct    =    functionType.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	45	None	replace
163	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getFunctionDeclaration(type);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getFunctionDeclaration(type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getFunctionDeclaration(type);	  FunctionType    ct    =    functionScope.getFunctionDeclaration();    	non-compiled	[CE]  ';'  expected	48	None	replace
164	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getOwnFunctionDeclaration();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getOwnFunctionDeclaration();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getOwnFunctionDeclaration();	  FunctionType    ct    =    functionScope.getFunctionDeclaration();    	non-compiled	[CE]  ';'  expected	48	None	replace
165	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType!=  null?  null  :  constructorType.getConstructorType();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType!=  null?  null  :  constructorType.getConstructorType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType!=  null?  null  :  constructorType.getConstructorType();	  FunctionType    ct    =    constructorType!=    null?    null    :    constructorType.toFunctionType();    	non-compiled	[CE]  ';'  expected	41	None	replace
166	[BUG]  [BUGGY]  FunctionType  constructorType  =  constructorType  ==  null?  null  :  constructorType.toFunctionType();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  constructorType  ==  null?  null  :  constructorType.toFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  constructorType  ==  null?  null  :  constructorType.toFunctionType();	  FunctionType    ct    =    constructorType!=    null?    null    :    constructorType.toFunctionType();    	non-compiled	[CE]  ';'  expected	41	None	replace
167	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType!=  null?  null  :  constructorType.getInstanceType();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType!=  null?  null  :  constructorType.getInstanceType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType!=  null?  null  :  constructorType.getInstanceType();	  FunctionType    ct    =    constructorType!=    null?    null    :    constructorType.toFunctionType();    	non-compiled	[CE]  ';'  expected	41	None	replace
168	[BUG]  [BUGGY]  FunctionType  ct  =  syntacticScope.createFunctionType(constructorType);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  syntacticScope.createFunctionType(constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  syntacticScope.createFunctionType(constructorType);	  FunctionType    ct    =    functionScope.createFunctionType(constructorType);    	non-compiled	[CE]  ';'  expected	47	None	replace
169	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getOwnerFunctionType();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getOwnerFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getOwnerFunctionType();	  FunctionType    ct    =    constructorType.getOwnerFunctionType();    	non-compiled	[CE]  ';'  expected	57	None	replace
170	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getCurrentType();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getCurrentType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getCurrentType();	  FunctionType    ct    =    functionScope.toFunctionType();    	non-compiled	[CE]  ';'  expected	28	None	replace
171	[BUG]  [BUGGY]  Constructor  <?>  ct  =  constructorType.getFunctionType();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  <?>  ct  =  constructorType.getFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  <?>  ct  =  constructorType.getFunctionType();	  Constructor    <?>    ct    =    constructorType.getInstanceType();    	non-compiled	[CE]  ';'  expected	52	None	replace
172	[BUG]  [BUGGY]  Constructor  <?>  ct  =  constructorType.getParent();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  <?>  ct  =  constructorType.getParent();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  <?>  ct  =  constructorType.getParent();	  Constructor    <?>    ct    =    constructorType.getInstanceType();    	non-compiled	[CE]  ';'  expected	52	None	replace
173	[BUG]  [BUGGY]  FunctionType  ct  =  buildorType.toFunctionType();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  buildorType.toFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  buildorType.toFunctionType();	  FunctionType    ct    =    type.toFunctionType();    	non-compiled	[CE]  ';'  expected	23	None	replace
174	[BUG]  [BUGGY]  Constructor  constructorType  =  getNativeType(NO_TYPE);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  constructorType  =  getNativeType(NO_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  constructorType  =  getNativeType(NO_TYPE);	  Constructor    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
175	[BUG]  [BUGGY]  Constructor  constructorType  =  getNativeType(UNKNOWN_TYPE,  INVALID_TYPE);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  constructorType  =  getNativeType(UNKNOWN_TYPE,  INVALID_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  constructorType  =  getNativeType(UNKNOWN_TYPE,  INVALID_TYPE);	  Constructor    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
176	[BUG]  [BUGGY]  FunctionType  ct  =  context.getFunctionType(n);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  context.getFunctionType(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  context.getFunctionType(n);	  FunctionType    ct    =    context.getFunctionType();    	non-compiled	[CE]  ';'  expected	13	None	replace
177	[BUG]  [BUGGY]  FunctionType  ct  =  buildorType.getConstructor();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  buildorType.getConstructor();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  buildorType.getConstructor();	  FunctionType    ct    =    type.getConstructor();    	non-compiled	[CE]  ';'  expected	4	None	replace
178	[BUG]  [BUGGY]  FunctionType  constructorType  =  functionScope.getFunctionType(n,  scope);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  functionScope.getFunctionType(n,  scope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  functionScope.getFunctionType(n,  scope);	  FunctionType    constructorType    =    functionScope.getFunctionType(n);    	non-compiled	[CE]  ';'  expected	32	None	replace
179	[BUG]  [BUGGY]  FunctionType  constructorType  =  functionScope.getFunctionType(function);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  functionScope.getFunctionType(function);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  functionScope.getFunctionType(function);	  FunctionType    constructorType    =    functionScope.getFunctionType(n);    	non-compiled	[CE]  ';'  expected	32	None	replace
180	[BUG]  [BUGGY]  FunctionType  constructorType  =  functionScope.getFunctionType(n,  false);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  functionScope.getFunctionType(n,  false);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  functionScope.getFunctionType(n,  false);	  FunctionType    constructorType    =    functionScope.getFunctionType(n);    	non-compiled	[CE]  ';'  expected	32	None	replace
181	[BUG]  [BUGGY]  JSType  constructorType  =  getNativeType(NO_TYPE);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  JSType  constructorType  =  getNativeType(NO_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	JSType  constructorType  =  getNativeType(NO_TYPE);	  JSType    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	15	None	replace
182	[BUG]  [BUGGY]  JSType  constructorType  =  getNativeType(UNKNOWN_TYPE,  constructorType);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  JSType  constructorType  =  getNativeType(UNKNOWN_TYPE,  constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	JSType  constructorType  =  getNativeType(UNKNOWN_TYPE,  constructorType);	  JSType    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	15	None	replace
183	[BUG]  [BUGGY]  FunctionType  constructorType  =  getNativeType(NO_TYPE);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  getNativeType(NO_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  getNativeType(NO_TYPE);	  FunctionType    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	31	None	replace
184	[BUG]  [BUGGY]  FunctionType  constructorType  =  getNativeType(FUNCTION_TYPE);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  getNativeType(FUNCTION_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  getNativeType(FUNCTION_TYPE);	  FunctionType    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	31	None	replace
185	[BUG]  [BUGGY]  FunctionType  constructorType  =  getNativeType(FunctionType.UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  getNativeType(FunctionType.UNKNOWN_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  getNativeType(FunctionType.UNKNOWN_TYPE);	  FunctionType    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	31	None	replace
186	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getConstructorType(constructorType);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getConstructorType(constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getConstructorType(constructorType);	  FunctionType    ct    =    functionScope.getFunctionType(type);    	non-compiled	[CE]  ';'  expected	33	None	replace
187	[BUG]  [BUGGY]  FunctionType  ct  =  syntacticScope.getFunctionType(type);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  syntacticScope.getFunctionType(type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  syntacticScope.getFunctionType(type);	  FunctionType    ct    =    functionScope.getFunctionType(type);    	non-compiled	[CE]  ';'  expected	33	None	replace
188	[BUG]  [BUGGY]  FunctionType  ct  =  scope.getFunctionType(type);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  scope.getFunctionType(type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  scope.getFunctionType(type);	  FunctionType    ct    =    functionScope.getFunctionType(type);    	non-compiled	[CE]  ';'  expected	33	None	replace
189	[BUG]  [BUGGY]  FunctionType  ct  =  functionType.getConstructor(n);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionType.getConstructor(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionType.getConstructor(n);	  FunctionType    ct    =    functionType.getConstructor();    	non-compiled	[CE]  ';'  expected	38	None	replace
190	[BUG]  [BUGGY]  FunctionType  ct  =  functionType!=  null?  functionType.getConstructor()  :  null;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionType!=  null?  functionType.getConstructor()  :  null;  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionType!=  null?  functionType.getConstructor()  :  null;	  FunctionType    ct    =    functionType.getConstructor();    	non-compiled	[CE]  ';'  expected	38	None	replace
191	[BUG]  [BUGGY]  Constructor  <?>  ct  =  contextType.getConstructor();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  <?>  ct  =  contextType.getConstructor();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  <?>  ct  =  contextType.getConstructor();	  Constructor    <?>    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	50	None	replace
192	[BUG]  [BUGGY]  Constructor  <?>  ct  =  constructorType.getCurrentConstructor();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  <?>  ct  =  constructorType.getCurrentConstructor();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  <?>  ct  =  constructorType.getCurrentConstructor();	  Constructor    <?>    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	50	None	replace
193	[BUG]  [BUGGY]  FunctionType  ct  =  buildorType.toConstructorType();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  buildorType.toConstructorType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  buildorType.toConstructorType();	  FunctionType    ct    =    type.toConstructorType();    	non-compiled	[CE]  ';'  expected	22	None	replace
194	[BUG]  [BUGGY]  FunctionType  ct  =  buildorType.getFunctionType();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  buildorType.getFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  buildorType.getFunctionType();	  FunctionType    ct    =    type.getFunctionType();    	non-compiled	[CE]  ';'  expected	11	None	replace
195	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getConstructorType(true);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getConstructorType(true);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getConstructorType(true);	  FunctionType    ct    =    functionScope.getConstructorType();    	non-compiled	[CE]  ';'  expected	2	None	replace
196	[BUG]  [BUGGY]  Type  ct  =  constructorType.getFunctionType();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  ct  =  constructorType.getFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  ct  =  constructorType.getFunctionType();	  Type    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	17	None	replace
197	[BUG]  [BUGGY]  Type  ct  =  contextType.getConstructor();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  ct  =  contextType.getConstructor();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  ct  =  contextType.getConstructor();	  Type    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	17	None	replace
198	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getNativeType(UNKNOWN_TYPE)+  1;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getNativeType(UNKNOWN_TYPE)+  1;  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getNativeType(UNKNOWN_TYPE)+  1;	  FunctionType    ct    =    constructorType.getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	21	None	replace
199	[BUG]  [BUGGY]  FunctionType  ct  =  contextType.getNativeType(UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  contextType.getNativeType(UNKNOWN_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  contextType.getNativeType(UNKNOWN_TYPE);	  FunctionType    ct    =    constructorType.getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	21	None	replace
200	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getNativeType(NO_TYPE);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getNativeType(NO_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getNativeType(NO_TYPE);	  FunctionType    ct    =    constructorType.getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	21	None	replace
201	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getCurrentScope();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getCurrentScope();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getCurrentScope();	  FunctionType    ct    =    constructorType.getCurrentType();    	non-compiled	[CE]  ';'  expected	40	None	replace
202	[BUG]  [BUGGY]  FunctionType  constructorType  =  functionScope.toMaybeFunctionType();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  functionScope.toMaybeFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  functionScope.toMaybeFunctionType();	  FunctionType    constructorType    =    type.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	46	None	replace
203	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getActualFunctionType(scope,  scope);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getActualFunctionType(scope,  scope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getActualFunctionType(scope,  scope);	  FunctionType    ct    =    constructorType.getActualFunctionType(scope);    	non-compiled	[CE]  ';'  expected	55	None	replace
204	[BUG]  [BUGGY]  FunctionType  ct  =  functionType!=  null?  functionType.getConstructor()  :  functionType.getUnknownType();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionType!=  null?  functionType.getConstructor()  :  functionType.getUnknownType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionType!=  null?  functionType.getConstructor()  :  functionType.getUnknownType();	  FunctionType    ct    =    functionType.getUnknownType();    	non-compiled	[CE]  ';'  expected	39	None	replace
205	[BUG]  [BUGGY]  FunctionType  ct  =  functionType!=  null?  functionType.getNativeType(UNKNOWN_TYPE):  functionType.getUnknownType();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionType!=  null?  functionType.getNativeType(UNKNOWN_TYPE):  functionType.getUnknownType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionType!=  null?  functionType.getNativeType(UNKNOWN_TYPE):  functionType.getUnknownType();	  FunctionType    ct    =    functionType.getUnknownType();    	non-compiled	[CE]  ';'  expected	39	None	replace
206	[BUG]  [BUGGY]  FunctionType  ct  =  functionType!=  null?  functionType.getCurrentType()  :  functionType.getUnknownType();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionType!=  null?  functionType.getCurrentType()  :  functionType.getUnknownType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionType!=  null?  functionType.getCurrentType()  :  functionType.getUnknownType();	  FunctionType    ct    =    functionType.getUnknownType();    	non-compiled	[CE]  ';'  expected	39	None	replace
207	[BUG]  [BUGGY]  Type  constructorType  =  constructorType.getConstructorType();  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  constructorType  =  constructorType.getConstructorType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  constructorType  =  constructorType.getConstructorType();	  Type    constructorType    =    type.getConstructorType();    	non-compiled	[CE]  ';'  expected	19	None	replace
208	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getActualFunctionType(type);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getActualFunctionType(type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getActualFunctionType(type);	  FunctionType    ct    =    functionScope.getActualFunctionType();    	non-compiled	[CE]  ';'  expected	37	None	replace
209	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getCurrentFunctionType();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getCurrentFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getCurrentFunctionType();	  FunctionType    ct    =    functionScope.getActualFunctionType();    	non-compiled	[CE]  ';'  expected	37	None	replace
210	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.functionType(getNativeType(UNKNOWN_TYPE));  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.functionType(getNativeType(UNKNOWN_TYPE));  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.functionType(getNativeType(UNKNOWN_TYPE));	  FunctionType    ct    =    functionScope.functionType();    	non-compiled	[CE]  ';'  expected	34	None	replace
211	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.functionType(0);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.functionType(0);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.functionType(0);	  FunctionType    ct    =    functionScope.functionType();    	non-compiled	[CE]  ';'  expected	34	None	replace
212	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.functionType(constructor);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.functionType(constructor);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.functionType(constructor);	  FunctionType    ct    =    functionScope.functionType();    	non-compiled	[CE]  ';'  expected	34	None	replace
213	[BUG]  [BUGGY]  Type  constructorType  =  getNativeType(NO_TYPE);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  constructorType  =  getNativeType(NO_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  constructorType  =  getNativeType(NO_TYPE);	  Type    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	14	None	replace
214	[BUG]  [BUGGY]  Type  constructorType  =  getNativeType(FUNCTION_TYPE);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  constructorType  =  getNativeType(FUNCTION_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  constructorType  =  getNativeType(FUNCTION_TYPE);	  Type    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	14	None	replace
215	[BUG]  [BUGGY]  type  =  getNativeType(FUNCTION_TYPE);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  type  =  getNativeType(FUNCTION_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	type  =  getNativeType(FUNCTION_TYPE);	  type    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	16	None	replace
216	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getInstanceType(n);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getInstanceType(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getInstanceType(n);	  FunctionType    ct    =    constructorType.getActualFunctionType(n);    	non-compiled	[CE]  ';'  expected	56	None	replace
217	[BUG]  [BUGGY]  FunctionType  ct  =  functionType.toFunctionType();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionType.toFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionType.toFunctionType();	  FunctionType    ct    =    functionType.toConstructorType();    	non-compiled	[CE]  ';'  expected	42	None	replace
218	[BUG]  [BUGGY]  FunctionType  ct  =  context.getConstructor(n);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  context.getConstructor(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  context.getConstructor(n);	  FunctionType    ct    =    context.getConstructor();    	non-compiled	[CE]  ';'  expected	7	None	replace
219	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getConstructor(true);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getConstructor(true);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getConstructor(true);	  FunctionType    ct    =    functionScope.getConstructor();    	non-compiled	[CE]  ';'  expected	5	None	replace
220	[BUG]  [BUGGY]  FunctionType  ct  =  functionType.getConstructorInstanceType();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionType.getConstructorInstanceType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionType.getConstructorInstanceType();	  FunctionType    ct    =    functionType.getConstructorType();    	non-compiled	[CE]  ';'  expected	35	None	replace
221	[BUG]  [BUGGY]  Type  ct  =  constructorType.getReferenceName();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  ct  =  constructorType.getReferenceName();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  ct  =  constructorType.getReferenceName();	  Type    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	17	None	replace
222	[BUG]  [BUGGY]  Type  ct  =  constructorType.getParameterType(0);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  ct  =  constructorType.getParameterType(0);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  ct  =  constructorType.getParameterType(0);	  Type    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	17	None	replace
223	[BUG]  [BUGGY]  FunctionType  ct  =  buildorType.getActualFunctionType();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  buildorType.getActualFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  buildorType.getActualFunctionType();	  FunctionType    ct    =    type.getActualFunctionType();    	non-compiled	[CE]  ';'  expected	20	None	replace
224	[BUG]  [BUGGY]  FunctionType  ct  =  context.getActualFunctionType();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  context.getActualFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  context.getActualFunctionType();	  FunctionType    ct    =    type.getActualFunctionType();    	non-compiled	[CE]  ';'  expected	20	None	replace
225	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getActualFunctionType(constructorType);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getActualFunctionType(constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getActualFunctionType(constructorType);	  FunctionType    ct    =    functionScope.getActualFunctionType();    	non-compiled	[CE]  ';'  expected	37	None	replace
226	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getOwnActualFunctionType();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getOwnActualFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getOwnActualFunctionType();	  FunctionType    ct    =    functionScope.getActualFunctionType();    	non-compiled	[CE]  ';'  expected	37	None	replace
227	[BUG]  [BUGGY]  type  =  getNativeType(NOT_OBJECT_TYPE);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  type  =  getNativeType(NOT_OBJECT_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	type  =  getNativeType(NOT_OBJECT_TYPE);	  type    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	16	None	replace
228	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getActualFunctionType(n,  type);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getActualFunctionType(n,  type);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getActualFunctionType(n,  type);	  FunctionType    ct    =    constructorType.getActualFunctionType(n);    	non-compiled	[CE]  ';'  expected	56	None	replace
229	[BUG]  [BUGGY]  Constructor  constructorType  =  getNativeType(UNKNOWN_TYPE,  constructorType);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  constructorType  =  getNativeType(UNKNOWN_TYPE,  constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  constructorType  =  getNativeType(UNKNOWN_TYPE,  constructorType);	  Constructor    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
230	[BUG]  [BUGGY]  Constructor  constructorType  =  getNativeType(FUNCTION_TYPE);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  constructorType  =  getNativeType(FUNCTION_TYPE);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  constructorType  =  getNativeType(FUNCTION_TYPE);	  Constructor    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	18	None	replace
231	[BUG]  [BUGGY]  FunctionType  ct  =  functionType!=  null?  functionType.toConstructorType()  :  null;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionType!=  null?  functionType.toConstructorType()  :  null;  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionType!=  null?  functionType.toConstructorType()  :  null;	  FunctionType    ct    =    functionType.toConstructorType();    	non-compiled	[CE]  ';'  expected	42	None	replace
232	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getFunctionDeclaration(scope);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getFunctionDeclaration(scope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getFunctionDeclaration(scope);	  FunctionType    ct    =    functionScope.getFunctionDeclaration();    	non-compiled	[CE]  ';'  expected	48	None	replace
233	[BUG]  [BUGGY]  FunctionType  constructorType  =  getNativeType(UNKNOWN_TYPE,  constructorType);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  getNativeType(UNKNOWN_TYPE,  constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  getNativeType(UNKNOWN_TYPE,  constructorType);	  FunctionType    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	31	None	replace
234	[BUG]  [BUGGY]  Type  constructorType  =  getNativeType(UNKNOWN_TYPE,  constructorType);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  constructorType  =  getNativeType(UNKNOWN_TYPE,  constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  constructorType  =  getNativeType(UNKNOWN_TYPE,  constructorType);	  Type    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	14	None	replace
235	[BUG]  [BUGGY]  Type  constructorType  =  getNativeType(UNKNOWN_TYPE)+  1;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Type  constructorType  =  getNativeType(UNKNOWN_TYPE)+  1;  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Type  constructorType  =  getNativeType(UNKNOWN_TYPE)+  1;	  Type    constructorType    =    getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	14	None	replace
236	[BUG]  [BUGGY]  FunctionType  constructorType  =  type.getInstanceType();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  type.getInstanceType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  type.getInstanceType();	  FunctionType    ct    =    type.getInstanceType();    	non-compiled	[CE]  ';'  expected	8	None	replace
237	[BUG]  [BUGGY]  FunctionType  constructorType  =  functionScope.getFunctionType(constructor);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  functionScope.getFunctionType(constructor);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  functionScope.getFunctionType(constructor);	  FunctionType    constructorType    =    functionScope.getFunctionType(n);    	non-compiled	[CE]  ';'  expected	32	None	replace
238	[BUG]  [BUGGY]  FunctionType  constructorType  =  functionScope.getOwnFunctionType(n);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  functionScope.getOwnFunctionType(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  functionScope.getOwnFunctionType(n);	  FunctionType    constructorType    =    functionScope.getFunctionType(n);    	non-compiled	[CE]  ';'  expected	32	None	replace
239	[BUG]  [BUGGY]  FunctionType  constructorType  =  functionScope.getFunctionType(n,  context);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  functionScope.getFunctionType(n,  context);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  functionScope.getFunctionType(n,  context);	  FunctionType    constructorType    =    functionScope.getFunctionType(n);    	non-compiled	[CE]  ';'  expected	32	None	replace
240	[BUG]  [BUGGY]  FunctionType  ct  =  functionType!=  null?  functionType.getConstructorType()  :  null;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionType!=  null?  functionType.getConstructorType()  :  null;  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionType!=  null?  functionType.getConstructorType()  :  null;	  FunctionType    ct    =    functionType.getConstructorType();    	non-compiled	[CE]  ';'  expected	35	None	replace
241	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType!=  null?  null  :  constructorType.getReturnType();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType!=  null?  null  :  constructorType.getReturnType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType!=  null?  null  :  constructorType.getReturnType();	  FunctionType    ct    =    constructorType!=    null?    null    :    constructorType.toFunctionType();    	non-compiled	[CE]  ';'  expected	41	None	replace
242	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getConstructor(constructorType);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getConstructor(constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getConstructor(constructorType);	  FunctionType    ct    =    functionScope.getConstructor();    	non-compiled	[CE]  ';'  expected	5	None	replace
243	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.createFunctionType(constructorType,  getNativeType(UNKNOWN_TYPE));  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.createFunctionType(constructorType,  getNativeType(UNKNOWN_TYPE));  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.createFunctionType(constructorType,  getNativeType(UNKNOWN_TYPE));	  FunctionType    ct    =    functionScope.createFunctionType(constructorType);    	non-compiled	[CE]  ';'  expected	47	None	replace
244	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.createFunctionType(constructorType,  scope);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.createFunctionType(constructorType,  scope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.createFunctionType(constructorType,  scope);	  FunctionType    ct    =    functionScope.createFunctionType(constructorType);    	non-compiled	[CE]  ';'  expected	47	None	replace
245	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getCurrentConstructor();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getCurrentConstructor();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getCurrentConstructor();	  FunctionType    ct    =    constructorType.getCurrentType();    	non-compiled	[CE]  ';'  expected	40	None	replace
246	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.cloneTree();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.cloneTree();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.cloneTree();	  FunctionType    ct    =    constructorType.getCurrentType();    	non-compiled	[CE]  ';'  expected	40	None	replace
247	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getRawClass();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getRawClass();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getRawClass();	  FunctionType    ct    =    constructorType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  ';'  expected	58	None	replace
248	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getActualFunctionType(scope,  functionScope);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getActualFunctionType(scope,  functionScope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getActualFunctionType(scope,  functionScope);	  FunctionType    ct    =    constructorType.getActualFunctionType(scope);    	non-compiled	[CE]  ';'  expected	55	None	replace
249	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getActualFunctionType(scope,  operationScope);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getActualFunctionType(scope,  operationScope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getActualFunctionType(scope,  operationScope);	  FunctionType    ct    =    constructorType.getActualFunctionType(scope);    	non-compiled	[CE]  ';'  expected	55	None	replace
250	[BUG]  [BUGGY]  FunctionType  constructorType  =  constructorType.toMaybeFunctionType();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  constructorType.toMaybeFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  constructorType.toMaybeFunctionType();	  FunctionType    constructorType    =    type.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	46	None	replace
251	[BUG]  [BUGGY]  FunctionType  constructorType  =  functionScope.getFunctionType(constructorType);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  functionScope.getFunctionType(constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  functionScope.getFunctionType(constructorType);	  FunctionType    constructorType    =    type.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	46	None	replace
252	[BUG]  [BUGGY]  FunctionType  ct  =  constructor.getInstanceType();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructor.getInstanceType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructor.getInstanceType();	  FunctionType    ct    =    context.getInstanceType();    	non-compiled	[CE]  ';'  expected	10	None	replace
253	[BUG]  [BUGGY]  Constructor  <?>  ct  =  constructorType.cloneTree();  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  <?>  ct  =  constructorType.cloneTree();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  <?>  ct  =  constructorType.cloneTree();	  Constructor    <?>    ct    =    constructorType.getInstanceType();    	non-compiled	[CE]  ';'  expected	52	None	replace
254	[BUG]  [BUGGY]  Constructor  <?>  ct  =  constructorType.getConstructorClass();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  <?>  ct  =  constructorType.getConstructorClass();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  <?>  ct  =  constructorType.getConstructorClass();	  Constructor    <?>    ct    =    constructorType.getInstanceType();    	non-compiled	[CE]  ';'  expected	52	None	replace
255	[BUG]  [BUGGY]  Constructor  <?>  ct  =  constructorType.getConstructorInstance();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  <?>  ct  =  constructorType.getConstructorInstance();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  <?>  ct  =  constructorType.getConstructorInstance();	  Constructor    <?>    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	50	None	replace
256	[BUG]  [BUGGY]  Constructor  <?>  ct  =  constructorType.getOwnerFunction();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  Constructor  <?>  ct  =  constructorType.getOwnerFunction();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	Constructor  <?>  ct  =  constructorType.getOwnerFunction();	  Constructor    <?>    ct    =    constructorType.getConstructor();    	non-compiled	[CE]  ';'  expected	50	None	replace
257	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.getOwnFunctionType(constructorType);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  functionScope.getOwnFunctionType(constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.getOwnFunctionType(constructorType);	  FunctionType    ct    =    functionScope.getFunctionType(type);    	non-compiled	[CE]  ';'  expected	33	None	replace
258	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getOwnerFunctionType(scope);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getOwnerFunctionType(scope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getOwnerFunctionType(scope);	  FunctionType    ct    =    constructorType.getOwnerFunctionType();    	non-compiled	[CE]  ';'  expected	57	None	replace
259	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getOwnerFunctionType(n);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getOwnerFunctionType(n);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getOwnerFunctionType(n);	  FunctionType    ct    =    constructorType.getOwnerFunctionType();    	non-compiled	[CE]  ';'  expected	57	None	replace
260	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.toActualFunctionType();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.toActualFunctionType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.toActualFunctionType();	  FunctionType    ct    =    buildorType.toMaybeFunctionType();    	non-compiled	[CE]  ';'  expected	44	None	replace
261	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getConstructorInstance();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getConstructorInstance();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getConstructorInstance();	  FunctionType    ct    =    constructorType.getConstructorInstanceType();    	non-compiled	[CE]  ';'  expected	53	None	replace
262	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getConstructorParameterType(0);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructorType.getConstructorParameterType(0);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getConstructorParameterType(0);	  FunctionType    ct    =    constructorType.getConstructorInstanceType();    	non-compiled	[CE]  ';'  expected	53	None	replace
263	[BUG]  [BUGGY]  FunctionType  constructorType  =  getConstructorType(n,  context);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  getConstructorType(n,  context);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  getConstructorType(n,  context);	  FunctionType    constructorType    =    getConstructorType(n);    	non-compiled	[CE]  ';'  expected	51	None	replace
264	[BUG]  [BUGGY]  FunctionType  constructorType  =  getConstructorType(n.toString());  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  constructorType  =  getConstructorType(n.toString());  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  constructorType  =  getConstructorType(n.toString());	  FunctionType    constructorType    =    getConstructorType(n);    	non-compiled	[CE]  ';'  expected	51	None	replace
265	[BUG]  [BUGGY]  FunctionType  ct  =  constructor.getConstructorType();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  constructor.getConstructorType();  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructor.getConstructorType();	  FunctionType    ct    =    context.getConstructorType();    	non-compiled	[CE]  ';'  expected	54	None	replace
266	[BUG]  [BUGGY]  FunctionType  ct  =  context.getFunctionType(constructorType);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  context.getFunctionType(constructorType);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  context.getFunctionType(constructorType);	  FunctionType    ct    =    context.getFunctionType();    	non-compiled	[CE]  ';'  expected	13	None	replace
267	[BUG]  [BUGGY]  FunctionType  ct  =  context.getFunctionType(functionScope);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {      [BUGGY]  FunctionType  ct  =  context.getFunctionType(functionScope);  [BUGGY]      if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  context.getFunctionType(functionScope);	  FunctionType    ct    =    context.getFunctionType();    	non-compiled	[CE]  ';'  expected	13	None	replace
