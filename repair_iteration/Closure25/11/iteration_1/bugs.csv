bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  FunctionType  ct  =  type.toMaybeFunctionType();  [CE]  ';'  expected  [FE]    ComparisonFailure  [CONTEXT]  if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  [BUGGY]  FunctionType  ct  =  type.toMaybeFunctionType();  [BUGGY]  if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  type.toMaybeFunctionType();	FunctionType  ct  =  constructorType.toMaybeFunctionType();  	non-compiled	[CE]  ';'  expected	21	None	replace
2	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getFunctionType();  [CE]  ';'  expected  [FE]      ComparisonFailure  [CONTEXT]  if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  [BUGGY]  FunctionType  ct  =  constructorType.getFunctionType();  [BUGGY]  if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getFunctionType();	FunctionType  ct  =  constructorType.toMaybeFunctionType();  	non-compiled	[CE]  ';'  expected	21	None	replace
3	[BUG]  [BUGGY]  FunctionType  ct  =  functionScope.toMaybeFunctionType();  [CE]  ';'  expected  [FE]        ComparisonFailure  [CONTEXT]  if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  [BUGGY]  FunctionType  ct  =  functionScope.toMaybeFunctionType();  [BUGGY]  if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  functionScope.toMaybeFunctionType();	FunctionType  ct  =  constructorType.toMaybeFunctionType();  	non-compiled	[CE]  ';'  expected	21	None	replace
4	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getConstructor();  [CE]  ';'  expected  [FE]          ComparisonFailure  [CONTEXT]  if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  [BUGGY]  FunctionType  ct  =  constructorType.getConstructor();  [BUGGY]  if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getConstructor();	FunctionType  ct  =  constructorType.toMaybeFunctionType();  	non-compiled	[CE]  ';'  expected	21	None	replace
5	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getConstructorType();  [CE]  ';'  expected  [FE]            ComparisonFailure  [CONTEXT]  if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  [BUGGY]  FunctionType  ct  =  constructorType.getConstructorType();  [BUGGY]  if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getConstructorType();	FunctionType  ct  =  constructorType.toMaybeFunctionType();  	non-compiled	[CE]  ';'  expected	21	None	replace
6	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getInstanceType();  [CE]  ';'  expected  [FE]              ComparisonFailure  [CONTEXT]  if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  [BUGGY]  FunctionType  ct  =  constructorType.getInstanceType();  [BUGGY]  if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getInstanceType();	FunctionType  ct  =  constructorType.toMaybeFunctionType();  	non-compiled	[CE]  ';'  expected	21	None	replace
7	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getUnknownType();  [CE]  ';'  expected  [FE]                ComparisonFailure  [CONTEXT]  if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  [BUGGY]  FunctionType  ct  =  constructorType.getUnknownType();  [BUGGY]  if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getUnknownType();	FunctionType  ct  =  constructorType.toMaybeFunctionType();  	non-compiled	[CE]  ';'  expected	21	None	replace
8	[BUG]  [BUGGY]    [CE]  ';'  expected  [FE]                  ComparisonFailure  [CONTEXT]  if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  [BUGGY]    [BUGGY]  if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	  	FunctionType  ct  =  constructorType.toMaybeFunctionType();  	non-compiled	[CE]  ';'  expected	21	None	replace
9	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.toFunctionType();  [CE]  ';'  expected  [FE]    ComparisonFailure  [CONTEXT]  if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  [BUGGY]  FunctionType  ct  =  constructorType.toFunctionType();  [BUGGY]  if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.toFunctionType();	FunctionType  ct  =  constructorType.toMaybeFunctionType();  	non-compiled	[CE]  ';'  expected	21	None	replace
10	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.getActualFunctionType();  [CE]  ';'  expected  [FE]    ComparisonFailure  [CONTEXT]  if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  [BUGGY]  FunctionType  ct  =  constructorType.getActualFunctionType();  [BUGGY]  if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.getActualFunctionType();	FunctionType  ct  =  constructorType.toMaybeFunctionType();  	non-compiled	[CE]  ';'  expected	21	None	replace
11	[BUG]  [BUGGY]  FunctionType  ct  =  constructorType.toConstructorType();  [CE]  ';'  expected  [FE]      ComparisonFailure  [CONTEXT]  if  (constructorType.isUnknownType())  {  type  =  getNativeType(UNKNOWN_TYPE);  }  else  {  [BUGGY]  FunctionType  ct  =  constructorType.toConstructorType();  [BUGGY]  if  (ct  ==  null  &&  constructorType  instanceof  FunctionType)  {    ct  =  (FunctionType)  constructorType;  }  if  (ct  !=  null  &&  ct.isConstructor())  {  type  =  ct.getInstanceType();  }  }  [CLASS]  TypeInference  BooleanOutcomePair  [METHOD]  traverseNew  [RETURN_TYPE]  FlowScope  Node  n  FlowScope  scope  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  JSTypeRegistry  registry  JSType  constructorType  type  boolean  Scope  functionScope  syntacticScope  DiagnosticType  FUNCTION_LITERAL_UNDEFINED_THIS  TEMPLATE_TYPE_NOT_OBJECT_TYPE  TEMPLATE_TYPE_OF_THIS_EXPECTED  Node  arg  constructor  n  FunctionType  ct  BooleanLiteralSet  booleanValues  toBooleanOutcomes  Map  assertionFunctionsMap  FlowScope  bottomScope  conditionFlowScope  falseScope  functionScope  informed  input  joinedScope  leftScope  newScope  output  rightScope  scope  trueScope  	projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java	0.5	1046	1046	1	replace	FunctionType  ct  =  constructorType.toConstructorType();	FunctionType  ct  =  constructorType.toMaybeFunctionType();  	non-compiled	[CE]  ';'  expected	21	None	replace
