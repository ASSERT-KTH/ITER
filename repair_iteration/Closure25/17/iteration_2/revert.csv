projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getInstanceType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)type:(FunctionType)n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)type:(FunctionType)n.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null&&scope.getType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getSyntacticScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getConstructorScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(UNKNOWN_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getFunctionScope(n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getInstanceScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype!=null?scope:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype==null?scope:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype!=null?scope:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype==null?scope:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.UNKNOWN_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.NO_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.NO_OBJECT_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.OBJECT_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)n.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnninstanceofFunctionType?(FunctionType)type:(FunctionType)n.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)arg:(FunctionType)n.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.cloneTree();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(),n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null||scope.getType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null&&scope.getType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?null:scope.getType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null&&scope.getType()>=Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null||scope.getType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope>=null&&scope.getType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(JSTypect:n.getJSTypes()){if(ct.isConstructor()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypect:n.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypect:n.getJSType()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(JSTypect:n.getJSTypes()){if(type!=null){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypect:n.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypect:n.getJSType()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getConstructor();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getInstanceType().restrictByNotNullOrUndefined();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME?scope:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME?null:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()!=Token.NAME?scope:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()!=Token.NAME?null:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.FUNCTION?scope:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(n,ct);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(n,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.evaluate(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(n,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?null:scope.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneBoolean();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?scope:newBooleanOutcome(n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn!=null?scope:newBooleanOutcome(n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(n.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)scope.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n.getParent();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)scope.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n,scope.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?scope:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn!=null?scope:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:arg.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?type:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnninstanceofFunctionType?(FunctionType)type:(FunctionType)n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)arg:(FunctionType)n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnninstanceofFunctionType?(FunctionType)scope:(FunctionType)n.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n.getConstructor();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null&&scope.getJSType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null&&scope.getInstanceType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)type.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntypeinstanceofFunctionType?(FunctionType)type:(FunctionType)n.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n.getParameterType(0);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(n.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.toFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneChildren();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getInstanceType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?null:scope.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntypeinstanceofFunctionType?(FunctionType)type:(FunctionType)n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)type.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getFirstChild();arg!=null;arg.getNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getNext();arg!=null;arg.getNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getFirstChild();arg!=null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getFirstChild();arg!=null;arg.next()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getNext();arg!=null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getFirstChild();arg!=null;arg.getNext()){type=arg.getNext();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype!=null?scope:constructorType;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype==null?scope:constructorType;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype==null?"null":type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype==null?null:type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.NULL_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(n,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn!=null?scope:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn!=null?scope:newBooleanOutcomePair(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn!=null?scope:newBooleanOutcomePair();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?newBooleanOutcome(n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(n.getJSType(),arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(n.getJSType(),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null&&type.getType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype==null?getNativeType(UNKNOWN_TYPE):type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype==null?getNativeType(UNKNOWN_TYPE):null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(FunctionTypect:n.getConstructors()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(FunctionTypect:n.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(FunctionTypect:n.getParameterTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(FunctionTypect:n.getConstructorTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(FunctionTypect:n.getConstructors()){type=ct.getJSType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(FunctionTypect:n.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME&&n.getJSType().equals(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME&&n.getJSType().equalsIgnoreCase(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME&&n.getJSType().equals(scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME&&n.getJSType().equals(type)?scope:null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)type:(FunctionType)n.getParameterType(0);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.toFront();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getFunction();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree()&&n.getJSType()!=type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree()&&n.getJSType()==type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?type:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn!=null?type:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?constructorType:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype!=null?getNativeType(UNKNOWN_TYPE):null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?getNativeType(UNKNOWN_TYPE):null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype==null?getNativeType(UNKNOWN_TYPE):scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype!=null?getNativeType(UNKNOWN_TYPE):scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn==null?getNativeType(UNKNOWN_TYPE):null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.NULL_TYPE,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getNativeType(JSTypeNative.NULL_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.NULL_TYPE,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.NULL_TYPE)+1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?null:scope.getType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?null:scope.getType()>>Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?null:scope.getType()>=Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?null:scope.getType(){Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null||scope.getType()>=Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnarg.getInstanceType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype.getInstanceType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getConstructorScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getConstructorScope(n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntypeinstanceofFunctionType?(FunctionType)type:(FunctionType)n,scope.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?scope:newBooleanOutcome(n.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(arg.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(scope.getJSType(),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(scope.getJSType(),arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?n:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?n.getJSType():n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn==null?scope:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?n:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(),n,type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.cloneTree(),scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(),n,null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(),arg;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(),n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(),n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(),type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(type!=null){for(Nodearg=constructor.getFirstChild();arg!=null;arg.getNext()){type=arg.getNext();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=scope.getFirstChild();arg!=null;arg.getNext()){type=arg.getNext();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=context.getFirstChild();arg!=null;arg.getNext()){type=arg.getNext();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getLastChild();arg!=null;arg.getNext()){type=arg.getNext();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getFirstChild();arg!=null;arg.getNext()){type=scope.getNext();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getFirstChild();arg==null;arg.getNext()){type=arg.getNext();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()==Token.NAME&&n.getJSType().equals(type)?n:null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()==Token.NAME&&n.getJSType().equals(type)?null:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME||n.getJSType().equals(type)?scope:null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME&&n.getJSType().equals(scope)?scope:null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype.getType()==Token.NAME&&n.getJSType().equals(type)?scope:null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()!=Token.NAME&&n.getJSType().equals(type)?scope:null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?scope:newBooleanOutcome(scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(scope.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(scope.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(scope.getJSType()+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?newBooleanOutcome(scope.getJSType()):null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree()||n.getJSType()==type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.cloneTree()&&scope.getJSType()==type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype.cloneTree()&&n.getJSType()==scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree()&&n.getJSType()==constructorType;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree()&&type.getJSType()==n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(JSTypect:n.getJSType()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(arg!=null){for(JSTypect:n.getJSType()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(arg!=null){for(JSTypen:n.getJSType()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(JSTypect:arg.getJSType()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062Scopescope=traverse(ct,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(JSTypect:n.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(JSTypect:n.getJSType()){scope=traverse(scope,ct);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)n.getParameterType(0);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)scope.getParameterType(0);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n.getConstructorType(0);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?scope:newBooleanOutcome(n.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(n.getJSType(),type,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(arg.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(n.getJSType(),constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.toFunctionScope(n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.toSyntacticScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.toBooleanScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.toFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.toFunctionScope(false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(n,arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(n,arg,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(scope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)arg;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()==Token.NAME&&n.getJSType().equalsIgnoreCase(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME||n.getJSType().equalsIgnoreCase(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME&&n.getJSType().equalsIgnoreCase(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype.getType()==Token.NAME&&n.getJSType().equalsIgnoreCase(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnarg.getType()==Token.NAME&&n.getJSType().equalsIgnoreCase(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?"null":scope.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?null:scope.cloneTree();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?"null":scope.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?n:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn==null?scope:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn!=null?scope:n.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null&&scope.getType()!=Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null||scope.getType()!=Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null&&scope.getType()>>Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcomePair();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?newBooleanOutcomePair():null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?newBooleanOutcomePair():newBooleanOutcomePair();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn==null?scope:newBooleanOutcomePair();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?scope:newBooleanOutcomePair();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?newBooleanOutcomePair():null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?scope:arg.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnarg!=null?scope:arg.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?type:arg.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneBoolean()?Boolean.TRUE:Boolean.FALSE;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneBoolean()?Boolean.FALSE:Boolean.TRUE;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneBoolean()?true:false;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneBoolean()?false:false;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntypeinstanceofFunctionType?(FunctionType)n:(FunctionType)n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(Nodearg=constructor.getFirstChild();arg!=null;arg.getNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getLastChild();arg!=null;arg.getNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(Nodearg=constructor.getLastChild();arg!=null;arg.getNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getFirstChild();arg==null;arg.getNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getFirstChild();arg>=null;arg.getNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getFirstChild();arg!=null;arg.getParent()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(scope,n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(scope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(scope,n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(scope,n,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.evaluate(scope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()!=Token.NAME?n:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()==Token.NAME?n:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()!=Token.NAME?scope:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.cloneTree(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(n,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(n,ct);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(JSTypect:arg.getJSTypes()){if(ct.isConstructor()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(JSTypect:n.getJSTypes()){if(ct.isConstructor()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(JSTypect:arg.getJSTypes()){if(ct.isConstructor()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(JSTypect:n.getJSTypes()){if(ct.isConstructor()||ct.isConstructor()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(JSTypect:n.getJSTypes()){if(ct.isConstructor()||ct.isInstanceType()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(JSTypect:n.getJSTypes()){if(!ct.isConstructor()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnninstanceofFunctionType?(FunctionType)n:(FunctionType)scope.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)arg:(FunctionType)scope.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)arg.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)type.getReturnType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)arg.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null||scope.getJSType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null&&scope.getJSType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?null:scope.getJSType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null&&scope.getJSType()>=Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null||scope.getJSType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062n.setJSType(constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062n.setJSType(ct.getInstanceType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062n.setJSType(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062n.setJSType(ct.getConstructor());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062n.setJSType(arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree()||n.getJSType()!=type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.cloneTree()&&scope.getJSType()!=type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree()&&constructorType.getJSType()!=type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype.cloneTree()&&n.getJSType()!=scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getSyntacticScope().cloneTree();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(Nodearg=constructor.getFirstChild();arg!=null;arg.next()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getLastChild();arg!=null;arg.next()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062parent!=null&&parent.getType()==Token.FUNCTION){for(Nodearg=constructor.getFirstChild();arg!=null;arg.next()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getFirstChild();arg==null;arg.next()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(Nodearg=constructor.getFirstChild();arg!=null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(FunctionTypect:n.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(FunctionTypect:n.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null){for(FunctionTypect:n.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(FunctionTypen:n.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null){for(FunctionTypen:n.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){FunctionTypect=ct.getInstanceType();if(ct!=null&&ct.isConstructor()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){FunctionTypect=ct.getJSType();if(ct!=null&&ct.isConstructor()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(FunctionTypect:n.getParameterTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null){for(FunctionTypect:n.getParameterTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(FunctionTypect:n.getParameterTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(arg!=null){for(FunctionTypect:n.getParameterTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(FunctionTypen:n.getParameterTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(FunctionTypect:n.getParameterTypes()){type=ct.getInstanceType();}}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062type=ct.getInstanceType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?scope:newBooleanOutcome(arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(arg,n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.evaluate(scope,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntraverse.evaluate(arg,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntraverse(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnarg.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(n,constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getInstanceScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getInstanceScope(n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getReturnScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.NO_OBJECT_TYPE,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getNativeType(JSTypeNative.NO_OBJECT_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.NO_OBJECT_TYPE,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.NO_OBJECT_TYPE)+1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?newBooleanOutcome(arg.getJSType()):null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(arg.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?null:newBooleanOutcomePair(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?newBooleanOutcomePair(scope):null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcomePair(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn==null?scope:newBooleanOutcomePair(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?null:newBooleanOutcomePair(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?this:newBooleanOutcomePair(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(scope,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(scope,true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getLastChild();arg!=null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(Nodearg=constructor.getLastChild();arg!=null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getFirstChild();arg==null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getFirstChild();arg>=null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062parent!=null&&parent.getType()==Token.FUNCTION){scope=traverse(arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnconstructorType==null?scope:type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?scope:constructorType;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?constructorType:type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnconstructor==null?scope:type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?type:constructorType;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype!=null?getNativeType(UNKNOWN_TYPE):type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?getNativeType(UNKNOWN_TYPE):type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype==null?getNativeType(UNKNOWN_TYPE):type.toString();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?newBooleanOutcome(n.getJSType()):null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn==null?scope:newBooleanOutcome(n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn!=null?scope:newBooleanOutcome(arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnarg.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getJSType().restrictByNotNullOrUndefined();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getJSType().cloneTree();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(arg!=null){for(JSTypect:n.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(arg!=null){for(JSTypen:n.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(JSTypect:n.getJSTypes()){scope=traverse(scope,ct);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(arg!=null){for(JSTypect:n.getJSTypes()){scope=traverse(scope,ct);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062scope=traverse(ct,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null){for(FunctionTypect:n.getConstructorTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(FunctionTypect:n.getConstructorTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(FunctionTypect:n.getConstructorTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(FunctionTypect:n.getConstructorTypes()){type=ct.getInstanceType();}}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null){for(FunctionTypect:ct.getConstructorTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null){for(FunctionTypen:ct.getConstructorTypes()){type=n.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(FunctionTypen:n.getConstructorTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype.cloneTree();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.cloneJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.cloneType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.cloneTree(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(),n,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(),n,this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(),arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.cloneChildren();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneChildren(),n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneChildren(),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null){for(FunctionTypect:n.getConstructors()){type=ct.getJSType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(FunctionTypect:n.getConstructors()){type=ct.getJSType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(FunctionTypect:n.getConstructors()){type=ct.getJSType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null){for(FunctionTypect:n.getConstructors()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(FunctionTypect:n.getConstructors()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null||scope.getInstanceType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null&&scope.getInstanceType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null&&scope.getConstructorType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null&&scope.getReturnType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null||scope.getInstanceType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)scope.getParent();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)scope.getConstructor();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)scope.getDeclaredTypes();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.evaluate(scope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.evaluate(scope,operationScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.evaluate(scope,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME&&n.getJSType().equals(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()==Token.NAME&&n.getJSType().equals(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME||n.getJSType().equals(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype.getType()==Token.NAME&&n.getJSType().equals(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnarg.getType()==Token.NAME&&n.getJSType().equals(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()!=Token.NAME&&n.getJSType().equals(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getInstanceType().restrictByNotNullOrUndefined(),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getInstanceType().restrictByNotNullOrUndefined(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getInstanceType().restrictByNotNullOrUndefined();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getInstanceType().restrictByNotNullOrUndefined(),type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getInstanceType().restrictByNotNullOrUndefined()&&type.equals(n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getInstanceType().restrictByNotNullOrUndefined()&&n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null&&scope.getType()!=Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?scope:newBooleanOutcome(n.getJSType(),arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(arg.getJSType(),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(n.getJSType(),arg,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(n.getJSType(),arg,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?null:scope.cloneTree();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope>=null?null:scope.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.NO_TYPE,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.NO_TYPE,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getNativeType(JSTypeNative.NO_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.NO_TYPE)+1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnninstanceofFunctionType?(FunctionType)arg:(FunctionType)n.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntypeinstanceofFunctionType?(FunctionType)n:(FunctionType)type.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)arg:(FunctionType)type.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnninstanceofFunctionType?(FunctionType)n:(FunctionType)type.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnconstructorType!=null?scope:type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:constructorType;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?constructorType:type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?type:constructorType;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(JSTypect:n.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(arg!=null){for(JSTypect:n.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null){for(JSTypect:n.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null){for(JSTypen:n.getJSTypes()){type=n.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(arg!=null){for(JSTypen:n.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(arg!=null){for(JSTypect:n.getJSTypes()){type=scope.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.OBJECT_TYPE,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getNativeType(JSTypeNative.OBJECT_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.OBJECT_TYPE,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME?scope:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()==Token.NAME?arg:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME?scope:n.cloneTree();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME?scope:n.toString();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(JSTypetype:n.getJSTypes()){if(type!=null){type=type.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(JSTypect:n.getJSTypes()){if(type!=null){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(JSTypect:arg.getJSTypes()){if(type!=null){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(JSTypect:arg.getJSTypes()){if(type!=null){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(JSTypect:n.getJSTypes()){if(type==null){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(JSTypect:n.getJSTypes()){if(type==null){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getConstructor();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?scope:newBooleanOutcome(arg.getJSType(),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?newBooleanOutcome(arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?newBooleanOutcome(arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?newBooleanOutcome(n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?newBooleanOutcome(n.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?newBooleanOutcome(n.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?newBooleanOutcome(n.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnninstanceofFunctionType?(FunctionType)type:(FunctionType)n.getParameterType(0);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)arg:(FunctionType)n.getParameterType(0);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getFunctionScope(n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getFunctionScope(n,ct);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getSyntacticScope(n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getFunctionScope(arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getFunctionScope(n,arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(n,arg.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(n,arg.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(n,arg.getType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnninstanceofFunctionType?(FunctionType)n:(FunctionType)n.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntypeinstanceofFunctionType?(FunctionType)n:(FunctionType)n.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(Nodearg=constructor.getNext();arg!=null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062parent!=null&&parent.getType()==Token.FUNCTION){for(Nodearg=constructor.getNext();arg!=null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062Constructor<Node>constructor=arg.getConstructor();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062parent!=null&&parent.getType()==Token.FUNCTION){for(Nodearg=constructor.getNext();arg!=null;arg.hasNext()){scope=traverse(arg,
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062parent!=null&&parent.getType()==Token.FUNCTION){for(Nodearg=constructor.getNext();arg!=null;arg.hasNext()){scope=traverse(arg,type);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype!=null?null:type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?null:type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype==null?null:type.toString();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?scope:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?type:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnninstanceofFunctionType?(FunctionType)arg:(FunctionType)n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)arg:(FunctionType)n.getParent();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(arg,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(constructor,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnconstructor.evaluate(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(n,constructor,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)n.getConstructor();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n.getScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype!=null?"null":type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?"null":type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnninstanceofFunctionType?(FunctionType)n:(FunctionType)n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)n.getParent();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()==Token.NAME?null:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnarg.getType()==Token.NAME?null:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME?type:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.toBooleanOutcome();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.toString();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.toFront()&&type.equals(n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.toBooleanOutcomes();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.toFront();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null){for(FunctionTypen:ct.getConstructors()){type=n.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(FunctionTypect:arg.getConstructors()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(FunctionTypect:scope.getConstructors()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null){for(FunctionTypect:n.getConstructors()){type=scope.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()!=Token.NAME?null:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnarg.getType()!=Token.NAME?null:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()==Token.FUNCTION?n:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.FUNCTION?scope:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()==Token.FUNCTION?arg:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(ct,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(arg,ct);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(n,ct,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.evaluate(scope,ct);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(Nodearg=constructor.getNext();arg!=null;arg.getNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=scope.getNext();arg!=null;arg.getNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=context.getNext();arg!=null;arg.getNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getParent();arg!=null;arg.getNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getSyntacticScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getFunctionScope(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null||type.getType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype!=null&&scope.getType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null&&type.getType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null||type.getType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(UNKNOWN_TYPE,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(UNKNOWN_TYPE,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getNativeType(UNKNOWN_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(UNKNOWN_TYPE)?type:FUNCTION_LITERAL_UNDEFINED_THIS;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(UNKNOWN_TYPE)+1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(NO_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.UNKNOWN_TYPE,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.UNKNOWN_TYPE,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getNativeType(JSTypeNative.UNKNOWN_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.UNKNOWN_TYPE)+1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype.getNativeType(JSTypeNative.UNKNOWN_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)arg,scope.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n,scope.getConstructor();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null||scope.getType()!=Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(FunctionTypect:n.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(FunctionTypect:arg.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(FunctionTypect:n.getJSTypes()){scope=traverse(scope,ct);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(FunctionTypect:scope.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062Constructor<?>scope=traverse(ct,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(FunctionTypect:n.getJSTypes()){scope=traverse(scope,arg);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?type:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062For(JSTypect:n.getJSType()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(JSTypect:n.getJSType()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(arg!=null){for(JSTypect:n.getJSType()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null){for(JSTypect:n.getJSType()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(JSTypen:n.getJSType()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(JSTypen:n.getJSType()){type=n.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(JSTypect:n.getJSType()){type=ct.getInstanceType();}}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()==Token.NAME&&n.getJSType().equals(scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME&&scope.getJSType().equals(n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME||n.getJSType().equals(scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()!=Token.NAME&&n.getJSType().equals(scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()!=Token.NAME&&n.getJSType().equals(scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME&&n.getJSType().equals(scope.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype.getNativeType(JSTypeNative.NULL_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=scope.getFirstChild();arg!=null;arg.getNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype.getNativeType(UNKNOWN_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype!=null?scope:newBooleanOutcome(n.getJSType(),type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?type:newBooleanOutcome(n.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(FunctionTypect:n.getConstructors()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(n!=null){for(FunctionTypect:n.getConstructors()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(FunctionTypect:ct.getConstructors()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(FunctionTypect:constructor.getConstructors()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(FunctionTypect:arg.getConstructors()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.evaluate(scope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.evaluate(scope,output);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree()&&constructor.getJSType()==type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME&&n.getJSType().equals(constructorType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnconstructor.getType()==Token.NAME&&n.getJSType().equals(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(FunctionTypect:n.getConstructors()){type=ct.getJSType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(n!=null){for(FunctionTypect:n.getConstructors()){type=ct.getJSType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?newBooleanOutcome(n.getJSType()):newBooleanOutcome(n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?null:newBooleanOutcome(n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()==Token.NAME?null:scope.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnconstructorType==null?type:scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype==null?getNativeType(UNKNOWN_TYPE):type.restrictByNotNullOrUndefined();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype!=null?getNativeType(UNKNOWN_TYPE):type.toString();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(n!=null){for(JSTypect:n.getJSType()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(JSTypect:n.getJSType()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(JSTypect:n.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypect:arg.getJSType()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(JSTypect:arg.getJSType()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?null:scope.getType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?null:scope.getType(){Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?null:scope.getType()+Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?constructorType:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?newBooleanOutcomePair(scope):newBooleanOutcomePair(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?newBooleanOutcomePair(scope):newBooleanOutcomePair(n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME?scope:null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnfunctionScope.getFunctionScope(n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getFunctionScope(n,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(n!=null){for(JSTypect:n.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypect:arg.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypect:constructor.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypetype:n.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypect:scope.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypen:n.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(n!=null){for(FunctionTypect:n.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(n!=null){FunctionTypect=n.getJSTypes();for(FunctionTypect:ct.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(FunctionTypect:ct.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(FunctionTypect:arg.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntypeinstanceofFunctionType?(FunctionType)arg:(FunctionType)n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME&&arg.getJSType().equals(scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype==Token.NAME&&n.getJSType().equals(scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn!=null?scope:newBooleanOutcome(n.getJSType(),arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(n.getJSType(),arg,false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(FunctionTypect:n.getParameterTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(n!=null){for(FunctionTypect:n.getParameterTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(FunctionTypect:ct.getParameterTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(FunctionTypect:arg.getParameterTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(FunctionTypect:arg.getParameterTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype!=null?null:type.toString();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.cloneBoolean();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnconstructorTypeinstanceofFunctionType?(FunctionType)type:(FunctionType)n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntypeinstanceofFunctionType?(FunctionType)n:(FunctionType)type.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getInstanceType().restrictByNotNullOrUndefined(n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getInstanceType().declareJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getInstanceType().restrictByUndefined();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntypeinstanceofFunctionType?(FunctionType)arg:(FunctionType)n.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(n,constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062NeighborConstructor<Node>n=constructor.getNeighborConstructor();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062NeighborConstructor<Node>arg=constructor.getNeighborConstructor();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062Constructor<Node>ct=constructor.getCurrentNodeType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062Constructor<Node>ct=constructor.getConstructor();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062NeighborConstructor<Node>arg=constructor.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062Constructor<Node>ct=constructor.getCurrentNode();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062Preconditions.checkState(arg!=null&&arg.getType()==Token.FUNCTION){for(Nodearg=constructor.getFirstChild();arg!=null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062n.setJSType(getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062n.setJSType(compiler.getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062n.setJSType(constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?newBooleanOutcome(n.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?newBooleanOutcome(scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?newBooleanOutcome(n.getJSType()):false;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n,scope.toArray(newFunctionType[scope.size()]);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n,functionScope.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n,type.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype!=null&&type.getType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null&&type.getJSType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?newBooleanOutcome(n.getJSType(),scope):newBooleanOutcome(n.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062NeighborConstructor<Node>ct=constructor.getCurrentNode();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(JSTypect:constructor.getJSTypes()){if(ct.isConstructor()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(JSTypect:n.getJSTypes()){if(ct.isConstructor()||ct.isInterface()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)type.getImplicitPrototype();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)type.getParameterType(0);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(constructorType,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(FunctionTypect:n.getConstructorTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(n!=null){for(FunctionTypect:n.getConstructorTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(FunctionTypect:ct.getConstructorTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(FunctionTypect:constructor.getConstructorTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntypeinstanceofFunctionType?(FunctionType)n:(FunctionType)scope.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getFunction();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneSyntacticScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnconstructor.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype.getNativeType(JSTypeNative.OBJECT_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getConstructor(n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnconstructorType!=null?type:scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getSyntacticScope(functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getJSType(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()==Token.FUNCTION?scope:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?scope:newBooleanOutcome(n.getJSType(),false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)scope.getDeclaredType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)scope.getJavaType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)scope.getDeclaringClass();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)scope.getNodeType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(),constructor;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(FunctionTypect:n.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(n!=null){for(FunctionTypect:n.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(FunctionTypect:arg.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(FunctionTypect:arg.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(FunctionTypect:ct.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n,type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.toFront()&&n.getJSType()!=type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()!=Token.NAME?arg:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype!=null?scope:arg.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?null:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(n!=null){for(JSTypect:n.getJSType()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypect:arg.getJSType()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypen:n.getJSType()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypetype:n.getJSType()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnct.evaluate(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnct.evaluate(scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn!=null?scope:n.toString();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062Preconditions.checkState(arg!=null&&arg.getType()==Token.FUNCTION){for(Nodearg=constructor.getFirstChild();arg!=null;arg.next()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getNext();arg!=null;arg.next()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062Preconditions.checkState(arg!=null&&arg.getType()==Token.FUNCTION){for(Nodearg=constructor.getFirstChild();arg!=null;arg.next()){scope=traverse(arg,scope
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntypeinstanceofFunctionType?(FunctionType)type:(FunctionType)n.getParameterType(0);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)type:(FunctionType)n.getJSType(0);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnfunctionScope.getFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntypeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n.getParameterType(0);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnfunctionScope.toFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n.getInstanceType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n.getOwnerFunction();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(scope.getJSType(),false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(n!=null){for(JSTypect:n.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypect:arg.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypect:constructor.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypearg:n.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypen:n.getJSTypes()){type=n.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypect:n.getJSTypes()){type=scope.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype.getNativeType(JSTypeNative.NO_OBJECT_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null&&scope.getInstanceType()>=Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null||arg.getType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype.getNativeType(JSTypeNative.NO_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)n.getNode();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(),constructor);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree(),n,context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree()&&constructor.getJSType()!=type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree()&&n.getJSType()!=constructorType;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(type!=null){for(Nodearg=constructor.getLastChild();arg!=null;arg.getNext()){type=arg.getNext();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(type!=null){for(Nodearg=scope.getFirstChild();arg!=null;arg.getNext()){type=arg.getNext();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null&&scope.getJSType()!=Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntypeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()==Token.NAME&&n.getJSType().equals(type)?scope:null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME&&n.getJSType().equals(constructorType)?scope:null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME&&n.getJSType().equals(scope)?type:null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)type.restrictByNotNullOrUndefined();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null&&scope.getType()>=Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?scope:newBooleanOutcome(n.getJSType(),n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneChildren()&&n.getJSType()!=type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneChildren()&&n.getJSType()==type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(newFlowScope(scope));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?n:scope.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(arg!=null){for(Nodearg=constructor.getFirstChild();arg!=null;arg.getNext()){type=arg.getNext();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(n.isJSType()){for(Nodearg=constructor.getFirstChild();arg!=null;arg.getNext()){type=arg.getNext();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?null:scope.getFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?null:scope.toString();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.GETPROP;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(type!=null){for(FunctionTypect:n.getConstructors()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(FunctionTypect:n.getConstructors()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(type!=null){for(FunctionTypect:n.getConstructors()){type=ct.getJSType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isInstanceType()){for(FunctionTypect:n.getConstructors()){type=ct.getJSType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062type=ct.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(FunctionTypect:n.getConstructors()){types=ct.getJSType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getOwnerScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:newBooleanOutcome(scope.getInstanceType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){Nodearg=constructor.getNext();arg!=null;arg.getNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=builder.getNext();arg!=null;arg.getNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?n.getJSType():n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(type!=null){for(FunctionTypect:ct.getConstructors()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(FunctionTypect:n.getConstructors()){types=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(FunctionTypect:clazz.getConstructors()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()!=Token.NAME?scope:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null&&scope.getConstructor()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null&&scope.getFunctionType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?newBooleanOutcomePair():newBooleanOutcomePair();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?newBooleanOutcomePair():false;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?newBooleanOutcome(scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()!=Token.NAME&&n.getJSType().equalsIgnoreCase(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062cope!=null&&scope.isConstructor()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062cope!=null&&scope.isConstructor()){scope=traverse(ct,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(n!=null){for(JSTypect:arg.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062cope!=null&&scope.isInterface()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME?scope:n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getNativeType(JSTypeNative.NOT_OBJECT_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)arg:(FunctionType)n,scope.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?n:type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(type!=null){for(JSTypect:n.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(type!=null){for(JSTypect:arg.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnconstructorType==null?scope:constructorType;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnconstructorType==null?type:constructorType;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME&&n.getJSType().isSubtype(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnconstructor.evaluate(scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(arg!=null){for(Nodearg=constructor.getFirstChild();arg!=null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=scope.getFirstChild();arg!=null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){Nodearg=constructor.getFirstChild();arg!=null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(arg!=null){for(Nodearg=constructor.getLastChild();arg!=null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=context.getFirstChild();arg!=null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype==null?null:type.restrictByNotNullOrUndefined();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype==null?null:type.evaluate(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getType()!=Token.NAME?null:scope.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype!=Token.NAME?null:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getInstanceType()!=type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype==null&&scope.getType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.toFunction();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME&&n.getJSType().isSubtype(type)?scope:null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null&&scope.isConstructor()){for(FunctionTypect:n.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null&&scope.getType()==Token.FUNCTION){for(FunctionTypect:n.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(FunctionTypect:clazz.getJSTypes()){scope=traverse(ct,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME?scope.cloneTree():n.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME?scope.toString():n.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME?scope.cloneTree():n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME?scope.cloneTree():n.cloneTree();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.toString();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.toBoolean();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062n.setJSType(constructorType(type));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062n.setJSType(constructorType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n.getDeclaringClass();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?n:newBooleanOutcomePair(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope>>null&&scope.getType()==Token.FUNCTION;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn!=null?scope:n.cloneTree();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn!=null?scope:n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?newBooleanOutcome(n.getJSType(),arg);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(type,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype.evaluate(scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?constructorType:n;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnconstructorType!=null?scope:constructorType;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnconstructorType!=null?type:constructorType;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(arg!=null){for(Nodearg=constructor.getFirstChild();arg!=null;arg.next()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(type!=null){for(Nodearg=constructor.getFirstChild();arg!=null;arg.next()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){Nodearg=constructor.getFirstChild();arg!=null;arg.next()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=scope.getFirstChild();arg!=null;arg.next()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(type!=null){for(JSTypect:n.getJSType()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null&&scope.isConstructor()){for(JSTypect:n.getJSType()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null&&scope.isUnknownType()){for(JSTypect:n.getJSType()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:arg.getType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:arg.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?scope:arg.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneBoolean()?BooleanUtils.TRUE:BooleanUtils.FALSE;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneBoolean()?BooleanValues.TRUE:BooleanValues.FALSE;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?scope:newBooleanOutcome(n.getJSType()+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?this:newBooleanOutcome(n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getFunctionScope(n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getFunctionScope(n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(JSTypetype:n.getJSTypes()){if(ct.isConstructor()){type=type.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(JSTypect:n.getJSTypes()){if(ct.isInterface()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062for(JSTypect:n.getConstructors()){if(type!=null){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype==null?getNativeType(UNKNOWN_TYPE):type,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returntype==null?getNativeType(UNKNOWN_TYPE):type.getReturnType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?newBooleanOutcome(scope.getJSType()):newBooleanOutcome(n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)type.getInstanceType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)type.getConstructor();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(arg!=null){for(Nodearg=constructor.getFirstChild();arg!=null;arg.getNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){Nodearg=constructor.getFirstChild();arg!=null;arg.getNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=context.getFirstChild();arg!=null;arg.getNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(arg!=null){for(Nodearg=constructor.getLastChild();arg!=null;arg.getNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.cloneTree()&&n.getJSType()==null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?n.getJSType():type;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getInstanceType().isUnknownType()?null:scope.getInstanceType().restrictByNotNullOrUndefined();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getInstanceType().restrictByNotNullOrUndefined()&&n.getJSType().equals(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getInstanceType().toString();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?null:scope.clonePair();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?null:scope.cloneJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope!=null?null:scope.toString();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME&&n.getJSType().isSubtype(scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME&&n.getJSType().isExported(scope.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n,scope.functionScope.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n,scope.getParent();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=scope.getNext();arg!=null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){Nodearg=constructor.getNext();arg!=null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=constructor.getParent();arg!=null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(Nodearg=builder.getNext();arg!=null;arg.hasNext()){scope=traverse(arg,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getInstanceScope(n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.evaluate(scope,compiler);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(scope!=null){for(JSTypetype:n.getJSType()){scope=traverse(type,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnninstanceofFunctionType?(FunctionType)type:(FunctionType)n.getParent();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.getType()==Token.NAME?n.getJSType():null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getDeclaredType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.getOwnerFunction();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)syntacticScope.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)n:(FunctionType)scope.getScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope.evaluate(n,null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscope==null?constructorType:n.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnscopeinstanceofFunctionType?(FunctionType)scope:(FunctionType)n,scope;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(type!=null){for(FunctionTypect:n.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(type!=null){for(FunctionTypect:arg.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(type!=null){for(FunctionTypect:clazz.getJSTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnninstanceofFunctionType?(FunctionType)type:(FunctionType)n,scope.clone();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(type!=null){for(FunctionTypect:n.getConstructorTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(type!=null){for(FunctionTypect:ct.getConstructorTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(FunctionTypect:n.getConstructorTypes()){types=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){for(FunctionTypen:n.getConstructorTypes()){type=n.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(type!=null){for(FunctionTypect:arg.getConstructorTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(type!=null){for(FunctionTypect:n.getParameterTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isInterface()){for(FunctionTypect:n.getParameterTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isInstanceType()){for(FunctionTypect:n.getParameterTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(ct!=null&&ct.isConstructor()){FunctionTypect=ct.getParameterTypes();if(ct!=null&&ct.isConstructor()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062if(type!=null){for(FunctionTypect:ct.getParameterTypes()){type=ct.getInstanceType();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnconstructorType==null?getNativeType(UNKNOWN_TYPE):null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java1062returnn.evaluate(scope,constructorType);
