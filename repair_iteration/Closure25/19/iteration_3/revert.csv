projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLit(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBoolean(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getJSDocInfo();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281shadow=traverseObjectLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getJSDocInfo();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.createJSDocInfo();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLit(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLit(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope==null){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObjectLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObjectLit(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseBoolean(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281shadow=traverseBooleanLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281shadow=traverseLitLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281shadow=traverseSilentLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope).getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope).getJoinedFunctionScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLocal(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLitLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseNumberLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLocalLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseOtherLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getParent();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(JSTypeNative.OBJECT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(JSTypeNative.OBJECTLIT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(compiler.getNativeType(JSTypeNative.OBJECT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToBack(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope)-1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope)+1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,newBooleanLiteralSet());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChildToFront(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBoolean(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope).getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseOBJECTLit(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLong(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseOBJECTLIT(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope.booleanValues);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope).booleanValues;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope).createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n!=null?scope.getJSDocInfo():n.getJSDocInfo();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getJSDocInfo()||n.getJSDocInfo()!=null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getJSDocInfo()||n.getJSDocInfo()==null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(OBJECTLIT_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(OBJECTLIT);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getChildCount();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281caseToken.OBJECTLIT:scope=traverseObjectLiteral(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLit(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope!=null){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(castType);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObject(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObjectLit(n,scope);}else{break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setChildCount(n.getChildCount());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseEmbeddedBooleanLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObjectLiteral(n,scope);}else{scope=traverseBooleanLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObjectLiteral(n,scope);}else{break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObjectLiteral(n,scope);break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null&&scope.getType()==Token.OBJECTLIT){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null&&scope.getType()==Token.FUNCTION){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObjectLit(n,scope);break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.removeFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLit(n,scope).getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281shadow=traverseObjLitLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObject(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLiteral(n,scope).getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope).getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope).getJSDocInfo().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseMutatorLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseSingleNodeLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToBack(scope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChildToBack(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToBack(scope,newBooleanLiteralSet());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLocal(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLocal(n,scope).getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLitLiteral(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLitLiteral(n,scope).getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseOBJECTLitLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.createJSDocInfo();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.createJSDocInfo(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjECTLit(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(scope,castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getfirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLitLiteral(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope).getJoinedFlowScope();break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281Scopescope=traverseObjectLit(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope!=null){scope=traverseObjectLit(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281parent!=null&&parent.getType()==Token.GETPROP&&parent.getType()==Token.GETPROP){scope=traverseObjectLit(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281parent!=null&&parent.getType()==Token.FUNCTION){scope=traverseObjectLit(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281parent!=null&&parent.getType()==Token.GETPROP){scope=traverseObjectLit(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLit(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope-2);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope).getJoinedScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope).getJoinedFunctionScope().createChildObjectScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLiteral(n,scope).getJoinedFunctionScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope).getFunctionScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope).getSyntacticScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLit(n,scope).createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope).getChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope).toBooleanOutcomes;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope).toBooleanValues;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope).booleanValues||toBooleanOutcomes;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope).booleanValues;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope).booleanValues&&toBooleanOutcomes;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope).booleanValues();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLong(n,scope).getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLong(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseInt(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLong(n,scope).getJoinedFunctionScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChildToFront(scope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChildAfter(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope).getJoinedFunctionScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope).getJSDocInfo().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLit(n,scope).getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope).getSyntacticScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseOtherLiteral(n,scope).getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseOtherLiteral(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope.cloneTree(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope.cloneBoolean());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope.createChildFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281Scopescope=traverseBoolean(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope!=null){scope=traverseBoolean(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope).getJoinedFlowScope();break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseOtherLiteral(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToBack(scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLocalLiteral(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLocalLiteral(n,scope).getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLocalLiteral(n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,n.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,n.getJSDocInfo());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,n.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,n.toString());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(compiler.getNativeType(JSTypeNative.OBJECT_TYPE,castType));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(compiler.getNativeType(JSTypeNative.OBJECT_TYPE),castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(registry.getNativeType(JSTypeNative.OBJECT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(compiler.getNativeType(JSTypeNative.OBJECT_TYPE)+castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null||scope.getType()==Token.FUNCTION){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null&&scope.getType()==Token.NAME){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null&&scope.getType()==Token.EXPR_RESULT){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null&&scope.getType()==Token.GETPROP){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLit(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getNext()+1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getNumber();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281Scopescope=traverseObjectLit(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope==null){scope=traverseObjectLit(n,scope);break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(JSTypeNative.OBJECT_TYPE,castType));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(JSTypeNative.OBJECT_TYPE)+castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(scope.getNativeType(JSTypeNative.OBJECT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(JSTypeNative.OBJECT_TYPE)+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope==null){scope=traverseObjectLit(n,scope);}else{break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope==null){scope=traverseObjectLit(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObjectLit(n,scope).getJoinedFlowScope().createChildFlowScope();}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseSilentLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope.toBooleanOutcomes);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope.toBooleanValues);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope.booleanValues);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope.booleanValues,toBooleanOutcomes);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope.toBooleanIncomes);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseDoubleLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLit(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope-2);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.removeLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.removeFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.replaceChild(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope,1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope,name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope,description);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope,this);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope).createJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope).getJoinedFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObject(n,scope).getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObject(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope!=null&&scope.getType()==Token.OBJECTLIT){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope!=null&&scopeinstanceofBooleanLiteralSet){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope!=null&&scope.getType()==Token.FUNCTION){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope==null){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getJSDocInfo()&&n.getJSDocInfo()==null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getJSDocInfo()||scope.getJSDocInfo()==null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getJSDocInfo()||n.getJSDocInfo()==null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getJSDocInfo()&&n.getJSDocInfo()!=null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getLeastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getNumberOfChildren();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getEndChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getParent();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope==null){scope=traverseObjectLiteral(n,scope);}else{break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281Scopescope=traverseObjectLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope==null){scope=traverseObjectLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseLitLiteral(n,scope);}else{break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope).createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope).createJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope).getJoinedFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope).getSyntacticScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope).getFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getChildCount()+1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getChildCount()-1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getChildCount()*2;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLit(n,scope).createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLit(n,scope).createJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLit(n,scope).getJoinedFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLit(n,scope).getSyntacticScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281Scopescope=traverseObjectLiteral(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseLitLiteral(n,scope);break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,context);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope).createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope).getJoinedFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope).createJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope).getSyntacticScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope!=null){scope=traverseObjectLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseLitLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseNullLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281Statestate=n.getState();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281shadow=traverseLitLiteral(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(JSTypeNative.OBJECTLIT_TYPE,castType));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(JSTypeNative.OBJECTLIT_TYPE),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(scope.getNativeType(JSTypeNative.OBJECTLIT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(JSTypeNative.OBJECTLIT_TYPE),castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseUndefinedLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(UNKNOWN_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(NOT_OBJECT_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLocal(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getNativeType(JSDocInfo.UNKNOWN_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getNativeObject();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getNumberOfFunctions();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getNativeJSDocInfo();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getNativeType(JSDocInfo.NULL_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getNumberOfScopes();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(UNKNOWN_TYPE,castType));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(UNKNOWN_TYPE),castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(OBJECTLIT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(UNKNOWN_TYPE),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(UNKNOWN_TYPE)+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(NOT_OBJECT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n==null?scope.getJSDocInfo():n.getJSDocInfo();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope!=null?n.getJSDocInfo():n.getJSDocInfo();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getJSDocInfo()!=null?n.getJSDocInfo():n.getJSDocInfo();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope).getJoinedFlowScope();break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope)/1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope)-1L;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope,scope)-1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope)-1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.replaceChild(scope,scope)-1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLocalLiteral(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseArrayLiteral(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getJSDocInfo()||scope.getJSDocInfo()!=null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getJSDocInfo()||n.getJSDocInfo()!=null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(type);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjECTLIT(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,newBooleanValues());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,newBooleanLiteralSet(),toBooleanOutcomes);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,newBooleanLiteralSet()).booleanValues();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,newBooleanLiteralSet(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope)+2;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope)+1L;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope)+1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.replaceChild(scope)+1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLit(n,scope).getJoinedFunctionScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope).getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLit(n,scope).getJSDocInfo().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setChildCount(n.getChildCount()+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setChildCount(n.getChildCount()-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setChildCount(0);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setChildCount(n.getChildCount()*2);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setChildCount(n.getChildCount()+2);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setChildCount(n.getChildCount()-2);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null||scope.getType()==Token.OBJECTLIT){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope==null&&scope.getType()==Token.OBJECTLIT){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null&&scope.getType()==Token.EMPTY){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseLitLiteral(n,scope);}else{scope=traverseBooleanLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObjectLiteral(n,scope);}else{scope=traverseLitLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObjectLiteral(n,scope);}else{scope=traverseBooleanLiteral(n,scope);}}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281caseToken.OBJECTLIT:scope=traverseBooleanLiteral(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281caseToken.OBJECTLIT:scope=traverseOtherLiteral(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281caseToken.OBJECTLIT:scope=traverseIntLiteral(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281caseToken.OBJECTLIT:scope=traverseUnknownLiteral(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281caseToken.OBJECTLIT:scope=traverseUndefinedLiteral(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,n.createChildFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.createJSDocInfo(info);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281caseTOken.OBJECTLIT:scope=traverseObjectLiteral(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281caseToken.OBJECTLIT:scope=traverseObjectLiteral(n,scope).getJoinedFlowScope();break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281Case.OBJECTLIT:scope=traverseObjectLiteral(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getLastChild()+1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope).createThreeFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope).createSyntacticScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLongLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getPrevious();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLitLiteral(n,scope.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLitLiteral(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(JSTypeNative.OBJECT_TYPE),castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(JSTypeNative.OBJECTLIT));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseIntLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseNumber(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseFloat(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,syntacticScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,newBooleanOutcomePair());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,output);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseOBJECTLIT(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope).booleanValues+toBooleanOutcomes;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(JSTypeNative.OBJECTLIT_TYPE)+castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope,input);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope,output);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope-1+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,newBooleanLiteralValues());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,newBooleanLiteralSet(0));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,newBooleanLiteralSet(1));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281parentFunctionScope=parentFunctionScope.createChildObjectFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseOBJECTLit(n,scope);}else{break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281shadow=traverseBooleanLiteral(n,scope).booleanValues;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope).createThreeFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseOtherLiteral(n,scope).getJoinedFunctionScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToBack(scope)-1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope)-1+1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope)-2;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope.cloneChildren());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope.getParent());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseBooleanLiteral(n,scope);}else{scope=traverseBooleanLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseBooleanLiteral(n,scope);}else{scope=traverseObjectLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope.booleanValues?"true":false);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope.booleanValues+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.cloneTree();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getNumberOfLinks();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getJsDocInfo();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281shadow=traverseLitLiteral(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope!=null&&scope.hasChildren()){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseOBJECTLIT(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getChildCount()-2;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope-1+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope*1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLocalLiteral(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseEmbeddedBooleanLiteral(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseEmbeddedBooleanLiteral(n,scope).booleanValues;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseEmbeddedBooleanLiteral(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(FIELD_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(UNKNOWN);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(STATE_TYPE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLit(n,scope).createJSFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLit(n,scope).createThreeFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope).getJoinedScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToBack(functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(compiler.getNativeType(JSTypeNative.OBJECTLIT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(compiler.getNativeType(JSTypeNative.OBJECTLIT));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope!=null&&scope.getType()==Token.FUNCTION){scope=traverseObjectLit(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope!=null&&scopeinstanceofBooleanLiteralSet){scope=traverseObjectLit(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(UNKNOWN_TYPE)+castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLit(n,scope).getJoinedScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLit(n,scope).getJoinedFlowScope().createChildObjectScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToBack(scope)+1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope==null&&scope.getType()==Token.FUNCTION){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope==null||scope.getType()==Token.FUNCTION){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(JSTypeNative.OBJECT_TYPE));break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(JSTypeNative.OBJECTLIT_TYPE));break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(OBJECTLIT_TYPE);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(UNKNOWN_TYPE));break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope==null||scope.getType()==Token.OBJECTLIT){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope==null){scope=traverseObjectLiteral(n,scope);break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope!=null){scope=traverseObjectLiteral(n,scope);break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObjLitLiteral(n,scope);break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getNumberOfLinks();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope!=null&&scopeinstanceofBooleanLiteralSet){scope=traverseObjectLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope!=null&&scope.getType()==Token.FUNCTION){scope=traverseObjectLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObjLitLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObjectLiteral(n,scope.getJoinedFlowScope());}else{break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseOBJECTLIT(n,scope);}else{break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseOBJECTLit(n,scope);break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(functionScope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope).createThreeFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope).createJSFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObjLitLiteral(n,scope);}else{scope=traverseBooleanLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope).createJSFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope).createFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.getNumberOfObjects();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.createChildObjectFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=scope.createChildObjectScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null&&scope.getType()==Token.CALL){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null&&scope.getType()==Token.STRING){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,newBooleanLiteralSet(2));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(toBooleanOutcomes){scope=traverseBooleanLiteral(n,scope.booleanValues);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope.booleanValues?BooleanLiteralSet.TRUE:BooleanLiteralSet.FALSE);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope.booleanValues||toBooleanOutcomes);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseBooleanLiteral(n,scope);break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseNumberLiteral(n,scope);break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setChildCount(n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(cast);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setChildCount(scope)-1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n!=null?scope.getNumberOfLinks():n.getJSDocInfo();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getFirstChild()||n.getJSDocInfo()!=null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(JSTypeNative.OBJECT_TYPE),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(JSTypeNative.OBJECT_TYPE)||getNativeType(JSTypeNative.OBJECT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setFunctionScope(functionScope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLit(n,scope).getJoinedInputScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjLit(n,scope).getJoinedOutcome().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,newBooleanIncomePair());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope).booleanValues||!toBooleanOutcomes;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281shadow=traverseBooleanLiteral(n,scope.booleanValues);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(OBJECT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseOBJECTLITLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLitLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope!=null&&scopeinstanceofBooleanLiteralSet){scope=traverseBooleanLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope!=null&&scopeinstanceofBooleanLiteralSet){scope=traverseBooleanLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(baseType);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(baseType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(getNativeType(JSTypeNative.OBJECTLIT_TYPE)+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseOptLitLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope,getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope,getNativeType(JSTypeNative.OBJECT_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObject(n,scope);break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=traverseBooleanLiteral(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getFirstChild()||n.getJSDocInfo()==null;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getType()==Token.NAME?n.getFirstChild():n.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getType()==Token.NAME?n.getLastChild():n.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getType()==Token.NAME?n.getNext():n.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseNullLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseShortLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope=traverseObjectLit(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281Statestate=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseNull(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitValue(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope!=null&&scope.isExported(n)){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281cope=traverseObjectLit(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseNull(n,scope);break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObjLit(n,scope);break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseDeepestBooleanLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseBooleanLiteral(n,scope).getJoinedFunctionScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope).getJoinedFunctionScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(scope.getNativeType(UNKNOWN_TYPE));
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(compiler.getNativeType(JSTypeNative.OBJECT_TYPE)+1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.setJSType(compiler.getNativeType(JSTypeNative.OBJECT_TYPE),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.removeChild(scope)*1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.putBooleanProp(Node.SYNTHETIC_PROP,true);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.putBooleanProp(Node.SYNTHETIC_PROP,false);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.putBooleanProp(Node.SIGNATURE_PROP,true);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseBoolean(n,scope);break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope).getJoinedInputScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope).getJoinedThroughScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getPreviousSibling();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.firstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null&&scope.getType()==Token.VAR){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null&&scope.getType()==Token.FOR){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope).getJoinedInputScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseOtherLiteral(n,scope);}else{scope=traverseBooleanLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseOtherLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseOtherLiteral(n,scope);}else{scope=traverseLongLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseOtherLiteral(n,scope);}else{scope=traverseObjectLiteral(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.getType()==Token.NAME?n.getChildCount():n.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLitLiteral(n,scope)-1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n.addChildToFront(scope,n.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281caseToken.OBJECTLIT:scope=traverseUndefined(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281caseToken.OBJECTLIT:scope=traverseInstanceLiteral(n,scope);break;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObjLit(n,scope);}else{break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope)-1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLit(n,scope)+1;
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObjLit(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseLit(n,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope==null||scope.getType()!=Token.OBJECTLIT){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope==null||scope.getType()!=Token.FUNCTION){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope==null||scope.getType()!=Token.GETPROP){break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.createChildObjectInfo();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.createJSDocInfo(scope,n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281n=n.createJSDocInfo(scope,info);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope.cloneTree(),true);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope.clonePair());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseObjectLiteral(n,scope.toString());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseBooleanLiteral(n,scope);}else{break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281if(scope!=null){scope=traverseObjLitLiteral(n,scope);}else{break;}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java281scope=traverseLiteral(n,scope);break;
