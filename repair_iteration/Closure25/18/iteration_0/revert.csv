projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseOBJECTLIT(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFunctionScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLit(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFlowScope().createChildLitScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope.getJoinedFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseBooleanLiteral(n,scope);
