projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseOBJECTLIT(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFunctionScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLit(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFlowScope().createChildLitScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope.getJoinedFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseBooleanLiteral(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseOBJECTLIT(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseOBJECTLIT(n,scope).getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseOBJECTLit(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseBoolean(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope),scope.getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getSyntacticScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJSDocInfo().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope.getJoinedFlowScope(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope.getBooleanLiteralSet());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope.getLitValue());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope.getBooleanValues());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope.getOwnerFunctionScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).createJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getSyntacticScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseBooleanLiteral(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseBooleanLiteral(n,scope).getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseBooleanLiteral(n,scope).getJoinedFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFlowScope().createChildArrayScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFlowScope().createChildOrientationScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFlowScope().createChildTypeScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFlowScope().createChildFloatScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFlowScope().createChildLitScope(0);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObject(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280Scopescope=traverseObjectLit(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseLit(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLit(n,scope).getJoinedFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLit(n,scope).getJoinedFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLit(n,scope).getSyntacticScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLit(n,scope).getJoinedFunctionScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFunctionScope().createChildLitScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFunctionScope().createChildTypeScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFunctionScope().createChildBooleanScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFunctionScope().createChildObjectScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLit(n,scope).getJoinedFunctionScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseBooleanLiteral(n,scope).getJoinedFlowScope().createChildObjectScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseBooleanLiteral(n,scope).getJoinedFlowScope().createChildLitScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedLitFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjLit(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseOBJECTLIT(n,scope-1);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseOBJECTLIT(n,scope).getJoinedFlowScope().createChildObjectScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFunctionScope().createChildEmbeddedScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFunctionScope().createChildByLitScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFlowScope().createChildObjectScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseOBJECTLIT(n,scope).getJoinedFlowScope().createChildLitScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFlowScope().createChildByLitScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope.createChildFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope.createObjectScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope.getJoinedFunctionScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope.getJoinedFlowScope(),castType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLit(n,scope.getJoinedFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFlowScope().createChildLitFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedLitFlowScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedInputScope().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedBase().createChildFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope.getObjectLit());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope.getOwnerFlowScope());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFunctionScope().createChildLitFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjectLiteral(n,scope).getJoinedFunctionScope().createChildBinaryFlowScope();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java280scope=traverseObjECTLIT(n,scope);
