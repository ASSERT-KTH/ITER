projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(type,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(objectType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(valueType,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(n);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662scope=traverse(name.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ScopeobjectType=traverse(name.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ScopeobjectType=traverse(name.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662scope=traverse(name.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662Scopescope=traverse(name.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ScopeobjectType=traverse(name.getNext(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662NodeobjectType=name.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(scope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(name,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(n,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(value,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,hasLendsName);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,status);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(scope,name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(scope,value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(scope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,type,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(type,name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name!=null){ObjectTypeobjectType=ObjectType.cast(name);}else{scope=traverse(name.getFirstChild(),scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name!=null){ObjectTypeobjectType=ObjectType.cast(name);}else{scope=traverse(name.getLastChild(),scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name!=null){ObjectTypeobjectType=ObjectType.cast(name);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(value,name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,rawValueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(valueType,name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(value,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=traverse(name.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=traverse(name.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=traverse(name.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=traverse(name.getLastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=traverse(name.getNext(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,interpreter);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(nameObjName);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name.getJSType());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662Scopescope=traverse(name.getFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662Scopescope=traverse(name.getNext(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662Scopescope=traverse(name.getLocalPart(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662Scopescope=traverse(name.getLeastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662Scopescope=traverse(name.getString(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662scope=traverse(name.getNext(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662scope=traverse(name.getString(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662scope=traverse(name.getPreviousChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662scope=traverse(name.getLeastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662scope=traverse(name.getChildCount(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(value,name,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(n,value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(name,value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ScopeobjectType=traverse(name.getLocalPart(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ScopeobjectType=traverse(name.getLeastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ScopeobjectType=traverse(name.getString(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ScopeobjectType=traverse(name.getJSDocInfo(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(valueType,name,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(n,valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,interpreter,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(interpreter,scope,name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,interpreter,valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,interpreter,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(sourceName,scope,interpreter);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,name,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,values);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,valueType,hasLendsName);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,valueType,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,name,valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,valueType,rawValueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,valueType,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ScopeobjectType=traverse(name.getParent(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ScopeobjectType=traverse(name.getPrevious(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=traverse(name.getString(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(registry,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(registry,name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(name,scope,valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(name,scope,hasLendsName);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(name,scope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,valueType,rawValueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,oldType,rawValueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(type,value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(n,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=traverse(name.getNext(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=traverse(name.getString(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=traverse(name.getJSDocInfo(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=traverse(name.getLeastChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(scope,value,name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(registry,value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(scope,value,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662scope=traverse(name.getLocalPart(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(n,name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name.getType()==Token.NAME){if(name!=null){scope=traverse(name.getLastChild(),scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name.getType()==Token.FUNCTION){if(name!=null){scope=traverse(name.getLastChild(),scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name==null){ObjectTypeobjectType=ObjectType.cast(name);}else{scope=traverse(name.getLastChild(),scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name.getType()==Token.OBJECTLIT){if(name!=null){scope=traverse(name.getLastChild(),scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(scope,name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(registry,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(nameObjName,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name.getType()==Token.NAME){if(name!=null){scope=traverse(name.getFirstChild(),scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name.getType()==Token.FUNCTION){if(name!=null){scope=traverse(name.getFirstChild(),scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(scope,valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(registry);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,error);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ScopeobjectType=traverse(name.getObjName(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name.getFirstChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name.getJSType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name.getNext());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name.getLastChild());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name.getQualifiedName());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(sourceName,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(value,scope,name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,value,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,name,value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,value,hasLendsName);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,value,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,value,rawValueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(n,scope,name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(n,scope,valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662Scopescope=traverse(name.getChildCount(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662Scopescope=traverse(name.getJSDocInfo(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypevalueType=ObjectType.cast(name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(valueType,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(scope,name,valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(scope,name,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(scope,name,hasLendsName);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(scope,name,value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(scope,name,values);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,type,scope,valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(scope,type,name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,type,scope,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662NodeobjectType=name.getLastChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662NodeobjectType=name.getNext();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662NodeobjectType=name.getJSDocInfo();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662NodeobjectType=name.getLocalPart();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,name,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,type,valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,typeObjName);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,memberName);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,hasLendsName,valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,name.cloneTree());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=traverse(name.getParent(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name==null){ObjectTypeobjectType=ObjectType.cast(name);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name.getType()==Token.NAME){ObjectTypeobjectType=ObjectType.cast(name);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name.getType()==Token.FUNCTION){ObjectTypeobjectType=ObjectType.cast(name);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ScopeobjectType=traverse(name.getPreviousChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ScopeobjectType=traverse(name.getChildCount(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(name,valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(nameObjName);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(value,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(type,name,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(name,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662Scopescope=traverse(name.getPreviousChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662Scopescope=traverse(name.getType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,name,status);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(sourceName);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypevalueType=ObjectType.cast(value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,name,hasLendsName);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,registry,hasLendsName);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,n,hasLendsName);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(valueType,scope,name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(sourceName,value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(interpreter,name,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,name,interpreter);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(type,scope,name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(value,valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(value,value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(valueType,valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662NodeobjectType=n.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=name.getFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,rawValueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ScopeobjectType=traverse(name.getNext(),value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name==null){ObjectTypeobjectType=ObjectType.cast(name);}else{scope=traverse(name.getFirstChild(),scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(value,name,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(sourceName,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,type,valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=traverse(name.getNext(),value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(name,scope,value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(name,scope,rawValueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,name,rawValueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,type,rawValueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662scope=traverse(name.getJSDocInfo(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=traverse(name.getPreviousChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name!=null){scope=traverse(name.getFirstChild(),scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name!=null){scope=traverse(name.getLastChild(),scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662scope=traverse(name.getType(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name!=null){ObjectTypeobjectType=ObjectType.cast(nameObjName);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name.getJSType(),value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ScopeobjectType=traverse(name.removeFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name.getJSType().toString());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name.getJSType();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662Scopescope=traverse(name.removeFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(n,scope,hasLendsName);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name!=null&&name.getType()==Token.FUNCTION){ObjectTypeobjectType=ObjectType.cast(name);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name!=null&&name.getType()==Token.NAME){ObjectTypeobjectType=ObjectType.cast(name);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name!=null&&name.hasChildren()){ObjectTypeobjectType=ObjectType.cast(name);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name!=null&&name.getType()==Token.STRING){ObjectTypeobjectType=ObjectType.cast(name);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662if(name!=null){ObjectTypeobjectType=ObjectType.cast(name,scope);}
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=ObjectType.cast(name,scope,interpreter);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(memberName);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ScopeobjectType=traverse(name.getNext(),scope,value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662scope=traverse(name.getLastChild(),value);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,interpreter,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,this.status);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,errorReturnValues);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(null);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=traverse(name.getNext(),scope,valueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,n.getJSDocInfo());
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(valueType,scope,rawValueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(value,scope,rawValueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(sourceName,scope,rawValueType);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(value,type,scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ScopeobjectType=traverse(name.getfirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662scope=traverse(name.removeFirstChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(name,scope,dataArea);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(var,name);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(valueType,scope,hasLendsName);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662JSTypeobjectType=traverse(name.getPreviousChild(),scope);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662NodeobjectType=name.removeFirstChild();
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(value,scope,type);
projects/Closure25/src/com/google/javascript/jscomp/TypeInference.java662ObjectTypeobjectType=ObjectType.cast(type,valueType);
