bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  n  =  Math.log(x,  y);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.log(x,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.log(x,  y);	      double    n    =    Math.max(x,    y);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
2	[BUG]  [BUGGY]  double  n  =  Math.max(y,  x);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.max(y,  x);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.max(y,  x);	      double    n    =    Math.max(x,    y);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
3	[BUG]  [BUGGY]      double  n  =  Math.abs(x);  double  n  =  Math.abs(x);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.abs(x);  double  n  =  Math.abs(x);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.abs(x);    double  n  =  Math.abs(x);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	15	None	add
4	[BUG]  [BUGGY]      double  n  =  Math.abs(x);  Double  n  =  Math.abs(x);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.abs(x);  Double  n  =  Math.abs(x);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.abs(x);    Double  n  =  Math.abs(x);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	15	None	add
5	[BUG]  [BUGGY]      double  n  =  Math.abs(x);  long  n  =  Math.abs(x);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.abs(x);  long  n  =  Math.abs(x);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.abs(x);    long  n  =  Math.abs(x);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	15	None	add
6	[BUG]  [BUGGY]      double  n  =  Math.abs(x);  double  n  =  Math.abs(y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.abs(x);  double  n  =  Math.abs(y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.abs(x);    double  n  =  Math.abs(y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	15	None	add
7	[BUG]  [BUGGY]      double  n  =  Math.max(1,  x);  double  n  =  Math.max(1,  x);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.max(1,  x);  double  n  =  Math.max(1,  x);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.max(1,    x);    double  n  =  Math.max(1,  x);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	27	None	add
8	[BUG]  [BUGGY]      double  n  =  Math.max(1,  x);  Double  n  =  Math.max(1,  x);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.max(1,  x);  Double  n  =  Math.max(1,  x);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.max(1,    x);    Double  n  =  Math.max(1,  x);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	27	None	add
9	[BUG]  [BUGGY]      double  n  =  Math.max(1,  x);  long  n  =  Math.max(1,  x);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.max(1,  x);  long  n  =  Math.max(1,  x);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.max(1,    x);    long  n  =  Math.max(1,  x);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	27	None	add
10	[BUG]  [BUGGY]      double  n  =  Math.max(1,  x);  int  n  =  Math.max(1,  x);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.max(1,  x);  int  n  =  Math.max(1,  x);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.max(1,    x);    int  n  =  Math.max(1,  x);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	27	None	add
11	[BUG]  [BUGGY]      double  n  =  getN();  double  n  =  getN();  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  getN();  double  n  =  getN();  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    getN();    double  n  =  getN();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	20	None	add
12	[BUG]  [BUGGY]      double  n  =  getN();  Double  n  =  getN();  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  getN();  Double  n  =  getN();  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    getN();    Double  n  =  getN();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	20	None	add
13	[BUG]  [BUGGY]      double  n  =  getN();  long  n  =  getN();  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  getN();  long  n  =  getN();  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    getN();    long  n  =  getN();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	20	None	add
14	[BUG]  [BUGGY]      double  n  =  getN();  int  n  =  getN();  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  getN();  int  n  =  getN();  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    getN();    int  n  =  getN();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	20	None	add
15	[BUG]  [BUGGY]  double  n  =  Math.max(1,  y);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.max(1,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.max(1,  y);	      double    n    =    Math.max(1,    x);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
16	[BUG]  [BUGGY]  double  n  =  Math.max(0,  x);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.max(0,  x);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.max(0,  x);	      double    n    =    Math.max(1,    x);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
17	[BUG]  [BUGGY]  double  n  =  Math.max(1,  x  +  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.max(1,  x  +  1);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.max(1,  x  +  1);	      double    n    =    Math.max(1,    x);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
18	[BUG]  [BUGGY]  double  n  =  Math.max(1,  x,  y);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.max(1,  x,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.max(1,  x,  y);	      double    n    =    Math.max(1,    x);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
19	[BUG]  [BUGGY]  if(x  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  =  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  <  =  0)  {	  if(x    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  y  <  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  <  0  ||  y  <  0)  {	  if(x    <    0)    {    	compilable	  [FE]  AssertionFailedError  	24	3	replace
21	[BUG]  [BUGGY]  if(x  <  0  ||  y  <  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  y  <  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  <  0  ||  y  <  0)  {	  if(x    <    0)    {    	compilable	  [FE]  AssertionFailedError  	24	3	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  y  >=  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  <  0  ||  y  >=  0)  {	  if(x    <    0)    {    	compilable	  [FE]  AssertionFailedError  	24	9	replace
23	[BUG]  [BUGGY]  if(x  <  0  ||  y  >=  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  y  >=  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  <  0  ||  y  >=  0)  {	  if(x    <    0)    {    	compilable	  [FE]  AssertionFailedError  	24	9	replace
24	[BUG]  [BUGGY]      double  n  =  Math.min(1,  y);  double  n  =  Math.min(1,  y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.min(1,  y);  double  n  =  Math.min(1,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.min(1,    y);    double  n  =  Math.min(1,  y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	29	None	add
25	[BUG]  [BUGGY]      double  n  =  Math.min(1,  y);  Double  n  =  Math.min(1,  y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.min(1,  y);  Double  n  =  Math.min(1,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.min(1,    y);    Double  n  =  Math.min(1,  y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	29	None	add
26	[BUG]  [BUGGY]      double  n  =  Math.min(1,  y);  long  n  =  Math.min(1,  y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.min(1,  y);  long  n  =  Math.min(1,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.min(1,    y);    long  n  =  Math.min(1,  y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	29	None	add
27	[BUG]  [BUGGY]      double  n  =  Math.min(1,  y);  double  n  =  Math.min(2,  y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.min(1,  y);  double  n  =  Math.min(2,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.min(1,    y);    double  n  =  Math.min(2,  y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	29	None	add
28	[BUG]  [BUGGY]  double  n  =  Math.max(0,  Math.abs(y),  Math.abs(x));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.max(0,  Math.abs(y),  Math.abs(x));  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.max(0,  Math.abs(y),  Math.abs(x));	      double    n    =    Math.max(0,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
29	[BUG]  [BUGGY]  double  n  =  Math.max(0,  Math.abs(x),  Math.abs(y)-  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.max(0,  Math.abs(x),  Math.abs(y)-  1);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.max(0,  Math.abs(x),  Math.abs(y)-  1);	      double    n    =    Math.max(0,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
30	[BUG]  [BUGGY]  double  n  =  Math.max(0,  Math.abs(x),  Math.abs(y)+  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.max(0,  Math.abs(x),  Math.abs(y)+  1);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.max(0,  Math.abs(x),  Math.abs(y)+  1);	      double    n    =    Math.max(0,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
31	[BUG]  [BUGGY]  double  n  =  Math.min(y,  x);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.min(y,  x);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.min(y,  x);	      double    n    =    Math.min(x,    y);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
32	[BUG]  [BUGGY]  if(n  <  0)  {  if(n  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(n  <  0)  {  if(n  <  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(n    <    0)    {    if(n  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
33	[BUG]  [BUGGY]  if(n  <  0)  {  if(n  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(n  <  0)  {  if(n  >=  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(n    <    0)    {    if(n  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
34	[BUG]  [BUGGY]  if(n  <  0)  {  If(n  <  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(n  <  0)  {  If(n  <  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(n    <    0)    {    If(n  <  0)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
35	[BUG]  [BUGGY]  if(x  <  0  ||  n  ==  0)  {  if(x  <  0  ||  n  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  n  ==  0)  {  if(x  <  0  ||  n  ==  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    <    0    ||    n    ==    0)    {    if(x  <  0  ||  n  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
36	[BUG]  [BUGGY]  if(x  <  0  ||  n  ==  0)  {  if(x  <  0  ||  n  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  n  ==  0)  {  if(x  <  0  ||  n  >=  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    <    0    ||    n    ==    0)    {    if(x  <  0  ||  n  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
37	[BUG]  [BUGGY]  if(x  <  0  ||  n  ==  0)  {  if(x  <  0  ||  n!=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  n  ==  0)  {  if(x  <  0  ||  n!=  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    <    0    ||    n    ==    0)    {    if(x  <  0  ||  n!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
38	[BUG]  [BUGGY]  if(x  <  0  ||  n  ==  0)  {  If(x  <  0  ||  n  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  n  ==  0)  {  If(x  <  0  ||  n  ==  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    <    0    ||    n    ==    0)    {    If(x  <  0  ||  n  ==  0)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
39	[BUG]  [BUGGY]  if(x  <  0  ||  y  >  0)  {  if(x  <  0  ||  y  >  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  y  >  0)  {  if(x  <  0  ||  y  >  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    <    0    ||    y    >    0)    {    if(x  <  0  ||  y  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
40	[BUG]  [BUGGY]  if(x  <  0  ||  y  >  0)  {  If(x  <  0  ||  y  >  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  y  >  0)  {  If(x  <  0  ||  y  >  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    <    0    ||    y    >    0)    {    If(x  <  0  ||  y  >  0)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
41	[BUG]  [BUGGY]  if(x  <  0  ||  y  >  0)  {  if(x  >=  0  ||  y  >  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  y  >  0)  {  if(x  >=  0  ||  y  >  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    <    0    ||    y    >    0)    {    if(x  >=  0  ||  y  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
42	[BUG]  [BUGGY]  if(x  ==  0)  {  if(x  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  ==  0)  {  if(x  ==  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    ==    0)    {    if(x  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
43	[BUG]  [BUGGY]  if(x  ==  0)  {  if(x  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  ==  0)  {  if(x  >=  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    ==    0)    {    if(x  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
44	[BUG]  [BUGGY]  if(x  ==  0)  {  if(x!=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  ==  0)  {  if(x!=  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    ==    0)    {    if(x!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
45	[BUG]  [BUGGY]  if(x  ==  0)  {  if(x  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  ==  0)  {  if(x  >>  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    ==    0)    {    if(x  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
46	[BUG]  [BUGGY]  if(x  >  0)  {  if(x  >  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  >  0)  {  if(x  >  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    >    0)    {    if(x  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
47	[BUG]  [BUGGY]  if(x  >  0)  {  If(x  >  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  >  0)  {  If(x  >  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    >    0)    {    If(x  >  0)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
48	[BUG]  [BUGGY]  if(x  >  0)  {  when(x  >  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  >  0)  {  when(x  >  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    >    0)    {    when(x  >  0)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  y  ==  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  <  0  ||  y  ==  0)  {	  if(x    <    0    ||    n    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	2	3	replace
50	[BUG]  [BUGGY]  if(x  <  0  ||  y  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  y  ==  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  <  0  ||  y  ==  0)  {	  if(x    <    0    ||    n    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	2	3	replace
51	[BUG]  [BUGGY]      double  n  =  Math.max(x,  y);  double  n  =  Math.max(x,  y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.max(x,  y);  double  n  =  Math.max(x,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.max(x,    y);    double  n  =  Math.max(x,  y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	11	None	add
52	[BUG]  [BUGGY]      double  n  =  Math.max(x,  y);  Double  n  =  Math.max(x,  y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.max(x,  y);  Double  n  =  Math.max(x,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.max(x,    y);    Double  n  =  Math.max(x,  y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	11	None	add
53	[BUG]  [BUGGY]      double  n  =  Math.max(x,  y);  long  n  =  Math.max(x,  y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.max(x,  y);  long  n  =  Math.max(x,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.max(x,    y);    long  n  =  Math.max(x,  y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	11	None	add
54	[BUG]  [BUGGY]      double  n  =  Math.max(x,  y);  int  n  =  Math.max(x,  y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.max(x,  y);  int  n  =  Math.max(x,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.max(x,    y);    int  n  =  Math.max(x,  y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	11	None	add
55	[BUG]  [BUGGY]  if(x  <  0)  {  if(x  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0)  {  if(x  <  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    <    0)    {    if(x  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
56	[BUG]  [BUGGY]  if(x  <  0)  {  if(x  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0)  {  if(x  >=  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    <    0)    {    if(x  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
57	[BUG]  [BUGGY]  if(x  <  0)  {  If(x  <  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0)  {  If(x  <  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    <    0)    {    If(x  <  0)  {	  	non-compiled	[CE]  ';'  expected	23	None	add
58	[BUG]  [BUGGY]  double  n  =  Math.log(x);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.log(x);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.log(x);	      double    n    =    Math.abs(x);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
59	[BUG]  [BUGGY]  double  n  =  Math.abs(y);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.abs(y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.abs(y);	      double    n    =    Math.abs(x);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
60	[BUG]  [BUGGY]  this.data.add(x,  y);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  this.data.add(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	this.data.add(x,  y);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
61	[BUG]  [BUGGY]  addData(x,  y);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  addData(x,  y);  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	addData(x,  y);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
62	[BUG]  [BUGGY]  double  n  =  getN()  +  1;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  getN()  +  1;  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  getN()  +  1;	      double    n    =    getN();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
63	[BUG]  [BUGGY]  double  n  =  getN()  -  1;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  getN()  -  1;  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  getN()  -  1;	      double    n    =    getN();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
64	[BUG]  [BUGGY]  double  n  =  getY();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  getY();  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  getY();	      double    n    =    getN();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
65	[BUG]  [BUGGY]  double  n  =  this.data.get(x,  y);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  this.data.get(x,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  this.data.get(x,  y);	      double    n    =    this.data.get(x);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
66	[BUG]  [BUGGY]  double  n  =  this.data.get(x  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  this.data.get(x  +  1);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  this.data.get(x  +  1);	      double    n    =    this.data.get(x);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
67	[BUG]  [BUGGY]  double  n  =  this.data.get(x).doubleValue();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  this.data.get(x).doubleValue();  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  this.data.get(x).doubleValue();	      double    n    =    this.data.get(x);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
68	[BUG]  [BUGGY]      double  n  =  Math.min(x,  y);  double  n  =  Math.min(x,  y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.min(x,  y);  double  n  =  Math.min(x,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.min(x,    y);    double  n  =  Math.min(x,  y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	8	None	add
69	[BUG]  [BUGGY]      double  n  =  Math.min(x,  y);  Double  n  =  Math.min(x,  y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.min(x,  y);  Double  n  =  Math.min(x,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.min(x,    y);    Double  n  =  Math.min(x,  y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	8	None	add
70	[BUG]  [BUGGY]      double  n  =  Math.min(x,  y);  long  n  =  Math.min(x,  y);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.min(x,  y);  long  n  =  Math.min(x,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.min(x,    y);    long  n  =  Math.min(x,  y);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	8	None	add
71	[BUG]  [BUGGY]      double  n  =  Math.min(x,  y);  double  n  =  Math.min(y,  x);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.min(x,  y);  double  n  =  Math.min(y,  x);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.min(x,    y);    double  n  =  Math.min(y,  x);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	8	None	add
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  n  <  0  ||  n  >  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  <  0  ||  n  <  0  ||  n  >  0)  {	  if(n    <    0)    {    	compilable	  [FE]  AssertionFailedError  	18	9	replace
73	[BUG]  [BUGGY]  if(x  <  0  ||  n  <  0  ||  n  >  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  n  <  0  ||  n  >  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  <  0  ||  n  <  0  ||  n  >  0)  {	  if(n    <    0)    {    	compilable	  [FE]  AssertionFailedError  	18	9	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  n  <  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  <  0  ||  n  <  0)  {	  if(n    <    0)    {    	compilable	  [FE]  AssertionFailedError  	18	2	replace
75	[BUG]  [BUGGY]  if(x  <  0  ||  n  <  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  n  <  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  <  0  ||  n  <  0)  {	  if(n    <    0)    {    	compilable	  [FE]  AssertionFailedError  	18	2	replace
76	[BUG]  [BUGGY]  double  n  =  this.data.size()  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  this.data.size()  +  1;  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  this.data.size()  +  1;	      double    n    =    this.data.size();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
77	[BUG]  [BUGGY]  Double  n  =  this.data.size();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  Double  n  =  this.data.size();  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	Double  n  =  this.data.size();	      double    n    =    this.data.size();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
78	[BUG]  [BUGGY]  double  n  =  Math.max(1,  Math.min(x,  y));  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.max(1,  Math.min(x,  y));  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.max(1,  Math.min(x,  y));	      double    n    =    Math.max(0,    Math.min(x,    y));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
79	[BUG]  [BUGGY]  double  n  =  Math.max(0,  Math.min(y,  x));  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.max(0,  Math.min(y,  x));  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.max(0,  Math.min(y,  x));	      double    n    =    Math.max(0,    Math.min(x,    y));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
80	[BUG]  [BUGGY]  double  n  =  Math.max(0,  Math.min(x,  y)-  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.max(0,  Math.min(x,  y)-  1);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.max(0,  Math.min(x,  y)-  1);	      double    n    =    Math.max(0,    Math.min(x,    y));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
81	[BUG]  [BUGGY]      double  n  =  Math.max(0,  Math.min(x,  y));  double  n  =  Math.max(0,  Math.min(x,  y));  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.max(0,  Math.min(x,  y));  double  n  =  Math.max(0,  Math.min(x,  y));  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.max(0,    Math.min(x,    y));    double  n  =  Math.max(0,  Math.min(x,  y));	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	13	None	add
82	[BUG]  [BUGGY]      double  n  =  Math.max(0,  Math.min(x,  y));  Double  n  =  Math.max(0,  Math.min(x,  y));  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.max(0,  Math.min(x,  y));  Double  n  =  Math.max(0,  Math.min(x,  y));  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.max(0,    Math.min(x,    y));    Double  n  =  Math.max(0,  Math.min(x,  y));	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	13	None	add
83	[BUG]  [BUGGY]      double  n  =  Math.max(0,  Math.min(x,  y));  long  n  =  Math.max(0,  Math.min(x,  y));  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.max(0,  Math.min(x,  y));  long  n  =  Math.max(0,  Math.min(x,  y));  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.max(0,    Math.min(x,    y));    long  n  =  Math.max(0,  Math.min(x,  y));	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	13	None	add
84	[BUG]  [BUGGY]      double  n  =  Math.max(0,  Math.min(x,  y));  double  n  =  Math.max(0,  Math.min(y,  x));  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.max(0,  Math.min(x,  y));  double  n  =  Math.max(0,  Math.min(y,  x));  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.max(0,    Math.min(x,    y));    double  n  =  Math.max(0,  Math.min(y,  x));	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	13	None	add
85	[BUG]  [BUGGY]  double  n  =  Math.min(1,  x);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.min(1,  x);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.min(1,  x);	      double    n    =    Math.min(1,    y);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
86	[BUG]  [BUGGY]  double  n  =  Math.min(0,  y);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.min(0,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.min(0,  y);	      double    n    =    Math.min(1,    y);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
87	[BUG]  [BUGGY]  double  n  =  getX();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  getX();  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  getX();	      double    n    =    getN();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  >=  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  >=  0)  {	  if(x    >    0)    {    	compilable	  [FE]  AssertionFailedError  	26	8	replace
89	[BUG]  [BUGGY]  if(x  >=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  >=  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  >=  0)  {	  if(x    >    0)    {    	compilable	  [FE]  AssertionFailedError  	26	8	replace
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  >  0  ||  y  <  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  >  0  ||  y  <  0)  {	  if(x    >    0)    {    	compilable	  [FE]  AssertionFailedError  	26	8	replace
91	[BUG]  [BUGGY]  if(x  >  0  ||  y  <  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  >  0  ||  y  <  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  >  0  ||  y  <  0)  {	  if(x    >    0)    {    	compilable	  [FE]  AssertionFailedError  	26	8	replace
92	[BUG]  [BUGGY]      double  n  =  Math.abs(x);  double  x  =  Math.abs(x);  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.abs(x);  double  x  =  Math.abs(x);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.abs(x);    double  x  =  Math.abs(x);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	15	None	add
93	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(y  ==  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(y  ==  0)  {	  if(x    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
94	[BUG]  [BUGGY]  if(y  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(y  ==  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(y  ==  0)  {	  if(x    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  n  >=  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  <  0  ||  n  >=  0)  {	  if(x    <    0    ||    n    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	2	9	replace
96	[BUG]  [BUGGY]  if(x  <  0  ||  n  >=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  n  >=  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  <  0  ||  n  >=  0)  {	  if(x    <    0    ||    n    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	2	9	replace
97	[BUG]  [BUGGY]  double  n  =  Math.max(0,  Math.abs(x),  Math.abs(y),  1.0);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.max(0,  Math.abs(x),  Math.abs(y),  1.0);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.max(0,  Math.abs(x),  Math.abs(y),  1.0);	      double    n    =    Math.max(0,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
98	[BUG]  [BUGGY]  double  n  =  Math.abs(x  +  1);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.abs(x  +  1);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.abs(x  +  1);	      double    n    =    Math.abs(x);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  y  >  0.0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  <  0  ||  y  >  0.0)  {	  if(x    <    0)    {    	compilable	  [FE]  AssertionFailedError  	24	9	replace
100	[BUG]  [BUGGY]  if(x  <  0  ||  y  >  0.0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  y  >  0.0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  <  0  ||  y  >  0.0)  {	  if(x    <    0)    {    	compilable	  [FE]  AssertionFailedError  	24	9	replace
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  y  >  1.0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  <  0  ||  y  >  1.0)  {	  if(x    <    0)    {    	compilable	  [FE]  AssertionFailedError  	24	7	replace
102	[BUG]  [BUGGY]  if(x  <  0  ||  y  >  1.0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  y  >  1.0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  <  0  ||  y  >  1.0)  {	  if(x    <    0)    {    	compilable	  [FE]  AssertionFailedError  	24	7	replace
103	[BUG]  [BUGGY]  if(x  <  =  0  ||  y  >  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  =  0  ||  y  >  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  <  =  0  ||  y  >  0)  {	  if(x    <    0    ||    y    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
104	[BUG]  [BUGGY]  double  n  =  Math.min(0.0,  y);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.min(0.0,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.min(0.0,  y);	      double    n    =    Math.min(x,    y);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
105	[BUG]  [BUGGY]  double  n  =  this.data.get(x)+  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  this.data.get(x)+  1;  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  this.data.get(x)+  1;	      double    n    =    this.data.get(x);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
106	[BUG]  [BUGGY]  if(x  <  0  ||  n  ==  0)  {  if(x  >=  0  ||  n  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  n  ==  0)  {  if(x  >=  0  ||  n  ==  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    <    0    ||    n    ==    0)    {    if(x  >=  0  ||  n  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  n  >  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  <  0  ||  n  >  0)  {	  if(n    <    0)    {    	compilable	  [FE]  AssertionFailedError  	18	9	replace
108	[BUG]  [BUGGY]  if(x  <  0  ||  n  >  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  n  >  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  <  0  ||  n  >  0)  {	  if(n    <    0)    {    	compilable	  [FE]  AssertionFailedError  	18	9	replace
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(y  <  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(y  <  0)  {	  if(n    <    0)    {    	compilable	  [FE]  AssertionFailedError  	18	2	replace
110	[BUG]  [BUGGY]  if(y  <  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(y  <  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(y  <  0)  {	  if(n    <    0)    {    	compilable	  [FE]  AssertionFailedError  	18	2	replace
111	[BUG]  [BUGGY]  double  n  =  Math.min(2,  y);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.min(2,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.min(2,  y);	      double    n    =    Math.min(1,    y);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
112	[BUG]  [BUGGY]      double  n  =  Math.max(1,  x);  double  n  =  Math.max(2,  x);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]      double  n  =  Math.max(1,  x);  double  n  =  Math.max(2,  x);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	        double    n    =    Math.max(1,    x);    double  n  =  Math.max(2,  x);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	27	None	add
113	[BUG]  [BUGGY]  if(x  ==  0)  {  If(x  ==  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  ==  0)  {  If(x  ==  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    ==    0)    {    If(x  ==  0)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
114	[BUG]  [BUGGY]  if(x  ==  0)  {  if(x  {  0)  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  ==  0)  {  if(x  {  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x    ==    0)    {    if(x  {  0)  {	  	non-compiled	[CE]  ')'  expected	3	None	add
115	[BUG]  [BUGGY]  double  n  =  Math.abs(x  +  1,  y);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.abs(x  +  1,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.abs(x  +  1,  y);	      double    n    =    Math.abs(x);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
116	[BUG]  [BUGGY]  double  n  =  Math.min(1.0,  y);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.min(1.0,  y);  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.min(1.0,  y);	      double    n    =    Math.min(1,    y);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
117	[BUG]  [BUGGY]  if(x  <  =  0  ||  n  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  =  0  ||  n  ==  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  <  =  0  ||  n  ==  0)  {	  if(x    <    0    ||    n    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  y  >  0  ||  x  >  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  <  0  ||  y  >  0  ||  x  >  0)  {	  if(x    <    0    ||    y    >    0)    {    	compilable	  [FE]  AssertionFailedError  	6	9	replace
119	[BUG]  [BUGGY]  if(x  <  0  ||  y  >  0  ||  x  >  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  y  >  0  ||  x  >  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  <  0  ||  y  >  0  ||  x  >  0)  {	  if(x    <    0    ||    y    >    0)    {    	compilable	  [FE]  AssertionFailedError  	6	9	replace
120	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  x  >  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  <  0  ||  x  >  0)  {	  if(x    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	4	9	replace
121	[BUG]  [BUGGY]  if(x  <  0  ||  x  >  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  x  >  0)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  <  0  ||  x  >  0)  {	  if(x    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	4	9	replace
122	[BUG]  [BUGGY]  double  n  =  Math.max(1,  Math.abs(x),  Math.abs(y));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.max(1,  Math.abs(x),  Math.abs(y));  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.max(1,  Math.abs(x),  Math.abs(y));	      double    n    =    Math.max(0,    Math.abs(x),    Math.abs(y));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  x  >  y)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	add	if(x  <  0  ||  x  >  y)  {	  if(x    <    0)    {    	compilable	  [FE]  AssertionFailedError  	24	6	replace
124	[BUG]  [BUGGY]  if(x  <  0  ||  x  >  y)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  if(x  <  0  ||  x  >  y)  {  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	if(x  <  0  ||  x  >  y)  {	  if(x    <    0)    {    	compilable	  [FE]  AssertionFailedError  	24	6	replace
125	[BUG]  [BUGGY]  double  n  =  Math.pow(10,  Math.abs(x));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.pow(10,  Math.abs(x));  [BUGGY]    xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.pow(10,  Math.abs(x));	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
126	[BUG]  [BUGGY]  double  n  =  Math.max(10.0,  Math.min(x,  y));  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  Math.max(10.0,  Math.min(x,  y));  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  Math.max(10.0,  Math.min(x,  y));	      double    n    =    Math.max(0,    Math.min(x,    y));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
127	[BUG]  [BUGGY]  double  n  =  this.data.get(x)-  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  void  addData(double  x,  double  y)  {    [BUGGY]  double  n  =  this.data.get(x)-  1;  [BUGGY]    if  (n  ==  0)  {  xbar  =  x;  ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	106	106	1	replace	double  n  =  this.data.get(x)-  1;	      double    n    =    this.data.get(x);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
