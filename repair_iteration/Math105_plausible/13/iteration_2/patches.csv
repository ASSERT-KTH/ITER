bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  ==  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    xBar;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	132	4	replace
2	[BUG]  [BUGGY]  if(n  ==  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    xBar;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	132	4	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  <  0)  {  sumX  =  x  -  y;  }  else  {  sumX  =  x  -  y;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  <  0)  {  sumX  =  x  -  y;  }  else  {  sumX  =  x  -  y;  }	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    xBar;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	132	4	replace
4	[BUG]  [BUGGY]  if(n  <  0)  {  sumX  =  x  -  y;  }  else  {  sumX  =  x  -  y;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  <  0)  {  sumX  =  x  -  y;  }  else  {  sumX  =  x  -  y;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  <  0)  {  sumX  =  x  -  y;  }  else  {  sumX  =  x  -  y;  }	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    xBar;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	132	4	replace
5	[BUG]  [BUGGY]  if(n  ==  0)  {  sumX  =  x  -  xBar;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  cannot  find  symbol  xBar  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  sumX  =  x  -  xBar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  sumX  =  x  -  xBar;  }  else  {  sumX  =  x  -  xbar;  }	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    xBar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  cannot  find  symbol  xBar	132	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  <  0)  {  sumX  =  x  -  y;  }  else  {  sumX  =  x  -  ybar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  <  0)  {  sumX  =  x  -  y;  }  else  {  sumX  =  x  -  ybar;  }	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    xBar;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	132	4	replace
7	[BUG]  [BUGGY]  if(n  <  0)  {  sumX  =  x  -  y;  }  else  {  sumX  =  x  -  ybar;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  <  0)  {  sumX  =  x  -  y;  }  else  {  sumX  =  x  -  ybar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  <  0)  {  sumX  =  x  -  y;  }  else  {  sumX  =  x  -  ybar;  }	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    xBar;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	132	4	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  xbar  -  1);  ybar  =  Math.max(1.0,  xbar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(1.0,    xbar    -    1);    ybar  =  Math.max(1.0,  xbar  -  1);	  	compilable	  [FE]  AssertionFailedError  	46	1	add
9	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  xbar  -  1);  ybar  =  Math.max(1.0,  xbar  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  xbar  -  1);  ybar  =  Math.max(1.0,  xbar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1.0,    xbar    -    1);    ybar  =  Math.max(1.0,  xbar  -  1);	  	compilable	  [FE]  AssertionFailedError  	46	1	add
10	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  xbar  -  1);  ybar  =  Math.max(1.0,  xbar  -  1));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  xbar  -  1);  ybar  =  Math.max(1.0,  xbar  -  1));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1.0,    xbar    -    1);    ybar  =  Math.max(1.0,  xbar  -  1));	  	non-compiled	[CE]  ';'  expected	46	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  xbar  -  1);  xbar  =  Math.max(1.0,  xbar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(1.0,    xbar    -    1);    xbar  =  Math.max(1.0,  xbar  -  1);	  	compilable	  [FE]  AssertionFailedError  	46	4	add
12	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  xbar  -  1);  xbar  =  Math.max(1.0,  xbar  -  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  xbar  -  1);  xbar  =  Math.max(1.0,  xbar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1.0,    xbar    -    1);    xbar  =  Math.max(1.0,  xbar  -  1);	  	compilable	  [FE]  AssertionFailedError  	46	4	add
13	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  xbar  -  1);  ybar  =  Math.max(1.0,  xxbar  -  1);  [CE]  cannot  find  symbol  xxbar  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  xbar  -  1);  ybar  =  Math.max(1.0,  xxbar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1.0,    xbar    -    1);    ybar  =  Math.max(1.0,  xxbar  -  1);	  	non-compiled	[CE]  cannot  find  symbol  xxbar	46	None	add
14	[BUG]  [BUGGY]          ybar    =    Math.abs(xbar);    double  ybar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  double  ybar  =  Math.abs(xbar);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.abs(xbar);    double  ybar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  double  ybar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.abs(xbar);        double    ybar    =    Math.abs(xbar);    ybar  =  Math.abs(xbar);  double  ybar  =  Math.abs(xbar);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	164	None	add
15	[BUG]  [BUGGY]          ybar    =    Math.abs(xbar);    double  ybar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  double  ybar  =  Math.abs(xbar);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.abs(xbar);    double  ybar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  double  ybar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.abs(xbar);        double    ybar    =    Math.abs(xbar);    xbar  =  Math.abs(xbar);  double  ybar  =  Math.abs(xbar);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	164	None	add
16	[BUG]  [BUGGY]          ybar    =    Math.abs(xbar);    double  ybar  =  Math.abs(xbar);  double  ybar  =  Math.abs(xbar);  double  ybar  =  Math.abs(xbar);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.abs(xbar);    double  ybar  =  Math.abs(xbar);  double  ybar  =  Math.abs(xbar);  double  ybar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.abs(xbar);        double    ybar    =    Math.abs(xbar);    double  ybar  =  Math.abs(xbar);  double  ybar  =  Math.abs(xbar);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	164	None	add
17	[BUG]  [BUGGY]          ybar    =    Math.abs(xbar);    double  ybar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  Double  ybar  =  Math.abs(xbar);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.abs(xbar);    double  ybar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  Double  ybar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.abs(xbar);        double    ybar    =    Math.abs(xbar);    ybar  =  Math.abs(xbar);  Double  ybar  =  Math.abs(xbar);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	164	None	add
18	[BUG]  [BUGGY]          ybar    =    Math.abs(xbar);    double  ybar  =  Math.abs(xbar);  yBar  =  Math.abs(xbar);  double  ybar  =  Math.abs(xbar);  [CE]  cannot  find  symbol  yBar  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.abs(xbar);    double  ybar  =  Math.abs(xbar);  yBar  =  Math.abs(xbar);  double  ybar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.abs(xbar);        double    ybar    =    Math.abs(xbar);    yBar  =  Math.abs(xbar);  double  ybar  =  Math.abs(xbar);	  	non-compiled	[CE]  cannot  find  symbol  yBar	164	None	add
19	[BUG]  [BUGGY]  cast(x,  y);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  cast(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	cast(x,  y);	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    x;    }    else    {    sumX    +=    x    -    xbar;    }    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
20	[BUG]  [BUGGY]  bucket  =  true;  [CE]  cannot  find  symbol  bucket  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  bucket  =  true;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  =  true;	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    x;    }    else    {    sumX    +=    x    -    xbar;    }    	non-compiled	[CE]  cannot  find  symbol  bucket	79	None	replace
21	[BUG]  [BUGGY]  bucket  =  false;  [CE]  cannot  find  symbol  bucket  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  bucket  =  false;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  =  false;	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    x;    }    else    {    sumX    +=    x    -    xbar;    }    	non-compiled	[CE]  cannot  find  symbol  bucket	79	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  ybar);  ybar  =  Math.max(0,  ybar);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(0,    ybar);    ybar  =  Math.max(0,  ybar);	  	compilable	  [FE]  AssertionFailedError  	20	1	add
23	[BUG]  [BUGGY]  ybar  =  Math.max(0,  ybar);  ybar  =  Math.max(0,  ybar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  ybar);  ybar  =  Math.max(0,  ybar);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    ybar);    ybar  =  Math.max(0,  ybar);	  	compilable	  [FE]  AssertionFailedError  	20	1	add
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  ybar);  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(0,    ybar);    ybar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	20	1	add
25	[BUG]  [BUGGY]  ybar  =  Math.max(0,  ybar);  ybar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  ybar);  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    ybar);    ybar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	20	1	add
26	[BUG]  [BUGGY]  ybar  =  Math.max(0,  ybar);  ybar  =  Math.max(0,  yBar);  [CE]  cannot  find  symbol  yBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  ybar);  ybar  =  Math.max(0,  yBar);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    ybar);    ybar  =  Math.max(0,  yBar);	  	non-compiled	[CE]  cannot  find  symbol  yBar	20	None	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  y);  ybar  =  Math.min(1.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.min(1.0,    y);    ybar  =  Math.min(1.0,  y);	  	compilable	  [FE]  AssertionFailedError  	194	1	add
28	[BUG]  [BUGGY]  ybar  =  Math.min(1.0,  y);  ybar  =  Math.min(1.0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  y);  ybar  =  Math.min(1.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.min(1.0,    y);    ybar  =  Math.min(1.0,  y);	  	compilable	  [FE]  AssertionFailedError  	194	1	add
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  y);  xbar  =  Math.min(1.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.min(1.0,    y);    xbar  =  Math.min(1.0,  y);	  	compilable	  [FE]  AssertionFailedError  	194	4	add
30	[BUG]  [BUGGY]  ybar  =  Math.min(1.0,  y);  xbar  =  Math.min(1.0,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  y);  xbar  =  Math.min(1.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.min(1.0,    y);    xbar  =  Math.min(1.0,  y);	  	compilable	  [FE]  AssertionFailedError  	194	4	add
31	[BUG]  [BUGGY]  ybar  =  Math.min(1.0,  y);  yBar  =  Math.min(1.0,  y);  [CE]  cannot  find  symbol  yBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  y);  yBar  =  Math.min(1.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.min(1.0,    y);    yBar  =  Math.min(1.0,  y);	  	non-compiled	[CE]  cannot  find  symbol  yBar	194	None	add
32	[BUG]  [BUGGY]  ybar  =  Math.min(1.0,  y);  ybar  =  Math.min(1.0,  y));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  y);  ybar  =  Math.min(1.0,  y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.min(1.0,    y);    ybar  =  Math.min(1.0,  y));	  	non-compiled	[CE]  ';'  expected	194	None	add
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(x);  ybar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.abs(x);  ybar  =  Math.abs(y);	          ybar    =    Math.abs(xbar);    ybar    =    Math.abs(exbar);    	compilable	  [FE]  AssertionFailedError  	226	1	replace
34	[BUG]  [BUGGY]  ybar  =  Math.abs(x);  ybar  =  Math.abs(y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(x);  ybar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.abs(x);  ybar  =  Math.abs(y);	          ybar    =    Math.abs(xbar);    ybar    =    Math.abs(exbar);    	compilable	  [FE]  AssertionFailedError  	226	1	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(y);  ybar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.abs(y);  ybar  =  Math.abs(y);	          ybar    =    Math.abs(xbar);    ybar    =    Math.abs(exbar);    	compilable	  [FE]  AssertionFailedError  	226	1	replace
36	[BUG]  [BUGGY]  ybar  =  Math.abs(y);  ybar  =  Math.abs(y);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(y);  ybar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.abs(y);  ybar  =  Math.abs(y);	          ybar    =    Math.abs(xbar);    ybar    =    Math.abs(exbar);    	compilable	  [FE]  AssertionFailedError  	226	1	replace
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(y);  ybar  =  Math.abs(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.abs(y);  ybar  =  Math.abs(x);	          ybar    =    Math.abs(xbar);    ybar    =    Math.abs(exbar);    	compilable	  [FE]  AssertionFailedError  	226	4	replace
38	[BUG]  [BUGGY]  ybar  =  Math.abs(y);  ybar  =  Math.abs(x);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(y);  ybar  =  Math.abs(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.abs(y);  ybar  =  Math.abs(x);	          ybar    =    Math.abs(xbar);    ybar    =    Math.abs(exbar);    	compilable	  [FE]  AssertionFailedError  	226	4	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(xbar);  ybar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.abs(xbar);  ybar  =  Math.abs(y);	          ybar    =    Math.abs(xbar);    ybar    =    Math.abs(exbar);    	compilable	  [FE]  AssertionFailedError  	226	1	replace
40	[BUG]  [BUGGY]  ybar  =  Math.abs(xbar);  ybar  =  Math.abs(y);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(xbar);  ybar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.abs(xbar);  ybar  =  Math.abs(y);	          ybar    =    Math.abs(xbar);    ybar    =    Math.abs(exbar);    	compilable	  [FE]  AssertionFailedError  	226	1	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.abs(x);  xbar  =  Math.abs(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar    =    Math.abs(x);    xbar  =  Math.abs(x);	  	compilable	  [FE]  AssertionFailedError  	240	1	add
42	[BUG]  [BUGGY]  xbar  =  Math.abs(x);  xbar  =  Math.abs(x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.abs(x);  xbar  =  Math.abs(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    Math.abs(x);    xbar  =  Math.abs(x);	  	compilable	  [FE]  AssertionFailedError  	240	1	add
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.abs(x);  xbar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar    =    Math.abs(x);    xbar  =  Math.abs(y);	  	compilable	  [FE]  AssertionFailedError  	240	5	add
44	[BUG]  [BUGGY]  xbar  =  Math.abs(x);  xbar  =  Math.abs(y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.abs(x);  xbar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    Math.abs(x);    xbar  =  Math.abs(y);	  	compilable	  [FE]  AssertionFailedError  	240	5	add
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.abs(x);  double  xbar  =  Math.abs(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar    =    Math.abs(x);    double  xbar  =  Math.abs(x);	  	compilable	  [FE]  AssertionFailedError  	240	1	add
46	[BUG]  [BUGGY]  xbar  =  Math.abs(x);  double  xbar  =  Math.abs(x);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.abs(x);  double  xbar  =  Math.abs(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    Math.abs(x);    double  xbar  =  Math.abs(x);	  	compilable	  [FE]  AssertionFailedError  	240	1	add
47	[BUG]  [BUGGY]  xbar  =  Math.abs(x);  xbar  =  Math.abs(x));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.abs(x);  xbar  =  Math.abs(x));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    Math.abs(x);    xbar  =  Math.abs(x));	  	non-compiled	[CE]  ';'  expected	240	None	add
48	[BUG]  [BUGGY]  xbar  =  Math.abs(x);  (xbar  =  Math.abs(x);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.abs(x);  (xbar  =  Math.abs(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    Math.abs(x);    (xbar  =  Math.abs(x);	  	non-compiled	[CE]  ')'  expected	240	None	add
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  n;  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar    =    n;    xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	123	5	add
50	[BUG]  [BUGGY]  xbar  =  n;  xbar  =  n;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  n;  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    n;    xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	123	5	add
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  n;  double  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar    =    n;    double  xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	123	5	add
52	[BUG]  [BUGGY]  xbar  =  n;  double  xbar  =  n;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  n;  double  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    n;    double  xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	123	5	add
53	[BUG]  [BUGGY]  xbar  =  n;  xBar  =  n;  [CE]  cannot  find  symbol  xBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  n;  xBar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    n;    xBar  =  n;	  	non-compiled	[CE]  cannot  find  symbol  xBar	123	None	add
54	[BUG]  [BUGGY]  xbar  =  n;  (xbar  =  n;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  n;  (xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    n;    (xbar  =  n;	  	non-compiled	[CE]  ')'  expected	123	None	add
55	[BUG]  [BUGGY]  xbar  =  n;  xbar  =  n);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  n;  xbar  =  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    n;    xbar  =  n);	  	non-compiled	[CE]  ';'  expected	123	None	add
56	[BUG]  [BUGGY]  ybar    =    n;    double  ybar  =  n;  ybar  =  n;  double  ybar  =  n;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    double  ybar  =  n;  ybar  =  n;  double  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        n;        double    ybar    =    n;    ybar  =  n;  double  ybar  =  n;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	166	None	add
57	[BUG]  [BUGGY]  ybar    =    n;    double  ybar  =  n;  double  ybar  =  n;  double  ybar  =  n;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    double  ybar  =  n;  double  ybar  =  n;  double  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        n;        double    ybar    =    n;    double  ybar  =  n;  double  ybar  =  n;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	166	None	add
58	[BUG]  [BUGGY]  ybar    =    n;    double  ybar  =  n;  xbar  =  n;  double  ybar  =  n;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    double  ybar  =  n;  xbar  =  n;  double  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        n;        double    ybar    =    n;    xbar  =  n;  double  ybar  =  n;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	166	None	add
59	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    double  ybar  =  n;  ybar  =  n;  double  yBar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        n;        double    ybar    =    n;    ybar  =  n;  double  yBar  =  n;	  	compilable	  [FE]  AssertionFailedError  	166	4	add
60	[BUG]  [BUGGY]  ybar    =    n;    double  ybar  =  n;  ybar  =  n;  double  yBar  =  n;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    double  ybar  =  n;  ybar  =  n;  double  yBar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        n;        double    ybar    =    n;    ybar  =  n;  double  yBar  =  n;	  	compilable	  [FE]  AssertionFailedError  	166	4	add
61	[BUG]  [BUGGY]  ybar    =    n;    double  ybar  =  n;  n  =  n;  double  ybar  =  n;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    double  ybar  =  n;  n  =  n;  double  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        n;        double    ybar    =    n;    n  =  n;  double  ybar  =  n;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	166	None	add
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  x);  sumXY  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(0,  x);  sumXY  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    x);    	compilable	  [FE]  AssertionFailedError  	232	6	replace
63	[BUG]  [BUGGY]  ybar  =  Math.max(0,  x);  sumXY  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  x);  sumXY  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0,  x);  sumXY  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    x);    	compilable	  [FE]  AssertionFailedError  	232	6	replace
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    x);    	compilable	  [FE]  AssertionFailedError  	232	6	replace
65	[BUG]  [BUGGY]  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    x);    	compilable	  [FE]  AssertionFailedError  	232	6	replace
66	[BUG]  [BUGGY]  n  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    x);    	non-compiled	[CE]  possible  loss  of  precision	232	None	replace
67	[BUG]  [BUGGY]  n  =  Math.max(0,  x);  sumXY  =  Math.max(0,  y);  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.max(0,  x);  sumXY  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.max(0,  x);  sumXY  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    x);    	non-compiled	[CE]  possible  loss  of  precision	232	None	replace
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  ybar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	double  ybar  =  0;	  ybar    =    0;    int    ybar    =    0;    	compilable	  [FE]  AssertionFailedError  	186	4	replace
69	[BUG]  [BUGGY]  double  ybar  =  0;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  ybar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  ybar  =  0;	  ybar    =    0;    int    ybar    =    0;    	compilable	  [FE]  AssertionFailedError  	186	4	replace
70	[BUG]  [BUGGY]  Double  ybar  =  0;  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  Double  ybar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	Double  ybar  =  0;	  ybar    =    0;    int    ybar    =    0;    	non-compiled	[CE]  incompatible  types	186	None	replace
71	[BUG]  [BUGGY]  double  ybar  =  data.doubleValue();  [CE]  cannot  find  symbol  data  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  ybar  =  data.doubleValue();  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  ybar  =  data.doubleValue();	  double    ybar    =    d.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  data	144	None	replace
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xBar;    }    	compilable	  [FE]  AssertionFailedError  	147	4	replace
73	[BUG]  [BUGGY]  if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xBar;    }    	compilable	  [FE]  AssertionFailedError  	147	4	replace
74	[BUG]  [BUGGY]  if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xBar;  }  [CE]  cannot  find  symbol  xBar  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xBar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xBar;  }	          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xBar;    }    	non-compiled	[CE]  cannot  find  symbol  xBar	147	None	replace
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  y;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  y;  }	          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xBar;    }    	compilable	  [FE]  AssertionFailedError  	147	4	replace
76	[BUG]  [BUGGY]  if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  y;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  y;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  y;  }	          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xBar;    }    	compilable	  [FE]  AssertionFailedError  	147	4	replace
77	[BUG]  [BUGGY]  n  =  x;  n  =  x;  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  x;  n  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  x;  n  =  x;	          xbar    =    x;    xBar    =    x;    	non-compiled	[CE]  possible  loss  of  precision	110	None	replace
78	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    double  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  double  ybar  =  Math.max(0,  y);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    double  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  double  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        double    ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  double  ybar  =  Math.max(0,  y);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	4	None	add
79	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    double  ybar  =  Math.max(0,  y);  ybar  =  Math.min(0,  y);  double  ybar  =  Math.max(0,  y);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    double  ybar  =  Math.max(0,  y);  ybar  =  Math.min(0,  y);  double  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        double    ybar    =    Math.max(0,    y);    ybar  =  Math.min(0,  y);  double  ybar  =  Math.max(0,  y);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	4	None	add
80	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    double  ybar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  double  ybar  =  Math.max(0,  y);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    double  ybar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  double  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        double    ybar    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);  double  ybar  =  Math.max(0,  y);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	4	None	add
81	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    double  ybar  =  Math.max(0,  y);  double  ybar  =  Math.max(0,  y);  double  ybar  =  Math.max(0,  y);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    double  ybar  =  Math.max(0,  y);  double  ybar  =  Math.max(0,  y);  double  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        double    ybar    =    Math.max(0,    y);    double  ybar  =  Math.max(0,  y);  double  ybar  =  Math.max(0,  y);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	4	None	add
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n  /  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  n  /  1;	  ybar    =    n    -    1;    	compilable	  [FE]  AssertionFailedError  	98	4	replace
83	[BUG]  [BUGGY]  ybar  =  n  /  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n  /  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  n  /  1;	  ybar    =    n    -    1;    	compilable	  [FE]  AssertionFailedError  	98	4	replace
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y  -  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  y  -  1;	  ybar    =    n    -    1;    	compilable	  [FE]  AssertionFailedError  	98	4	replace
85	[BUG]  [BUGGY]  ybar  =  y  -  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y  -  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  y  -  1;	  ybar    =    n    -    1;    	compilable	  [FE]  AssertionFailedError  	98	4	replace
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.floor(xbar);    xbar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.floor(xbar);        xbar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);	  	compilable	  [FE]  AssertionFailedError  	82	2	add
87	[BUG]  [BUGGY]          ybar    =    Math.floor(xbar);    xbar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.floor(xbar);    xbar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.floor(xbar);        xbar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);	  	compilable	  [FE]  AssertionFailedError  	82	2	add
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.floor(xbar);    xbar  =  Math.floor(xbar);  ybar  =  Math.log(xbar);  xbar  =  Math.floor(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.floor(xbar);        xbar    =    Math.floor(xbar);    ybar  =  Math.log(xbar);  xbar  =  Math.floor(xbar);	  	compilable	  [FE]  AssertionFailedError  	82	2	add
89	[BUG]  [BUGGY]          ybar    =    Math.floor(xbar);    xbar  =  Math.floor(xbar);  ybar  =  Math.log(xbar);  xbar  =  Math.floor(xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.floor(xbar);    xbar  =  Math.floor(xbar);  ybar  =  Math.log(xbar);  xbar  =  Math.floor(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.floor(xbar);        xbar    =    Math.floor(xbar);    ybar  =  Math.log(xbar);  xbar  =  Math.floor(xbar);	  	compilable	  [FE]  AssertionFailedError  	82	2	add
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.floor(xbar);    xbar  =  Math.floor(xbar);  ybar  =  Math.ceil(xbar);  xbar  =  Math.ceil(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.floor(xbar);        xbar    =    Math.floor(xbar);    ybar  =  Math.ceil(xbar);  xbar  =  Math.ceil(xbar);	  	compilable	  [FE]  AssertionFailedError  	82	2	add
91	[BUG]  [BUGGY]          ybar    =    Math.floor(xbar);    xbar  =  Math.floor(xbar);  ybar  =  Math.ceil(xbar);  xbar  =  Math.ceil(xbar);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.floor(xbar);    xbar  =  Math.floor(xbar);  ybar  =  Math.ceil(xbar);  xbar  =  Math.ceil(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.floor(xbar);        xbar    =    Math.floor(xbar);    ybar  =  Math.ceil(xbar);  xbar  =  Math.ceil(xbar);	  	compilable	  [FE]  AssertionFailedError  	82	2	add
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.floor(xbar);    xbar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.floor(xbar);        xbar    =    Math.floor(xbar);    xbar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);	  	compilable	  [FE]  AssertionFailedError  	82	2	add
93	[BUG]  [BUGGY]          ybar    =    Math.floor(xbar);    xbar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.floor(xbar);    xbar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.floor(xbar);        xbar    =    Math.floor(xbar);    xbar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);	  	compilable	  [FE]  AssertionFailedError  	82	2	add
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(x);  ybar  =  Math.floor(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.floor(x);  ybar  =  Math.floor(y);	          ybar    =    Math.floor(xbar);    yBar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	158	4	replace
95	[BUG]  [BUGGY]  ybar  =  Math.floor(x);  ybar  =  Math.floor(y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(x);  ybar  =  Math.floor(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(x);  ybar  =  Math.floor(y);	          ybar    =    Math.floor(xbar);    yBar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	158	4	replace
96	[BUG]  [BUGGY]  n  =  Math.floor(xbar);  n  =  Math.floor(xbar);  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.floor(xbar);  n  =  Math.floor(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.floor(xbar);  n  =  Math.floor(xbar);	          ybar    =    Math.floor(xbar);    yBar    =    Math.floor(xbar);    	non-compiled	[CE]  possible  loss  of  precision	158	None	replace
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.floor(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  Math.floor(xbar);	          ybar    =    Math.floor(xbar);    yBar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	158	4	replace
98	[BUG]  [BUGGY]  xbar  =  Math.floor(xbar);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.floor(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  Math.floor(xbar);	          ybar    =    Math.floor(xbar);    yBar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	158	4	replace
99	[BUG]  [BUGGY]  ybar  =  Math.floor(xbar,  n,  y);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(xbar,  n,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(xbar,  n,  y);	  ybar    =    Math.floor(xbar,    y,    n);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	72	None	replace
100	[BUG]  [BUGGY]  ybar  =  Math.floor(n,  x,  y);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(n,  x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(n,  x,  y);	  ybar    =    Math.floor(xbar,    y,    n);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	72	None	replace
101	[BUG]  [BUGGY]  ybar  =  Math.floor(xbar,  y,  n,  n);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(xbar,  y,  n,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(xbar,  y,  n,  n);	  ybar    =    Math.floor(xbar,    y,    n);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	72	None	replace
102	[BUG]  [BUGGY]  ybar  =  Math.floor(xbar,  y,  n,  sumYY);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(xbar,  y,  n,  sumYY);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(xbar,  y,  n,  sumYY);	  ybar    =    Math.floor(xbar,    y,    n);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	72	None	replace
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	double  ybar  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    double    ybar    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	5	4	replace
104	[BUG]  [BUGGY]  double  ybar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  ybar  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    double    ybar    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	5	4	replace
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    double    ybar    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	5	5	replace
106	[BUG]  [BUGGY]  xbar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    double    ybar    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	5	5	replace
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  y);  ybar  =  Math.max(1.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(1.0,    y);    ybar  =  Math.max(1.0,  y);	  	compilable	  [FE]  AssertionFailedError  	40	1	add
108	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  y);  ybar  =  Math.max(1.0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  y);  ybar  =  Math.max(1.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1.0,    y);    ybar  =  Math.max(1.0,  y);	  	compilable	  [FE]  AssertionFailedError  	40	1	add
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  y);  xbar  =  Math.max(1.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(1.0,    y);    xbar  =  Math.max(1.0,  y);	  	compilable	  [FE]  AssertionFailedError  	40	5	add
110	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  y);  xbar  =  Math.max(1.0,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  y);  xbar  =  Math.max(1.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1.0,    y);    xbar  =  Math.max(1.0,  y);	  	compilable	  [FE]  AssertionFailedError  	40	5	add
111	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  y);  yBar  =  Math.max(1.0,  y);  [CE]  cannot  find  symbol  yBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  y);  yBar  =  Math.max(1.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1.0,    y);    yBar  =  Math.max(1.0,  y);	  	non-compiled	[CE]  cannot  find  symbol  yBar	40	None	add
112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  y);  ybar  =  Math.max(1.0,  x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(1.0,    y);    ybar  =  Math.max(1.0,  x);	  	compilable	  [FE]  AssertionFailedError  	40	1	add
113	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  y);  ybar  =  Math.max(1.0,  x);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  y);  ybar  =  Math.max(1.0,  x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1.0,    y);    ybar  =  Math.max(1.0,  x);	  	compilable	  [FE]  AssertionFailedError  	40	1	add
114	[BUG]  [BUGGY]  luate(x,  y)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  luate(x,  y)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	luate(x,  y)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }	  pullForced(x,    y)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  ';'  expected	224	None	replace
115	[BUG]  [BUGGY]  if(n  ==  0)  {  pullForced(x,  y)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  pullForced(x,  y)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  pullForced(x,  y)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  }	  pullForced(x,    y)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  ';'  expected	224	None	replace
116	[BUG]  [BUGGY]  pullForced(x,  y)  {  sumX  =  x  -  1;  }  else  {  sumX  =  x  -  1;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  pullForced(x,  y)  {  sumX  =  x  -  1;  }  else  {  sumX  =  x  -  1;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	pullForced(x,  y)  {  sumX  =  x  -  1;  }  else  {  sumX  =  x  -  1;  }	  pullForced(x,    y)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  ';'  expected	224	None	replace
117	[BUG]  [BUGGY]  sumX  =  x;  }  else  {  sumX  =  x  -  bar;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x;  }  else  {  sumX  =  x  -  bar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX  =  x;  }  else  {  sumX  =  x  -  bar;  }	  sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  type	221	None	replace
118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.abs(x  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  Math.abs(x  +  1);	  xbar    =    Math.abs(x);    	compilable	  [FE]  AssertionFailedError  	241	5	replace
119	[BUG]  [BUGGY]  xbar  =  Math.abs(x  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.abs(x  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  Math.abs(x  +  1);	  xbar    =    Math.abs(x);    	compilable	  [FE]  AssertionFailedError  	241	5	replace
120	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.min(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  Math.min(x,  y);	  xbar    =    Math.abs(x);    	compilable	  [FE]  AssertionFailedError  	241	4	replace
121	[BUG]  [BUGGY]  xbar  =  Math.min(x,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.min(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  Math.min(x,  y);	  xbar    =    Math.abs(x);    	compilable	  [FE]  AssertionFailedError  	241	4	replace
122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  Math.abs(y);	  xbar    =    Math.abs(x);    	compilable	  [FE]  AssertionFailedError  	241	5	replace
123	[BUG]  [BUGGY]  xbar  =  Math.abs(y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  Math.abs(y);	  xbar    =    Math.abs(x);    	compilable	  [FE]  AssertionFailedError  	241	5	replace
124	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  ==  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    addData(x,    y);    }    	compilable	  [FE]  AssertionFailedError  	25	4	replace
125	[BUG]  [BUGGY]  if(n  ==  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    addData(x,    y);    }    	compilable	  [FE]  AssertionFailedError  	25	4	replace
126	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    addData(x,    y);    }    	compilable	  [FE]  StackOverflowError  	25	9	replace
127	[BUG]  [BUGGY]  if(n  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    addData(x,    y);    }    	compilable	  [FE]  StackOverflowError  	25	9	replace
128	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  xbar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  ==  0)  {  xbar  =  x;  }  else  {  addData(x,  y);  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    addData(x,    y);    }    	compilable	  [FE]  AssertionFailedError  	25	4	replace
129	[BUG]  [BUGGY]  if(n  ==  0)  {  xbar  =  x;  }  else  {  addData(x,  y);  }  [FE]  AssertionFailedError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  xbar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  xbar  =  x;  }  else  {  addData(x,  y);  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    addData(x,    y);    }    	compilable	  [FE]  AssertionFailedError  	25	4	replace
130	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  <  0)  {  xbar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  <  0)  {  xbar  =  x;  }  else  {  addData(x,  y);  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    addData(x,    y);    }    	compilable	  [FE]  StackOverflowError  	25	9	replace
131	[BUG]  [BUGGY]  if(n  <  0)  {  xbar  =  x;  }  else  {  addData(x,  y);  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  <  0)  {  xbar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  <  0)  {  xbar  =  x;  }  else  {  addData(x,  y);  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    addData(x,    y);    }    	compilable	  [FE]  StackOverflowError  	25	9	replace
132	[BUG]  [BUGGY]  n  =  Math.max(1.0,  xbar);  n  =  Math.max(1.0,  xbar);  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.max(1.0,  xbar);  n  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.max(1.0,  xbar);  n  =  Math.max(1.0,  xbar);	          ybar    =    Math.max(1.0,    xbar);    yBar    =    Math.max(1.0,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	171	None	replace
133	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  n);  yBar  =  Math.max(1.0,  xbar);  [CE]  cannot  find  symbol  yBar  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  n);  yBar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1.0,  n);  yBar  =  Math.max(1.0,  xbar);	          ybar    =    Math.max(1.0,    xbar);    yBar    =    Math.max(1.0,    xbar);    	non-compiled	[CE]  cannot  find  symbol  yBar	171	None	replace
134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  Math.max(1.0,  xbar);	          ybar    =    Math.max(1.0,    xbar);    yBar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	171	4	replace
135	[BUG]  [BUGGY]  xbar  =  Math.max(1.0,  xbar);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  Math.max(1.0,  xbar);	          ybar    =    Math.max(1.0,    xbar);    yBar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	171	4	replace
136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  ybar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	double  ybar  =  Math.max(1.0,  xbar);	          ybar    =    Math.max(1.0,    xbar);    double    ybar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	170	4	replace
137	[BUG]  [BUGGY]  double  ybar  =  Math.max(1.0,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  ybar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  ybar  =  Math.max(1.0,  xbar);	          ybar    =    Math.max(1.0,    xbar);    double    ybar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	170	4	replace
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  n);  ybar  =  Math.max(0,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(0,  n);  ybar  =  Math.max(0,  n);	          ybar    =    Math.max(0,    xbar);    ybar    =    Math.max(0,    xBar);    	compilable	  [FE]  AssertionFailedError  	141	4	replace
139	[BUG]  [BUGGY]  ybar  =  Math.max(0,  n);  ybar  =  Math.max(0,  n);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  n);  ybar  =  Math.max(0,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0,  n);  ybar  =  Math.max(0,  n);	          ybar    =    Math.max(0,    xbar);    ybar    =    Math.max(0,    xBar);    	compilable	  [FE]  AssertionFailedError  	141	4	replace
140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);	          ybar    =    Math.max(0,    xbar);    ybar    =    Math.max(0,    xBar);    	compilable	  [FE]  AssertionFailedError  	141	1	replace
141	[BUG]  [BUGGY]  ybar  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);	          ybar    =    Math.max(0,    xbar);    ybar    =    Math.max(0,    xBar);    	compilable	  [FE]  AssertionFailedError  	141	1	replace
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.floor(x);  ybar  =  Math.floor(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  Math.floor(x);  ybar  =  Math.floor(y);	          ybar    =    Math.floor(xbar);    ybar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	81	4	replace
143	[BUG]  [BUGGY]  xbar  =  Math.floor(x);  ybar  =  Math.floor(y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.floor(x);  ybar  =  Math.floor(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  Math.floor(x);  ybar  =  Math.floor(y);	          ybar    =    Math.floor(xbar);    ybar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	81	4	replace
144	[BUG]  [BUGGY]  n  =  Math.floor(x);  ybar  =  Math.floor(y);  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.floor(x);  ybar  =  Math.floor(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.floor(x);  ybar  =  Math.floor(y);	          ybar    =    Math.floor(xbar);    ybar    =    Math.floor(xbar);    	non-compiled	[CE]  possible  loss  of  precision	81	None	replace
145	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.ceil(x);  ybar  =  Math.ceil(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.ceil(x);  ybar  =  Math.ceil(y);	          ybar    =    Math.floor(xbar);    ybar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	81	4	replace
146	[BUG]  [BUGGY]  ybar  =  Math.ceil(x);  ybar  =  Math.ceil(y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.ceil(x);  ybar  =  Math.ceil(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.ceil(x);  ybar  =  Math.ceil(y);	          ybar    =    Math.floor(xbar);    ybar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	81	4	replace
147	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  ybar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  ==  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  ybar;  }	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xBar;    }    	compilable	  [FE]  AssertionFailedError  	197	4	replace
148	[BUG]  [BUGGY]  if(n  ==  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  ybar;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  ybar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  ybar;  }	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xBar;    }    	compilable	  [FE]  AssertionFailedError  	197	4	replace
149	[BUG]  [BUGGY]  if(n  ==  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  yBar;  }  [CE]  cannot  find  symbol  yBar  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  yBar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  yBar;  }	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xBar;    }    	non-compiled	[CE]  cannot  find  symbol  yBar	197	None	replace
150	[BUG]  [BUGGY]  if(n  ==  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xBar;  }  [CE]  cannot  find  symbol  xBar  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xBar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xBar;  }	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xBar;    }    	non-compiled	[CE]  cannot  find  symbol  xBar	197	None	replace
151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }	          ybar    =    x;    (ybar    =    x;    	compilable	  [FE]  AssertionFailedError  	181	4	replace
152	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }	          ybar    =    x;    (ybar    =    x;    	compilable	  [FE]  AssertionFailedError  	181	4	replace
153	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }  else  {  addData(x,  y);  }	          ybar    =    x;    (ybar    =    x;    	compilable	  [FE]  StackOverflowError  	181	9	replace
154	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }  else  {  addData(x,  y);  }  [FE]  StackOverflowError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }  else  {  addData(x,  y);  }	          ybar    =    x;    (ybar    =    x;    	compilable	  [FE]  StackOverflowError  	181	9	replace
155	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(xbar  ==  0.0)  {  ybar  =  x;  ybar  =  y;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(xbar  ==  0.0)  {  ybar  =  x;  ybar  =  y;  }	          ybar    =    x;    (ybar    =    x;    	compilable	  [FE]  AssertionFailedError  	181	4	replace
156	[BUG]  [BUGGY]  if(xbar  ==  0.0)  {  ybar  =  x;  ybar  =  y;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(xbar  ==  0.0)  {  ybar  =  x;  ybar  =  y;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(xbar  ==  0.0)  {  ybar  =  x;  ybar  =  y;  }	          ybar    =    x;    (ybar    =    x;    	compilable	  [FE]  AssertionFailedError  	181	4	replace
157	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  if(x  <  0)  {  ybar  =  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x  <  0)  {  ybar  =  x;  }  else  if(x  <  0)  {  ybar  =  x;  }	          ybar    =    x;    (ybar    =    x;    	compilable	  [FE]  AssertionFailedError  	181	4	replace
158	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  if(x  <  0)  {  ybar  =  x;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  if(x  <  0)  {  ybar  =  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  ybar  =  x;  }  else  if(x  <  0)  {  ybar  =  x;  }	          ybar    =    x;    (ybar    =    x;    	compilable	  [FE]  AssertionFailedError  	181	4	replace
159	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.abs(xbar);    ybar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.abs(xbar);        ybar    =    Math.abs(xbar);    ybar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);	  	compilable	  [FE]  AssertionFailedError  	8	1	add
160	[BUG]  [BUGGY]          ybar    =    Math.abs(xbar);    ybar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.abs(xbar);    ybar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.abs(xbar);        ybar    =    Math.abs(xbar);    ybar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);	  	compilable	  [FE]  AssertionFailedError  	8	1	add
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.abs(xbar);    ybar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.abs(xbar);        ybar    =    Math.abs(xbar);    xbar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);	  	compilable	  [FE]  AssertionFailedError  	8	1	add
162	[BUG]  [BUGGY]          ybar    =    Math.abs(xbar);    ybar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.abs(xbar);    ybar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.abs(xbar);        ybar    =    Math.abs(xbar);    xbar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);	  	compilable	  [FE]  AssertionFailedError  	8	1	add
163	[BUG]  [BUGGY]          ybar    =    Math.abs(xbar);    ybar  =  Math.abs(xbar);  yBar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  [CE]  cannot  find  symbol  yBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.abs(xbar);    ybar  =  Math.abs(xbar);  yBar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.abs(xbar);        ybar    =    Math.abs(xbar);    yBar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);	  	non-compiled	[CE]  cannot  find  symbol  yBar	8	None	add
164	[BUG]  [BUGGY]  if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    If(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  }	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    If(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	198	4	replace
166	[BUG]  [BUGGY]  if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  }	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    If(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	198	4	replace
167	[BUG]  [BUGGY]  if(n  ==  0)  {  if(n  >=  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  if(n  >=  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  if(n  >=  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    If(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
168	[BUG]  [BUGGY]  if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x  -  xbar;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x  -  xbar;  }	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    If(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                if(n        <        0)        {        sumX        =        x        -        xbar;        }        else        {        sumX        +=        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x    -    x;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	78	1	add
170	[BUG]  [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                if(n        <        0)        {        sumX        =        x        -        xbar;        }        else        {        sumX        +=        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x    -    x;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	78	1	add
171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                if(n        <        0)        {        sumX        =        x        -        xbar;        }        else        {        sumX        +=        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x    -    x;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	78	1	add
172	[BUG]  [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                if(n        <        0)        {        sumX        =        x        -        xbar;        }        else        {        sumX        +=        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x    -    x;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	78	1	add
173	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                if(n        <        0)        {        sumX        =        x        -        xbar;        }        else        {        sumX        +=        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x    -    x;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	78	1	add
174	[BUG]  [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                if(n        <        0)        {        sumX        =        x        -        xbar;        }        else        {        sumX        +=        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x    -    x;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  +=  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	78	1	add
175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  0;  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  0;  xbar  =  0;	          xbar    =    x;    xbar    =    x;    	compilable	  [FE]  AssertionFailedError  	107	5	replace
176	[BUG]  [BUGGY]  xbar  =  0;  xbar  =  0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  0;  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  0;  xbar  =  0;	          xbar    =    x;    xbar    =    x;    	compilable	  [FE]  AssertionFailedError  	107	5	replace
177	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  xbar  =  x;  xbar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x  <  0)  {  xbar  =  x;  xbar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          xbar    =    x;    xbar    =    x;    	compilable	  [FE]  IllegalArgumentException  	107	9	replace
178	[BUG]  [BUGGY]  if(x  <  0)  {  xbar  =  x;  xbar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  xbar  =  x;  xbar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  xbar  =  x;  xbar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          xbar    =    x;    xbar    =    x;    	compilable	  [FE]  IllegalArgumentException  	107	9	replace
179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  xbar  =  x;  xbar  =  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x  <  0)  {  xbar  =  x;  xbar  =  x;  }	          xbar    =    x;    xbar    =    x;    	compilable	  [FE]  AssertionFailedError  	107	4	replace
180	[BUG]  [BUGGY]  if(x  <  0)  {  xbar  =  x;  xbar  =  x;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  xbar  =  x;  xbar  =  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  xbar  =  x;  xbar  =  x;  }	          xbar    =    x;    xbar    =    x;    	compilable	  [FE]  AssertionFailedError  	107	4	replace
181	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  xbar  =  x;  xbar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x  <  0)  {  xbar  =  x;  xbar  =  x;  }  else  {  addData(x,  y);  }	          xbar    =    x;    xbar    =    x;    	compilable	  [FE]  StackOverflowError  	107	9	replace
182	[BUG]  [BUGGY]  if(x  <  0)  {  xbar  =  x;  xbar  =  x;  }  else  {  addData(x,  y);  }  [FE]  StackOverflowError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  xbar  =  x;  xbar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  xbar  =  x;  xbar  =  x;  }  else  {  addData(x,  y);  }	          xbar    =    x;    xbar    =    x;    	compilable	  [FE]  StackOverflowError  	107	9	replace
183	[BUG]  [BUGGY]  Bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  Bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	Bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	  bucket    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
184	[BUG]  [BUGGY]  bucket  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  bucket  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	  bucket    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
185	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.ceil(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.ceil(x);	  ybar    =    Math.floor(x);    	compilable	  [FE]  AssertionFailedError  	118	4	replace
186	[BUG]  [BUGGY]  ybar  =  Math.ceil(x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.ceil(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.ceil(x);	  ybar    =    Math.floor(x);    	compilable	  [FE]  AssertionFailedError  	118	4	replace
187	[BUG]  [BUGGY]  ybar  =  Math.floor(y,  xbar,  n);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(y,  xbar,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(y,  xbar,  n);	  ybar    =    Math.floor(y,    xbar);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	73	None	replace
188	[BUG]  [BUGGY]  ybar  =  Math.log(xbar,  y);  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.log(xbar,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.log(xbar,  y);	  ybar    =    Math.floor(y,    xbar);    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	73	None	replace
189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  0.0;  ybar  =  0.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    0.0;    ybar  =  0.0;	  	compilable	  [FE]  AssertionFailedError  	177	1	add
190	[BUG]  [BUGGY]  ybar  =  0.0;  ybar  =  0.0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  0.0;  ybar  =  0.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    0.0;    ybar  =  0.0;	  	compilable	  [FE]  AssertionFailedError  	177	1	add
191	[BUG]  [BUGGY]  ybar  =  0.0;  int  ybar  =  0.0;  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  0.0;  int  ybar  =  0.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    0.0;    int  ybar  =  0.0;	  	non-compiled	[CE]  possible  loss  of  precision	177	None	add
192	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  0.0;  double  ybar  =  0.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    0.0;    double  ybar  =  0.0;	  	compilable	  [FE]  AssertionFailedError  	177	4	add
193	[BUG]  [BUGGY]  ybar  =  0.0;  double  ybar  =  0.0;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  0.0;  double  ybar  =  0.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    0.0;    double  ybar  =  0.0;	  	compilable	  [FE]  AssertionFailedError  	177	4	add
194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  0.0;  xbar  =  0.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    0.0;    xbar  =  0.0;	  	compilable	  [FE]  AssertionFailedError  	177	5	add
195	[BUG]  [BUGGY]  ybar  =  0.0;  xbar  =  0.0;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  0.0;  xbar  =  0.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    0.0;    xbar  =  0.0;	  	compilable	  [FE]  AssertionFailedError  	177	5	add
196	[BUG]  [BUGGY]  Bucket  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  Bucket  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	Bucket  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }	  bucket    <    0)    {    sumX    =    x    -    xBar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
197	[BUG]  [BUGGY]  bucket  <  =  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  bucket  <  =  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  <  =  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }	  bucket    <    0)    {    sumX    =    x    -    xBar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
198	[BUG]  [BUGGY]  double  y  =  x  -  ybar;  [CE]  variable  y  is  already  defined  in  method  addData(double,double)  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  y  =  x  -  ybar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  y  =  x  -  ybar;	  double    y    =    xbar    -    ybar;    	non-compiled	[CE]  variable  y  is  already  defined  in  method  addData(double,double)	113	None	replace
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    xbar  =  y  +  1;  ybar  =  y  +  1;  xbar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        y        +        1;        xbar    =    y    +    1;    ybar  =  y  +  1;  xbar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	62	5	add
200	[BUG]  [BUGGY]  ybar    =    y    +    1;    xbar  =  y  +  1;  ybar  =  y  +  1;  xbar  =  y  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    xbar  =  y  +  1;  ybar  =  y  +  1;  xbar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        y        +        1;        xbar    =    y    +    1;    ybar  =  y  +  1;  xbar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	62	5	add
201	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    xbar  =  y  +  1;  xbar  =  y  +  1;  xbar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        y        +        1;        xbar    =    y    +    1;    xbar  =  y  +  1;  xbar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	62	5	add
202	[BUG]  [BUGGY]  ybar    =    y    +    1;    xbar  =  y  +  1;  xbar  =  y  +  1;  xbar  =  y  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    xbar  =  y  +  1;  xbar  =  y  +  1;  xbar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        y        +        1;        xbar    =    y    +    1;    xbar  =  y  +  1;  xbar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	62	5	add
203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    xbar  =  y  +  1;  double  ybar  =  y  +  1;  xbar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        y        +        1;        xbar    =    y    +    1;    double  ybar  =  y  +  1;  xbar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	62	5	add
204	[BUG]  [BUGGY]  ybar    =    y    +    1;    xbar  =  y  +  1;  double  ybar  =  y  +  1;  xbar  =  y  +  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    xbar  =  y  +  1;  double  ybar  =  y  +  1;  xbar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        y        +        1;        xbar    =    y    +    1;    double  ybar  =  y  +  1;  xbar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	62	5	add
205	[BUG]  [BUGGY]  ybar    =    y    +    1;    xbar  =  y  +  1;  ybar  =  y  +  1;  xBar  =  y  +  1;  [CE]  cannot  find  symbol  xBar  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    xbar  =  y  +  1;  ybar  =  y  +  1;  xBar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        y        +        1;        xbar    =    y    +    1;    ybar  =  y  +  1;  xBar  =  y  +  1;	  	non-compiled	[CE]  cannot  find  symbol  xBar	62	None	add
206	[BUG]  [BUGGY]  ybar  =  x.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  x.doubleValue();  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  x.doubleValue();	  ybar    =    y.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	196	None	replace
207	[BUG]  [BUGGY]  ybar  =  n.doubleValue();  [CE]  long  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n.doubleValue();  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  n.doubleValue();	  ybar    =    y.doubleValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	196	None	replace
208	[BUG]  [BUGGY]  xbar  =  y.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  y.doubleValue();  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  y.doubleValue();	  ybar    =    y.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	196	None	replace
209	[BUG]  [BUGGY]  xbar  =  0;  xbar  =  0;  this.serialVersionUID  =  SerialVersionUID.format(x,  y);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  0;  xbar  =  0;  this.serialVersionUID  =  SerialVersionUID.format(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    0;    xbar  =  0;  this.serialVersionUID  =  SerialVersionUID.format(x,  y);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	125	None	add
210	[BUG]  [BUGGY]  xbar  =  0;  xbar  =  0;  this.serialVersionUID  =  SerialVersionUID.fromXMLChar(x,  y);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  0;  xbar  =  0;  this.serialVersionUID  =  SerialVersionUID.fromXMLChar(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    0;    xbar  =  0;  this.serialVersionUID  =  SerialVersionUID.fromXMLChar(x,  y);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	125	None	add
211	[BUG]  [BUGGY]  xbar  =  0;  xbar  =  0;  this.serialVersionUID  =  SerialVersionUID.fromX(x,  y);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  0;  xbar  =  0;  this.serialVersionUID  =  SerialVersionUID.fromX(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    0;    xbar  =  0;  this.serialVersionUID  =  SerialVersionUID.fromX(x,  y);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	125	None	add
212	[BUG]  [BUGGY]  xbar  =  0;  xbar  =  0;  this.serialVersionUID  =  SerialVersionUtilities.isSimpleRegression();  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  0;  xbar  =  0;  this.serialVersionUID  =  SerialVersionUtilities.isSimpleRegression();  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    0;    xbar  =  0;  this.serialVersionUID  =  SerialVersionUtilities.isSimpleRegression();	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	125	None	add
213	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  1;  ybar  =  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    1;    ybar  =  1;	  	compilable	  [FE]  AssertionFailedError  	152	1	add
214	[BUG]  [BUGGY]  ybar  =  1;  ybar  =  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  1;  ybar  =  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    1;    ybar  =  1;	  	compilable	  [FE]  AssertionFailedError  	152	1	add
215	[BUG]  [BUGGY]  ybar  =  1;  ybar  =  1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *  (double)n  /  (double)(n  +  1.0);  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  1;  ybar  =  1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *  (double)n  /  (double)(n  +  1.0);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    1;    ybar  =  1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *  (double)n  /  (double)(n  +  1.0);	  	non-compiled	[CE]  'else'  without  'if'	152	None	add
216	[BUG]  [BUGGY]  ybar  =  1;  ybar  =  1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *  n  /  (double)(n  +  1.0);  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  1;  ybar  =  1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *  n  /  (double)(n  +  1.0);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    1;    ybar  =  1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *  n  /  (double)(n  +  1.0);	  	non-compiled	[CE]  'else'  without  'if'	152	None	add
217	[BUG]  [BUGGY]  ybar  =  1;  ybar  =  1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *  (double)(n  +  1.0);  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  1;  ybar  =  1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *  (double)(n  +  1.0);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    1;    ybar  =  1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *  (double)(n  +  1.0);	  	non-compiled	[CE]  'else'  without  'if'	152	None	add
218	[BUG]  [BUGGY]  ybar  =  1;  ybar  =  1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *(double)n  /  (double)n  +  1.0);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  1;  ybar  =  1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *(double)n  /  (double)n  +  1.0);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    1;    ybar  =  1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *(double)n  /  (double)n  +  1.0);	  	non-compiled	[CE]  ';'  expected	152	None	add
219	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  xbar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1,  xbar  +  1);	  ybar    =    Math.max(1,    xbar);    	compilable	  [FE]  AssertionFailedError  	185	4	replace
220	[BUG]  [BUGGY]  ybar  =  Math.max(1,  xbar  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  xbar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1,  xbar  +  1);	  ybar    =    Math.max(1,    xbar);    	compilable	  [FE]  AssertionFailedError  	185	4	replace
221	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  ybar  +  1;  ybar  =  ybar  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    ybar    +    1;    ybar  =  ybar  +  1;	  	compilable	  [FE]  AssertionFailedError  	91	1	add
222	[BUG]  [BUGGY]  ybar  =  ybar  +  1;  ybar  =  ybar  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  ybar  +  1;  ybar  =  ybar  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    ybar    +    1;    ybar  =  ybar  +  1;	  	compilable	  [FE]  AssertionFailedError  	91	1	add
223	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  ybar  +  1;  xbar  =  ybar  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    ybar    +    1;    xbar  =  ybar  +  1;	  	compilable	  [FE]  AssertionFailedError  	91	5	add
224	[BUG]  [BUGGY]  ybar  =  ybar  +  1;  xbar  =  ybar  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  ybar  +  1;  xbar  =  ybar  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    ybar    +    1;    xbar  =  ybar  +  1;	  	compilable	  [FE]  AssertionFailedError  	91	5	add
225	[BUG]  [BUGGY]  ybar  =  ybar  +  1;  ybar  =  yBar  +  1;  [CE]  cannot  find  symbol  yBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  ybar  +  1;  ybar  =  yBar  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    ybar    +    1;    ybar  =  yBar  +  1;	  	non-compiled	[CE]  cannot  find  symbol  yBar	91	None	add
226	[BUG]  [BUGGY]  ybar  =  ybar  +  1;  (ybar  =  ybar  +  1;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  ybar  +  1;  (ybar  =  ybar  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    ybar    +    1;    (ybar  =  ybar  +  1;	  	non-compiled	[CE]  ')'  expected	91	None	add
227	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x    <    0)    {    ybar    =    x;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	26	9	add
228	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x    <    0)    {    ybar    =    x;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	26	9	add
229	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x    <    0)    {    ybar    =    x;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	26	9	add
230	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x    <    0)    {    ybar    =    x;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	26	9	add
231	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x    <    0)    {    ybar    =    x;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  IllegalArgumentException  	26	9	add
232	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x    <    0)    {    ybar    =    x;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(x  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  IllegalArgumentException  	26	9	add
233	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  1.0;	  xbar    =    0.0;    	compilable	  [FE]  AssertionFailedError  	209	4	replace
234	[BUG]  [BUGGY]  xbar  =  1.0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  1.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  1.0;	  xbar    =    0.0;    	compilable	  [FE]  AssertionFailedError  	209	4	replace
235	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  0.5;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  0.5;	  xbar    =    0.0;    	compilable	  [FE]  AssertionFailedError  	209	5	replace
236	[BUG]  [BUGGY]  xbar  =  0.5;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  0.5;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  0.5;	  xbar    =    0.0;    	compilable	  [FE]  AssertionFailedError  	209	5	replace
237	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  ybar  =  x.;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  ybar  =  x.;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  ybar  =  x;  ybar  =  x.;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          ybar    =    x;    ybar    =    x.;    	non-compiled	[CE]  <identifier>  expected	212	None	replace
238	[BUG]  [BUGGY]  if(xbar  ==  0)  {  ybar  =  x;  ybar  =  x.;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(xbar  ==  0)  {  ybar  =  x;  ybar  =  x.;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(xbar  ==  0)  {  ybar  =  x;  ybar  =  x.;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          ybar    =    x;    ybar    =    x.;    	non-compiled	[CE]  <identifier>  expected	212	None	replace
239	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  ybar  =  x.;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  ybar  =  x.;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  ybar  =  x;  ybar  =  x.;  }	          ybar    =    x;    ybar    =    x.;    	non-compiled	[CE]  <identifier>  expected	212	None	replace
240	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  ybar  =  x.;  }  else  {  addData(x,  y);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  ybar  =  x.;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  ybar  =  x;  ybar  =  x.;  }  else  {  addData(x,  y);  }	          ybar    =    x;    ybar    =    x.;    	non-compiled	[CE]  <identifier>  expected	212	None	replace
241	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXX    =    Math.max(0,    x);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	229	5	add
242	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXX    =    Math.max(0,    x);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	229	5	add
243	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXX    =    Math.max(0,    x);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	229	5	add
244	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXX    =    Math.max(0,    x);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	229	5	add
245	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXX    =    Math.max(0,    x);    xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	229	5	add
246	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXX    =    Math.max(0,    x);    xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	229	5	add
247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXX    =    Math.max(0,    x);    ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	229	5	add
248	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXX    =    Math.max(0,    x);    ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	229	5	add
249	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  xbar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	n  =  0;  xbar  =  0;	  ybar    =    0;    xbar    =    0;    	compilable	  [FE]  AssertionFailedError  	89	5	replace
250	[BUG]  [BUGGY]  n  =  0;  xbar  =  0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  xbar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  0;  xbar  =  0;	  ybar    =    0;    xbar    =    0;    	compilable	  [FE]  AssertionFailedError  	89	5	replace
251	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.ceil(xbar);  ybar  =  Math.ceil(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.ceil(xbar);    ybar  =  Math.ceil(xbar);	  	compilable	  [FE]  AssertionFailedError  	121	1	add
252	[BUG]  [BUGGY]  ybar  =  Math.ceil(xbar);  ybar  =  Math.ceil(xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.ceil(xbar);  ybar  =  Math.ceil(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.ceil(xbar);    ybar  =  Math.ceil(xbar);	  	compilable	  [FE]  AssertionFailedError  	121	1	add
253	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.ceil(xbar);  xbar  =  Math.ceil(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.ceil(xbar);    xbar  =  Math.ceil(xbar);	  	compilable	  [FE]  AssertionFailedError  	121	2	add
254	[BUG]  [BUGGY]  ybar  =  Math.ceil(xbar);  xbar  =  Math.ceil(xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.ceil(xbar);  xbar  =  Math.ceil(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.ceil(xbar);    xbar  =  Math.ceil(xbar);	  	compilable	  [FE]  AssertionFailedError  	121	2	add
255	[BUG]  [BUGGY]  ybar  =  Math.ceil(xbar);  yBar  =  Math.ceil(xbar);  [CE]  cannot  find  symbol  yBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.ceil(xbar);  yBar  =  Math.ceil(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.ceil(xbar);    yBar  =  Math.ceil(xbar);	  	non-compiled	[CE]  cannot  find  symbol  yBar	121	None	add
256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  y);  xbar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1.0,  y);  xbar  =  Math.max(1.0,  xbar);	          ybar    =    Math.max(1.0,    xbar);    xbar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	38	2	replace
257	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  y);  xbar  =  Math.max(1.0,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  y);  xbar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1.0,  y);  xbar  =  Math.max(1.0,  xbar);	          ybar    =    Math.max(1.0,    xbar);    xbar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	38	2	replace
258	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  xbar);  xbar  =  Math.max(1.0,  ybar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(1.0,  xbar);  xbar  =  Math.max(1.0,  ybar);	          ybar    =    Math.max(1.0,    xbar);    xbar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	38	4	replace
259	[BUG]  [BUGGY]  ybar  =  Math.min(1.0,  xbar);  xbar  =  Math.max(1.0,  ybar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  xbar);  xbar  =  Math.max(1.0,  ybar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(1.0,  xbar);  xbar  =  Math.max(1.0,  ybar);	          ybar    =    Math.max(1.0,    xbar);    xbar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	38	4	replace
260	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.max(1.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  Math.max(1.0,  y);	          ybar    =    Math.max(1.0,    xbar);    xbar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	38	5	replace
261	[BUG]  [BUGGY]  xbar  =  Math.max(1.0,  y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.max(1.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  Math.max(1.0,  y);	          ybar    =    Math.max(1.0,    xbar);    xbar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	38	5	replace
262	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.log(xbar);  ybar  =  Math.log(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.log(xbar);    ybar  =  Math.log(xbar);	  	compilable	  [FE]  AssertionFailedError  	119	1	add
263	[BUG]  [BUGGY]  ybar  =  Math.log(xbar);  ybar  =  Math.log(xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.log(xbar);  ybar  =  Math.log(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.log(xbar);    ybar  =  Math.log(xbar);	  	compilable	  [FE]  AssertionFailedError  	119	1	add
264	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.log(xbar);  xbar  =  Math.log(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.log(xbar);    xbar  =  Math.log(xbar);	  	compilable	  [FE]  AssertionFailedError  	119	8	add
265	[BUG]  [BUGGY]  ybar  =  Math.log(xbar);  xbar  =  Math.log(xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.log(xbar);  xbar  =  Math.log(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.log(xbar);    xbar  =  Math.log(xbar);	  	compilable	  [FE]  AssertionFailedError  	119	8	add
266	[BUG]  [BUGGY]  ybar  =  Math.log(xbar);  yBar  =  Math.log(xbar);  [CE]  cannot  find  symbol  yBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.log(xbar);  yBar  =  Math.log(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.log(xbar);    yBar  =  Math.log(xbar);	  	non-compiled	[CE]  cannot  find  symbol  yBar	119	None	add
267	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
268	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	1	5	add
270	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	1	5	add
271	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
272	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
273	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  yBar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [CE]  cannot  find  symbol  yBar  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  yBar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    yBar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);	  	non-compiled	[CE]  cannot  find  symbol  yBar	1	None	add
274	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  -  xbar;  sumX  =  x  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	sumX    =    x    -    xbar;    sumX  =  x  -  xbar;	  	compilable	  [FE]  AssertionFailedError  	13	1	add
275	[BUG]  [BUGGY]  sumX  =  x  -  xbar;  sumX  =  x  -  xbar;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  -  xbar;  sumX  =  x  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX    =    x    -    xbar;    sumX  =  x  -  xbar;	  	compilable	  [FE]  AssertionFailedError  	13	1	add
276	[BUG]  [BUGGY]  sumX  =  x  -  xbar;  SumX  =  x  -  xbar;  [CE]  cannot  find  symbol  SumX  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  -  xbar;  SumX  =  x  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX    =    x    -    xbar;    SumX  =  x  -  xbar;	  	non-compiled	[CE]  cannot  find  symbol  SumX	13	None	add
277	[BUG]  [BUGGY]  sumX  =  x  -  xbar;  double  x  =  x  -  xbar;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  -  xbar;  double  x  =  x  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX    =    x    -    xbar;    double  x  =  x  -  xbar;	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	13	None	add
278	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  -  xbar;  x  =  x  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	sumX    =    x    -    xbar;    x  =  x  -  xbar;	  	compilable	  [FE]  AssertionFailedError  	13	2	add
279	[BUG]  [BUGGY]  sumX  =  x  -  xbar;  x  =  x  -  xbar;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  -  xbar;  x  =  x  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX    =    x    -    xbar;    x  =  x  -  xbar;	  	compilable	  [FE]  AssertionFailedError  	13	2	add
280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(1,  xbar);	  ybar    =    Math.min(0,    xbar);    	compilable	  [FE]  AssertionFailedError  	134	4	replace
281	[BUG]  [BUGGY]  ybar  =  Math.min(1,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(1,  xbar);	  ybar    =    Math.min(0,    xbar);    	compilable	  [FE]  AssertionFailedError  	134	4	replace
282	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    0;    xbar  =  0;  ybar  =  0;  xbar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        0;        xbar    =    0;    ybar  =  0;  xbar  =  0;	  	compilable	  [FE]  AssertionFailedError  	88	5	add
283	[BUG]  [BUGGY]  ybar    =    0;    xbar  =  0;  ybar  =  0;  xbar  =  0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    0;    xbar  =  0;  ybar  =  0;  xbar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        0;        xbar    =    0;    ybar  =  0;  xbar  =  0;	  	compilable	  [FE]  AssertionFailedError  	88	5	add
284	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    0;    xbar  =  0;  xbar  =  0;  xbar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        0;        xbar    =    0;    xbar  =  0;  xbar  =  0;	  	compilable	  [FE]  AssertionFailedError  	88	5	add
285	[BUG]  [BUGGY]  ybar    =    0;    xbar  =  0;  xbar  =  0;  xbar  =  0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    0;    xbar  =  0;  xbar  =  0;  xbar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        0;        xbar    =    0;    xbar  =  0;  xbar  =  0;	  	compilable	  [FE]  AssertionFailedError  	88	5	add
286	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    0;    xbar  =  0;  double  ybar  =  0;  xbar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        0;        xbar    =    0;    double  ybar  =  0;  xbar  =  0;	  	compilable	  [FE]  AssertionFailedError  	88	5	add
287	[BUG]  [BUGGY]  ybar    =    0;    xbar  =  0;  double  ybar  =  0;  xbar  =  0;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    0;    xbar  =  0;  double  ybar  =  0;  xbar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        0;        xbar    =    0;    double  ybar  =  0;  xbar  =  0;	  	compilable	  [FE]  AssertionFailedError  	88	5	add
288	[BUG]  [BUGGY]  ybar    =    0;    xbar  =  0;  int  ybar  =  0;  xbar  =  0;  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    0;    xbar  =  0;  int  ybar  =  0;  xbar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        0;        xbar    =    0;    int  ybar  =  0;  xbar  =  0;	  	non-compiled	[CE]  possible  loss  of  precision	88	None	add
289	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    xbar  =  n;  ybar  =  n;  xbar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        n;        xbar    =    n;    ybar  =  n;  xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	57	5	add
290	[BUG]  [BUGGY]  ybar    =    n;    xbar  =  n;  ybar  =  n;  xbar  =  n;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    xbar  =  n;  ybar  =  n;  xbar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        n;        xbar    =    n;    ybar  =  n;  xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	57	5	add
291	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    xbar  =  n;  xbar  =  n;  xbar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        n;        xbar    =    n;    xbar  =  n;  xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	57	5	add
292	[BUG]  [BUGGY]  ybar    =    n;    xbar  =  n;  xbar  =  n;  xbar  =  n;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    xbar  =  n;  xbar  =  n;  xbar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        n;        xbar    =    n;    xbar  =  n;  xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	57	5	add
293	[BUG]  [BUGGY]  ybar    =    n;    xbar  =  n;  ybar  =  n;  xBar  =  n;  [CE]  cannot  find  symbol  xBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    xbar  =  n;  ybar  =  n;  xBar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        n;        xbar    =    n;    ybar  =  n;  xBar  =  n;	  	non-compiled	[CE]  cannot  find  symbol  xBar	57	None	add
294	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    xbar  =  n;  n  =  n;  xbar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        n;        xbar    =    n;    n  =  n;  xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	57	5	add
295	[BUG]  [BUGGY]  ybar    =    n;    xbar  =  n;  n  =  n;  xbar  =  n;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    xbar  =  n;  n  =  n;  xbar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        n;        xbar    =    n;    n  =  n;  xbar  =  n;	  	compilable	  [FE]  AssertionFailedError  	57	5	add
296	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	double  ybar  =  n;	  ybar    =    n;    int    ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	56	4	replace
297	[BUG]  [BUGGY]  double  ybar  =  n;  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  ybar  =  n;	  ybar    =    n;    int    ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	56	4	replace
298	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  long  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	long  ybar  =  n;	  ybar    =    n;    int    ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	56	4	replace
299	[BUG]  [BUGGY]  long  ybar  =  n;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  long  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	long  ybar  =  n;	  ybar    =    n;    int    ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	56	4	replace
300	[BUG]  [BUGGY]  Double  ybar  =  n;  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  Double  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	Double  ybar  =  n;	  ybar    =    n;    int    ybar    =    n;    	non-compiled	[CE]  incompatible  types	56	None	replace
301	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.ceil(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.ceil(y);	  ybar    =    Math.ceil(xbar);    	compilable	  [FE]  AssertionFailedError  	122	4	replace
302	[BUG]  [BUGGY]  ybar  =  Math.ceil(y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.ceil(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.ceil(y);	  ybar    =    Math.ceil(xbar);    	compilable	  [FE]  AssertionFailedError  	122	4	replace
303	[BUG]  [BUGGY]  ybar  =  Math.ceil(x,  y);  [CE]  method  ceil  in  class  Math  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.ceil(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.ceil(x,  y);	  ybar    =    Math.ceil(xbar);    	non-compiled	[CE]  method  ceil  in  class  Math  cannot  be  applied  to  given  types;	122	None	replace
304	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  x  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  x  +  1;	  ybar    =    yBar    +    1;    	compilable	  [FE]  AssertionFailedError  	161	4	replace
305	[BUG]  [BUGGY]  ybar  =  x  +  1;  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  x  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  x  +  1;	  ybar    =    yBar    +    1;    	compilable	  [FE]  AssertionFailedError  	161	4	replace
306	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  y  +  1;	  ybar    =    yBar    +    1;    	compilable	  [FE]  AssertionFailedError  	161	5	replace
307	[BUG]  [BUGGY]  xbar  =  y  +  1;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  y  +  1;	  ybar    =    yBar    +    1;    	compilable	  [FE]  AssertionFailedError  	161	5	replace
308	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0,  ybar);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(0,  ybar);	  ybar    =    Math.min(0,    y);    	compilable	  [FE]  AssertionFailedError  	19	4	replace
309	[BUG]  [BUGGY]  ybar  =  Math.min(0,  ybar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0,  ybar);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(0,  ybar);	  ybar    =    Math.min(0,    y);    	compilable	  [FE]  AssertionFailedError  	19	4	replace
310	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    xbar  =  x;  xbar  =  x;  xbar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                xbar        =        x;        xbar    =    x;    xbar  =  x;  xbar  =  x;	  	compilable	  [FE]  AssertionFailedError  	106	1	add
311	[BUG]  [BUGGY]          xbar    =    x;    xbar  =  x;  xbar  =  x;  xbar  =  x;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    xbar  =  x;  xbar  =  x;  xbar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                xbar        =        x;        xbar    =    x;    xbar  =  x;  xbar  =  x;	  	compilable	  [FE]  AssertionFailedError  	106	1	add
312	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    xbar  =  x;  double  xbar  =  x;  xbar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                xbar        =        x;        xbar    =    x;    double  xbar  =  x;  xbar  =  x;	  	compilable	  [FE]  AssertionFailedError  	106	1	add
313	[BUG]  [BUGGY]          xbar    =    x;    xbar  =  x;  double  xbar  =  x;  xbar  =  x;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    xbar  =  x;  double  xbar  =  x;  xbar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                xbar        =        x;        xbar    =    x;    double  xbar  =  x;  xbar  =  x;	  	compilable	  [FE]  AssertionFailedError  	106	1	add
314	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    xbar  =  x;  xbar  =  x;  xbar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                xbar        =        x;        xbar    =    x;    xbar  =  x;  xbar  =  y;	  	compilable	  [FE]  AssertionFailedError  	106	5	add
315	[BUG]  [BUGGY]          xbar    =    x;    xbar  =  x;  xbar  =  x;  xbar  =  y;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    xbar  =  x;  xbar  =  x;  xbar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                xbar        =        x;        xbar    =    x;    xbar  =  x;  xbar  =  y;	  	compilable	  [FE]  AssertionFailedError  	106	5	add
316	[BUG]  [BUGGY]          xbar    =    x;    xbar  =  x;  xbar  =  x;  xBar  =  x;  [CE]  cannot  find  symbol  xBar  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    xbar  =  x;  xbar  =  x;  xBar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                xbar        =        x;        xbar    =    x;    xbar  =  x;  xBar  =  x;	  	non-compiled	[CE]  cannot  find  symbol  xBar	106	None	add
317	[BUG]  [BUGGY]          ybar    =    x;    double  ybar  =  x;  ybar  =  x;  double  ybar  =  x;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    x;    double  ybar  =  x;  ybar  =  x;  double  ybar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        x;        double    ybar    =    x;    ybar  =  x;  double  ybar  =  x;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	179	None	add
318	[BUG]  [BUGGY]          ybar    =    x;    double  ybar  =  x;  xbar  =  x;  double  ybar  =  x;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    x;    double  ybar  =  x;  xbar  =  x;  double  ybar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        x;        double    ybar    =    x;    xbar  =  x;  double  ybar  =  x;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	179	None	add
319	[BUG]  [BUGGY]          ybar    =    x;    double  ybar  =  x;  double  ybar  =  x;  double  ybar  =  x;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    x;    double  ybar  =  x;  double  ybar  =  x;  double  ybar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        x;        double    ybar    =    x;    double  ybar  =  x;  double  ybar  =  x;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	179	None	add
320	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    x;    double  ybar  =  x;  ybar  =  x;  double  yBar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        x;        double    ybar    =    x;    ybar  =  x;  double  yBar  =  x;	  	compilable	  [FE]  AssertionFailedError  	179	4	add
321	[BUG]  [BUGGY]          ybar    =    x;    double  ybar  =  x;  ybar  =  x;  double  yBar  =  x;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    x;    double  ybar  =  x;  ybar  =  x;  double  yBar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        x;        double    ybar    =    x;    ybar  =  x;  double  yBar  =  x;	  	compilable	  [FE]  AssertionFailedError  	179	4	add
322	[BUG]  [BUGGY]          ybar    =    x;    double  ybar  =  x;  ybar  =  x;  Double  ybar  =  x;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    x;    double  ybar  =  x;  ybar  =  x;  Double  ybar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        x;        double    ybar    =    x;    ybar  =  x;  Double  ybar  =  x;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	179	None	add
323	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                if(n        <        0)        {        sumX        =        x;        }        else        {        sumX        =        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	145	1	add
324	[BUG]  [BUGGY]          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                if(n        <        0)        {        sumX        =        x;        }        else        {        sumX        =        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	145	1	add
325	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                if(n        <        0)        {        sumX        =        x;        }        else        {        sumX        =        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	145	1	add
326	[BUG]  [BUGGY]          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                if(n        <        0)        {        sumX        =        x;        }        else        {        sumX        =        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	145	1	add
327	[BUG]  [BUGGY]          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                if(n        <        0)        {        sumX        =        x;        }        else        {        sumX        =        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {	  	non-compiled	[CE]  'else'  without  'if'	145	None	add
328	[BUG]  [BUGGY]          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                if(n        <        0)        {        sumX        =        x;        }        else        {        sumX        =        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX	  	non-compiled	[CE]  'else'  without  'if'	145	None	add
329	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                if(n        <        0)        {        sumX        =        x;        }        else        {        sumX        =        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }	  	compilable	  [FE]  AssertionFailedError  	145	1	add
330	[BUG]  [BUGGY]          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                if(n        <        0)        {        sumX        =        x;        }        else        {        sumX        =        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x;  }	  	compilable	  [FE]  AssertionFailedError  	145	1	add
331	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    x);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	231	6	add
332	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    x);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	231	6	add
333	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    x);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	231	6	add
334	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    x);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	231	6	add
335	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    x);    xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	231	5	add
336	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    x);    xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	231	5	add
337	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    x);    ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	231	6	add
338	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    x);    ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	231	6	add
339	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumYY  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    x);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumYY  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	231	6	add
340	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumYY  =  Math.max(0,  x);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumYY  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    x);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumYY  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	231	6	add
341	[BUG]  [BUGGY]  Bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  this.xbar;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  Bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  this.xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	Bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  this.xbar;  }	  bucket    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    this.xbar;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
342	[BUG]  [BUGGY]  bucket  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  this.xbar;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  bucket  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  this.xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  this.xbar;  }	  bucket    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    this.xbar;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
343	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(ybar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.abs(ybar);	  ybar    =    Math.abs(y);    	compilable	  [FE]  AssertionFailedError  	49	4	replace
344	[BUG]  [BUGGY]  ybar  =  Math.abs(ybar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(ybar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.abs(ybar);	  ybar    =    Math.abs(y);    	compilable	  [FE]  AssertionFailedError  	49	4	replace
345	[BUG]  [BUGGY]  ybar  =  Math.sin(x,  y);  [CE]  method  sin  in  class  Math  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.sin(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.sin(x,  y);	  ybar    =    Math.abs(y);    	non-compiled	[CE]  method  sin  in  class  Math  cannot  be  applied  to  given  types;	49	None	replace
346	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(y,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(y,  n);	  ybar    =    Math.abs(y);    	compilable	  [FE]  AssertionFailedError  	49	4	replace
347	[BUG]  [BUGGY]  ybar  =  Math.min(y,  n);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(y,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(y,  n);	  ybar    =    Math.abs(y);    	compilable	  [FE]  AssertionFailedError  	49	4	replace
348	[BUG]  [BUGGY]  double  n  =  Math.min(1.0,  xbar);  double  n  =  Math.min(1.0,  xbar);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  n  =  Math.min(1.0,  xbar);  double  n  =  Math.min(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double    n    =    Math.min(1.0,    xbar);    double  n  =  Math.min(1.0,  xbar);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	100	None	add
349	[BUG]  [BUGGY]  double  n  =  Math.min(1.0,  xbar);  Double  n  =  Math.min(1.0,  xbar);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  n  =  Math.min(1.0,  xbar);  Double  n  =  Math.min(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double    n    =    Math.min(1.0,    xbar);    Double  n  =  Math.min(1.0,  xbar);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	100	None	add
350	[BUG]  [BUGGY]  double  n  =  Math.min(1.0,  xbar);  long  n  =  Math.min(1.0,  xbar);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  n  =  Math.min(1.0,  xbar);  long  n  =  Math.min(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double    n    =    Math.min(1.0,    xbar);    long  n  =  Math.min(1.0,  xbar);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	100	None	add
351	[BUG]  [BUGGY]  double  n  =  Math.min(1.0,  xbar);  double  n  =  Math.min(1.0,  xBar);  [CE]  variable  n  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  n  =  Math.min(1.0,  xbar);  double  n  =  Math.min(1.0,  xBar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double    n    =    Math.min(1.0,    xbar);    double  n  =  Math.min(1.0,  xBar);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  addData(double,double)	100	None	add
352	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  y  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1.0,  y  -  1);	  ybar    =    Math.max(1.0,    xbar    -    1);    	compilable	  [FE]  AssertionFailedError  	47	4	replace
353	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  y  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  y  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1.0,  y  -  1);	  ybar    =    Math.max(1.0,    xbar    -    1);    	compilable	  [FE]  AssertionFailedError  	47	4	replace
354	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  xbar  /  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1.0,  xbar  /  1);	  ybar    =    Math.max(1.0,    xbar    -    1);    	compilable	  [FE]  AssertionFailedError  	47	4	replace
355	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  xbar  /  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  xbar  /  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1.0,  xbar  /  1);	  ybar    =    Math.max(1.0,    xbar    -    1);    	compilable	  [FE]  AssertionFailedError  	47	4	replace
356	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  xbar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(1.0,  xbar  -  1);	  ybar    =    Math.max(1.0,    xbar    -    1);    	compilable	  [FE]  AssertionFailedError  	47	4	replace
357	[BUG]  [BUGGY]  ybar  =  Math.min(1.0,  xbar  -  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  xbar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(1.0,  xbar  -  1);	  ybar    =    Math.max(1.0,    xbar    -    1);    	compilable	  [FE]  AssertionFailedError  	47	4	replace
358	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        xbar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	6	5	add
359	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        xbar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	6	5	add
360	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);  ybar  =  Math.min(0,  y);  xbar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        xbar    =    Math.max(0,    y);    ybar  =  Math.min(0,  y);  xbar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	6	5	add
361	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);  ybar  =  Math.min(0,  y);  xbar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);  ybar  =  Math.min(0,  y);  xbar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        xbar    =    Math.max(0,    y);    ybar  =  Math.min(0,  y);  xbar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	6	5	add
362	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        xbar    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	6	5	add
363	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        xbar    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	6	5	add
364	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);  yBar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  [CE]  cannot  find  symbol  yBar  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);  yBar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        xbar    =    Math.max(0,    y);    yBar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);	  	non-compiled	[CE]  cannot  find  symbol  yBar	6	None	add
365	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    yBar    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	3	5	replace
366	[BUG]  [BUGGY]  xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    yBar    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	3	5	replace
367	[BUG]  [BUGGY]  n  =  Math.max(0,  y);  n  =  Math.max(0,  y);  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.max(0,  y);  n  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.max(0,  y);  n  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    yBar    =    Math.max(0,    y);    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
368	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    yBar    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	3	5	replace
369	[BUG]  [BUGGY]  xbar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    yBar    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	3	5	replace
370	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    ybar  =  n;  ybar  =  n;  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        n;        ybar    =    n;    ybar  =  n;  ybar  =  n;	  	compilable	  [FE]  AssertionFailedError  	54	1	add
371	[BUG]  [BUGGY]  ybar    =    n;    ybar  =  n;  ybar  =  n;  ybar  =  n;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    ybar  =  n;  ybar  =  n;  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        n;        ybar    =    n;    ybar  =  n;  ybar  =  n;	  	compilable	  [FE]  AssertionFailedError  	54	1	add
372	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    ybar  =  n;  xbar  =  n;  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        n;        ybar    =    n;    xbar  =  n;  ybar  =  n;	  	compilable	  [FE]  AssertionFailedError  	54	5	add
373	[BUG]  [BUGGY]  ybar    =    n;    ybar  =  n;  xbar  =  n;  ybar  =  n;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    ybar  =  n;  xbar  =  n;  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        n;        ybar    =    n;    xbar  =  n;  ybar  =  n;	  	compilable	  [FE]  AssertionFailedError  	54	5	add
374	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    ybar  =  n;  n  =  n;  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        n;        ybar    =    n;    n  =  n;  ybar  =  n;	  	compilable	  [FE]  AssertionFailedError  	54	1	add
375	[BUG]  [BUGGY]  ybar    =    n;    ybar  =  n;  n  =  n;  ybar  =  n;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    ybar  =  n;  n  =  n;  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        n;        ybar    =    n;    n  =  n;  ybar  =  n;	  	compilable	  [FE]  AssertionFailedError  	54	1	add
376	[BUG]  [BUGGY]  ybar    =    n;    ybar  =  n;  ybar  =  n;  yBar  =  n;  [CE]  cannot  find  symbol  yBar  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    n;    ybar  =  n;  ybar  =  n;  yBar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        n;        ybar    =    n;    ybar  =  n;  yBar  =  n;	  	non-compiled	[CE]  cannot  find  symbol  yBar	54	None	add
377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  x  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  x  -  xbar;	  bucket    =    x    -    xbar;    	compilable	  [FE]  AssertionFailedError  	15	5	replace
378	[BUG]  [BUGGY]  xbar  =  x  -  xbar;  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  x  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  x  -  xbar;	  bucket    =    x    -    xbar;    	compilable	  [FE]  AssertionFailedError  	15	5	replace
379	[BUG]  [BUGGY]  double  x  =  x  -  xbar;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  x  =  x  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  x  =  x  -  xbar;	  bucket    =    x    -    xbar;    	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	15	None	replace
380	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  bucket  =  x  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	double  bucket  =  x  -  xbar;	  bucket    =    x    -    xbar;    	compilable	  [FE]  AssertionFailedError  	15	4	replace
381	[BUG]  [BUGGY]  double  bucket  =  x  -  xbar;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  bucket  =  x  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  bucket  =  x  -  xbar;	  bucket    =    x    -    xbar;    	compilable	  [FE]  AssertionFailedError  	15	4	replace
382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  x  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  x  -  xbar;	  bucket    =    x    -    xbar;    	compilable	  [FE]  AssertionFailedError  	15	4	replace
383	[BUG]  [BUGGY]  ybar  =  x  -  xbar;  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  x  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  x  -  xbar;	  bucket    =    x    -    xbar;    	compilable	  [FE]  AssertionFailedError  	15	4	replace
384	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	sumX  =  x  +  1;	  sumX    =    x;    	compilable	  [FE]  AssertionFailedError  	220	4	replace
385	[BUG]  [BUGGY]  sumX  =  x  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX  =  x  +  1;	  sumX    =    x;    	compilable	  [FE]  AssertionFailedError  	220	4	replace
386	[BUG]  [BUGGY]  sumX  =  x.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x.doubleValue();  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX  =  x.doubleValue();	  sumX    =    x;    	non-compiled	[CE]  double  cannot  be  dereferenced	220	None	replace
387	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  -=  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	sumX  -=  x;	  sumX    =    x;    	compilable	  [FE]  AssertionFailedError  	220	4	replace
388	[BUG]  [BUGGY]  sumX  -=  x;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  -=  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX  -=  x;	  sumX    =    x;    	compilable	  [FE]  AssertionFailedError  	220	4	replace
389	[BUG]  [BUGGY]  ibar  =  x;  [CE]  cannot  find  symbol  ibar  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ibar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ibar  =  x;	          ybar    =    x;    ibar    =    x;    	non-compiled	[CE]  cannot  find  symbol  ibar	33	None	replace
390	[BUG]  [BUGGY]  n  =  x;  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  x;	          ybar    =    x;    ibar    =    x;    	non-compiled	[CE]  possible  loss  of  precision	33	None	replace
391	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  xbar  +  1);  ybar  =  Math.max(1.0,  xbar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(1.0,    xbar    +    1);    ybar  =  Math.max(1.0,  xbar  +  1);	  	compilable	  [FE]  AssertionFailedError  	42	1	add
392	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  xbar  +  1);  ybar  =  Math.max(1.0,  xbar  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  xbar  +  1);  ybar  =  Math.max(1.0,  xbar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1.0,    xbar    +    1);    ybar  =  Math.max(1.0,  xbar  +  1);	  	compilable	  [FE]  AssertionFailedError  	42	1	add
393	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  xbar  +  1);  ybar  =  Math.max(1.0,  xbar  +  1));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  xbar  +  1);  ybar  =  Math.max(1.0,  xbar  +  1));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1.0,    xbar    +    1);    ybar  =  Math.max(1.0,  xbar  +  1));	  	non-compiled	[CE]  ';'  expected	42	None	add
394	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  xbar  +  1);  xbar  =  Math.max(1.0,  xbar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(1.0,    xbar    +    1);    xbar  =  Math.max(1.0,  xbar  +  1);	  	compilable	  [FE]  AssertionFailedError  	42	5	add
395	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  xbar  +  1);  xbar  =  Math.max(1.0,  xbar  +  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  xbar  +  1);  xbar  =  Math.max(1.0,  xbar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1.0,    xbar    +    1);    xbar  =  Math.max(1.0,  xbar  +  1);	  	compilable	  [FE]  AssertionFailedError  	42	5	add
396	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  xbar  +  1);  ybar  =  Math.max(1.0,  xBar  +  1);  [CE]  cannot  find  symbol  xBar  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  xbar  +  1);  ybar  =  Math.max(1.0,  xBar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1.0,    xbar    +    1);    ybar  =  Math.max(1.0,  xBar  +  1);	  	non-compiled	[CE]  cannot  find  symbol  xBar	42	None	add
397	[BUG]  [BUGGY]  n  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    xbar    =    Math.max(0,    y);    	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
398	[BUG]  [BUGGY]  xbar  =  new  double[n  +  1];  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  new  double[n  +  1];  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  new  double[n  +  1];	  xbar    =    new    double[n];    	non-compiled	[CE]  possible  loss  of  precision	129	None	replace
399	[BUG]  [BUGGY]  xbar  =  new  double[n  *  n];  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  new  double[n  *  n];  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  new  double[n  *  n];	  xbar    =    new    double[n];    	non-compiled	[CE]  possible  loss  of  precision	129	None	replace
400	[BUG]  [BUGGY]  xbar  =  new  double[n  -  1];  [CE]  possible  loss  of  precision  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  new  double[n  -  1];  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  new  double[n  -  1];	  xbar    =    new    double[n];    	non-compiled	[CE]  possible  loss  of  precision	129	None	replace
401	[BUG]  [BUGGY]  xbar  =  new  double[N];  [CE]  cannot  find  symbol  N  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  new  double[N];  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  new  double[N];	  xbar    =    new    double[n];    	non-compiled	[CE]  cannot  find  symbol  N	129	None	replace
402	[BUG]  [BUGGY]  double  y  =  n  -  ybar;  [CE]  variable  y  is  already  defined  in  method  addData(double,double)  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  y  =  n  -  ybar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  y  =  n  -  ybar;	  double    y    =    y    -    ybar;    	non-compiled	[CE]  variable  y  is  already  defined  in  method  addData(double,double)	182	None	replace
403	[BUG]  [BUGGY]  double  y  =  y  /  ybar;  [CE]  variable  y  is  already  defined  in  method  addData(double,double)  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  y  =  y  /  ybar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  y  =  y  /  ybar;	  double    y    =    y    -    ybar;    	non-compiled	[CE]  variable  y  is  already  defined  in  method  addData(double,double)	182	None	replace
404	[BUG]  [BUGGY]  ||  xbar  =  0;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ||  xbar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	||  xbar  =  0;	          xbar    =    x;    ||    xbar    =    x;    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
405	[BUG]  [BUGGY]  ||  xbar  =  n;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ||  xbar  =  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	||  xbar  =  n;	          xbar    =    x;    ||    xbar    =    x;    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
406	[BUG]  [BUGGY]  ||  xbar  =  y;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ||  xbar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	||  xbar  =  y;	          xbar    =    x;    ||    xbar    =    x;    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
407	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(y);  ybar  =  Math.floor(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.floor(y);    ybar  =  Math.floor(y);	  	compilable	  [FE]  AssertionFailedError  	115	1	add
408	[BUG]  [BUGGY]  ybar  =  Math.floor(y);  ybar  =  Math.floor(y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(y);  ybar  =  Math.floor(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.floor(y);    ybar  =  Math.floor(y);	  	compilable	  [FE]  AssertionFailedError  	115	1	add
409	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(y);  ybar  =  Math.floor(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.floor(y);    ybar  =  Math.floor(x);	  	compilable	  [FE]  AssertionFailedError  	115	1	add
410	[BUG]  [BUGGY]  ybar  =  Math.floor(y);  ybar  =  Math.floor(x);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(y);  ybar  =  Math.floor(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.floor(y);    ybar  =  Math.floor(x);	  	compilable	  [FE]  AssertionFailedError  	115	1	add
411	[BUG]  [BUGGY]  ybar  =  Math.floor(y);  ybar  =  Math.floor(y));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(y);  ybar  =  Math.floor(y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.floor(y);    ybar  =  Math.floor(y));	  	non-compiled	[CE]  ';'  expected	115	None	add
412	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(y);  xbar  =  Math.floor(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.floor(y);    xbar  =  Math.floor(y);	  	compilable	  [FE]  AssertionFailedError  	115	5	add
413	[BUG]  [BUGGY]  ybar  =  Math.floor(y);  xbar  =  Math.floor(y);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(y);  xbar  =  Math.floor(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.floor(y);    xbar  =  Math.floor(y);	  	compilable	  [FE]  AssertionFailedError  	115	5	add
414	[BUG]  [BUGGY]  ybar  =  Math.floor(x,  y,  n);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(x,  y,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(x,  y,  n);	  ybar    =    Math.floor(x,    y);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	71	None	replace
415	[BUG]  [BUGGY]  ybar  =  Math.floor(x,  y  +  1);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(x,  y  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(x,  y  +  1);	  ybar    =    Math.floor(x,    y);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	71	None	replace
416	[BUG]  [BUGGY]  ybar  =  Math.floor(y,  x);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(y,  x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(y,  x);	  ybar    =    Math.floor(x,    y);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	71	None	replace
417	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	n  =  n;	  ybar    =    n;    (ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	168	4	replace
418	[BUG]  [BUGGY]  n  =  n;  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  n;	  ybar    =    n;    (ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	168	4	replace
419	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  ybar  =  n;  ybar  =  n;  }  else  {  addData(x,  y);  }  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  ==  0)  {  ybar  =  n;  ybar  =  n;  }  else  {  addData(x,  y);  }	  ybar    =    n;    (ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	168	4	replace
420	[BUG]  [BUGGY]  if(n  ==  0)  {  ybar  =  n;  ybar  =  n;  }  else  {  addData(x,  y);  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  ybar  =  n;  ybar  =  n;  }  else  {  addData(x,  y);  }  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  ybar  =  n;  ybar  =  n;  }  else  {  addData(x,  y);  }	  ybar    =    n;    (ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	168	4	replace
421	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  ybar  =  n;  ybar  =  n;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  ==  0)  {  ybar  =  n;  ybar  =  n;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ybar    =    n;    (ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	168	4	replace
422	[BUG]  [BUGGY]  if(n  ==  0)  {  ybar  =  n;  ybar  =  n;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  ybar  =  n;  ybar  =  n;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  ybar  =  n;  ybar  =  n;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ybar    =    n;    (ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	168	4	replace
423	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  ybar  =  n;  ybar  =  n;  }  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  ==  0)  {  ybar  =  n;  ybar  =  n;  }	  ybar    =    n;    (ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	168	4	replace
424	[BUG]  [BUGGY]  if(n  ==  0)  {  ybar  =  n;  ybar  =  n;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  ybar  =  n;  ybar  =  n;  }  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  ybar  =  n;  ybar  =  n;  }	  ybar    =    n;    (ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	168	4	replace
425	[BUG]  [BUGGY]  ybar  =  Math.floor(xbar,  y  +  1,  n);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(xbar,  y  +  1,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(xbar,  y  +  1,  n);	  ybar    =    Math.floor(xbar,    y    +    1);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	74	None	replace
426	[BUG]  [BUGGY]  ybar  =  Math.floor(y,  xbar  +  1);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(y,  xbar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(y,  xbar  +  1);	  ybar    =    Math.floor(xbar,    y    +    1);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	74	None	replace
427	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                if(n        <        0)        {        sumX        =        x        -        xbar;        }        else        {        sumX        +=        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	75	1	add
428	[BUG]  [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                if(n        <        0)        {        sumX        =        x        -        xbar;        }        else        {        sumX        +=        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	75	1	add
429	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                if(n        <        0)        {        sumX        =        x        -        xbar;        }        else        {        sumX        +=        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	75	1	add
430	[BUG]  [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                if(n        <        0)        {        sumX        =        x        -        xbar;        }        else        {        sumX        +=        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	75	1	add
431	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  +=  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                if(n        <        0)        {        sumX        =        x        -        xbar;        }        else        {        sumX        +=        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  +=  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	75	1	add
432	[BUG]  [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  +=  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  +=  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                if(n        <        0)        {        sumX        =        x        -        xbar;        }        else        {        sumX        +=        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  +=  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	75	1	add
433	[BUG]  [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                if(n        <        0)        {        sumX        =        x        -        xbar;        }        else        {        sumX        +=        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  +=  x  -  xbar;  }  if(n  <  0)  {  sumX	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
434	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x    <    0)    {    ybar    =    x;    }    else    {    sumX    +=    x;    }    if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }	  	compilable	  [FE]  AssertionFailedError  	173	2	add
435	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x    <    0)    {    ybar    =    x;    }    else    {    sumX    +=    x;    }    if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }	  	compilable	  [FE]  AssertionFailedError  	173	2	add
436	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  if(x  <  0)  {  yBar  =  x;  }  else  {  sumX  +=  x;  }  [CE]  cannot  find  symbol  yBar  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  if(x  <  0)  {  yBar  =  x;  }  else  {  sumX  +=  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x    <    0)    {    ybar    =    x;    }    else    {    sumX    +=    x;    }    if(x  <  0)  {  yBar  =  x;  }  else  {  sumX  +=  x;  }	  	non-compiled	[CE]  cannot  find  symbol  yBar	173	None	add
437	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  if(x  >=  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x    <    0)    {    ybar    =    x;    }    else    {    sumX    +=    x;    }    if(x  >=  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }	  	compilable	  [FE]  AssertionFailedError  	173	2	add
438	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  if(x  >=  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  if(x  >=  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x    <    0)    {    ybar    =    x;    }    else    {    sumX    +=    x;    }    if(x  >=  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }	  	compilable	  [FE]  AssertionFailedError  	173	2	add
439	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  If(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  If(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x    <    0)    {    ybar    =    x;    }    else    {    sumX    +=    x;    }    If(x  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }	  	non-compiled	[CE]  ';'  expected	173	None	add
440	[BUG]  [BUGGY]  n  =  Math.min(1.0,  x);  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.min(1.0,  x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(1.0,  x);	  n    =    Math.min(1.0,    y);    	non-compiled	[CE]  possible  loss  of  precision	102	None	replace
441	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  xbar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x  <  0)  {  ybar  =  x;  xbar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          ybar    =    x;    xbar    =    x;    	compilable	  [FE]  IllegalArgumentException  	31	9	replace
442	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  xbar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  xbar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  ybar  =  x;  xbar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          ybar    =    x;    xbar    =    x;    	compilable	  [FE]  IllegalArgumentException  	31	9	replace
443	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  xbar  =  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x  <  0)  {  ybar  =  x;  xbar  =  x;  }	          ybar    =    x;    xbar    =    x;    	compilable	  [FE]  AssertionFailedError  	31	4	replace
444	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  xbar  =  x;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  xbar  =  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  ybar  =  x;  xbar  =  x;  }	          ybar    =    x;    xbar    =    x;    	compilable	  [FE]  AssertionFailedError  	31	4	replace
445	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  xbar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x  <  0)  {  ybar  =  x;  xbar  =  x;  }  else  {  addData(x,  y);  }	          ybar    =    x;    xbar    =    x;    	compilable	  [FE]  StackOverflowError  	31	9	replace
446	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  xbar  =  x;  }  else  {  addData(x,  y);  }  [FE]  StackOverflowError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  xbar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  ybar  =  x;  xbar  =  x;  }  else  {  addData(x,  y);  }	          ybar    =    x;    xbar    =    x;    	compilable	  [FE]  StackOverflowError  	31	9	replace
447	[BUG]  [BUGGY]  if(n  ==  0)  {  pullForced(x,  y)  {  if(n  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  pullForced(x,  y)  {  if(n  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  pullForced(x,  y)  {  if(n  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  }	  pullForced(x,    y)    {    if(n    <    =    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  ';'  expected	222	None	replace
448	[BUG]  [BUGGY]  pullForced(x,  y)  {  if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  pullForced(x,  y)  {  if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	pullForced(x,  y)  {  if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	  pullForced(x,    y)    {    if(n    <    =    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  ';'  expected	222	None	replace
449	[BUG]  [BUGGY]  luate(x,  y)  {  if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  luate(x,  y)  {  if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	luate(x,  y)  {  if(n  ==  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	  pullForced(x,    y)    {    if(n    <    =    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  ';'  expected	222	None	replace
450	[BUG]  [BUGGY]  if(n  ==  0)  {  pullForced(x,  y)  {  if(n  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  pullForced(x,  y)  {  if(n  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  pullForced(x,  y)  {  if(n  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	  pullForced(x,    y)    {    if(n    <    =    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  ';'  expected	222	None	replace
451	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  x);  ybar  =  Math.max(1.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1.0,  x);  ybar  =  Math.max(1.0,  y);	          ybar    =    Math.max(1.0,    xbar);    ybar    =    Math.max(1.0,    xBar);    	compilable	  [FE]  AssertionFailedError  	39	2	replace
452	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  x);  ybar  =  Math.max(1.0,  y);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  x);  ybar  =  Math.max(1.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1.0,  x);  ybar  =  Math.max(1.0,  y);	          ybar    =    Math.max(1.0,    xbar);    ybar    =    Math.max(1.0,    xBar);    	compilable	  [FE]  AssertionFailedError  	39	2	replace
453	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  n);  ybar  =  Math.max(1.0,  x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1.0,  n);  ybar  =  Math.max(1.0,  x);	          ybar    =    Math.max(1.0,    xbar);    ybar    =    Math.max(1.0,    xBar);    	compilable	  [FE]  AssertionFailedError  	39	4	replace
454	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  n);  ybar  =  Math.max(1.0,  x);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  n);  ybar  =  Math.max(1.0,  x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1.0,  n);  ybar  =  Math.max(1.0,  x);	          ybar    =    Math.max(1.0,    xbar);    ybar    =    Math.max(1.0,    xBar);    	compilable	  [FE]  AssertionFailedError  	39	4	replace
455	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.max(1.0,        xbar);        xbar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	37	2	add
456	[BUG]  [BUGGY]          ybar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(1.0,        xbar);        xbar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	37	2	add
457	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);  ybar  =  Math.min(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.max(1.0,        xbar);        xbar    =    Math.max(1.0,    xbar);    ybar  =  Math.min(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	37	2	add
458	[BUG]  [BUGGY]          ybar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);  ybar  =  Math.min(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);  ybar  =  Math.min(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(1.0,        xbar);        xbar    =    Math.max(1.0,    xbar);    ybar  =  Math.min(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	37	2	add
459	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.max(1.0,        xbar);        xbar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	37	2	add
460	[BUG]  [BUGGY]          ybar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(1.0,        xbar);        xbar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	37	2	add
461	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(0.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.max(1.0,        xbar);        xbar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(0.0,  xbar);  xbar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	37	2	add
462	[BUG]  [BUGGY]          ybar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(0.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(0.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(1.0,        xbar);        xbar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(0.0,  xbar);  xbar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	37	2	add
463	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  x;  ybar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  x;  ybar  =  y;	          ybar    =    x;    yBar    =    x;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
464	[BUG]  [BUGGY]  xbar  =  x;  ybar  =  y;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  x;  ybar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  x;  ybar  =  y;	          ybar    =    x;    yBar    =    x;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
465	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1,  ybar);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(1,  ybar);	  ybar    =    Math.min(1,    y);    	compilable	  [FE]  AssertionFailedError  	236	4	replace
466	[BUG]  [BUGGY]  ybar  =  Math.min(1,  ybar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1,  ybar);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(1,  ybar);	  ybar    =    Math.min(1,    y);    	compilable	  [FE]  AssertionFailedError  	236	4	replace
467	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1,  y  +  1);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(1,  y  +  1);	  ybar    =    Math.min(1,    y);    	compilable	  [FE]  AssertionFailedError  	236	4	replace
468	[BUG]  [BUGGY]  ybar  =  Math.min(1,  y  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1,  y  +  1);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(1,  y  +  1);	  ybar    =    Math.min(1,    y);    	compilable	  [FE]  AssertionFailedError  	236	4	replace
469	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	228	6	replace
470	[BUG]  [BUGGY]  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	228	6	replace
471	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.max(0,  n);  sumXY  =  Math.max(0,  n);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	n  =  Math.max(0,  n);  sumXY  =  Math.max(0,  n);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	228	4	replace
472	[BUG]  [BUGGY]  n  =  Math.max(0,  n);  sumXY  =  Math.max(0,  n);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.max(0,  n);  sumXY  =  Math.max(0,  n);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.max(0,  n);  sumXY  =  Math.max(0,  n);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	228	4	replace
473	[BUG]  [BUGGY]  n  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    y);    	non-compiled	[CE]  possible  loss  of  precision	228	None	replace
474	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumXY  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	sumXY  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	228	6	replace
475	[BUG]  [BUGGY]  sumXY  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumXY  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumXY  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    y);    	compilable	  [FE]  AssertionFailedError  	228	6	replace
476	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	27	9	replace
477	[BUG]  [BUGGY]  if(n  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  <  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	27	9	replace
478	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IllegalArgumentException    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  ==  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionFailedError  	27	4	replace
479	[BUG]  [BUGGY]  if(n  ==  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]      IllegalArgumentException    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  ybar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionFailedError  	27	4	replace
480	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  <  0)  {  xbar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  <  0)  {  xbar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	27	9	replace
481	[BUG]  [BUGGY]  if(n  <  0)  {  xbar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  <  0)  {  xbar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  <  0)  {  xbar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	27	9	replace
482	[BUG]  [BUGGY]  double  y  =  n  /  xbar;  [CE]  variable  y  is  already  defined  in  method  addData(double,double)  [FE]                      AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  y  =  n  /  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  y  =  n  /  xbar;	  double    y    =    n    -    xbar;    	non-compiled	[CE]  variable  y  is  already  defined  in  method  addData(double,double)	114	None	replace
483	[BUG]  [BUGGY]  double  y  =  n  -  1;  [CE]  variable  y  is  already  defined  in  method  addData(double,double)  [FE]                        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  y  =  n  -  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  y  =  n  -  1;	  double    y    =    n    -    xbar;    	non-compiled	[CE]  variable  y  is  already  defined  in  method  addData(double,double)	114	None	replace
484	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  1.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  1.0;	  ybar    =    0.0;    	compilable	  [FE]  AssertionFailedError  	178	4	replace
485	[BUG]  [BUGGY]  ybar  =  1.0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  1.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  1.0;	  ybar    =    0.0;    	compilable	  [FE]  AssertionFailedError  	178	4	replace
486	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  0.5;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  0.5;	  ybar    =    0.0;    	compilable	  [FE]  AssertionFailedError  	178	4	replace
487	[BUG]  [BUGGY]  ybar  =  0.5;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  0.5;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  0.5;	  ybar    =    0.0;    	compilable	  [FE]  AssertionFailedError  	178	4	replace
488	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  n;  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  n;  ybar  =  n;	  ybar    =    n;    yBar    =    n;    	compilable	  [FE]  AssertionFailedError  	59	5	replace
489	[BUG]  [BUGGY]  xbar  =  n;  ybar  =  n;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  n;  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  n;  ybar  =  n;	  ybar    =    n;    yBar    =    n;    	compilable	  [FE]  AssertionFailedError  	59	5	replace
490	[BUG]  [BUGGY]  xbar  =  n;  yBar  =  n;  [CE]  cannot  find  symbol  yBar  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  n;  yBar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  n;  yBar  =  n;	  ybar    =    n;    yBar    =    n;    	non-compiled	[CE]  cannot  find  symbol  yBar	59	None	replace
491	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  y);  ybar  =  Math.max(1,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(1,    y);    ybar  =  Math.max(1,  y);	  	compilable	  [FE]  AssertionFailedError  	199	1	add
492	[BUG]  [BUGGY]  ybar  =  Math.max(1,  y);  ybar  =  Math.max(1,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  y);  ybar  =  Math.max(1,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1,    y);    ybar  =  Math.max(1,  y);	  	compilable	  [FE]  AssertionFailedError  	199	1	add
493	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  y);  ybar  =  Math.max(2,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(1,    y);    ybar  =  Math.max(2,  y);	  	compilable	  [FE]  AssertionFailedError  	199	1	add
494	[BUG]  [BUGGY]  ybar  =  Math.max(1,  y);  ybar  =  Math.max(2,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  y);  ybar  =  Math.max(2,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1,    y);    ybar  =  Math.max(2,  y);	  	compilable	  [FE]  AssertionFailedError  	199	1	add
495	[BUG]  [BUGGY]  ybar  =  Math.max(1,  y);  yBar  =  Math.max(1,  y);  [CE]  cannot  find  symbol  yBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  y);  yBar  =  Math.max(1,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1,    y);    yBar  =  Math.max(1,  y);	  	non-compiled	[CE]  cannot  find  symbol  yBar	199	None	add
496	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  y);  xbar  =  Math.max(1,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(1,    y);    xbar  =  Math.max(1,  y);	  	compilable	  [FE]  AssertionFailedError  	199	5	add
497	[BUG]  [BUGGY]  ybar  =  Math.max(1,  y);  xbar  =  Math.max(1,  y);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  y);  xbar  =  Math.max(1,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1,    y);    xbar  =  Math.max(1,  y);	  	compilable	  [FE]  AssertionFailedError  	199	5	add
498	[BUG]  [BUGGY]  luate(x,  ybar);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  luate(x,  ybar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	luate(x,  ybar);	  luate(x,    y);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
499	[BUG]  [BUGGY]  luate(x,  y  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  luate(x,  y  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	luate(x,  y  +  1);	  luate(x,    y);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
500	[BUG]  [BUGGY]  luate(x,  yBar);  [CE]  cannot  find  symbol  yBar  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  luate(x,  yBar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	luate(x,  yBar);	  luate(x,    y);    	non-compiled	[CE]  cannot  find  symbol  yBar	17	None	replace
501	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  x  +  1;  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  x  +  1;  ybar  =  y  +  1;	  ybar    =    y    +    1;    ybar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	61	5	replace
502	[BUG]  [BUGGY]  xbar  =  x  +  1;  ybar  =  y  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  x  +  1;  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  x  +  1;  ybar  =  y  +  1;	  ybar    =    y    +    1;    ybar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	61	5	replace
503	[BUG]  [BUGGY]  n  =  xbar  +  1;  ybar  =  y  +  1;  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  xbar  +  1;  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  xbar  +  1;  ybar  =  y  +  1;	  ybar    =    y    +    1;    ybar    =    y    +    1;    	non-compiled	[CE]  possible  loss  of  precision	61	None	replace
504	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	n  =  0;  ybar  =  y  +  1;	  ybar    =    y    +    1;    ybar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	61	5	replace
505	[BUG]  [BUGGY]  n  =  0;  ybar  =  y  +  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  0;  ybar  =  y  +  1;	  ybar    =    y    +    1;    ybar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	61	5	replace
506	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(y);  xbar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.abs(y);    xbar  =  Math.abs(y);	  	compilable	  [FE]  AssertionFailedError  	48	5	add
507	[BUG]  [BUGGY]  ybar  =  Math.abs(y);  xbar  =  Math.abs(y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(y);  xbar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.abs(y);    xbar  =  Math.abs(y);	  	compilable	  [FE]  AssertionFailedError  	48	5	add
508	[BUG]  [BUGGY]  ybar  =  Math.abs(y);  yBar  =  Math.abs(y);  [CE]  cannot  find  symbol  yBar  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(y);  yBar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.abs(y);    yBar  =  Math.abs(y);	  	non-compiled	[CE]  cannot  find  symbol  yBar	48	None	add
509	[BUG]  [BUGGY]  ybar  =  Math.abs(y);  ybar  =  Math.abs(y));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(y);  ybar  =  Math.abs(y));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.abs(y);    ybar  =  Math.abs(y));	  	non-compiled	[CE]  ';'  expected	48	None	add
510	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.floor(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  Math.floor(x);	          ybar    =    Math.floor(xbar);    xbar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	83	4	replace
511	[BUG]  [BUGGY]  xbar  =  Math.floor(x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.floor(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  Math.floor(x);	          ybar    =    Math.floor(xbar);    xbar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	83	4	replace
512	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(x);  xbar  =  Math.floor(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.floor(x);  xbar  =  Math.floor(y);	          ybar    =    Math.floor(xbar);    xbar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	83	5	replace
513	[BUG]  [BUGGY]  ybar  =  Math.floor(x);  xbar  =  Math.floor(y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(x);  xbar  =  Math.floor(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(x);  xbar  =  Math.floor(y);	          ybar    =    Math.floor(xbar);    xbar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	83	5	replace
514	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.ceil(x);  xbar  =  Math.ceil(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.ceil(x);  xbar  =  Math.ceil(x);	          ybar    =    Math.floor(xbar);    xbar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	83	4	replace
515	[BUG]  [BUGGY]  ybar  =  Math.ceil(x);  xbar  =  Math.ceil(x);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.ceil(x);  xbar  =  Math.ceil(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.ceil(x);  xbar  =  Math.ceil(x);	          ybar    =    Math.floor(xbar);    xbar    =    Math.floor(xbar);    	compilable	  [FE]  AssertionFailedError  	83	4	replace
516	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  y  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(0,  y  -  1);	  ybar    =    Math.max(0,    xbar    -    1);    	compilable	  [FE]  AssertionFailedError  	136	4	replace
517	[BUG]  [BUGGY]  ybar  =  Math.max(0,  y  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  y  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0,  y  -  1);	  ybar    =    Math.max(0,    xbar    -    1);    	compilable	  [FE]  AssertionFailedError  	136	4	replace
518	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  ybar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(0,  ybar  -  1);	  ybar    =    Math.max(0,    xbar    -    1);    	compilable	  [FE]  AssertionFailedError  	136	4	replace
519	[BUG]  [BUGGY]  ybar  =  Math.max(0,  ybar  -  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  ybar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0,  ybar  -  1);	  ybar    =    Math.max(0,    xbar    -    1);    	compilable	  [FE]  AssertionFailedError  	136	4	replace
520	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0,  xbar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(0,  xbar  -  1);	  ybar    =    Math.max(0,    xbar    -    1);    	compilable	  [FE]  AssertionFailedError  	136	4	replace
521	[BUG]  [BUGGY]  ybar  =  Math.min(0,  xbar  -  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0,  xbar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(0,  xbar  -  1);	  ybar    =    Math.max(0,    xbar    -    1);    	compilable	  [FE]  AssertionFailedError  	136	4	replace
522	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0,  y);  ybar  =  Math.min(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.min(0,    y);    ybar  =  Math.min(0,  y);	  	compilable	  [FE]  AssertionFailedError  	18	1	add
523	[BUG]  [BUGGY]  ybar  =  Math.min(0,  y);  ybar  =  Math.min(0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0,  y);  ybar  =  Math.min(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.min(0,    y);    ybar  =  Math.min(0,  y);	  	compilable	  [FE]  AssertionFailedError  	18	1	add
524	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0,  y);  double  ybar  =  Math.min(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.min(0,    y);    double  ybar  =  Math.min(0,  y);	  	compilable	  [FE]  AssertionFailedError  	18	4	add
525	[BUG]  [BUGGY]  ybar  =  Math.min(0,  y);  double  ybar  =  Math.min(0,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0,  y);  double  ybar  =  Math.min(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.min(0,    y);    double  ybar  =  Math.min(0,  y);	  	compilable	  [FE]  AssertionFailedError  	18	4	add
526	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0,  y);  xbar  =  Math.min(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.min(0,    y);    xbar  =  Math.min(0,  y);	  	compilable	  [FE]  AssertionFailedError  	18	5	add
527	[BUG]  [BUGGY]  ybar  =  Math.min(0,  y);  xbar  =  Math.min(0,  y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0,  y);  xbar  =  Math.min(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.min(0,    y);    xbar  =  Math.min(0,  y);	  	compilable	  [FE]  AssertionFailedError  	18	5	add
528	[BUG]  [BUGGY]  ybar  =  Math.min(0,  y);  yBar  =  Math.min(0,  y);  [CE]  cannot  find  symbol  yBar  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0,  y);  yBar  =  Math.min(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.min(0,    y);    yBar  =  Math.min(0,  y);	  	non-compiled	[CE]  cannot  find  symbol  yBar	18	None	add
529	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(0.0,  xbar);	  ybar    =    Math.min(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	45	4	replace
530	[BUG]  [BUGGY]  ybar  =  Math.min(0.0,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(0.0,  xbar);	  ybar    =    Math.min(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	45	4	replace
531	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  xbar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(1.0,  xbar  +  1);	  ybar    =    Math.min(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	45	4	replace
532	[BUG]  [BUGGY]  ybar  =  Math.min(1.0,  xbar  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  xbar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(1.0,  xbar  +  1);	  ybar    =    Math.min(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	45	4	replace
533	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Double.NEGATIVE_INFINITY;	  ybar    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionFailedError  	157	9	replace
534	[BUG]  [BUGGY]  ybar  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Double.NEGATIVE_INFINITY;	  ybar    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionFailedError  	157	9	replace
535	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.NaN;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Double.NaN;	  ybar    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionFailedError  	157	9	replace
536	[BUG]  [BUGGY]  ybar  =  Double.NaN;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.NaN;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Double.NaN;	  ybar    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionFailedError  	157	9	replace
537	[BUG]  [BUGGY]  double  ybar  =  n.doubleValue()  +  1;  [CE]  long  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  ybar  =  n.doubleValue()  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  ybar  =  n.doubleValue()  +  1;	  double    ybar    =    n.doubleValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	142	None	replace
538	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    x;    ybar  =  x;  ybar  =  x;  ybar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        x;        ybar    =    x;    ybar  =  x;  ybar  =  x;	  	compilable	  [FE]  AssertionFailedError  	28	1	add
539	[BUG]  [BUGGY]          ybar    =    x;    ybar  =  x;  ybar  =  x;  ybar  =  x;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    x;    ybar  =  x;  ybar  =  x;  ybar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        x;        ybar    =    x;    ybar  =  x;  ybar  =  x;	  	compilable	  [FE]  AssertionFailedError  	28	1	add
540	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    x;    ybar  =  x;  xbar  =  x;  ybar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        x;        ybar    =    x;    xbar  =  x;  ybar  =  x;	  	compilable	  [FE]  AssertionFailedError  	28	1	add
541	[BUG]  [BUGGY]          ybar    =    x;    ybar  =  x;  xbar  =  x;  ybar  =  x;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    x;    ybar  =  x;  xbar  =  x;  ybar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        x;        ybar    =    x;    xbar  =  x;  ybar  =  x;	  	compilable	  [FE]  AssertionFailedError  	28	1	add
542	[BUG]  [BUGGY]          ybar    =    x;    ybar  =  x;  ybar  =  x;  yBar  =  x;  [CE]  cannot  find  symbol  yBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    x;    ybar  =  x;  ybar  =  x;  yBar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        x;        ybar    =    x;    ybar  =  x;  yBar  =  x;	  	non-compiled	[CE]  cannot  find  symbol  yBar	28	None	add
543	[BUG]  [BUGGY]          ybar    =    x;    ybar  =  x;  yBar  =  x;  ybar  =  x;  [CE]  cannot  find  symbol  yBar  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    x;    ybar  =  x;  yBar  =  x;  ybar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        x;        ybar    =    x;    yBar  =  x;  ybar  =  x;	  	non-compiled	[CE]  cannot  find  symbol  yBar	28	None	add
544	[BUG]  [BUGGY]  xbar  =  x  +  1;  (ybar  =  y  +  1;  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  x  +  1;  (ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  x  +  1;  (ybar  =  y  +  1;	  ybar    =    y    +    1;    (ybar    =    y    +    1;    	non-compiled	[CE]  ')'  expected	188	None	replace
545	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(ybar  ==  0)  {  ybar  =  y  +  1;  ybar  =  y  +  1;  }  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(ybar  ==  0)  {  ybar  =  y  +  1;  ybar  =  y  +  1;  }	  ybar    =    y    +    1;    (ybar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	188	5	replace
546	[BUG]  [BUGGY]  if(ybar  ==  0)  {  ybar  =  y  +  1;  ybar  =  y  +  1;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(ybar  ==  0)  {  ybar  =  y  +  1;  ybar  =  y  +  1;  }  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(ybar  ==  0)  {  ybar  =  y  +  1;  ybar  =  y  +  1;  }	  ybar    =    y    +    1;    (ybar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	188	5	replace
547	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1,  y);  ybar  =  Math.min(1,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.min(1,    y);    ybar  =  Math.min(1,  y);	  	compilable	  [FE]  AssertionFailedError  	235	1	add
548	[BUG]  [BUGGY]  ybar  =  Math.min(1,  y);  ybar  =  Math.min(1,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1,  y);  ybar  =  Math.min(1,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.min(1,    y);    ybar  =  Math.min(1,  y);	  	compilable	  [FE]  AssertionFailedError  	235	1	add
549	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1,  y);  ybar  =  Math.min(2,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.min(1,    y);    ybar  =  Math.min(2,  y);	  	compilable	  [FE]  AssertionFailedError  	235	1	add
550	[BUG]  [BUGGY]  ybar  =  Math.min(1,  y);  ybar  =  Math.min(2,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1,  y);  ybar  =  Math.min(2,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.min(1,    y);    ybar  =  Math.min(2,  y);	  	compilable	  [FE]  AssertionFailedError  	235	1	add
551	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1,  y);  ybar  =  Math.min(3,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.min(1,    y);    ybar  =  Math.min(3,  y);	  	compilable	  [FE]  AssertionFailedError  	235	1	add
552	[BUG]  [BUGGY]  ybar  =  Math.min(1,  y);  ybar  =  Math.min(3,  y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1,  y);  ybar  =  Math.min(3,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.min(1,    y);    ybar  =  Math.min(3,  y);	  	compilable	  [FE]  AssertionFailedError  	235	1	add
553	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1,  y);  xbar  =  Math.min(1,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.min(1,    y);    xbar  =  Math.min(1,  y);	  	compilable	  [FE]  AssertionFailedError  	235	4	add
554	[BUG]  [BUGGY]  ybar  =  Math.min(1,  y);  xbar  =  Math.min(1,  y);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1,  y);  xbar  =  Math.min(1,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.min(1,    y);    xbar  =  Math.min(1,  y);	  	compilable	  [FE]  AssertionFailedError  	235	4	add
555	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	227	6	add
556	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	227	6	add
557	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	227	6	add
558	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	227	6	add
559	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    y);    ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	227	6	add
560	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    y);    ybar  =  Math.min(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	227	6	add
561	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	227	5	add
562	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    y);    xbar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	227	5	add
563	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumYY  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumYY  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	227	6	add
564	[BUG]  [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumYY  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  sumXY  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumYY  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        Math.max(0,        y);        ybar    =    Math.max(0,    y);    sumXY    =    Math.max(0,    y);    ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  y);  sumYY  =  Math.max(0,  y);	  	compilable	  [FE]  AssertionFailedError  	227	6	add
565	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.floor(xbar);        ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);	  	compilable	  [FE]  AssertionFailedError  	80	1	add
566	[BUG]  [BUGGY]          ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.floor(xbar);        ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);	  	compilable	  [FE]  AssertionFailedError  	80	1	add
567	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  ybar  =  Math.log(xbar);  ybar  =  Math.floor(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.floor(xbar);        ybar    =    Math.floor(xbar);    ybar  =  Math.log(xbar);  ybar  =  Math.floor(xbar);	  	compilable	  [FE]  AssertionFailedError  	80	1	add
568	[BUG]  [BUGGY]          ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  ybar  =  Math.log(xbar);  ybar  =  Math.floor(xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  ybar  =  Math.log(xbar);  ybar  =  Math.floor(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.floor(xbar);        ybar    =    Math.floor(xbar);    ybar  =  Math.log(xbar);  ybar  =  Math.floor(xbar);	  	compilable	  [FE]  AssertionFailedError  	80	1	add
569	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.floor(xbar);        ybar    =    Math.floor(xbar);    xbar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);	  	compilable	  [FE]  AssertionFailedError  	80	2	add
570	[BUG]  [BUGGY]          ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  xbar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.floor(xbar);        ybar    =    Math.floor(xbar);    xbar  =  Math.floor(xbar);  ybar  =  Math.floor(xbar);	  	compilable	  [FE]  AssertionFailedError  	80	2	add
571	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  ybar  =  Math.ceil(xbar);  ybar  =  Math.ceil(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.floor(xbar);        ybar    =    Math.floor(xbar);    ybar  =  Math.ceil(xbar);  ybar  =  Math.ceil(xbar);	  	compilable	  [FE]  AssertionFailedError  	80	1	add
572	[BUG]  [BUGGY]          ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  ybar  =  Math.ceil(xbar);  ybar  =  Math.ceil(xbar);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  ybar  =  Math.ceil(xbar);  ybar  =  Math.ceil(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.floor(xbar);        ybar    =    Math.floor(xbar);    ybar  =  Math.ceil(xbar);  ybar  =  Math.ceil(xbar);	  	compilable	  [FE]  AssertionFailedError  	80	1	add
573	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  ybar  =  Math.ceil(xbar);  ybar  =  Math.floor(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.floor(xbar);        ybar    =    Math.floor(xbar);    ybar  =  Math.ceil(xbar);  ybar  =  Math.floor(xbar);	  	compilable	  [FE]  AssertionFailedError  	80	1	add
574	[BUG]  [BUGGY]          ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  ybar  =  Math.ceil(xbar);  ybar  =  Math.floor(xbar);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.floor(xbar);    ybar  =  Math.floor(xbar);  ybar  =  Math.ceil(xbar);  ybar  =  Math.floor(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.floor(xbar);        ybar    =    Math.floor(xbar);    ybar  =  Math.ceil(xbar);  ybar  =  Math.floor(xbar);	  	compilable	  [FE]  AssertionFailedError  	80	1	add
575	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  x  +  1.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  x  +  1.0;	  ybar    =    y    +    1.0;    	compilable	  [FE]  AssertionFailedError  	160	4	replace
576	[BUG]  [BUGGY]  ybar  =  x  +  1.0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  x  +  1.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  x  +  1.0;	  ybar    =    y    +    1.0;    	compilable	  [FE]  AssertionFailedError  	160	4	replace
577	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n  +  1.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  n  +  1.0;	  ybar    =    y    +    1.0;    	compilable	  [FE]  AssertionFailedError  	160	4	replace
578	[BUG]  [BUGGY]  ybar  =  n  +  1.0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n  +  1.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  n  +  1.0;	  ybar    =    y    +    1.0;    	compilable	  [FE]  AssertionFailedError  	160	4	replace
579	[BUG]  [BUGGY]  n  =  Math.min(1.0,  xbar  +  1.0);  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.min(1.0,  xbar  +  1.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(1.0,  xbar  +  1.0);	  n    =    Math.min(1.0,    xbar    +    1);    	non-compiled	[CE]  possible  loss  of  precision	99	None	replace
580	[BUG]  [BUGGY]  n  =  Math.min(1.0,  ybar  +  1);  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.min(1.0,  ybar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(1.0,  ybar  +  1);	  n    =    Math.min(1.0,    xbar    +    1);    	non-compiled	[CE]  possible  loss  of  precision	99	None	replace
581	[BUG]  [BUGGY]  ybar    =    0;    double  ybar  =  0;  ybar  =  0;  double  ybar  =  0;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    0;    double  ybar  =  0;  ybar  =  0;  double  ybar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        0;        double    ybar    =    0;    ybar  =  0;  double  ybar  =  0;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	86	None	add
582	[BUG]  [BUGGY]  ybar    =    0;    double  ybar  =  0;  double  ybar  =  0;  double  ybar  =  0;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    0;    double  ybar  =  0;  double  ybar  =  0;  double  ybar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        0;        double    ybar    =    0;    double  ybar  =  0;  double  ybar  =  0;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	86	None	add
583	[BUG]  [BUGGY]  ybar    =    0;    double  ybar  =  0;  xbar  =  0;  double  ybar  =  0;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    0;    double  ybar  =  0;  xbar  =  0;  double  ybar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        0;        double    ybar    =    0;    xbar  =  0;  double  ybar  =  0;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	86	None	add
584	[BUG]  [BUGGY]  ybar    =    0;    double  ybar  =  0;  ybar  =  0;  Double  ybar  =  0;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    0;    double  ybar  =  0;  ybar  =  0;  Double  ybar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        0;        double    ybar    =    0;    ybar  =  0;  Double  ybar  =  0;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	86	None	add
585	[BUG]  [BUGGY]  ybar  =  Math.max(0,  y);  yBar  =  Math.max(0,  xbar);  [CE]  cannot  find  symbol  yBar  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  y);  yBar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0,  y);  yBar  =  Math.max(0,  xbar);	          ybar    =    Math.max(0,    xbar);    yBar    =    Math.max(0,    xbar);    	non-compiled	[CE]  cannot  find  symbol  yBar	203	None	replace
586	[BUG]  [BUGGY]  n  =  Math.max(0,  xbar);  n  =  Math.max(0,  xbar);  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.max(0,  xbar);  n  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.max(0,  xbar);  n  =  Math.max(0,  xbar);	          ybar    =    Math.max(0,    xbar);    yBar    =    Math.max(0,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	203	None	replace
587	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  xbar);	          ybar    =    Math.max(0,    xbar);    yBar    =    Math.max(0,    xbar);    	compilable	  [FE]  AssertionFailedError  	203	4	replace
588	[BUG]  [BUGGY]  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  xbar);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0,  y);  ybar  =  Math.max(0,  xbar);	          ybar    =    Math.max(0,    xbar);    yBar    =    Math.max(0,    xbar);    	compilable	  [FE]  AssertionFailedError  	203	4	replace
589	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  n  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	n  =  0;  n  =  0;	  ybar    =    n;    ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	55	4	replace
590	[BUG]  [BUGGY]  n  =  0;  n  =  0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  n  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  0;  n  =  0;	  ybar    =    n;    ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	55	4	replace
591	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  ybar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	n  =  0;  ybar  =  0;	  ybar    =    n;    ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	55	4	replace
592	[BUG]  [BUGGY]  n  =  0;  ybar  =  0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  ybar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  0;  ybar  =  0;	  ybar    =    n;    ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	55	4	replace
593	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	double  ybar  =  y  +  1;	  ybar    =    y    +    1;    int    ybar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	187	4	replace
594	[BUG]  [BUGGY]  double  ybar  =  y  +  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  ybar  =  y  +  1;	  ybar    =    y    +    1;    int    ybar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	187	4	replace
595	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  Double  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	Double  ybar  =  y  +  1;	  ybar    =    y    +    1;    int    ybar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	187	4	replace
596	[BUG]  [BUGGY]  Double  ybar  =  y  +  1;  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  Double  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	Double  ybar  =  y  +  1;	  ybar    =    y    +    1;    int    ybar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	187	4	replace
597	[BUG]  [BUGGY]  int  ybar  =  y  +  1;  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  int  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	int  ybar  =  y  +  1;	  ybar    =    y    +    1;    int    ybar    =    y    +    1;    	non-compiled	[CE]  possible  loss  of  precision	187	None	replace
598	[BUG]  [BUGGY]  long  ybar  =  y  +  1;  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  long  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	long  ybar  =  y  +  1;	  ybar    =    y    +    1;    int    ybar    =    y    +    1;    	non-compiled	[CE]  possible  loss  of  precision	187	None	replace
599	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(y);  ybar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.abs(y);  ybar  =  Math.abs(xbar);	          ybar    =    Math.abs(xbar);    yBar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	12	4	replace
600	[BUG]  [BUGGY]  ybar  =  Math.abs(y);  ybar  =  Math.abs(xbar);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(y);  ybar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.abs(y);  ybar  =  Math.abs(xbar);	          ybar    =    Math.abs(xbar);    yBar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	12	4	replace
601	[BUG]  [BUGGY]  n  =  Math.abs(xbar);  n  =  Math.abs(xbar);  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.abs(xbar);  n  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.abs(xbar);  n  =  Math.abs(xbar);	          ybar    =    Math.abs(xbar);    yBar    =    Math.abs(xbar);    	non-compiled	[CE]  possible  loss  of  precision	12	None	replace
602	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);	          ybar    =    Math.abs(xbar);    yBar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	12	4	replace
603	[BUG]  [BUGGY]  xbar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);	          ybar    =    Math.abs(xbar);    yBar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	12	4	replace
604	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  n  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  n  +  1;	  xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	124	4	replace
605	[BUG]  [BUGGY]  xbar  =  n  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  n  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  n  +  1;	  xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	124	4	replace
606	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  y;  xbar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar    =    y;    xbar  =  y;	  	compilable	  [FE]  AssertionFailedError  	127	5	add
607	[BUG]  [BUGGY]  xbar  =  y;  xbar  =  y;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  y;  xbar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    y;    xbar  =  y;	  	compilable	  [FE]  AssertionFailedError  	127	5	add
608	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  y;  double  xbar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar    =    y;    double  xbar  =  y;	  	compilable	  [FE]  AssertionFailedError  	127	5	add
609	[BUG]  [BUGGY]  xbar  =  y;  double  xbar  =  y;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  y;  double  xbar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    y;    double  xbar  =  y;	  	compilable	  [FE]  AssertionFailedError  	127	5	add
610	[BUG]  [BUGGY]  xbar  =  y;  ||  xbar  ==  y;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  y;  ||  xbar  ==  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    y;    ||  xbar  ==  y;	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
611	[BUG]  [BUGGY]  xbar  =  y;  ||  xbar  ==  y);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  y;  ||  xbar  ==  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    y;    ||  xbar  ==  y);	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
612	[BUG]  [BUGGY]  xbar  =  y;  xbar  =  y);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  y;  xbar  =  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    y;    xbar  =  y);	  	non-compiled	[CE]  ';'  expected	127	None	add
613	[BUG]  [BUGGY]  if(x  <  0)  {  xbar  =  x;  (xbar  =  x;  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  xbar  =  x;  (xbar  =  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  xbar  =  x;  (xbar  =  x;  }	          xbar    =    x;    (xbar    =    x;    	non-compiled	[CE]  ')'  expected	191	None	replace
614	[BUG]  [BUGGY]  if(x  <  0)  {  xbar  =  x;  (xbar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  xbar  =  x;  (xbar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  xbar  =  x;  (xbar  =  x;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          xbar    =    x;    (xbar    =    x;    	non-compiled	[CE]  	191	None	replace
615	[BUG]  [BUGGY]  if(x  <  0)  {  xbar  =  x;  (xbar  =  x;  }  else  if(n  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  xbar  =  x;  (xbar  =  x;  }  else  if(n  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  xbar  =  x;  (xbar  =  x;  }  else  if(n  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	          xbar    =    x;    (xbar    =    x;    	non-compiled	[CE]  	191	None	replace
616	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          ybar    =    x;    ybar    =    x);    	compilable	  [FE]  IllegalArgumentException  	34	9	replace
617	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          ybar    =    x;    ybar    =    x);    	compilable	  [FE]  IllegalArgumentException  	34	9	replace
618	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }  else  {  throw  new  IllegalStateException( " ");  }	          ybar    =    x;    ybar    =    x);    	compilable	  [FE]  IllegalStateException  	34	9	replace
619	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  ybar  =  x;  ybar  =  y;  }  else  {  throw  new  IllegalStateException( " ");  }	          ybar    =    x;    ybar    =    x);    	compilable	  [FE]  IllegalStateException  	34	9	replace
620	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  n  =  Math.min(1.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	double  n  =  Math.min(1.0,  y);	  double    n    =    Math.min(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	101	4	replace
621	[BUG]  [BUGGY]  double  n  =  Math.min(1.0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  n  =  Math.min(1.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  n  =  Math.min(1.0,  y);	  double    n    =    Math.min(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	101	4	replace
622	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  n  =  Math.min(1.0,  xbar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	double  n  =  Math.min(1.0,  xbar  +  1);	  double    n    =    Math.min(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	101	4	replace
623	[BUG]  [BUGGY]  double  n  =  Math.min(1.0,  xbar  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  n  =  Math.min(1.0,  xbar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  n  =  Math.min(1.0,  xbar  +  1);	  double    n    =    Math.min(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	101	4	replace
624	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  n  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	double  n  =  Math.max(1.0,  xbar);	  double    n    =    Math.min(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	101	4	replace
625	[BUG]  [BUGGY]  double  n  =  Math.max(1.0,  xbar);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  n  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  n  =  Math.max(1.0,  xbar);	  double    n    =    Math.min(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	101	4	replace
626	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  n  =  Math.min(1.0,  ybar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	double  n  =  Math.min(1.0,  ybar);	  n    =    Math.min(1.0,    ybar);    	compilable	  [FE]  AssertionFailedError  	204	4	replace
627	[BUG]  [BUGGY]  double  n  =  Math.min(1.0,  ybar);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  n  =  Math.min(1.0,  ybar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  n  =  Math.min(1.0,  ybar);	  n    =    Math.min(1.0,    ybar);    	compilable	  [FE]  AssertionFailedError  	204	4	replace
628	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  1;	  xbar    =    0;    	compilable	  [FE]  AssertionFailedError  	126	4	replace
629	[BUG]  [BUGGY]  xbar  =  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  1;	  xbar    =    0;    	compilable	  [FE]  AssertionFailedError  	126	4	replace
630	[BUG]  [BUGGY]  xbar  =  y  +  1;  yBar  =  y  +  1;  [CE]  cannot  find  symbol  yBar  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  y  +  1;  yBar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  y  +  1;  yBar  =  y  +  1;	  ybar    =    y    +    1;    yBar    =    y    +    1;    	non-compiled	[CE]  cannot  find  symbol  yBar	66	None	replace
631	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  y  +  1;  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  y  +  1;  ybar  =  y  +  1;	  ybar    =    y    +    1;    yBar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	66	5	replace
632	[BUG]  [BUGGY]  xbar  =  y  +  1;  ybar  =  y  +  1;  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  y  +  1;  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  y  +  1;  ybar  =  y  +  1;	  ybar    =    y    +    1;    yBar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	66	5	replace
633	[BUG]  [BUGGY]  n  =  y  +  1;  n  =  y  +  1;  [CE]  possible  loss  of  precision  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  y  +  1;  n  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  y  +  1;  n  =  y  +  1;	  ybar    =    y    +    1;    yBar    =    y    +    1;    	non-compiled	[CE]  possible  loss  of  precision	66	None	replace
634	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  double  ybar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	n  =  0;  double  ybar  =  0;	  ybar    =    n;    double    ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	167	4	replace
635	[BUG]  [BUGGY]  n  =  0;  double  ybar  =  0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  double  ybar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  0;  double  ybar  =  0;	  ybar    =    n;    double    ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	167	4	replace
636	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  double  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	n  =  0;  double  ybar  =  n;	  ybar    =    n;    double    ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	167	4	replace
637	[BUG]  [BUGGY]  n  =  0;  double  ybar  =  n;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  double  ybar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  0;  double  ybar  =  n;	  ybar    =    n;    double    ybar    =    n;    	compilable	  [FE]  AssertionFailedError  	167	4	replace
638	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(x);  ybar  =  Math.abs(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.abs(x);    ybar  =  Math.abs(x);	  	compilable	  [FE]  AssertionFailedError  	50	1	add
639	[BUG]  [BUGGY]  ybar  =  Math.abs(x);  ybar  =  Math.abs(x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(x);  ybar  =  Math.abs(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.abs(x);    ybar  =  Math.abs(x);	  	compilable	  [FE]  AssertionFailedError  	50	1	add
640	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(x);  xbar  =  Math.abs(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.abs(x);    xbar  =  Math.abs(x);	  	compilable	  [FE]  AssertionFailedError  	50	1	add
641	[BUG]  [BUGGY]  ybar  =  Math.abs(x);  xbar  =  Math.abs(x);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(x);  xbar  =  Math.abs(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.abs(x);    xbar  =  Math.abs(x);	  	compilable	  [FE]  AssertionFailedError  	50	1	add
642	[BUG]  [BUGGY]  ybar  =  Math.abs(x);  ybar  =  Math.abs(x));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(x);  ybar  =  Math.abs(x));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.abs(x);    ybar  =  Math.abs(x));	  	non-compiled	[CE]  ';'  expected	50	None	add
643	[BUG]  [BUGGY]  ybar  =  Math.abs(x);  yBar  =  Math.abs(x);  [CE]  cannot  find  symbol  yBar  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(x);  yBar  =  Math.abs(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.abs(x);    yBar  =  Math.abs(x);	  	non-compiled	[CE]  cannot  find  symbol  yBar	50	None	add
644	[BUG]  [BUGGY]  n  =  Math.min(xbar,  y);  [CE]  possible  loss  of  precision  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.min(xbar,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(xbar,  y);	  n    =    Math.min(n,    ybar);    	non-compiled	[CE]  possible  loss  of  precision	207	None	replace
645	[BUG]  [BUGGY]  n  =  Math.min(ybar,  n);  [CE]  possible  loss  of  precision  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.min(ybar,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(ybar,  n);	  n    =    Math.min(n,    ybar);    	non-compiled	[CE]  possible  loss  of  precision	207	None	replace
646	[BUG]  [BUGGY]  n  =  Math.min(x,  y);  [CE]  possible  loss  of  precision  [FE]                      AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.min(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(x,  y);	  n    =    Math.min(n,    ybar);    	non-compiled	[CE]  possible  loss  of  precision	207	None	replace
647	[BUG]  [BUGGY]  n  =  Math.min(0,  xbar);  [CE]  possible  loss  of  precision  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.min(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(0,  xbar);	  n    =    Math.min(1,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	150	None	replace
648	[BUG]  [BUGGY]  n  =  Math.min(1,  xbar  +  1);  [CE]  possible  loss  of  precision  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.min(1,  xbar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(1,  xbar  +  1);	  n    =    Math.min(1,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	150	None	replace
649	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0.0,  xbar);  ybar  =  Math.max(0.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(0.0,    xbar);    ybar  =  Math.max(0.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	192	1	add
650	[BUG]  [BUGGY]  ybar  =  Math.max(0.0,  xbar);  ybar  =  Math.max(0.0,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0.0,  xbar);  ybar  =  Math.max(0.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0.0,    xbar);    ybar  =  Math.max(0.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	192	1	add
651	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0.0,  xbar);  xbar  =  Math.max(0.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(0.0,    xbar);    xbar  =  Math.max(0.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	192	1	add
652	[BUG]  [BUGGY]  ybar  =  Math.max(0.0,  xbar);  xbar  =  Math.max(0.0,  xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0.0,  xbar);  xbar  =  Math.max(0.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0.0,    xbar);    xbar  =  Math.max(0.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	192	1	add
653	[BUG]  [BUGGY]  ybar  =  Math.max(0.0,  xbar);  ybar  =  Math.max(0.0,  xBar);  [CE]  cannot  find  symbol  xBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0.0,  xbar);  ybar  =  Math.max(0.0,  xBar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0.0,    xbar);    ybar  =  Math.max(0.0,  xBar);	  	non-compiled	[CE]  cannot  find  symbol  xBar	192	None	add
654	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1.0,  x);	  ybar    =    Math.max(1.0,    y);    	compilable	  [FE]  AssertionFailedError  	41	4	replace
655	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1.0,  x);	  ybar    =    Math.max(1.0,    y);    	compilable	  [FE]  AssertionFailedError  	41	4	replace
656	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  ybar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1.0,  ybar);	  ybar    =    Math.max(1.0,    y);    	compilable	  [FE]  AssertionFailedError  	41	4	replace
657	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  ybar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  ybar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1.0,  ybar);	  ybar    =    Math.max(1.0,    y);    	compilable	  [FE]  AssertionFailedError  	41	4	replace
658	[BUG]  [BUGGY]  double  y  =  xbar  -  y;  [CE]  variable  y  is  already  defined  in  method  addData(double,double)  [FE]                  AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  y  =  xbar  -  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  y  =  xbar  -  y;	  double    y    =    y    -    xbar;    	non-compiled	[CE]  variable  y  is  already  defined  in  method  addData(double,double)	112	None	replace
659	[BUG]  [BUGGY]  double  y  =  x  -  xbar;  [CE]  variable  y  is  already  defined  in  method  addData(double,double)  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  y  =  x  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  y  =  x  -  xbar;	  double    y    =    y    -    xbar;    	non-compiled	[CE]  variable  y  is  already  defined  in  method  addData(double,double)	112	None	replace
660	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  x  +  2;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  x  +  2;	  ybar    =    y    +    2;    	compilable	  [FE]  AssertionFailedError  	94	5	replace
661	[BUG]  [BUGGY]  ybar  =  x  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  x  +  2;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  x  +  2;	  ybar    =    y    +    2;    	compilable	  [FE]  AssertionFailedError  	94	5	replace
662	[BUG]  [BUGGY]  n  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  y);  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  y);	          ybar    =    Math.max(0,    xbar);    ybar    =    Math.max(0,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	138	None	replace
663	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0,  xbar);  ybar  =  Math.max(0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(0,  xbar);  ybar  =  Math.max(0,  y);	          ybar    =    Math.max(0,    xbar);    ybar    =    Math.max(0,    xbar);    	compilable	  [FE]  AssertionFailedError  	138	1	replace
664	[BUG]  [BUGGY]  ybar  =  Math.min(0,  xbar);  ybar  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0,  xbar);  ybar  =  Math.max(0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(0,  xbar);  ybar  =  Math.max(0,  y);	          ybar    =    Math.max(0,    xbar);    ybar    =    Math.max(0,    xbar);    	compilable	  [FE]  AssertionFailedError  	138	1	replace
665	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y;  xbar  =  y;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  y;  xbar  =  y;	  ybar    =    n;    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	58	5	replace
666	[BUG]  [BUGGY]  ybar  =  y;  xbar  =  y;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y;  xbar  =  y;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  y;  xbar  =  y;	  ybar    =    n;    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	58	5	replace
667	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  xbar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	n  =  0;  xbar  =  n;	  ybar    =    n;    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	58	5	replace
668	[BUG]  [BUGGY]  n  =  0;  xbar  =  n;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  xbar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  0;  xbar  =  n;	  ybar    =    n;    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	58	5	replace
669	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y;  xbar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  y;  xbar  =  n;	  ybar    =    n;    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	58	5	replace
670	[BUG]  [BUGGY]  ybar  =  y;  xbar  =  n;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y;  xbar  =  n;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  y;  xbar  =  n;	  ybar    =    n;    xbar    =    n;    	compilable	  [FE]  AssertionFailedError  	58	5	replace
671	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.MIN_VALUE;  ybar  =  Double.MIN_VALUE;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Double.MIN_VALUE;    ybar  =  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionFailedError  	156	1	add
672	[BUG]  [BUGGY]  ybar  =  Double.MIN_VALUE;  ybar  =  Double.MIN_VALUE;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.MIN_VALUE;  ybar  =  Double.MIN_VALUE;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Double.MIN_VALUE;    ybar  =  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionFailedError  	156	1	add
673	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.MIN_VALUE;  double  ybar  =  Double.MIN_VALUE;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Double.MIN_VALUE;    double  ybar  =  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionFailedError  	156	4	add
674	[BUG]  [BUGGY]  ybar  =  Double.MIN_VALUE;  double  ybar  =  Double.MIN_VALUE;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.MIN_VALUE;  double  ybar  =  Double.MIN_VALUE;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Double.MIN_VALUE;    double  ybar  =  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionFailedError  	156	4	add
675	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.MIN_VALUE;  xbar  =  Double.MIN_VALUE;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Double.MIN_VALUE;    xbar  =  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionFailedError  	156	5	add
676	[BUG]  [BUGGY]  ybar  =  Double.MIN_VALUE;  xbar  =  Double.MIN_VALUE;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.MIN_VALUE;  xbar  =  Double.MIN_VALUE;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Double.MIN_VALUE;    xbar  =  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionFailedError  	156	5	add
677	[BUG]  [BUGGY]  ybar  =  Double.MIN_VALUE;  int  ybar  =  Double.MIN_VALUE;  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.MIN_VALUE;  int  ybar  =  Double.MIN_VALUE;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Double.MIN_VALUE;    int  ybar  =  Double.MIN_VALUE;	  	non-compiled	[CE]  possible  loss  of  precision	156	None	add
678	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	n  =  0;	  bucket    =    0;    	compilable	  [FE]  AssertionFailedError  	210	4	replace
679	[BUG]  [BUGGY]  n  =  0;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  0;	  bucket    =    0;    	compilable	  [FE]  AssertionFailedError  	210	4	replace
680	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  bucket  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	double  bucket  =  0;	  bucket    =    0;    	compilable	  [FE]  AssertionFailedError  	210	4	replace
681	[BUG]  [BUGGY]  double  bucket  =  0;  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  bucket  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  bucket  =  0;	  bucket    =    0;    	compilable	  [FE]  AssertionFailedError  	210	4	replace
682	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  x);  sumXX  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(0,  x);  sumXX  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXX    =    Math.max(0,    x);    	compilable	  [FE]  AssertionFailedError  	230	5	replace
683	[BUG]  [BUGGY]  ybar  =  Math.max(0,  x);  sumXX  =  Math.max(0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  x);  sumXX  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0,  x);  sumXX  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXX    =    Math.max(0,    x);    	compilable	  [FE]  AssertionFailedError  	230	5	replace
684	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXX    =    Math.max(0,    x);    	compilable	  [FE]  AssertionFailedError  	230	5	replace
685	[BUG]  [BUGGY]  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0,  y);  sumXX  =  Math.max(0,  x);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXX    =    Math.max(0,    x);    	compilable	  [FE]  AssertionFailedError  	230	5	replace
686	[BUG]  [BUGGY]  n  =  Math.max(0,  x);  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.max(0,  x);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXX    =    Math.max(0,    x);    	non-compiled	[CE]  possible  loss  of  precision	230	None	replace
687	[BUG]  [BUGGY]  n  =  Math.max(0,  x);  sumXX  =  Math.max(0,  y);  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.max(0,  x);  sumXX  =  Math.max(0,  y);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.max(0,  x);  sumXX  =  Math.max(0,  y);	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    sumXX    =    Math.max(0,    x);    	non-compiled	[CE]  possible  loss  of  precision	230	None	replace
688	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n  -  1;  ybar  =  n  -  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    n    -    1;    ybar  =  n  -  1;	  	compilable	  [FE]  AssertionFailedError  	97	1	add
689	[BUG]  [BUGGY]  ybar  =  n  -  1;  ybar  =  n  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n  -  1;  ybar  =  n  -  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    n    -    1;    ybar  =  n  -  1;	  	compilable	  [FE]  AssertionFailedError  	97	1	add
690	[BUG]  [BUGGY]  ybar  =  n  -  1;  int  ybar  =  n  -  1;  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n  -  1;  int  ybar  =  n  -  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    n    -    1;    int  ybar  =  n  -  1;	  	non-compiled	[CE]  possible  loss  of  precision	97	None	add
691	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n  -  1;  xbar  =  n  -  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    n    -    1;    xbar  =  n  -  1;	  	compilable	  [FE]  AssertionFailedError  	97	5	add
692	[BUG]  [BUGGY]  ybar  =  n  -  1;  xbar  =  n  -  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n  -  1;  xbar  =  n  -  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    n    -    1;    xbar  =  n  -  1;	  	compilable	  [FE]  AssertionFailedError  	97	5	add
693	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n  -  1;  double  ybar  =  n  -  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    n    -    1;    double  ybar  =  n  -  1;	  	compilable	  [FE]  AssertionFailedError  	97	4	add
694	[BUG]  [BUGGY]  ybar  =  n  -  1;  double  ybar  =  n  -  1;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n  -  1;  double  ybar  =  n  -  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    n    -    1;    double  ybar  =  n  -  1;	  	compilable	  [FE]  AssertionFailedError  	97	4	add
695	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(0,    xbar);    ybar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.max(0,        xbar);        ybar    =    Math.max(0,    xbar);    ybar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	137	1	add
696	[BUG]  [BUGGY]          ybar    =    Math.max(0,    xbar);    ybar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(0,    xbar);    ybar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(0,        xbar);        ybar    =    Math.max(0,    xbar);    ybar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	137	1	add
697	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(0,    xbar);    ybar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.max(0,        xbar);        ybar    =    Math.max(0,    xbar);    xbar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	137	1	add
698	[BUG]  [BUGGY]          ybar    =    Math.max(0,    xbar);    ybar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(0,    xbar);    ybar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(0,        xbar);        ybar    =    Math.max(0,    xbar);    xbar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	137	1	add
699	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(0,    xbar);    ybar  =  Math.max(0,  xbar);  ybar  =  Math.min(0,  xbar);  ybar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.max(0,        xbar);        ybar    =    Math.max(0,    xbar);    ybar  =  Math.min(0,  xbar);  ybar  =  Math.max(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	137	1	add
700	[BUG]  [BUGGY]          ybar    =    Math.max(0,    xbar);    ybar  =  Math.max(0,  xbar);  ybar  =  Math.min(0,  xbar);  ybar  =  Math.max(0,  xbar);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(0,    xbar);    ybar  =  Math.max(0,  xbar);  ybar  =  Math.min(0,  xbar);  ybar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(0,        xbar);        ybar    =    Math.max(0,    xbar);    ybar  =  Math.min(0,  xbar);  ybar  =  Math.max(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	137	1	add
701	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.pow(10,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.pow(10,  xbar);	  ybar    =    Math.log(xbar);    	compilable	  [FE]  AssertionFailedError  	120	4	replace
702	[BUG]  [BUGGY]  ybar  =  Math.pow(10,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.pow(10,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.pow(10,  xbar);	  ybar    =    Math.log(xbar);    	compilable	  [FE]  AssertionFailedError  	120	4	replace
703	[BUG]  [BUGGY]  ybar  =  Math.rint(x,  y);  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.rint(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.rint(x,  y);	  ybar    =    Math.log(xbar);    	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	120	None	replace
704	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0,  xbar);  ybar  =  Math.min(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.min(0,    xbar);    ybar  =  Math.min(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	133	1	add
705	[BUG]  [BUGGY]  ybar  =  Math.min(0,  xbar);  ybar  =  Math.min(0,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0,  xbar);  ybar  =  Math.min(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.min(0,    xbar);    ybar  =  Math.min(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	133	1	add
706	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0,  xbar);  xbar  =  Math.min(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.min(0,    xbar);    xbar  =  Math.min(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	133	5	add
707	[BUG]  [BUGGY]  ybar  =  Math.min(0,  xbar);  xbar  =  Math.min(0,  xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0,  xbar);  xbar  =  Math.min(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.min(0,    xbar);    xbar  =  Math.min(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	133	5	add
708	[BUG]  [BUGGY]  ybar  =  Math.min(0,  xbar);  ybar  =  Math.min(0,  xBar);  [CE]  cannot  find  symbol  xBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0,  xbar);  ybar  =  Math.min(0,  xBar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.min(0,    xbar);    ybar  =  Math.min(0,  xBar);	  	non-compiled	[CE]  cannot  find  symbol  xBar	133	None	add
709	[BUG]  [BUGGY]          ybar    =    Math.max(1.0,    xbar);    double  ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    double  ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(1.0,        xbar);        double    ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	169	None	add
710	[BUG]  [BUGGY]          ybar    =    Math.max(1.0,    xbar);    double  ybar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    double  ybar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(1.0,        xbar);        double    ybar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	169	None	add
711	[BUG]  [BUGGY]          ybar    =    Math.max(1.0,    xbar);    double  ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.min(1.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    double  ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.min(1.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(1.0,        xbar);        double    ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.min(1.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	169	None	add
712	[BUG]  [BUGGY]          ybar    =    Math.max(1.0,    xbar);    double  ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(0.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    double  ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(0.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(1.0,        xbar);        double    ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(0.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	169	None	add
713	[BUG]  [BUGGY]          ybar    =    Math.max(1.0,    xbar);    double  ybar  =  Math.max(1.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    double  ybar  =  Math.max(1.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(1.0,        xbar);        double    ybar    =    Math.max(1.0,    xbar);    double  ybar  =  Math.max(1.0,  xbar);  double  ybar  =  Math.max(1.0,  xbar);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	169	None	add
714	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(0,    xbar);    xbar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.max(0,        xbar);        xbar    =    Math.max(0,    xbar);    ybar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	139	1	add
715	[BUG]  [BUGGY]          ybar    =    Math.max(0,    xbar);    xbar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(0,    xbar);    xbar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(0,        xbar);        xbar    =    Math.max(0,    xbar);    ybar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	139	1	add
716	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(0,    xbar);    xbar  =  Math.max(0,  xbar);  ybar  =  Math.min(0,  xbar);  xbar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.max(0,        xbar);        xbar    =    Math.max(0,    xbar);    ybar  =  Math.min(0,  xbar);  xbar  =  Math.max(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	139	1	add
717	[BUG]  [BUGGY]          ybar    =    Math.max(0,    xbar);    xbar  =  Math.max(0,  xbar);  ybar  =  Math.min(0,  xbar);  xbar  =  Math.max(0,  xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(0,    xbar);    xbar  =  Math.max(0,  xbar);  ybar  =  Math.min(0,  xbar);  xbar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(0,        xbar);        xbar    =    Math.max(0,    xbar);    ybar  =  Math.min(0,  xbar);  xbar  =  Math.max(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	139	1	add
718	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(0,    xbar);    xbar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.max(0,        xbar);        xbar    =    Math.max(0,    xbar);    xbar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	139	1	add
719	[BUG]  [BUGGY]          ybar    =    Math.max(0,    xbar);    xbar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(0,    xbar);    xbar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(0,        xbar);        xbar    =    Math.max(0,    xbar);    xbar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	139	1	add
720	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y  +  2;  ybar  =  y  +  2;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    y    +    2;    ybar  =  y  +  2;	  	compilable	  [FE]  AssertionFailedError  	93	1	add
721	[BUG]  [BUGGY]  ybar  =  y  +  2;  ybar  =  y  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y  +  2;  ybar  =  y  +  2;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    y    +    2;    ybar  =  y  +  2;	  	compilable	  [FE]  AssertionFailedError  	93	1	add
722	[BUG]  [BUGGY]  ybar  =  y  +  2;  int  ybar  =  y  +  2;  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y  +  2;  int  ybar  =  y  +  2;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    y    +    2;    int  ybar  =  y  +  2;	  	non-compiled	[CE]  possible  loss  of  precision	93	None	add
723	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y  +  2;  xbar  =  y  +  2;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    y    +    2;    xbar  =  y  +  2;	  	compilable	  [FE]  AssertionFailedError  	93	5	add
724	[BUG]  [BUGGY]  ybar  =  y  +  2;  xbar  =  y  +  2;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y  +  2;  xbar  =  y  +  2;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    y    +    2;    xbar  =  y  +  2;	  	compilable	  [FE]  AssertionFailedError  	93	5	add
725	[BUG]  [BUGGY]  ybar  =  y  +  2;  yBar  =  y  +  2;  [CE]  cannot  find  symbol  yBar  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y  +  2;  yBar  =  y  +  2;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    y    +    2;    yBar  =  y  +  2;	  	non-compiled	[CE]  cannot  find  symbol  yBar	93	None	add
726	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.abs(xbar);    xbar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.abs(xbar);        xbar    =    Math.abs(xbar);    ybar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
727	[BUG]  [BUGGY]          ybar    =    Math.abs(xbar);    xbar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.abs(xbar);    xbar  =  Math.abs(xbar);  ybar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.abs(xbar);        xbar    =    Math.abs(xbar);    ybar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
728	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.abs(xbar);    xbar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.abs(xbar);        xbar    =    Math.abs(xbar);    xbar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
729	[BUG]  [BUGGY]          ybar    =    Math.abs(xbar);    xbar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.abs(xbar);    xbar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.abs(xbar);        xbar    =    Math.abs(xbar);    xbar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
730	[BUG]  [BUGGY]          ybar    =    Math.abs(xbar);    xbar  =  Math.abs(xbar);  yBar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  [CE]  cannot  find  symbol  yBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.abs(xbar);    xbar  =  Math.abs(xbar);  yBar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.abs(xbar);        xbar    =    Math.abs(xbar);    yBar  =  Math.abs(xbar);  xbar  =  Math.abs(xbar);	  	non-compiled	[CE]  cannot  find  symbol  yBar	10	None	add
731	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  xbar);  ybar  =  Math.min(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.min(1.0,    xbar);    ybar  =  Math.min(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	44	1	add
732	[BUG]  [BUGGY]  ybar  =  Math.min(1.0,  xbar);  ybar  =  Math.min(1.0,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  xbar);  ybar  =  Math.min(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.min(1.0,    xbar);    ybar  =  Math.min(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	44	1	add
733	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  xbar);  xbar  =  Math.min(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.min(1.0,    xbar);    xbar  =  Math.min(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	44	3	add
734	[BUG]  [BUGGY]  ybar  =  Math.min(1.0,  xbar);  xbar  =  Math.min(1.0,  xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  xbar);  xbar  =  Math.min(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.min(1.0,    xbar);    xbar  =  Math.min(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	44	3	add
735	[BUG]  [BUGGY]  ybar  =  Math.min(1.0,  xbar);  ybar  =  Math.min(1.0,  xBar);  [CE]  cannot  find  symbol  xBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  xbar);  ybar  =  Math.min(1.0,  xBar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.min(1.0,    xbar);    ybar  =  Math.min(1.0,  xBar);	  	non-compiled	[CE]  cannot  find  symbol  xBar	44	None	add
736	[BUG]  [BUGGY]  bucket  <  =  0  ||  n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  bucket  <  =  0  ||  n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  <  =  0  ||  n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
737	[BUG]  [BUGGY]  Bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  1;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  Bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  1;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	Bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  1;  }	  bucket    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    1;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
738	[BUG]  [BUGGY]  bucket  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  1;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  bucket  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  1;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  1;  }	  bucket    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    1;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
739	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  Math.max(0,  xbar);	          ybar    =    Math.max(0,    xbar);    xbar    =    Math.max(0,    xbar);    	compilable	  [FE]  AssertionFailedError  	140	4	replace
740	[BUG]  [BUGGY]  xbar  =  Math.max(0,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  Math.max(0,  xbar);	          ybar    =    Math.max(0,    xbar);    xbar    =    Math.max(0,    xbar);    	compilable	  [FE]  AssertionFailedError  	140	4	replace
741	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  y);  xbar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(0,  y);  xbar  =  Math.max(0,  xbar);	          ybar    =    Math.max(0,    xbar);    xbar    =    Math.max(0,    xbar);    	compilable	  [FE]  AssertionFailedError  	140	1	replace
742	[BUG]  [BUGGY]  ybar  =  Math.max(0,  y);  xbar  =  Math.max(0,  xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  y);  xbar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0,  y);  xbar  =  Math.max(0,  xbar);	          ybar    =    Math.max(0,    xbar);    xbar    =    Math.max(0,    xbar);    	compilable	  [FE]  AssertionFailedError  	140	1	replace
743	[BUG]  [BUGGY]  n  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  y);  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  y);	          ybar    =    Math.max(0,    xbar);    xbar    =    Math.max(0,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	140	None	replace
744	[BUG]  [BUGGY]  ybar  =  Math.max(0,  y);  this.serialVersionUID  =  1.0;  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  y);  this.serialVersionUID  =  1.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0,  y);  this.serialVersionUID  =  1.0;	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    this.serialVersionUID    =    1.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	233	None	replace
745	[BUG]  [BUGGY]  ybar  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  this.serialVersionUID  =  1.0;  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  this.serialVersionUID  =  1.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0,  x);  ybar  =  Math.max(0,  y);  this.serialVersionUID  =  1.0;	  ybar    =    Math.max(0,    y);    ybar    =    Math.max(0,    y);    this.serialVersionUID    =    1.0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	233	None	replace
746	[BUG]  [BUGGY]  parent  =  n.getParent();  [CE]  cannot  find  symbol  parent  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  parent  =  n.getParent();  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	parent  =  n.getParent();	  parent    =    parent.getParent();    	non-compiled	[CE]  cannot  find  symbol  parent	238	None	replace
747	[BUG]  [BUGGY]  parent  =  this.parent.getParent();  [CE]  cannot  find  symbol  parent  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  parent  =  this.parent.getParent();  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	parent  =  this.parent.getParent();	  parent    =    parent.getParent();    	non-compiled	[CE]  cannot  find  symbol  parent	238	None	replace
748	[BUG]  [BUGGY]  parent  =  xbar.getParent();  [CE]  cannot  find  symbol  parent  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  parent  =  xbar.getParent();  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	parent  =  xbar.getParent();	  parent    =    parent.getParent();    	non-compiled	[CE]  cannot  find  symbol  parent	238	None	replace
749	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  y  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(1.0,  y  +  1);	  ybar    =    Math.min(1.0,    y);    	compilable	  [FE]  AssertionFailedError  	195	4	replace
750	[BUG]  [BUGGY]  ybar  =  Math.min(1.0,  y  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  y  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(1.0,  y  +  1);	  ybar    =    Math.min(1.0,    y);    	compilable	  [FE]  AssertionFailedError  	195	4	replace
751	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(0.0,  y);	  ybar    =    Math.min(1.0,    y);    	compilable	  [FE]  AssertionFailedError  	195	4	replace
752	[BUG]  [BUGGY]  ybar  =  Math.min(0.0,  y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(0.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(0.0,  y);	  ybar    =    Math.min(1.0,    y);    	compilable	  [FE]  AssertionFailedError  	195	4	replace
753	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(1.0,  x);	  ybar    =    Math.min(1.0,    y);    	compilable	  [FE]  AssertionFailedError  	195	4	replace
754	[BUG]  [BUGGY]  ybar  =  Math.min(1.0,  x);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(1.0,  x);	  ybar    =    Math.min(1.0,    y);    	compilable	  [FE]  AssertionFailedError  	195	4	replace
755	[BUG]  [BUGGY]  if(n  ==  0)  {  pullForced(x,  y)  {  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  pullForced(x,  y)  {  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  pullForced(x,  y)  {  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  }	  pullForced(x,    y)    {    if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  ';'  expected	218	None	replace
756	[BUG]  [BUGGY]  luate(x,  y)  {  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  luate(x,  y)  {  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	luate(x,  y)  {  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	  pullForced(x,    y)    {    if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  ';'  expected	218	None	replace
757	[BUG]  [BUGGY]  ybar  =  Math.floor(xbar,  n);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(xbar,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(xbar,  n);	  ybar    =    Math.floor(xbar,    yBar);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	214	None	replace
758	[BUG]  [BUGGY]  xbar  =  Math.floor(xbar,  y);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.floor(xbar,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  Math.floor(xbar,  y);	  ybar    =    Math.floor(xbar,    yBar);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	214	None	replace
759	[BUG]  [BUGGY]  yBar  =  Math.floor(xbar,  y);  [CE]  cannot  find  symbol  yBar  [FE]                          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  yBar  =  Math.floor(xbar,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	yBar  =  Math.floor(xbar,  y);	  ybar    =    Math.floor(xbar,    yBar);    	non-compiled	[CE]  cannot  find  symbol  yBar	214	None	replace
760	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  sumX  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  sumX  -  xbar;	  bucket    =    sumX    -    xbar;    	compilable	  [FE]  AssertionFailedError  	237	5	replace
761	[BUG]  [BUGGY]  xbar  =  sumX  -  xbar;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  sumX  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  sumX  -  xbar;	  bucket    =    sumX    -    xbar;    	compilable	  [FE]  AssertionFailedError  	237	5	replace
762	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  bucket  =  sumX  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	double  bucket  =  sumX  -  xbar;	  bucket    =    sumX    -    xbar;    	compilable	  [FE]  AssertionFailedError  	237	4	replace
763	[BUG]  [BUGGY]  double  bucket  =  sumX  -  xbar;  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  bucket  =  sumX  -  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  bucket  =  sumX  -  xbar;	  bucket    =    sumX    -    xbar;    	compilable	  [FE]  AssertionFailedError  	237	4	replace
764	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.max(1.0,        xbar);        ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	35	1	add
765	[BUG]  [BUGGY]          ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(1.0,        xbar);        ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	35	1	add
766	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.max(1.0,        xbar);        ybar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	35	2	add
767	[BUG]  [BUGGY]          ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  xbar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(1.0,        xbar);        ybar    =    Math.max(1.0,    xbar);    xbar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	35	2	add
768	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.min(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.max(1.0,        xbar);        ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.min(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	35	1	add
769	[BUG]  [BUGGY]          ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.min(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.min(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(1.0,        xbar);        ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.min(1.0,  xbar);  ybar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	35	1	add
770	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(0.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.max(1.0,        xbar);        ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(0.0,  xbar);  ybar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	35	1	add
771	[BUG]  [BUGGY]          ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(0.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(0.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(1.0,        xbar);        ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(0.0,  xbar);  ybar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	35	1	add
772	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(2.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        Math.max(1.0,        xbar);        ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(2.0,  xbar);  ybar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	35	1	add
773	[BUG]  [BUGGY]          ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(2.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(1.0,  xbar);  ybar  =  Math.max(2.0,  xbar);  ybar  =  Math.max(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(1.0,        xbar);        ybar    =    Math.max(1.0,    xbar);    ybar  =  Math.max(2.0,  xbar);  ybar  =  Math.max(1.0,  xbar);	  	compilable	  [FE]  AssertionFailedError  	35	1	add
774	[BUG]  [BUGGY]          ybar    =    Math.max(0,    xbar);    double  ybar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);  double  ybar  =  Math.max(0,  xbar);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(0,    xbar);    double  ybar  =  Math.max(0,  xbar);  ybar  =  Math.max(0,  xbar);  double  ybar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(0,        xbar);        double    ybar    =    Math.max(0,    xbar);    ybar  =  Math.max(0,  xbar);  double  ybar  =  Math.max(0,  xbar);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	201	None	add
775	[BUG]  [BUGGY]          ybar    =    Math.max(0,    xbar);    double  ybar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);  double  ybar  =  Math.max(0,  xbar);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(0,    xbar);    double  ybar  =  Math.max(0,  xbar);  xbar  =  Math.max(0,  xbar);  double  ybar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(0,        xbar);        double    ybar    =    Math.max(0,    xbar);    xbar  =  Math.max(0,  xbar);  double  ybar  =  Math.max(0,  xbar);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	201	None	add
776	[BUG]  [BUGGY]          ybar    =    Math.max(0,    xbar);    double  ybar  =  Math.max(0,  xbar);  ybar  =  Math.min(0,  xbar);  double  ybar  =  Math.max(0,  xbar);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(0,    xbar);    double  ybar  =  Math.max(0,  xbar);  ybar  =  Math.min(0,  xbar);  double  ybar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(0,        xbar);        double    ybar    =    Math.max(0,    xbar);    ybar  =  Math.min(0,  xbar);  double  ybar  =  Math.max(0,  xbar);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	201	None	add
777	[BUG]  [BUGGY]          ybar    =    Math.max(0,    xbar);    double  ybar  =  Math.max(0,  xbar);  double  ybar  =  Math.max(0,  xbar);  double  ybar  =  Math.max(0,  xbar);  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    Math.max(0,    xbar);    double  ybar  =  Math.max(0,  xbar);  double  ybar  =  Math.max(0,  xbar);  double  ybar  =  Math.max(0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        Math.max(0,        xbar);        double    ybar    =    Math.max(0,    xbar);    double  ybar  =  Math.max(0,  xbar);  double  ybar  =  Math.max(0,  xbar);	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	201	None	add
778	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                if(n        <        0)        {        sumX        =        x        -        xbar;        }        else        {        sumX        =        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	130	1	add
779	[BUG]  [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                if(n        <        0)        {        sumX        =        x        -        xbar;        }        else        {        sumX        =        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	130	1	add
780	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                if(n        <        0)        {        sumX        =        x        -        xbar;        }        else        {        sumX        =        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	130	1	add
781	[BUG]  [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                if(n        <        0)        {        sumX        =        x        -        xbar;        }        else        {        sumX        =        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xbar;  }	  	compilable	  [FE]  AssertionFailedError  	130	1	add
782	[BUG]  [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xBar;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  cannot  find  symbol  xBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  if(n  <  0)  {  sumX  =  x  -  xBar;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                if(n        <        0)        {        sumX        =        x        -        xbar;        }        else        {        sumX        =        x        -        xbar;        }        if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n  <  0)  {  sumX  =  x  -  xBar;  }  else  {  sumX  =  x  -  xbar;  }	  	non-compiled	[CE]  cannot  find  symbol  xBar	130	None	add
783	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  0.0;  xbar  =  0.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar    =    0.0;    xbar  =  0.0;	  	compilable	  [FE]  AssertionFailedError  	208	5	add
784	[BUG]  [BUGGY]  xbar  =  0.0;  xbar  =  0.0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  0.0;  xbar  =  0.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    0.0;    xbar  =  0.0;	  	compilable	  [FE]  AssertionFailedError  	208	5	add
785	[BUG]  [BUGGY]  xbar  =  0.0;  xbar  =  0.0;  this.serialVersionUID  =  new  SimpleRegressionImpl(x,  y);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  0.0;  xbar  =  0.0;  this.serialVersionUID  =  new  SimpleRegressionImpl(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    0.0;    xbar  =  0.0;  this.serialVersionUID  =  new  SimpleRegressionImpl(x,  y);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	208	None	add
786	[BUG]  [BUGGY]  xbar  =  0.0;  xbar  =  0.0;  this.serialVersionUID  =  new  SimpleRegression(this,  x,  y);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  0.0;  xbar  =  0.0;  this.serialVersionUID  =  new  SimpleRegression(this,  x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    0.0;    xbar  =  0.0;  this.serialVersionUID  =  new  SimpleRegression(this,  x,  y);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	208	None	add
787	[BUG]  [BUGGY]  xbar  =  0.0;  xbar  =  0.0;  this.serialVersionUID  =  new  SimpleRegression(n  +  1.0);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  0.0;  xbar  =  0.0;  this.serialVersionUID  =  new  SimpleRegression(n  +  1.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    0.0;    xbar  =  0.0;  this.serialVersionUID  =  new  SimpleRegression(n  +  1.0);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	208	None	add
788	[BUG]  [BUGGY]  xbar  =  0.0;  xbar  =  0.0;  this.serialVersionUID  =  new  SimpleRegressionImpl();  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  0.0;  xbar  =  0.0;  this.serialVersionUID  =  new  SimpleRegressionImpl();  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar    =    0.0;    xbar  =  0.0;  this.serialVersionUID  =  new  SimpleRegressionImpl();	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	208	None	add
789	[BUG]  [BUGGY]  (ybar  =  y  +  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  (ybar  =  y  +  1);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	(ybar  =  y  +  1);	  ybar    =    y    +    1;    (ybar    =    y    +    1);    	non-compiled	[CE]  not  a  statement	189	None	replace
790	[BUG]  [BUGGY]  xbar  =  y  +  1;  (ybar  =  y  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  y  +  1;  (ybar  =  y  +  1);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  y  +  1;  (ybar  =  y  +  1);	  ybar    =    y    +    1;    (ybar    =    y    +    1);    	non-compiled	[CE]  not  a  statement	189	None	replace
791	[BUG]  [BUGGY]  luate(xbar,  y,  n);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  luate(xbar,  y,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	luate(xbar,  y,  n);	  luate(n,    x,    y);    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
792	[BUG]  [BUGGY]  luate(xbar,  n,  y);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  luate(xbar,  n,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	luate(xbar,  n,  y);	  luate(n,    x,    y);    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
793	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.pow(10,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.pow(10,  y);	  ybar    =    Math.floor(y);    	compilable	  [FE]  AssertionFailedError  	116	5	replace
794	[BUG]  [BUGGY]  ybar  =  Math.pow(10,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.pow(10,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.pow(10,  y);	  ybar    =    Math.floor(y);    	compilable	  [FE]  AssertionFailedError  	116	5	replace
795	[BUG]  [BUGGY]  bucket  =  0.0;  [CE]  cannot  find  symbol  bucket  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  bucket  =  0.0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  =  0.0;	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    	non-compiled	[CE]  cannot  find  symbol  bucket	76	None	replace
796	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  ybar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1.0,  ybar  +  1);	  ybar    =    Math.max(1.0,    xbar    +    1);    	compilable	  [FE]  AssertionFailedError  	43	4	replace
797	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  ybar  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  ybar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1.0,  ybar  +  1);	  ybar    =    Math.max(1.0,    xbar    +    1);    	compilable	  [FE]  AssertionFailedError  	43	4	replace
798	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  y  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1.0,  y  +  1);	  ybar    =    Math.max(1.0,    xbar    +    1);    	compilable	  [FE]  AssertionFailedError  	43	5	replace
799	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  y  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  y  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1.0,  y  +  1);	  ybar    =    Math.max(1.0,    xbar    +    1);    	compilable	  [FE]  AssertionFailedError  	43	5	replace
800	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  xbar  *  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1.0,  xbar  *  1);	  ybar    =    Math.max(1.0,    xbar    +    1);    	compilable	  [FE]  AssertionFailedError  	43	4	replace
801	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  xbar  *  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  xbar  *  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1.0,  xbar  *  1);	  ybar    =    Math.max(1.0,    xbar    +    1);    	compilable	  [FE]  AssertionFailedError  	43	4	replace
802	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  xbar  +  1.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1.0,  xbar  +  1.0);	  ybar    =    Math.max(1.0,    xbar    +    1);    	compilable	  [FE]  AssertionFailedError  	43	4	replace
803	[BUG]  [BUGGY]  ybar  =  Math.max(1.0,  xbar  +  1.0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1.0,  xbar  +  1.0);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1.0,  xbar  +  1.0);	  ybar    =    Math.max(1.0,    xbar    +    1);    	compilable	  [FE]  AssertionFailedError  	43	4	replace
804	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.sqrt(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.sqrt(y);	  ybar    =    Math.sqrt(xbar);    	compilable	  [FE]  AssertionFailedError  	53	4	replace
805	[BUG]  [BUGGY]  ybar  =  Math.sqrt(y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.sqrt(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.sqrt(y);	  ybar    =    Math.sqrt(xbar);    	compilable	  [FE]  AssertionFailedError  	53	4	replace
806	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.sqrt(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.sqrt(x);	  ybar    =    Math.sqrt(xbar);    	compilable	  [FE]  AssertionFailedError  	53	4	replace
807	[BUG]  [BUGGY]  ybar  =  Math.sqrt(x);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.sqrt(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.sqrt(x);	  ybar    =    Math.sqrt(xbar);    	compilable	  [FE]  AssertionFailedError  	53	4	replace
808	[BUG]  [BUGGY]  ybar  =  Math.sqrt(x,  y);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.sqrt(x,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.sqrt(x,  y);	  ybar    =    Math.sqrt(xbar);    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	53	None	replace
809	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.sqrt(new  Double(x));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.sqrt(new  Double(x));	  ybar    =    Math.sqrt(xbar);    	compilable	  [FE]  AssertionFailedError  	53	4	replace
810	[BUG]  [BUGGY]  ybar  =  Math.sqrt(new  Double(x));  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.sqrt(new  Double(x));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.sqrt(new  Double(x));	  ybar    =    Math.sqrt(xbar);    	compilable	  [FE]  AssertionFailedError  	53	4	replace
811	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  xbar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	n  =  0;  xbar  =  y  +  1;	  ybar    =    y    +    1;    xbar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	63	5	replace
812	[BUG]  [BUGGY]  n  =  0;  xbar  =  y  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  xbar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  0;  xbar  =  y  +  1;	  ybar    =    y    +    1;    xbar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	63	5	replace
813	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  xbar  =  n  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	n  =  0;  xbar  =  n  +  1;	  ybar    =    y    +    1;    xbar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	63	4	replace
814	[BUG]  [BUGGY]  n  =  0;  xbar  =  n  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  xbar  =  n  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  0;  xbar  =  n  +  1;	  ybar    =    y    +    1;    xbar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	63	4	replace
815	[BUG]  [BUGGY]  (ybar  =  0);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  (ybar  =  0);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	(ybar  =  0);	  ybar    =    0;    (ybar    =    0);    	non-compiled	[CE]  not  a  statement	90	None	replace
816	[BUG]  [BUGGY]  n  =  0;  (ybar  =  0);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  (ybar  =  0);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  0;  (ybar  =  0);	  ybar    =    0;    (ybar    =    0);    	non-compiled	[CE]  not  a  statement	90	None	replace
817	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x    <    0)    {    ybar    =    x;    }    else    {    addData(x,    y);    }    if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }	  	compilable	  [FE]  StackOverflowError  	24	9	add
818	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x    <    0)    {    ybar    =    x;    }    else    {    addData(x,    y);    }    if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }	  	compilable	  [FE]  StackOverflowError  	24	9	add
819	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  if(x  <  0)  {  yBar  =  x;  }  else  {  addData(x,  y);  }  [CE]  cannot  find  symbol  yBar  [FE]      StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  if(x  <  0)  {  yBar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x    <    0)    {    ybar    =    x;    }    else    {    addData(x,    y);    }    if(x  <  0)  {  yBar  =  x;  }  else  {  addData(x,  y);  }	  	non-compiled	[CE]  cannot  find  symbol  yBar	24	None	add
820	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  if(x  >=  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x    <    0)    {    ybar    =    x;    }    else    {    addData(x,    y);    }    if(x  >=  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }	  	compilable	  [FE]  StackOverflowError  	24	9	add
821	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  if(x  >=  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  if(x  >=  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x    <    0)    {    ybar    =    x;    }    else    {    addData(x,    y);    }    if(x  >=  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }	  	compilable	  [FE]  StackOverflowError  	24	9	add
822	[BUG]  [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  If(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  [CE]  ';'  expected  [FE]          StackOverflowError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  If(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x    <    0)    {    ybar    =    x;    }    else    {    addData(x,    y);    }    If(x  <  0)  {  ybar  =  x;  }  else  {  addData(x,  y);  }	  	non-compiled	[CE]  ';'  expected	24	None	add
823	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x;  sumX  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	sumX    =    x;    sumX  =  x;	  	compilable	  [FE]  AssertionFailedError  	219	2	add
824	[BUG]  [BUGGY]  sumX  =  x;  sumX  =  x;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x;  sumX  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX    =    x;    sumX  =  x;	  	compilable	  [FE]  AssertionFailedError  	219	2	add
825	[BUG]  [BUGGY]  sumX  =  x;  SumX  =  x;  [CE]  cannot  find  symbol  SumX  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x;  SumX  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX    =    x;    SumX  =  x;	  	non-compiled	[CE]  cannot  find  symbol  SumX	219	None	add
826	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x;  x  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	sumX    =    x;    x  =  x;	  	compilable	  [FE]  AssertionFailedError  	219	2	add
827	[BUG]  [BUGGY]  sumX  =  x;  x  =  x;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x;  x  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX    =    x;    x  =  x;	  	compilable	  [FE]  AssertionFailedError  	219	2	add
828	[BUG]  [BUGGY]  sumX  =  x;  double  x  =  x;  [CE]  variable  x  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x;  double  x  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX    =    x;    double  x  =  x;	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  addData(double,double)	219	None	add
829	[BUG]  [BUGGY]  sumX  =  x;  amountX  =  x;  [CE]  cannot  find  symbol  amountX  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x;  amountX  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX    =    x;    amountX  =  x;	  	non-compiled	[CE]  cannot  find  symbol  amountX	219	None	add
830	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(y);  xbar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.abs(y);  xbar  =  Math.abs(xbar);	          ybar    =    Math.abs(xbar);    xbar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	11	1	replace
831	[BUG]  [BUGGY]  ybar  =  Math.abs(y);  xbar  =  Math.abs(xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.abs(y);  xbar  =  Math.abs(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.abs(y);  xbar  =  Math.abs(xbar);	          ybar    =    Math.abs(xbar);    xbar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	11	1	replace
832	[BUG]  [BUGGY]  n  =  Math.abs(x);  n  =  Math.abs(y);  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.abs(x);  n  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.abs(x);  n  =  Math.abs(y);	          ybar    =    Math.abs(xbar);    xbar    =    Math.abs(xbar);    	non-compiled	[CE]  possible  loss  of  precision	11	None	replace
833	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    0;    ybar  =  0;  ybar  =  0;  ybar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        0;        ybar    =    0;    ybar  =  0;  ybar  =  0;	  	compilable	  [FE]  AssertionFailedError  	84	1	add
834	[BUG]  [BUGGY]  ybar    =    0;    ybar  =  0;  ybar  =  0;  ybar  =  0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    0;    ybar  =  0;  ybar  =  0;  ybar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        0;        ybar    =    0;    ybar  =  0;  ybar  =  0;	  	compilable	  [FE]  AssertionFailedError  	84	1	add
835	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    0;    ybar  =  0;  xbar  =  0;  ybar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        0;        ybar    =    0;    xbar  =  0;  ybar  =  0;	  	compilable	  [FE]  AssertionFailedError  	84	5	add
836	[BUG]  [BUGGY]  ybar    =    0;    ybar  =  0;  xbar  =  0;  ybar  =  0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    0;    ybar  =  0;  xbar  =  0;  ybar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        0;        ybar    =    0;    xbar  =  0;  ybar  =  0;	  	compilable	  [FE]  AssertionFailedError  	84	5	add
837	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    0;    ybar  =  0;  double  ybar  =  0;  ybar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        0;        ybar    =    0;    double  ybar  =  0;  ybar  =  0;	  	compilable	  [FE]  AssertionFailedError  	84	4	add
838	[BUG]  [BUGGY]  ybar    =    0;    ybar  =  0;  double  ybar  =  0;  ybar  =  0;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    0;    ybar  =  0;  double  ybar  =  0;  ybar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        0;        ybar    =    0;    double  ybar  =  0;  ybar  =  0;	  	compilable	  [FE]  AssertionFailedError  	84	4	add
839	[BUG]  [BUGGY]  ybar    =    0;    ybar  =  0;  ybar  =  0;  yBar  =  0;  [CE]  cannot  find  symbol  yBar  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    0;    ybar  =  0;  ybar  =  0;  yBar  =  0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        0;        ybar    =    0;    ybar  =  0;  yBar  =  0;	  	non-compiled	[CE]  cannot  find  symbol  yBar	84	None	add
840	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(0.0,  y);	  ybar    =    Math.max(0.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	193	1	replace
841	[BUG]  [BUGGY]  ybar  =  Math.max(0.0,  y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0.0,  y);	  ybar    =    Math.max(0.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	193	1	replace
842	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0.0,  xbar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(0.0,  xbar  +  1);	  ybar    =    Math.max(0.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	193	4	replace
843	[BUG]  [BUGGY]  ybar  =  Math.max(0.0,  xbar  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0.0,  xbar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(0.0,  xbar  +  1);	  ybar    =    Math.max(0.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	193	4	replace
844	[BUG]  [BUGGY]  ybar    =    y    +    1;    double  ybar  =  y  +  1;  ybar  =  y  +  1;  double  ybar  =  y  +  1;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    double  ybar  =  y  +  1;  ybar  =  y  +  1;  double  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        y        +        1;        double    ybar    =    y    +    1;    ybar  =  y  +  1;  double  ybar  =  y  +  1;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	64	None	add
845	[BUG]  [BUGGY]  ybar    =    y    +    1;    double  ybar  =  y  +  1;  double  ybar  =  y  +  1;  double  ybar  =  y  +  1;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    double  ybar  =  y  +  1;  double  ybar  =  y  +  1;  double  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        y        +        1;        double    ybar    =    y    +    1;    double  ybar  =  y  +  1;  double  ybar  =  y  +  1;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	64	None	add
846	[BUG]  [BUGGY]  ybar    =    y    +    1;    double  ybar  =  y  +  1;  xbar  =  y  +  1;  double  ybar  =  y  +  1;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    double  ybar  =  y  +  1;  xbar  =  y  +  1;  double  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        y        +        1;        double    ybar    =    y    +    1;    xbar  =  y  +  1;  double  ybar  =  y  +  1;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	64	None	add
847	[BUG]  [BUGGY]  ybar    =    y    +    1;    double  ybar  =  y  +  1;  ybar  =  y  +  1;  Double  ybar  =  y  +  1;  [CE]  variable  ybar  is  already  defined  in  method  addData(double,double)  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    double  ybar  =  y  +  1;  ybar  =  y  +  1;  Double  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        y        +        1;        double    ybar    =    y    +    1;    ybar  =  y  +  1;  Double  ybar  =  y  +  1;	  	non-compiled	[CE]  variable  ybar  is  already  defined  in  method  addData(double,double)	64	None	add
848	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    double  ybar  =  y  +  1;  ybar  =  y  +  1;  double  yBar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        y        +        1;        double    ybar    =    y    +    1;    ybar  =  y  +  1;  double  yBar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	64	5	add
849	[BUG]  [BUGGY]  ybar    =    y    +    1;    double  ybar  =  y  +  1;  ybar  =  y  +  1;  double  yBar  =  y  +  1;  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    double  ybar  =  y  +  1;  ybar  =  y  +  1;  double  yBar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        y        +        1;        double    ybar    =    y    +    1;    ybar  =  y  +  1;  double  yBar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	64	5	add
850	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1,  x);	  ybar    =    Math.max(1,    y);    	compilable	  [FE]  AssertionFailedError  	200	4	replace
851	[BUG]  [BUGGY]  ybar  =  Math.max(1,  x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1,  x);	  ybar    =    Math.max(1,    y);    	compilable	  [FE]  AssertionFailedError  	200	4	replace
852	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  ybar);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.max(1,  ybar);	  ybar    =    Math.max(1,    y);    	compilable	  [FE]  AssertionFailedError  	200	4	replace
853	[BUG]  [BUGGY]  ybar  =  Math.max(1,  ybar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  ybar);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.max(1,  ybar);	  ybar    =    Math.max(1,    y);    	compilable	  [FE]  AssertionFailedError  	200	4	replace
854	[BUG]  [BUGGY]  Bucket  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  Bucket  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	Bucket  <  0)  {  sumX  =  x  -  x;  }  else  {  sumX  =  x  -  xbar;  }	  bucket    <    0)    {    sumX    =    x    -    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
855	[BUG]  [BUGGY]  bucket  <  0)  {  sumX  =  x  -  1;  }  else  {  sumX  =  x  -  1;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  bucket  <  0)  {  sumX  =  x  -  1;  }  else  {  sumX  =  x  -  1;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  <  0)  {  sumX  =  x  -  1;  }  else  {  sumX  =  x  -  1;  }	  bucket    <    0)    {    sumX    =    x    -    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
856	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  -  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	sumX  =  x  -  1;	  sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	223	4	replace
857	[BUG]  [BUGGY]  sumX  =  x  -  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  -  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX  =  x  -  1;	  sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	223	4	replace
858	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  -  ybar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	sumX  =  x  -  ybar;	  sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	223	4	replace
859	[BUG]  [BUGGY]  sumX  =  x  -  ybar;  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  -  ybar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX  =  x  -  ybar;	  sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	223	4	replace
860	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  -  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	sumX  =  x  -  n;	  sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	223	4	replace
861	[BUG]  [BUGGY]  sumX  =  x  -  n;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  -  n;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX  =  x  -  n;	  sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	223	4	replace
862	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  x  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  x  +  1;	  ybar    =    y    +    1;    double    ybar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	65	5	replace
863	[BUG]  [BUGGY]  xbar  =  x  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  x  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  x  +  1;	  ybar    =    y    +    1;    double    ybar    =    y    +    1;    	compilable	  [FE]  AssertionFailedError  	65	5	replace
864	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  double  ybar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	n  =  0;  double  ybar  =  x;	          ybar    =    x;    double    ybar    =    x;    	compilable	  [FE]  AssertionFailedError  	180	4	replace
865	[BUG]  [BUGGY]  n  =  0;  double  ybar  =  x;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  0;  double  ybar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  0;  double  ybar  =  x;	          ybar    =    x;    double    ybar    =    x;    	compilable	  [FE]  AssertionFailedError  	180	4	replace
866	[BUG]  [BUGGY]  if(n  ==  0)  {  pullForced(x,  n,  y)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  pullForced(x,  n,  y)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  pullForced(x,  n,  y)  {  sumX  =  x  -  xbar;  }  else  {  sumX  =  x  -  xbar;  }  }	  pullForced(x,    n,    y)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  ';'  expected	225	None	replace
867	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.POSITIVE_INFINITY;  ybar  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Double.POSITIVE_INFINITY;    ybar  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionFailedError  	154	1	add
868	[BUG]  [BUGGY]  ybar  =  Double.POSITIVE_INFINITY;  ybar  =  Double.POSITIVE_INFINITY;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.POSITIVE_INFINITY;  ybar  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Double.POSITIVE_INFINITY;    ybar  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionFailedError  	154	1	add
869	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.POSITIVE_INFINITY;  xbar  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Double.POSITIVE_INFINITY;    xbar  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionFailedError  	154	9	add
870	[BUG]  [BUGGY]  ybar  =  Double.POSITIVE_INFINITY;  xbar  =  Double.POSITIVE_INFINITY;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.POSITIVE_INFINITY;  xbar  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Double.POSITIVE_INFINITY;    xbar  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionFailedError  	154	9	add
871	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.POSITIVE_INFINITY;  double  ybar  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Double.POSITIVE_INFINITY;    double  ybar  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionFailedError  	154	9	add
872	[BUG]  [BUGGY]  ybar  =  Double.POSITIVE_INFINITY;  double  ybar  =  Double.POSITIVE_INFINITY;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.POSITIVE_INFINITY;  double  ybar  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Double.POSITIVE_INFINITY;    double  ybar  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionFailedError  	154	9	add
873	[BUG]  [BUGGY]  ybar  =  Double.POSITIVE_INFINITY;  yBar  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  yBar  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.POSITIVE_INFINITY;  yBar  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Double.POSITIVE_INFINITY;    yBar  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  yBar	154	None	add
874	[BUG]  [BUGGY]  n  =  Math.min(1.0,  ybar  -  1);  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.min(1.0,  ybar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(1.0,  ybar  -  1);	  n    =    Math.min(1.0,    xbar    -    1);    	non-compiled	[CE]  possible  loss  of  precision	205	None	replace
875	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  n  =  Math.min(1.0,  xbar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	double  n  =  Math.min(1.0,  xbar  -  1);	  n    =    Math.min(1.0,    xbar    -    1);    	compilable	  [FE]  AssertionFailedError  	205	4	replace
876	[BUG]  [BUGGY]  double  n  =  Math.min(1.0,  xbar  -  1);  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  n  =  Math.min(1.0,  xbar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  n  =  Math.min(1.0,  xbar  -  1);	  n    =    Math.min(1.0,    xbar    -    1);    	compilable	  [FE]  AssertionFailedError  	205	4	replace
877	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  xbar);  ybar  =  Math.max(1.0,  ybar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Math.min(1.0,  xbar);  ybar  =  Math.max(1.0,  ybar);	          ybar    =    Math.max(1.0,    xbar);    ybar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	36	4	replace
878	[BUG]  [BUGGY]  ybar  =  Math.min(1.0,  xbar);  ybar  =  Math.max(1.0,  ybar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.min(1.0,  xbar);  ybar  =  Math.max(1.0,  ybar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.min(1.0,  xbar);  ybar  =  Math.max(1.0,  ybar);	          ybar    =    Math.max(1.0,    xbar);    ybar    =    Math.max(1.0,    xbar);    	compilable	  [FE]  AssertionFailedError  	36	4	replace
879	[BUG]  [BUGGY]  n  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  y);  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.max(1.0,  xbar);  ybar  =  Math.max(1.0,  y);	          ybar    =    Math.max(1.0,    xbar);    ybar    =    Math.max(1.0,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	36	None	replace
880	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    ybar  =  y  +  1;  ybar  =  y  +  1;  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        y        +        1;        ybar    =    y    +    1;    ybar  =  y  +  1;  ybar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	60	1	add
881	[BUG]  [BUGGY]  ybar    =    y    +    1;    ybar  =  y  +  1;  ybar  =  y  +  1;  ybar  =  y  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    ybar  =  y  +  1;  ybar  =  y  +  1;  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        y        +        1;        ybar    =    y    +    1;    ybar  =  y  +  1;  ybar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	60	1	add
882	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    ybar  =  y  +  1;  xbar  =  y  +  1;  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        y        +        1;        ybar    =    y    +    1;    xbar  =  y  +  1;  ybar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	60	5	add
883	[BUG]  [BUGGY]  ybar    =    y    +    1;    ybar  =  y  +  1;  xbar  =  y  +  1;  ybar  =  y  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    ybar  =  y  +  1;  xbar  =  y  +  1;  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        y        +        1;        ybar    =    y    +    1;    xbar  =  y  +  1;  ybar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	60	5	add
884	[BUG]  [BUGGY]  ybar    =    y    +    1;    ybar  =  y  +  1;  ybar  =  y  +  1;  yBar  =  y  +  1;  [CE]  cannot  find  symbol  yBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    ybar  =  y  +  1;  ybar  =  y  +  1;  yBar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        y        +        1;        ybar    =    y    +    1;    ybar  =  y  +  1;  yBar  =  y  +  1;	  	non-compiled	[CE]  cannot  find  symbol  yBar	60	None	add
885	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    ybar  =  y  +  1;  double  ybar  =  y  +  1;  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar        =        y        +        1;        ybar    =    y    +    1;    double  ybar  =  y  +  1;  ybar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	60	5	add
886	[BUG]  [BUGGY]  ybar    =    y    +    1;    ybar  =  y  +  1;  double  ybar  =  y  +  1;  ybar  =  y  +  1;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar    =    y    +    1;    ybar  =  y  +  1;  double  ybar  =  y  +  1;  ybar  =  y  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar        =        y        +        1;        ybar    =    y    +    1;    double  ybar  =  y  +  1;  ybar  =  y  +  1;	  	compilable	  [FE]  AssertionFailedError  	60	5	add
887	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  x);  ybar  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(0,    x);    ybar  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	22	1	add
888	[BUG]  [BUGGY]  ybar  =  Math.max(0,  x);  ybar  =  Math.max(0,  x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  x);  ybar  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    x);    ybar  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	22	1	add
889	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  x);  xbar  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(0,    x);    xbar  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	22	1	add
890	[BUG]  [BUGGY]  ybar  =  Math.max(0,  x);  xbar  =  Math.max(0,  x);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  x);  xbar  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    x);    xbar  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	22	1	add
891	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  x);  double  ybar  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(0,    x);    double  ybar  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	22	4	add
892	[BUG]  [BUGGY]  ybar  =  Math.max(0,  x);  double  ybar  =  Math.max(0,  x);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  x);  double  ybar  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    x);    double  ybar  =  Math.max(0,  x);	  	compilable	  [FE]  AssertionFailedError  	22	4	add
893	[BUG]  [BUGGY]  ybar  =  Math.max(0,  x);  yBar  =  Math.max(0,  x);  [CE]  cannot  find  symbol  yBar  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  x);  yBar  =  Math.max(0,  x);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    x);    yBar  =  Math.max(0,  x);	  	non-compiled	[CE]  cannot  find  symbol  yBar	22	None	add
894	[BUG]  [BUGGY]  n  =  Math.min(xbar,  n  +  1);  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.min(xbar,  n  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(xbar,  n  +  1);	  n    =    Math.min(xbar,    n);    	non-compiled	[CE]  possible  loss  of  precision	149	None	replace
895	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  xbar  -  1);  ybar  =  Math.max(0,  xbar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(0,    xbar    -    1);    ybar  =  Math.max(0,  xbar  -  1);	  	compilable	  [FE]  AssertionFailedError  	135	1	add
896	[BUG]  [BUGGY]  ybar  =  Math.max(0,  xbar  -  1);  ybar  =  Math.max(0,  xbar  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  xbar  -  1);  ybar  =  Math.max(0,  xbar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    xbar    -    1);    ybar  =  Math.max(0,  xbar  -  1);	  	compilable	  [FE]  AssertionFailedError  	135	1	add
897	[BUG]  [BUGGY]  ybar  =  Math.max(0,  xbar  -  1);  ybar  =  Math.max(0,  xbar  -  1));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  xbar  -  1);  ybar  =  Math.max(0,  xbar  -  1));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    xbar    -    1);    ybar  =  Math.max(0,  xbar  -  1));	  	non-compiled	[CE]  ';'  expected	135	None	add
898	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  xbar  -  1);  xbar  =  Math.max(0,  xbar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(0,    xbar    -    1);    xbar  =  Math.max(0,  xbar  -  1);	  	compilable	  [FE]  AssertionFailedError  	135	5	add
899	[BUG]  [BUGGY]  ybar  =  Math.max(0,  xbar  -  1);  xbar  =  Math.max(0,  xbar  -  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  xbar  -  1);  xbar  =  Math.max(0,  xbar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    xbar    -    1);    xbar  =  Math.max(0,  xbar  -  1);	  	compilable	  [FE]  AssertionFailedError  	135	5	add
900	[BUG]  [BUGGY]  ybar  =  Math.max(0,  xbar  -  1);  ybar  =  Math.max(0,  xBar  -  1);  [CE]  cannot  find  symbol  xBar  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(0,  xbar  -  1);  ybar  =  Math.max(0,  xBar  -  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(0,    xbar    -    1);    ybar  =  Math.max(0,  xBar  -  1);	  	non-compiled	[CE]  cannot  find  symbol  xBar	135	None	add
901	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    x;    xbar  =  x;  ybar  =  x;  xbar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        x;        xbar    =    x;    ybar  =  x;  xbar  =  x;	  	compilable	  [FE]  AssertionFailedError  	30	1	add
902	[BUG]  [BUGGY]          ybar    =    x;    xbar  =  x;  ybar  =  x;  xbar  =  x;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    x;    xbar  =  x;  ybar  =  x;  xbar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        x;        xbar    =    x;    ybar  =  x;  xbar  =  x;	  	compilable	  [FE]  AssertionFailedError  	30	1	add
903	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    x;    xbar  =  x;  xbar  =  x;  xbar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                ybar        =        x;        xbar    =    x;    xbar  =  x;  xbar  =  x;	  	compilable	  [FE]  AssertionFailedError  	30	1	add
904	[BUG]  [BUGGY]          ybar    =    x;    xbar  =  x;  xbar  =  x;  xbar  =  x;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    x;    xbar  =  x;  xbar  =  x;  xbar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        x;        xbar    =    x;    xbar  =  x;  xbar  =  x;	  	compilable	  [FE]  AssertionFailedError  	30	1	add
905	[BUG]  [BUGGY]          ybar    =    x;    xbar  =  x;  yBar  =  x;  xbar  =  x;  [CE]  cannot  find  symbol  yBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          ybar    =    x;    xbar  =  x;  yBar  =  x;  xbar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                ybar        =        x;        xbar    =    x;    yBar  =  x;  xbar  =  x;	  	non-compiled	[CE]  cannot  find  symbol  yBar	30	None	add
906	[BUG]  [BUGGY]  luate(x,  n);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  luate(x,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	luate(x,  n);	  luate(n,    x);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
907	[BUG]  [BUGGY]  luate(xbar,  n);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  luate(xbar,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	luate(xbar,  n);	  luate(n,    x);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
908	[BUG]  [BUGGY]  luate(n,  xbar);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  luate(n,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	luate(n,  xbar);	  luate(n,    x);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
909	[BUG]  [BUGGY]  luate(xBar,  n);  [CE]  cannot  find  symbol  xBar  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  luate(xBar,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	luate(xBar,  n);	  luate(n,    x);    	non-compiled	[CE]  cannot  find  symbol  xBar	163	None	replace
910	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.sqrt(xbar);  ybar  =  Math.sqrt(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.sqrt(xbar);    ybar  =  Math.sqrt(xbar);	  	compilable	  [FE]  AssertionFailedError  	52	1	add
911	[BUG]  [BUGGY]  ybar  =  Math.sqrt(xbar);  ybar  =  Math.sqrt(xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.sqrt(xbar);  ybar  =  Math.sqrt(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.sqrt(xbar);    ybar  =  Math.sqrt(xbar);	  	compilable	  [FE]  AssertionFailedError  	52	1	add
912	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.sqrt(xbar);  xbar  =  Math.sqrt(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.sqrt(xbar);    xbar  =  Math.sqrt(xbar);	  	compilable	  [FE]  AssertionFailedError  	52	4	add
913	[BUG]  [BUGGY]  ybar  =  Math.sqrt(xbar);  xbar  =  Math.sqrt(xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.sqrt(xbar);  xbar  =  Math.sqrt(xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.sqrt(xbar);    xbar  =  Math.sqrt(xbar);	  	compilable	  [FE]  AssertionFailedError  	52	4	add
914	[BUG]  [BUGGY]  ybar  =  Math.sqrt(xbar);  ybar  =  Math.sqrt(xBar);  [CE]  cannot  find  symbol  xBar  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.sqrt(xbar);  ybar  =  Math.sqrt(xBar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.sqrt(xbar);    ybar  =  Math.sqrt(xBar);	  	non-compiled	[CE]  cannot  find  symbol  xBar	52	None	add
915	[BUG]  [BUGGY]  ybar  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY;	  ybar    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	155	None	replace
916	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar  =  Double.POSITIVE_INFINITY  +  1;	  ybar    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionFailedError  	155	9	replace
917	[BUG]  [BUGGY]  ybar  =  Double.POSITIVE_INFINITY  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Double.POSITIVE_INFINITY  +  1;	  ybar    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionFailedError  	155	9	replace
918	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n  +  1;  ybar  =  n  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    n    +    1;    ybar  =  n  +  1;	  	compilable	  [FE]  AssertionFailedError  	95	1	add
919	[BUG]  [BUGGY]  ybar  =  n  +  1;  ybar  =  n  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n  +  1;  ybar  =  n  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    n    +    1;    ybar  =  n  +  1;	  	compilable	  [FE]  AssertionFailedError  	95	1	add
920	[BUG]  [BUGGY]  ybar  =  n  +  1;  int  ybar  =  n  +  1;  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n  +  1;  int  ybar  =  n  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    n    +    1;    int  ybar  =  n  +  1;	  	non-compiled	[CE]  possible  loss  of  precision	95	None	add
921	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n  +  1;  double  ybar  =  n  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    n    +    1;    double  ybar  =  n  +  1;	  	compilable	  [FE]  AssertionFailedError  	95	4	add
922	[BUG]  [BUGGY]  ybar  =  n  +  1;  double  ybar  =  n  +  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n  +  1;  double  ybar  =  n  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    n    +    1;    double  ybar  =  n  +  1;	  	compilable	  [FE]  AssertionFailedError  	95	4	add
923	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n  +  1;  xbar  =  n  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    n    +    1;    xbar  =  n  +  1;	  	compilable	  [FE]  AssertionFailedError  	95	4	add
924	[BUG]  [BUGGY]  ybar  =  n  +  1;  xbar  =  n  +  1;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  n  +  1;  xbar  =  n  +  1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    n    +    1;    xbar  =  n  +  1;	  	compilable	  [FE]  AssertionFailedError  	95	4	add
925	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  n  -  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	n  =  n  -  1;	  bucket    =    n    -    1;    	compilable	  [FE]  AssertionFailedError  	16	9	replace
926	[BUG]  [BUGGY]  n  =  n  -  1;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  n  -  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  n  -  1;	  bucket    =    n    -    1;    	compilable	  [FE]  AssertionFailedError  	16	9	replace
927	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  bucket  =  n  -  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	double  bucket  =  n  -  1;	  bucket    =    n    -    1;    	compilable	  [FE]  AssertionFailedError  	16	4	replace
928	[BUG]  [BUGGY]  double  bucket  =  n  -  1;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  bucket  =  n  -  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  bucket  =  n  -  1;	  bucket    =    n    -    1;    	compilable	  [FE]  AssertionFailedError  	16	4	replace
929	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  n  -  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  n  -  1;	  bucket    =    n    -    1;    	compilable	  [FE]  AssertionFailedError  	16	5	replace
930	[BUG]  [BUGGY]  xbar  =  n  -  1;  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  n  -  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  n  -  1;	  bucket    =    n    -    1;    	compilable	  [FE]  AssertionFailedError  	16	5	replace
931	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  -  xbar  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	sumX  =  x  -  xbar  +  1;	  sumX    =    x    -    xbar;    	compilable	  [FE]  AssertionFailedError  	14	4	replace
932	[BUG]  [BUGGY]  sumX  =  x  -  xbar  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  -  xbar  +  1;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX  =  x  -  xbar  +  1;	  sumX    =    x    -    xbar;    	compilable	  [FE]  AssertionFailedError  	14	4	replace
933	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  /  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	sumX  =  x  /  xbar;	  sumX    =    x    -    xbar;    	compilable	  [FE]  AssertionFailedError  	14	4	replace
934	[BUG]  [BUGGY]  sumX  =  x  /  xbar;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  /  xbar;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX  =  x  /  xbar;	  sumX    =    x    -    xbar;    	compilable	  [FE]  AssertionFailedError  	14	4	replace
935	[BUG]  [BUGGY]  n  =  Math.min(0.0,  y);  [CE]  possible  loss  of  precision  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.min(0.0,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(0.0,  y);	  n    =    Math.min(0.0,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	151	None	replace
936	[BUG]  [BUGGY]  n  =  Math.min(0.0,  xbar  +  1);  [CE]  possible  loss  of  precision  [FE]                      AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.min(0.0,  xbar  +  1);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(0.0,  xbar  +  1);	  n    =    Math.min(0.0,    xbar);    	non-compiled	[CE]  possible  loss  of  precision	151	None	replace
937	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  xbar  =  x;  xbar  =  y;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x  <  0)  {  xbar  =  x;  xbar  =  y;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          xbar    =    x;    xbar    =    y;    	compilable	  [FE]  IllegalArgumentException  	216	9	replace
938	[BUG]  [BUGGY]  if(x  <  0)  {  xbar  =  x;  xbar  =  y;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  xbar  =  x;  xbar  =  y;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  xbar  =  x;  xbar  =  y;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          xbar    =    x;    xbar    =    y;    	compilable	  [FE]  IllegalArgumentException  	216	9	replace
939	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  xbar  =  x;  xbar  =  y;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(x  <  0)  {  xbar  =  x;  xbar  =  y;  }  else  {  addData(x,  y);  }	          xbar    =    x;    xbar    =    y;    	compilable	  [FE]  StackOverflowError  	216	9	replace
940	[BUG]  [BUGGY]  if(x  <  0)  {  xbar  =  x;  xbar  =  y;  }  else  {  addData(x,  y);  }  [FE]  StackOverflowError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(x  <  0)  {  xbar  =  x;  xbar  =  y;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(x  <  0)  {  xbar  =  x;  xbar  =  y;  }  else  {  addData(x,  y);  }	          xbar    =    x;    xbar    =    y;    	compilable	  [FE]  StackOverflowError  	216	9	replace
941	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  -1;  ybar  =  -1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    -1;    ybar  =  -1;	  	compilable	  [FE]  AssertionFailedError  	175	1	add
942	[BUG]  [BUGGY]  ybar  =  -1;  ybar  =  -1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  -1;  ybar  =  -1;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    -1;    ybar  =  -1;	  	compilable	  [FE]  AssertionFailedError  	175	1	add
943	[BUG]  [BUGGY]  ybar  =  -1;  ybar  =  -1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *  (double)n  /  (double)(n  +  1.0);  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  -1;  ybar  =  -1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *  (double)n  /  (double)(n  +  1.0);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    -1;    ybar  =  -1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *  (double)n  /  (double)(n  +  1.0);	  	non-compiled	[CE]  'else'  without  'if'	175	None	add
944	[BUG]  [BUGGY]  ybar  =  -1;  ybar  =  -1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *  n  /  (double)(n  +  1.0);  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  -1;  ybar  =  -1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *  n  /  (double)(n  +  1.0);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    -1;    ybar  =  -1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *  n  /  (double)(n  +  1.0);	  	non-compiled	[CE]  'else'  without  'if'	175	None	add
945	[BUG]  [BUGGY]  ybar  =  -1;  ybar  =  -1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *  (double)(n  +  1.0);  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  -1;  ybar  =  -1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *  (double)(n  +  1.0);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    -1;    ybar  =  -1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *  (double)(n  +  1.0);	  	non-compiled	[CE]  'else'  without  'if'	175	None	add
946	[BUG]  [BUGGY]  ybar  =  -1;  ybar  =  -1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *(double)n  /  (double)n  +  1.0);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  -1;  ybar  =  -1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *(double)n  /  (double)n  +  1.0);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    -1;    ybar  =  -1;  }  else  {  double  dx  =  x  -  xbar;  sumXY  +=  dx  *  dy  *(double)n  /  (double)n  +  1.0);	  	non-compiled	[CE]  ';'  expected	175	None	add
947	[BUG]  [BUGGY]          xbar    =    x;    double  xbar  =  x;  xbar  =  x;  double  xbar  =  x;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    double  xbar  =  x;  xbar  =  x;  double  xbar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                xbar        =        x;        double    xbar    =    x;    xbar  =  x;  double  xbar  =  x;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	108	None	add
948	[BUG]  [BUGGY]          xbar    =    x;    double  xbar  =  x;  double  xbar  =  x;  double  xbar  =  x;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    double  xbar  =  x;  double  xbar  =  x;  double  xbar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                xbar        =        x;        double    xbar    =    x;    double  xbar  =  x;  double  xbar  =  x;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	108	None	add
949	[BUG]  [BUGGY]          xbar    =    x;    double  xbar  =  x;  xbar  =  x;  Double  xbar  =  x;  [CE]  variable  xbar  is  already  defined  in  method  addData(double,double)  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    double  xbar  =  x;  xbar  =  x;  Double  xbar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                xbar        =        x;        double    xbar    =    x;    xbar  =  x;  Double  xbar  =  x;	  	non-compiled	[CE]  variable  xbar  is  already  defined  in  method  addData(double,double)	108	None	add
950	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    double  xbar  =  x;  xbar  =  x;  double  xBar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                xbar        =        x;        double    xbar    =    x;    xbar  =  x;  double  xBar  =  x;	  	compilable	  [FE]  AssertionFailedError  	108	1	add
951	[BUG]  [BUGGY]          xbar    =    x;    double  xbar  =  x;  xbar  =  x;  double  xBar  =  x;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    double  xbar  =  x;  xbar  =  x;  double  xBar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                xbar        =        x;        double    xbar    =    x;    xbar  =  x;  double  xBar  =  x;	  	compilable	  [FE]  AssertionFailedError  	108	1	add
952	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    double  xbar  =  x;  xbar  =  x;  double  xxbar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                xbar        =        x;        double    xbar    =    x;    xbar  =  x;  double  xxbar  =  x;	  	compilable	  [FE]  AssertionFailedError  	108	1	add
953	[BUG]  [BUGGY]          xbar    =    x;    double  xbar  =  x;  xbar  =  x;  double  xxbar  =  x;  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    double  xbar  =  x;  xbar  =  x;  double  xxbar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                xbar        =        x;        double    xbar    =    x;    xbar  =  x;  double  xxbar  =  x;	  	compilable	  [FE]  AssertionFailedError  	108	1	add
954	[BUG]  [BUGGY]  luate(xbar,  y);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  luate(xbar,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	luate(xbar,  y);	  luate(n,    y);    	non-compiled	[CE]  cannot  find  symbol	211	None	replace
955	[BUG]  [BUGGY]  luate(xBar,  y);  [CE]  cannot  find  symbol  xBar  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  luate(xBar,  y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	luate(xBar,  y);	  luate(n,    y);    	non-compiled	[CE]  cannot  find  symbol  xBar	211	None	replace
956	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  xbar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	double  xbar  =  x;	          xbar    =    x;    double    xbar    =    x;    	compilable	  [FE]  AssertionFailedError  	109	4	replace
957	[BUG]  [BUGGY]  double  xbar  =  x;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  xbar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  xbar  =  x;	          xbar    =    x;    double    xbar    =    x;    	compilable	  [FE]  AssertionFailedError  	109	4	replace
958	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y  +  1.0;  ybar  =  y  +  1.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    y    +    1.0;    ybar  =  y  +  1.0;	  	compilable	  [FE]  AssertionFailedError  	159	1	add
959	[BUG]  [BUGGY]  ybar  =  y  +  1.0;  ybar  =  y  +  1.0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y  +  1.0;  ybar  =  y  +  1.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    y    +    1.0;    ybar  =  y  +  1.0;	  	compilable	  [FE]  AssertionFailedError  	159	1	add
960	[BUG]  [BUGGY]  ybar  =  y  +  1.0;  int  ybar  =  y  +  1.0;  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y  +  1.0;  int  ybar  =  y  +  1.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    y    +    1.0;    int  ybar  =  y  +  1.0;	  	non-compiled	[CE]  possible  loss  of  precision	159	None	add
961	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y  +  1.0;  xbar  =  y  +  1.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    y    +    1.0;    xbar  =  y  +  1.0;	  	compilable	  [FE]  AssertionFailedError  	159	5	add
962	[BUG]  [BUGGY]  ybar  =  y  +  1.0;  xbar  =  y  +  1.0;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y  +  1.0;  xbar  =  y  +  1.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    y    +    1.0;    xbar  =  y  +  1.0;	  	compilable	  [FE]  AssertionFailedError  	159	5	add
963	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y  +  1.0;  double  ybar  =  y  +  1.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    y    +    1.0;    double  ybar  =  y  +  1.0;	  	compilable	  [FE]  AssertionFailedError  	159	5	add
964	[BUG]  [BUGGY]  ybar  =  y  +  1.0;  double  ybar  =  y  +  1.0;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  y  +  1.0;  double  ybar  =  y  +  1.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    y    +    1.0;    double  ybar  =  y  +  1.0;	  	compilable	  [FE]  AssertionFailedError  	159	5	add
965	[BUG]  [BUGGY]  if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    If(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
966	[BUG]  [BUGGY]  if(n  ==  0)  {  if(n  >=  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  if(n  >=  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  if(n  >=  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }	          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    If(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
967	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  }	          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    If(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	148	4	replace
968	[BUG]  [BUGGY]  if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  if(n  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xbar;  }  }	          if(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    If(n    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	148	4	replace
969	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    xbar  =  y;  xbar  =  x;  xbar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                xbar        =        x;        xbar    =    y;    xbar  =  x;  xbar  =  y;	  	compilable	  [FE]  AssertionFailedError  	215	5	add
970	[BUG]  [BUGGY]          xbar    =    x;    xbar  =  y;  xbar  =  x;  xbar  =  y;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    xbar  =  y;  xbar  =  x;  xbar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                xbar        =        x;        xbar    =    y;    xbar  =  x;  xbar  =  y;	  	compilable	  [FE]  AssertionFailedError  	215	5	add
971	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    xbar  =  y;  double  xbar  =  x;  xbar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	                xbar        =        x;        xbar    =    y;    double  xbar  =  x;  xbar  =  y;	  	compilable	  [FE]  AssertionFailedError  	215	5	add
972	[BUG]  [BUGGY]          xbar    =    x;    xbar  =  y;  double  xbar  =  x;  xbar  =  y;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    xbar  =  y;  double  xbar  =  x;  xbar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                xbar        =        x;        xbar    =    y;    double  xbar  =  x;  xbar  =  y;	  	compilable	  [FE]  AssertionFailedError  	215	5	add
973	[BUG]  [BUGGY]          xbar    =    x;    xbar  =  y;  xbar  =  x);  xbar  =  y;  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    xbar  =  y;  xbar  =  x);  xbar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                xbar        =        x;        xbar    =    y;    xbar  =  x);  xbar  =  y;	  	non-compiled	[CE]  ';'  expected	215	None	add
974	[BUG]  [BUGGY]          xbar    =    x;    xbar  =  y;  xbar  =  x;  xBar  =  y;  [CE]  cannot  find  symbol  xBar  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]          xbar    =    x;    xbar  =  y;  xbar  =  x;  xBar  =  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	                xbar        =        x;        xbar    =    y;    xbar  =  x;  xBar  =  y;	  	non-compiled	[CE]  cannot  find  symbol  xBar	215	None	add
975	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(x);  ybar  =  Math.floor(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.floor(x);    ybar  =  Math.floor(x);	  	compilable	  [FE]  AssertionFailedError  	117	1	add
976	[BUG]  [BUGGY]  ybar  =  Math.floor(x);  ybar  =  Math.floor(x);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(x);  ybar  =  Math.floor(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.floor(x);    ybar  =  Math.floor(x);	  	compilable	  [FE]  AssertionFailedError  	117	1	add
977	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(x);  xbar  =  Math.floor(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.floor(x);    xbar  =  Math.floor(x);	  	compilable	  [FE]  AssertionFailedError  	117	2	add
978	[BUG]  [BUGGY]  ybar  =  Math.floor(x);  xbar  =  Math.floor(x);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(x);  xbar  =  Math.floor(x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.floor(x);    xbar  =  Math.floor(x);	  	compilable	  [FE]  AssertionFailedError  	117	2	add
979	[BUG]  [BUGGY]  ybar  =  Math.floor(x);  ybar  =  Math.floor(x));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(x);  ybar  =  Math.floor(x));  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.floor(x);    ybar  =  Math.floor(x));	  	non-compiled	[CE]  ';'  expected	117	None	add
980	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  xbar);  ybar  =  Math.max(1,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(1,    xbar);    ybar  =  Math.max(1,  xbar);	  	compilable	  [FE]  AssertionFailedError  	184	1	add
981	[BUG]  [BUGGY]  ybar  =  Math.max(1,  xbar);  ybar  =  Math.max(1,  xbar);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  xbar);  ybar  =  Math.max(1,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1,    xbar);    ybar  =  Math.max(1,  xbar);	  	compilable	  [FE]  AssertionFailedError  	184	1	add
982	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  xbar);  xbar  =  Math.max(1,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(1,    xbar);    xbar  =  Math.max(1,  xbar);	  	compilable	  [FE]  AssertionFailedError  	184	2	add
983	[BUG]  [BUGGY]  ybar  =  Math.max(1,  xbar);  xbar  =  Math.max(1,  xbar);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  xbar);  xbar  =  Math.max(1,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1,    xbar);    xbar  =  Math.max(1,  xbar);	  	compilable	  [FE]  AssertionFailedError  	184	2	add
984	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  xbar);  ybar  =  Math.max(2,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	ybar    =    Math.max(1,    xbar);    ybar  =  Math.max(2,  xbar);	  	compilable	  [FE]  AssertionFailedError  	184	1	add
985	[BUG]  [BUGGY]  ybar  =  Math.max(1,  xbar);  ybar  =  Math.max(2,  xbar);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.max(1,  xbar);  ybar  =  Math.max(2,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar    =    Math.max(1,    xbar);    ybar  =  Math.max(2,  xbar);	  	compilable	  [FE]  AssertionFailedError  	184	1	add
986	[BUG]  [BUGGY]  Bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xBar;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  Bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xBar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	Bucket  <  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xBar;  }	  bucket    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xBar;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
987	[BUG]  [BUGGY]  bucket  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xBar;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  bucket  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xBar;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	bucket  <  =  0)  {  sumX  =  x;  }  else  {  sumX  =  x  -  xBar;  }	  bucket    <    0)    {    sumX    =    x;    }    else    {    sumX    =    x    -    xBar;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
988	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  -  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	sumX  =  x  -  y;	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    xBar;    }    else    {    sumX    +=    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	77	4	replace
989	[BUG]  [BUGGY]  sumX  =  x  -  y;  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  sumX  =  x  -  y;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	sumX  =  x  -  y;	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    +=    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    xBar;    }    else    {    sumX    +=    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	77	4	replace
990	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  ==  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    sumX    +=    x;    }    	compilable	  [FE]  AssertionFailedError  	174	4	replace
991	[BUG]  [BUGGY]  if(n  ==  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    sumX    +=    x;    }    	compilable	  [FE]  AssertionFailedError  	174	4	replace
992	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    sumX    +=    x;    }    	compilable	  [FE]  AssertionFailedError  	174	4	replace
993	[BUG]  [BUGGY]  if(n  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  <  0)  {  ybar  =  x;  }  else  {  sumX  +=  x;  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    sumX    +=    x;    }    	compilable	  [FE]  AssertionFailedError  	174	4	replace
994	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  xbar  =  x;  }  else  {  sumX  +=  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  ==  0)  {  xbar  =  x;  }  else  {  sumX  +=  x;  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    sumX    +=    x;    }    	compilable	  [FE]  AssertionFailedError  	174	4	replace
995	[BUG]  [BUGGY]  if(n  ==  0)  {  xbar  =  x;  }  else  {  sumX  +=  x;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  ==  0)  {  xbar  =  x;  }  else  {  sumX  +=  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  ==  0)  {  xbar  =  x;  }  else  {  sumX  +=  x;  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    sumX    +=    x;    }    	compilable	  [FE]  AssertionFailedError  	174	4	replace
996	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  <  0)  {  xbar  =  x;  }  else  {  sumX  +=  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(n  <  0)  {  xbar  =  x;  }  else  {  sumX  +=  x;  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    sumX    +=    x;    }    	compilable	  [FE]  AssertionFailedError  	174	4	replace
997	[BUG]  [BUGGY]  if(n  <  0)  {  xbar  =  x;  }  else  {  sumX  +=  x;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(n  <  0)  {  xbar  =  x;  }  else  {  sumX  +=  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(n  <  0)  {  xbar  =  x;  }  else  {  sumX  +=  x;  }	  if(x    <    0)    {    ybar    =    x;    }    else    {    sumX    +=    x;    }    	compilable	  [FE]  AssertionFailedError  	174	4	replace
998	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.abs(x);  ybar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  Math.abs(x);  ybar  =  Math.abs(y);	          ybar    =    Math.abs(xbar);    double    ybar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	165	1	replace
999	[BUG]  [BUGGY]  xbar  =  Math.abs(x);  ybar  =  Math.abs(y);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.abs(x);  ybar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  Math.abs(x);  ybar  =  Math.abs(y);	          ybar    =    Math.abs(xbar);    double    ybar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	165	1	replace
1000	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  ybar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	double  ybar  =  Math.abs(y);	          ybar    =    Math.abs(xbar);    double    ybar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	165	4	replace
1001	[BUG]  [BUGGY]  double  ybar  =  Math.abs(y);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  ybar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double  ybar  =  Math.abs(y);	          ybar    =    Math.abs(xbar);    double    ybar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	165	4	replace
1002	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.abs(x);  double  ybar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	xbar  =  Math.abs(x);  double  ybar  =  Math.abs(y);	          ybar    =    Math.abs(xbar);    double    ybar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	165	4	replace
1003	[BUG]  [BUGGY]  xbar  =  Math.abs(x);  double  ybar  =  Math.abs(y);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  Math.abs(x);  double  ybar  =  Math.abs(y);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  Math.abs(x);  double  ybar  =  Math.abs(y);	          ybar    =    Math.abs(xbar);    double    ybar    =    Math.abs(xbar);    	compilable	  [FE]  AssertionFailedError  	165	4	replace
1004	[BUG]  [BUGGY]  ybar  =  1;  (ybar  =  0);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  1;  (ybar  =  0);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  1;  (ybar  =  0);	  ybar    =    0;    (ybar    =    0);    	non-compiled	[CE]  not  a  statement	90	None	replace
1005	[BUG]  [BUGGY]  ybar  =  0.0;  (ybar  =  0.0);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  0.0;  (ybar  =  0.0);  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  0.0;  (ybar  =  0.0);	  ybar    =    0;    (ybar    =    0);    	non-compiled	[CE]  not  a  statement	90	None	replace
1006	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(y  <  0)  {  xbar  =  y;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(y  <  0)  {  xbar  =  y;  }  else  {  addData(x,  y);  }	  xbar    =    y;    	compilable	  [FE]  StackOverflowError  	128	9	replace
1007	[BUG]  [BUGGY]  if(y  <  0)  {  xbar  =  y;  }  else  {  addData(x,  y);  }  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(y  <  0)  {  xbar  =  y;  }  else  {  addData(x,  y);  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(y  <  0)  {  xbar  =  y;  }  else  {  addData(x,  y);  }	  xbar    =    y;    	compilable	  [FE]  StackOverflowError  	128	9	replace
1008	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(y  <  0)  {  xbar  =  y;  }  else  {  xbar  =  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(y  <  0)  {  xbar  =  y;  }  else  {  xbar  =  x;  }	  xbar    =    y;    	compilable	  [FE]  AssertionFailedError  	128	4	replace
1009	[BUG]  [BUGGY]  if(y  <  0)  {  xbar  =  y;  }  else  {  xbar  =  x;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(y  <  0)  {  xbar  =  y;  }  else  {  xbar  =  x;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(y  <  0)  {  xbar  =  y;  }  else  {  xbar  =  x;  }	  xbar    =    y;    	compilable	  [FE]  AssertionFailedError  	128	4	replace
1010	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(y  <  0)  {  xbar  =  y;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	if(y  <  0)  {  xbar  =  y;  }	  xbar    =    y;    	compilable	  [FE]  AssertionFailedError  	128	4	replace
1011	[BUG]  [BUGGY]  if(y  <  0)  {  xbar  =  y;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  if(y  <  0)  {  xbar  =  y;  }  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	if(y  <  0)  {  xbar  =  y;  }	  xbar    =    y;    	compilable	  [FE]  AssertionFailedError  	128	4	replace
1012	[BUG]  [BUGGY]  ybar  =  Math.floor(x,  ybar);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(x,  ybar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(x,  ybar);	  ybar    =    Math.floor(x,    y);    	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	71	None	replace
1013	[BUG]  [BUGGY]  ybar  =  Math.floor(x,  yBar);  [CE]  cannot  find  symbol  yBar  [FE]                      AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  Math.floor(x,  yBar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  Math.floor(x,  yBar);	  ybar    =    Math.floor(x,    y);    	non-compiled	[CE]  cannot  find  symbol  yBar	71	None	replace
1014	[BUG]  [BUGGY]  ybar  =  yBar  +  1.0;  [CE]  cannot  find  symbol  yBar  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  ybar  =  yBar  +  1.0;  [BUGGY]      }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	ybar  =  yBar  +  1.0;	  ybar    =    y    +    1.0;    	non-compiled	[CE]  cannot  find  symbol  yBar	160	None	replace
1015	[BUG]  [BUGGY]  n  =  Math.min(0.0,  x);  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.min(0.0,  x);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(0.0,  x);	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	non-compiled	[CE]  possible  loss  of  precision	131	None	replace
1016	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.min(1,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	add	n  =  Math.min(1,  n);	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	131	4	replace
1017	[BUG]  [BUGGY]  n  =  Math.min(1,  n);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  n  =  Math.min(1,  n);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	n  =  Math.min(1,  n);	          if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    if(n    <    0)    {    sumX    =    x    -    xbar;    }    else    {    sumX    =    x    -    xbar;    }    	compilable	  [FE]  AssertionFailedError  	131	4	replace
1018	[BUG]  [BUGGY]  xbar  =  0;  xBar  =  0;  [CE]  cannot  find  symbol  xBar  [FE]            AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  0;  xBar  =  0;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  0;  xBar  =  0;	          xbar    =    x;    xBar    =    x;    	non-compiled	[CE]  cannot  find  symbol  xBar	110	None	replace
1019	[BUG]  [BUGGY]  xbar  =  n;  xBar  =  x;  [CE]  cannot  find  symbol  xBar  [FE]              AssertionFailedError      [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  xbar  =  n;  xBar  =  x;  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	xbar  =  n;  xBar  =  x;	          xbar    =    x;    xBar    =    x;    	non-compiled	[CE]  cannot  find  symbol  xBar	110	None	replace
1020	[BUG]  [BUGGY]  double  n  =  Math.min(1.0,  xbar);  double  xbar  =  Math.min(1.0,  xbar);  [CE]  variable  xbar  might  not  have  been  initialized  [FE]    AssertionFailedError    [CONTEXT]      public  void  addData(double  x,  double  y)  {  if  (n  ==  0)  {  xbar  =  x;      [BUGGY]  double  n  =  Math.min(1.0,  xbar);  double  xbar  =  Math.min(1.0,  xbar);  [BUGGY]      ybar  =  y;  }  else  {  double  dx  =  x  -  xbar;  double  dy  =  y  -  ybar;  sumXX  +=  dx  *  dx  *  (double)  n  /  (double)  (n  +  1.0);  sumYY  +=  dy  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  sumXY  +=  dx  *  dy  *  (double)  n  /  (double)  (n  +  1.0);  xbar  +=  dx  /  (double)  (n  +  1.0);  ybar  +=  dy  /  (double)  (n  +  1.0);  }  sumX  +=  x;  [CLASS]  SimpleRegression  [METHOD]  addData  [RETURN_TYPE]  void  double  x  double  y  [VARIABLES]  double  dx  dy  sumX  sumXX  sumXY  sumY  sumYY  x  xbar  y  ybar  long  n  serialVersionUID  boolean  	projects/Math105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java	0.3333333333333333	108	108	1	replace	double    n    =    Math.min(1.0,    xbar);    double  xbar  =  Math.min(1.0,  xbar);	  	non-compiled	[CE]  variable  xbar  might  not  have  been  initialized	100	None	add
