projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(cpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)!=MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(cpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readNewEntry(true);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readNewEntry(true);}else{System.arraycopy(TWO_BYTES_BUF,0,
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_NEW){this.entry=readNewEntry(true);}else{System.arraycopy(TWO_BYTES_BUF,0,
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_NEW){this.entry=readNewEntry(true);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readNewEntry(false);}else{System.arraycopy(TWO_BYTES_BUF,0,
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readNewEntry(false);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_NEW){this.entry=readNewEntry(false);}else{System.arraycopy(TWO_BYTES_BUF,0,
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==this.old_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==System.arraycopy(TWO_BYTES_BUF,0,this.entry.length)){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==this.old_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(cpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(cpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(cpioUtil.byteArray2long(TWO_BYTES_BUF,true)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,false)!=MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)!=MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)!=MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==this.old_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)!=MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entryBytesRead,false)!=MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entry,false)!=MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(THIS_BYTES_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entryBytesRead,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entry,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(THIS_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(THIS_BYTES_BUF,true)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(this.entryBytesRead,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(this.entry,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(THIS_BYTES_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(THIS_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(THRESHOLD_BINARY,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_NEW){this.entry=readNewEntry(false);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_NEW){this.entry=readNewEntry(true);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entryBytes_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)!=MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194System.arraycopy(FOUR_BYTES_BUF,0,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_NEW){this.entry=readNewEntry(true);}else{System.arraycopy(TWO_BYTES_BUF,0,this.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(THIS_OLD_BINARY,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(FOUR_BYTES_BUF.length==CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)!=this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entry,false)==FOUR_BYTES_BUF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readNewEntry(true);}else{System.arraycopy(TWO_BYTES_BUF,0,
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readNewEntry(true);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readNewEntry(false);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(this.entry,false)==MAGIC_NEW){this.entry=readNewEntry(true);}else{System.arraycopy(TWO_BYTES_BUF,0,this.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_NEW){this.entry=readNewEntry(true);}else{System.arraycopy(TWO_BYTES_BUF,0,
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readNewEntry(true);}else{System.arraycopy(TWO_BYTES_BUF,
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readNewEntry(true);}else{System.arraycopy(FOUR_BYTES_BUF,0,
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,true)!=MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(THIS_BYTES_BUF,false)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(THIS_BYTES_BUF,true)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(cpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194this.entry=readNewEntry(true);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194this.entry=readNewEntry(false);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_NEW){this.entry=readNewEntry(false);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_NEW){this.entry=readOldBinaryEntry(true);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194||CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(false);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(true);}else{System.arraycopy(TWO_
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194||CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(true);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194||CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readNewEntry(true);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(true);}else{System.arraycopy(TWO_
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(false);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194System.arraycopy(TWO_BYTES_BUF,0,
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(cpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)!=this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)!=MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==FOUR_BYTES_BUF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==this.old_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(this.entry,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_OLD_BINARY,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(this.entry,false)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194this.entry=readOldBinaryEntry(false);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194this.entry=readOldBinaryEntry(true);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(true);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(true);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_OLD_BINARY){this.entry=readNewEntry(true);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==System.arraycopy(TWO_BYTES_BUF,0,this.entry.length)){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(this.entry,true)==System.arraycopy(TWO_BYTES_BUF,0,this.entry.length)){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==System.arraycopy(TWO_BYTES_BUF,0,this.entry.length)){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==System.arraycopy(TWO_BYTES_BUF,0,this.entry.length)){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,false)!=System.arraycopy(TWO_BYTES_BUF,0,this.entry.length)){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==System.arraycopy(TWO_BYTES_BUF,0,this.entry.length)){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==CpioUtil.OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(THIS_BYTES_BUF,true)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(THIS_OLD_BINARY,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(THIS_OLD_BINARY,false)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(THIS_OLD_BINARY,true)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(THIS_OLD_BINARY,true)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_OLD_BINARY,false)==CpioUtil.MAX_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_NEW){this.entry=readNewEntry(true);}else{System.arraycopy(TWO_BYTES_BUF,
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194||CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_NEW){this.entry=readNewEntry(true);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(this.entryBytesRead,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(this.entryBytesRead,false)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(this.entryBytesRead,false)==this.old_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(this.entryBytesRead,true)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(true);}else{System.arraycopy(TWO
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194||CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readNewEntry(false);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(true);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,true)!=MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entry,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(TWO_OLD_BINARY,false)!=MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(TWO_OLD_BINARY,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entry,true)!=MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.old_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.old_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,false)!=this.old_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==this.old_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==this.old_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(cpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==this.old_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entryBytesRead,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entryBytesRead,false)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entryBytesRead,true)!=MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194||CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_NEW){this.entry=readNewEntry(false);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readNewEntry(false);}else{System.arraycopy(TWO_BYTES_BUF,0,
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readNewEntry(false);}else{System.arraycopy(FOUR_BYTES_BUF,0,
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_NEW){this.entry=readOldBinaryEntry(true);}else{System.arraycopy(TWO_B
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(cpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entry,false)==CPI_BYTES_BUF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)!=this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entry,false)==CAPP_BYTES_BUF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,false)!=MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entry,false)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(THIS_OLD_BINARY,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entryBytesRead,false)==this.old_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)!=MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_NEW){this.entry=readOldBinaryEntry(true);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_NEW){this.entry=readOldBinaryEntry(false);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_NEW){this.entry=readOldBinaryEntry(false);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(cpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.old_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)!=MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readNewEntry(true);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(false);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(THIS_BYTES_BUF,true)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(this.entry,true)==CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,false)!=this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(this.entry,true)==CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194System.arraycopy(FOUR_BYTES_BUF,0,this.blockSize,FOUR_BYTES_BUF.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194System.arraycopy(FOUR_BYTES_BUF,0,this.blockSize,this.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194System.arraycopy(FOUR_BYTES_BUF,0,this.blockSize,TWO_BYTES_BUF.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194System.arraycopy(FOUR_BYTES_BUF,0,this.blockSize,0);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194System.arraycopy(FOUR_BYTES_BUF,0,this.blockSize-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194System.arraycopy(FOUR_BYTES_BUF,0,this.blockSize,this.bytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194System.arraycopy(TWO_BYTES_BUF,0,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(THRESHOLD_BINARY,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_OLD_BINARY,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entryBytes_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entryBytes_BUF,false)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entryBytes_BUF,false)==this.old_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(this.entryBytes_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(cpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(FOUR_BYTES_BUF.length==CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(this.entryBytesRead,false)!=MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(false);}else{System.arraycopy
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(false);}else{System.arra
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(false);}else{System.arraycopy
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(true);}else{System.arraycopy(TWO
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(SIX_BYTES_BUF.length==SIX_BYTES_BUF.length){ifCpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readOldB
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entryBytesRead,false)!=MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entry,false)!=MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entryBytesRead,true)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entryBytesRead,false)==0){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readOldBinaryEntry(false);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(FOUR_BYTES_BUF!=null){if(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_NEW){this.entry=readOldBinaryEntry(false);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readOldBinaryEntry(false);}else{System.arraycopy(TWO_B
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==MAGIC_NEW){this.entry=readOldBinaryEntry(false);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readOldBinaryEntry(false);}else{System.arra
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readOldBinaryEntry(false);}else{System.arraycopy
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readOldBinaryEntry(true);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(true);}else{System.arraycopy
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(true);}else{System.arra
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(true);}else{System.arraycopy(TWO
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readOldBinaryEntry(false);}else{System.arraycopy(TWO
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readOldBinaryEntry(true);}else{System.arraycopy
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readOldBinaryEntry(true);}else{System.arraycopy(TWO_B
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readOldBinaryEntry(true);}else{System.arraycopy(TWO
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194System.arraycopy(FOUR_BYTES_BUF,0,this.entry.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entryBytes_BUF,false)==0){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entryBytes_BUF,true)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==System.arraycopy(FOUR_BYTES_BUF,0,this.entry.length)){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==System.arraycopy(FOUR_BYTES_BUF,0,this.entry.length)){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(this.entry.length,true)==System.arraycopy(TWO_BYTES_BUF,0,this.entry.length)){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==System.arraycopy(FOUR_BYTES_BUF,0,this.entry.length)){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(THIS_BYTES_BUF,false)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(true);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(false);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(this.entry,false)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(false);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(this.entry,true)==CpioUtil.BYTES_BUF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(FOUR_BYTES_BUF.length==this.old_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(SIX_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(FOUR_BYTES_BUF.length==CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==this.old_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(this.entry,false)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(true);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(THIS_BUF,true)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(THIS_BYTES_BUF,true)==this.old_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(FOUR_BYTES_BUF.length==CpioUtil.byteArray2long(this.entry,false)==CpioUtil.BYTES_BUF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(FOUR_BYTES_BUF.length==CpioUtil.byteArray2long(this.entry,false)==CPT_BYTES_BUF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194System.arraycopy(FOUR_BYTES_BUF,0,this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(THIS_BUF,false)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==MAGIC_NEW){this.entry=readOldBinaryEntry(true);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(this.entry,false)==MAGIC_NEW){this.entry=readOldBinaryEntry(false);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(THIS_BYTES_BUF,false)!=MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(this.entryBytesRead,false)==0){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(THRESHOLD_BINARY,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(THRESHOLD_BINARY,true)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(FOUR_BYTES_BUF.length==CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entry,false)==TWO_BYTES_BUF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entry,false)==CpioUtil.BYTES_BUF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.entryEOF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)!=MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(this.entry,false)!=MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entryBytesRead,true)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(SIX_BYTES_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entryBytesRead,false)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(FOUR_BYTES_BUF.length==CpioUtil.byteArray2long(this.entry,false)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entry,false)==CPT_BYTES_BUF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==MAGIC_NEW){this.entry=readNewEntry(true);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194System.arraycopy(FOUR_BYTES_BUF,0,this.blockSize+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194System.arraycopy(FOUR_BYTES_BUF,0,this.entryBytesRead.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readOldBinaryEntry(false);}else{System.arraycopy(FOUR_BYTES_BUF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readOldBinaryEntry(false);}else{System.arraycopy(FOUR_BYTES_BU
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(FOUR_BYTES_BUF.length==CpioUtil.byteArray2long(this.entry,true)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==MAGIC_NEW){this.entry=readOldBinaryEntry(false);}else{System.arraycopy(TWO_B
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_NEW){this.entry=readOldBinaryEntry(false);}else{System.arraycopy(TWO_
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==MAGIC_NEW){this.entry=readOldBinaryEntry(false);}else{System.arraycopy(TWO_
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(!CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==this.entryEOF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(SIX_BYTES_BUF,true)==MAGIC_NEW){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==this.entryEOF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==this.entryEOF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entry,false)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entry,true)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(SIX_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(false);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(false);}else{System.arraycopy(TWO
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_OLD_BINARY){this.entry=readOldBinaryEntry(false);}else{System.arraycopy(TWO_
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194if(SIX_BYTES_BUF.length<SIX_BYTES_BUF.length){this.entry=readOldBinaryEntry(false);}else{System.arraycopy(TWO_BYTES_BUF,0,
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entry,false)==CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(this.entry,false)==CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(FOUR_BYTES_BUF.length==CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(cpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java194}elseif(CpioUtil.byteArray2long(THIS_BYTES_BUF,false)==this.entry){
