bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(this.entry!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
2	[BUG]  [BUGGY]  if(this.entry  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
3	[BUG]  [BUGGY]  if(this.entry!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
4	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(this.entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
5	[BUG]  [BUGGY]  if(getNextCPIOEntry()  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(getNextCPIOEntry()  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(getNextCPIOEntry()  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
6	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
7	[BUG]  [BUGGY]  if(this.blockSize  ==  0  &&  this.entry!=  null)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  ==  0  &&  this.entry!=  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  ==  0  &&  this.entry!=  null)  {	  if(this.blockSize    ==    0    ||    this.entry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
8	[BUG]  [BUGGY]  if(this.entry.blockSize  ==  0  ||  this.entry!=  null)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry.blockSize  ==  0  ||  this.entry!=  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry.blockSize  ==  0  ||  this.entry!=  null)  {	  if(this.blockSize    ==    0    ||    this.entry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
9	[BUG]  [BUGGY]  if(this.blockSize  ==  0  ||  this.entry  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  ==  0  ||  this.entry  ==  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  ==  0  ||  this.entry  ==  null)  {	  if(this.blockSize    ==    0    ||    this.entry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
10	[BUG]  [BUGGY]  if(this.key!=  null  ||  this.key.length!=  0)  {  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key!=  null  ||  this.key.length!=  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key!=  null  ||  this.key.length!=  0)  {	  if(this.key!=    null    ||    this.key.length    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
11	[BUG]  [BUGGY]  if(this.key!=  null  &&  this.key.length  >=  0)  {  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key!=  null  &&  this.key.length  >=  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key!=  null  &&  this.key.length  >=  0)  {	  if(this.key!=    null    ||    this.key.length    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  if(this.key  ==  null  ||  this.key.length  >=  0)  {  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  ||  this.key.length  >=  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  ||  this.key.length  >=  0)  {	  if(this.key!=    null    ||    this.key.length    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
13	[BUG]  [BUGGY]  if(this.entry  ==  null  &&  this.blockSize  ==  0)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  &&  this.blockSize  ==  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  &&  this.blockSize  ==  0)  {	  if(this.entry!=    null    &&    this.blockSize    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
14	[BUG]  [BUGGY]  if(this.entry!=  null  &&  blockSize  ==  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  &&  blockSize  ==  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  &&  blockSize  ==  0)  {	  if(this.entry!=    null    &&    this.blockSize    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
15	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  this.entry.length  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  this.entry.length  <  =  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  this.entry.length  <  =  0)  {	  if(this.entry!=    null    ||    this.entry.length    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
16	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  this.entry.length  <  0)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  this.entry.length  <  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  this.entry.length  <  0)  {	  if(this.entry!=    null    ||    this.entry.length    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
17	[BUG]  [BUGGY]  if(this.entry!=  null  ||  this.entry.length  <  2)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  ||  this.entry.length  <  2)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  ||  this.entry.length  <  2)  {	  if(this.entry!=    null    ||    this.entry.length    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
18	[BUG]  [BUGGY]  if(this.in  ==  null  ||  this.entry  ==  null)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.in  ==  null  ||  this.entry  ==  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.in  ==  null  ||  this.entry  ==  null)  {	  if(this.entry    ==    null    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
19	[BUG]  [BUGGY]  if(this.in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.in  ==  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.in  ==  null)  {	  if(this.entry    ==    null    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
20	[BUG]  [BUGGY]  if(this.in  ==  null  ||  this.entry!=  null)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.in  ==  null  ||  this.entry!=  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.in  ==  null  ||  this.entry!=  null)  {	  if(this.entry    ==    null    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
21	[BUG]  [BUGGY]  if(this.in!=  null  ||  this.entry  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.in!=  null  ||  this.entry  ==  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.in!=  null  ||  this.entry  ==  null)  {	  if(this.entry    ==    null    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
22	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  this.in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  this.in  ==  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  this.in  ==  null)  {	  if(this.entry    ==    null    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
23	[BUG]  [BUGGY]  if(this.entry!=  null  ||  this.in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  ||  this.in  ==  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  ||  this.in  ==  null)  {	  if(this.entry    ==    null    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
24	[BUG]  [BUGGY]  if(this.entry!=  null  &&  this.entry.length!=  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  &&  this.entry.length!=  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  &&  this.entry.length!=  0)  {	  if(this.entry!=    null    ||    this.entry.length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
25	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  blockSize  <  0)  {  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  blockSize  <  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  blockSize  <  0)  {	  if(this.entry    ==    null    ||    this.blockSize    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
26	[BUG]  [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.blockSize,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.blockSize,  TWO_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(TOUR_BYTES_BUF,  0,  this.blockSize,  TWO_BYTES_BUF.length);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
27	[BUG]  [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.blockSize  -  1);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(TOUR_BYTES_BUF,  0,  this.blockSize  -  1);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
28	[BUG]  [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.blockSize  +  1);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(TOUR_BYTES_BUF,  0,  this.blockSize  +  1);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
29	[BUG]  [BUGGY]  System.arraycopy(this.block,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(this.block,  0,  this.blockSize);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(this.block,  0,  this.blockSize);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
30	[BUG]  [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.blockSize,  tmpbuf);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.blockSize,  tmpbuf);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(TOUR_BYTES_BUF,  0,  this.blockSize,  tmpbuf);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.blockSize,  1);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.blockSize,  1);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(TOUR_BYTES_BUF,  0,  this.blockSize,  1);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
32	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
33	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
34	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entryEOF)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
35	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
36	[BUG]  [BUGGY]  if(this.entry!=  null  ||  blockSize  <  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  ||  blockSize  <  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  ||  blockSize  <  0)  {	  if(this.entry!=    null    ||    this.blockSize    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
37	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
38	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length;  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length;  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length;  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
39	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytes  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytes  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytes	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
40	[BUG]  [BUGGY]  if(this.blockSize!=  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize!=  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize!=  0)  {	  if(this.blockSize    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
41	[BUG]  [BUGGY]  if(this.blockSize  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  <  =  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  <  =  0)  {	  if(this.blockSize    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
42	[BUG]  [BUGGY]  if(blockSize  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(blockSize  ==  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(blockSize  ==  0)  {	  if(this.blockSize    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
43	[BUG]  [BUGGY]  if(this.blockSize  >=  0)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  >=  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  >=  0)  {	  if(this.blockSize    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
44	[BUG]  [BUGGY]  if(this.blockSize  >  0)  {  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  >  0)  {	  if(this.blockSize    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
45	[BUG]  [BUGGY]  if(this.blockSize  ==  0  ||  this.entryEOF)  {  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  ==  0  ||  this.entryEOF)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  ==  0  ||  this.entryEOF)  {	  if(this.blockSize    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
46	[BUG]  [BUGGY]  if(this.key  ==  null  ||  this.key.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  ||  this.key.length  ==  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  ||  this.key.length  ==  0)  {	  if(this.key    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
47	[BUG]  [BUGGY]  if(this.key  ==  null  ||  this.key.length  <  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  ||  this.key.length  <  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  ||  this.key.length  <  0)  {	  if(this.key    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
48	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  blockSize  >  0)  {  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  blockSize  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  blockSize  >  0)  {	  if(this.entry!=    null    ||    this.blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
49	[BUG]  [BUGGY]  if(this.entry!=  null  ||  blockSize  >  0)  {  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  ||  blockSize  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  ||  blockSize  >  0)  {	  if(this.entry!=    null    ||    this.blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
50	[BUG]  [BUGGY]  if(this.blockSize  ==  null  ||  this.blockSize  >  0)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  ==  null  ||  this.blockSize  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  ==  null  ||  this.blockSize  >  0)  {	  if(this.entry    ==    null    ||    this.blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
51	[BUG]  [BUGGY]  if(this.cpioArchiveEntry  ==  null)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.cpioArchiveEntry  ==  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.cpioArchiveEntry  ==  null)  {	  if(this.cpioArchiveEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
52	[BUG]  [BUGGY]  if(this.cpioArchiveEntry  ==  null  ||  this.cpioArchiveEntry.length!=  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.cpioArchiveEntry  ==  null  ||  this.cpioArchiveEntry.length!=  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.cpioArchiveEntry  ==  null  ||  this.cpioArchiveEntry.length!=  0)  {	  if(this.cpioArchiveEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
53	[BUG]  [BUGGY]  if(this.cpioArchiveEntry!=  null  ||  this.cpioArchiveEntry.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.cpioArchiveEntry!=  null  ||  this.cpioArchiveEntry.length  ==  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.cpioArchiveEntry!=  null  ||  this.cpioArchiveEntry.length  ==  0)  {	  if(this.cpioArchiveEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
54	[BUG]  [BUGGY]  if(this.cpioArchiveEntry  ==  null  ||  this.cpioArchiveEntry.length  <  2)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.cpioArchiveEntry  ==  null  ||  this.cpioArchiveEntry.length  <  2)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.cpioArchiveEntry  ==  null  ||  this.cpioArchiveEntry.length  <  2)  {	  if(this.cpioArchiveEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
55	[BUG]  [BUGGY]  if(this.cpioArchiveEntry!=  null  ||  this.cpioArchiveEntry.length  <  2)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.cpioArchiveEntry!=  null  ||  this.cpioArchiveEntry.length  <  2)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.cpioArchiveEntry!=  null  ||  this.cpioArchiveEntry.length  <  2)  {	  if(this.cpioArchiveEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
56	[BUG]  [BUGGY]  if(this.cpioArchiveEntry  ==  null  ||  this.cpioArchiveEntry.length  >=  0)  {  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.cpioArchiveEntry  ==  null  ||  this.cpioArchiveEntry.length  >=  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.cpioArchiveEntry  ==  null  ||  this.cpioArchiveEntry.length  >=  0)  {	  if(this.cpioArchiveEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
57	[BUG]  [BUGGY]  if(this.entry!=  null  ||  this.entry.length  <  =  1)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  ||  this.entry.length  <  =  1)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  ||  this.entry.length  <  =  1)  {	  if(this.entry!=    null    ||    this.entry.length    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
58	[BUG]  [BUGGY]  if(this.blockSize  >  0)  {  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  >  0)  {  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  >  0)  {  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
59	[BUG]  [BUGGY]  if(this.blockSize  >  0)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  >  0)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  >  0)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
60	[BUG]  [BUGGY]  if(this.blockSize  >  0)  {  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  >  0)  {  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  >  0)  {  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
61	[BUG]  [BUGGY]  if(this.blockSize  >  0)  {  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  >  0)  {  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  >  0)  {  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
62	[BUG]  [BUGGY]  if(this.blockSize  >  0)  {  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  >  0)  {  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  >  0)  {  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
63	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
64	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1,  this.blockSize);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1,  this.blockSize);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length,  this.blockSize);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length,  this.blockSize);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
66	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length,  TWO_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length,  TWO_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
67	[BUG]  [BUGGY]  System.arraycopy(this.entry,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(this.entry,  0,  this.entry.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(this.entry,  0,  this.entry.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
68	[BUG]  [BUGGY]  System.arraycopy(this.entry,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(this.entry,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(this.entry,  0,  FOUR_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
69	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  1);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  1);	  readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
70	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  2);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  2);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  2);	  readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
71	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  +  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  +  1);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  +  1);	  readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
72	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  4);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  4);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  4);	  readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
73	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
74	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
75	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryOF.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryOF.length);  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryOF.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryOF.length);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryOF.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryOF.length);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
76	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF.length);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF.length);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF.length);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
77	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
79	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
80	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
81	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
82	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  TWO_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  TWO_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
83	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  blockSize!=  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  blockSize!=  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  blockSize!=  0)  {	  if(this.entry!=    null    ||    blockSize    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
84	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  blockSize  >=  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  blockSize  >=  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  blockSize  >=  0)  {	  if(this.entry!=    null    ||    blockSize    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
85	[BUG]  [BUGGY]  if(this.entry!=  null  ||  blockSize  >=  0)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  ||  blockSize  >=  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  ||  blockSize  >=  0)  {	  if(this.entry!=    null    ||    blockSize    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
86	[BUG]  [BUGGY]  if(this.key!=  null  ||  this.key.length  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key!=  null  ||  this.key.length  <  =  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key!=  null  ||  this.key.length  <  =  0)  {	  if(this.key!=    null    ||    this.key.length    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
87	[BUG]  [BUGGY]  if(this.key!=  null  &&  this.key.length  <  0)  {  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key!=  null  &&  this.key.length  <  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key!=  null  &&  this.key.length  <  0)  {	  if(this.key!=    null    ||    this.key.length    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
88	[BUG]  [BUGGY]  if(this.key!=  null  ||  this.key.length  <  2)  {  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key!=  null  ||  this.key.length  <  2)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key!=  null  ||  this.key.length  <  2)  {	  if(this.key!=    null    ||    this.key.length    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
89	[BUG]  [BUGGY]  if(this.key  ==  null  ||  this.key.length  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  ||  this.key.length  <  =  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  ||  this.key.length  <  =  0)  {	  if(this.key!=    null    ||    this.key.length    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
90	[BUG]  [BUGGY]  if(this.key!=  null  ||  this.key.length  <  1)  {  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key!=  null  ||  this.key.length  <  1)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key!=  null  ||  this.key.length  <  1)  {	  if(this.key!=    null    ||    this.key.length    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
91	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
92	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);	  readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
93	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
94	[BUG]  [BUGGY]  if(this.blockSize  ==  null  ||  this.blockSize  <  =  0)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  ==  null  ||  this.blockSize  <  =  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  ==  null  ||  this.blockSize  <  =  0)  {	  if(this.entry    ==    null    ||    this.blockSize    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
95	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize,  TWO_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize,  TWO_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
96	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  -  1);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  -  1);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
97	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  +  1);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  +  1);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
98	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.blockSize);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.blockSize);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
99	[BUG]  [BUGGY]  System.arraycopy(this.block,  0,  FOUR_BYTES_BUF,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(this.block,  0,  FOUR_BYTES_BUF,  this.blockSize);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(this.block,  0,  FOUR_BYTES_BUF,  this.blockSize);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
100	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize,  this.length);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize,  this.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize,  this.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
101	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize,  tmpbuf);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize,  tmpbuf);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize,  tmpbuf);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
102	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize);	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
103	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  FOUR_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(this.blockSize,  0,  FOUR_BYTES_BUF);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(this.blockSize,  0,  FOUR_BYTES_BUF);	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
104	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  1);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  1);	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
105	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize  +  1);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.blockSize  +  1);	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
106	[BUG]  [BUGGY]  readFully(this.block,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(this.block,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(this.block,  0,  FOUR_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
107	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(this.blockSize,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(this.blockSize,  0,  FOUR_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
108	[BUG]  [BUGGY]  if(this.entry!=  null  ||  this.blockSize!=  0)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  ||  this.blockSize!=  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  ||  this.blockSize!=  0)  {	  if(this.entry    ==    null    ||    this.blockSize!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
109	[BUG]  [BUGGY]  if(this.entry!=  null  &&  this.key!=  null)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  &&  this.key!=  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  &&  this.key!=  null)  {	  if(this.key!=    null    &&    this.entry    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
110	[BUG]  [BUGGY]  if(this.entry!=  null  &&  this.key  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  &&  this.key  ==  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  &&  this.key  ==  null)  {	  if(this.key!=    null    &&    this.entry    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
111	[BUG]  [BUGGY]  if(this.key!=  null  ||  this.entry  ==  null)  {  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key!=  null  ||  this.entry  ==  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key!=  null  ||  this.entry  ==  null)  {	  if(this.key!=    null    &&    this.entry    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
112	[BUG]  [BUGGY]  if(this.entry!=  null  ||  this.key!=  null)  {  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  ||  this.key!=  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  ||  this.key!=  null)  {	  if(this.key!=    null    &&    this.entry    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
113	[BUG]  [BUGGY]  if(this.entry  ==  null  &&  this.key!=  null)  {  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  &&  this.key!=  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  &&  this.key!=  null)  {	  if(this.key!=    null    &&    this.entry    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
114	[BUG]  [BUGGY]  if(this.entry!=  null  ||  this.key  ==  null)  {  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  ||  this.key  ==  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  ||  this.key  ==  null)  {	  if(this.key!=    null    &&    this.entry    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
115	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  blockSize  <  =  1)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  blockSize  <  =  1)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  blockSize  <  =  1)  {	  if(this.entry!=    null    ||    blockSize    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
116	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
117	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
118	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entry.length);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
119	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(TWO_BYTES_BUF,  0,  this.length);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
120	[BUG]  [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length  -  1);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length  -  1);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length  -  1);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
121	[BUG]  [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length  -  1,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length  -  1,  this.blockSize);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length  -  1,  this.blockSize);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
122	[BUG]  [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length,  TWO_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length,  TWO_BYTES_BUF.length);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
123	[BUG]  [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length,  this.blockSize);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length,  this.blockSize);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
124	[BUG]  [BUGGY]  if(this.entry!=  null  ||  this.entry.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  ||  this.entry.length  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  ||  this.entry.length  >  0)  {	  if(this.entry!=    null    ||    this.entry.length    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
125	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  1);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  1);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
126	[BUG]  [BUGGY]  System.arraycopy(this.entryBytesRead,  0,  this.entryBytesRead.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(this.entryBytesRead,  0,  this.entryBytesRead.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(this.entryBytesRead,  0,  this.entryBytesRead.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
127	[BUG]  [BUGGY]  System.arraycopy(this.entryBytesRead,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(this.entryBytesRead,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(this.entryBytesRead,  0,  FOUR_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
128	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length,  this.blockSize);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length,  this.blockSize);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
129	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  2);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  2);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  2);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
130	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
131	[BUG]  [BUGGY]  if(this.entry  ==  null  &&  this.blockSize  <  =  0)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  &&  this.blockSize  <  =  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  &&  this.blockSize  <  =  0)  {	  if(this.entry!=    null    &&    this.blockSize    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
132	[BUG]  [BUGGY]  if(this.entry!=  null  &&  blockSize  <  =  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  &&  blockSize  <  =  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  &&  blockSize  <  =  0)  {	  if(this.entry!=    null    &&    this.blockSize    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
133	[BUG]  [BUGGY]  if(this.entry!=  null  &&  this.blockSize  <  =  1)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  &&  this.blockSize  <  =  1)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  &&  this.blockSize  <  =  1)  {	  if(this.entry!=    null    &&    this.blockSize    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
134	[BUG]  [BUGGY]  if(this.entry  ==  null  &&  blockSize  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  &&  blockSize  <  =  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  &&  blockSize  <  =  0)  {	  if(this.entry!=    null    &&    this.blockSize    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
135	[BUG]  [BUGGY]  if(this.key!=  null  ||  this.key.length  >  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key!=  null  ||  this.key.length  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key!=  null  ||  this.key.length  >  0)  {	  if(this.key!=    null    &&    this.key.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
136	[BUG]  [BUGGY]  if(this.key  ==  null  &&  this.key.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  &&  this.key.length  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  &&  this.key.length  >  0)  {	  if(this.key!=    null    &&    this.key.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
137	[BUG]  [BUGGY]  if(this.key  ==  null  ||  this.key.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  ||  this.key.length  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  ||  this.key.length  >  0)  {	  if(this.key!=    null    &&    this.key.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
138	[BUG]  [BUGGY]  if(this.key!=  null  &&  this.key.length  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key!=  null  &&  this.key.length  <  =  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key!=  null  &&  this.key.length  <  =  0)  {	  if(this.key!=    null    &&    this.key.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
139	[BUG]  [BUGGY]  if(this.key!=  null  &&  this.key.length  >  1)  {  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key!=  null  &&  this.key.length  >  1)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key!=  null  &&  this.key.length  >  1)  {	  if(this.key!=    null    &&    this.key.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
140	[BUG]  [BUGGY]  if(this.nextCPIOEntry  ==  null)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.nextCPIOEntry  ==  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.nextCPIOEntry  ==  null)  {	  if(this.nextCPIOEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
141	[BUG]  [BUGGY]  if(this.nextCPIOEntry  ==  null  ||  this.nextCPIOEntry.length!=  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.nextCPIOEntry  ==  null  ||  this.nextCPIOEntry.length!=  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.nextCPIOEntry  ==  null  ||  this.nextCPIOEntry.length!=  0)  {	  if(this.nextCPIOEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
142	[BUG]  [BUGGY]  if(this.getNextCPIOEntry()!=  null)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.getNextCPIOEntry()!=  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.getNextCPIOEntry()!=  null)  {	  if(this.nextCPIOEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
143	[BUG]  [BUGGY]  if(this.nextCPIOEntry!=  null  ||  this.nextCPIOEntry.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.nextCPIOEntry!=  null  ||  this.nextCPIOEntry.length  ==  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.nextCPIOEntry!=  null  ||  this.nextCPIOEntry.length  ==  0)  {	  if(this.nextCPIOEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
144	[BUG]  [BUGGY]  if(this.nextCpioEntry  ==  null)  {  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.nextCpioEntry  ==  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.nextCpioEntry  ==  null)  {	  if(this.nextCPIOEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
145	[BUG]  [BUGGY]  if(this.nextCPIOEntry  ==  null  ||  this.nextCPIOEntry.length  <  2)  {  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.nextCPIOEntry  ==  null  ||  this.nextCPIOEntry.length  <  2)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.nextCPIOEntry  ==  null  ||  this.nextCPIOEntry.length  <  2)  {	  if(this.nextCPIOEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
146	[BUG]  [BUGGY]  if(this.key!=  null  &&  this.key.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key!=  null  &&  this.key.length  ==  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key!=  null  &&  this.key.length  ==  0)  {	  if(this.key!=    null    ||    this.key.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
147	[BUG]  [BUGGY]  if(this.key  ==  null  ||  this.key.length  >>  0)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  ||  this.key.length  >>  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  ||  this.key.length  >>  0)  {	  if(this.key    ==    null    ||    this.key.length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
148	[BUG]  [BUGGY]  if(this.entry!=  null  &&  this.entry.length  >  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  &&  this.entry.length  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  &&  this.entry.length  >  0)  {	  if(this.entry!=    null    &&    this.entry.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
149	[BUG]  [BUGGY]  if(this.entry  >=  null  ||  this.entry.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  >=  null  ||  this.entry.length  ==  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  >=  null  ||  this.entry.length  ==  0)  {	  if(this.entry!=    null    &&    this.entry.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
150	[BUG]  [BUGGY]  if(this.entry!=  null  &&  this.entry.length  >=  0)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  &&  this.entry.length  >=  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  &&  this.entry.length  >=  0)  {	  if(this.entry!=    null    &&    this.entry.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
151	[BUG]  [BUGGY]  if(this.entry!=  null  &&  this.entry.length  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  &&  this.entry.length  <  =  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  &&  this.entry.length  <  =  0)  {	  if(this.entry!=    null    &&    this.entry.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
152	[BUG]  [BUGGY]  if(this.entry  ==  null  &&  this.blockSize  >=  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  &&  this.blockSize  >=  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  &&  this.blockSize  >=  0)  {	  if(this.entry!=    null    &&    this.blockSize    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
153	[BUG]  [BUGGY]  if(this.entry!=  null  &&  this.blockSize  >  0)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  &&  this.blockSize  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  &&  this.blockSize  >  0)  {	  if(this.entry!=    null    &&    this.blockSize    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
154	[BUG]  [BUGGY]  readFully(TOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(TOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(TOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);	  readFully(TOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
155	[BUG]  [BUGGY]  readFully(TOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(TOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(TOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  readFully(TOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
156	[BUG]  [BUGGY]  readFully(TOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(TOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(TOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);	  readFully(TOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
157	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);	  if(this.in!=    null)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
158	[BUG]  [BUGGY]  if(this.in  ==  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.in  ==  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.in  ==  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }	  if(this.in!=    null)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
159	[BUG]  [BUGGY]  if(this.in!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.in!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.in!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }	  if(this.in!=    null)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
160	[BUG]  [BUGGY]  if(this.in!=  null)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.in.length);  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.in!=  null)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.in.length);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.in!=  null)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.in.length);  }	  if(this.in!=    null)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
161	[BUG]  [BUGGY]  if(this.in!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.in!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.in!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in	  if(this.in!=    null)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
162	[BUG]  [BUGGY]  if(this.in!=  null)  {  System.arraycopyFOUR_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.in!=  null)  {  System.arraycopyFOUR_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.in!=  null)  {  System.arraycopyFOUR_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }	  if(this.in!=    null)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
163	[BUG]  [BUGGY]  if(this.key!=  null  ||  this.blockSize  >  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key!=  null  ||  this.blockSize  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key!=  null  ||  this.blockSize  >  0)  {	  if(this.key!=    null    &&    this.blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
164	[BUG]  [BUGGY]  if(this.blockSize!=  null  &&  this.keyLength  >  0)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize!=  null  &&  this.keyLength  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize!=  null  &&  this.keyLength  >  0)  {	  if(this.key!=    null    &&    this.blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
165	[BUG]  [BUGGY]  if(this.key!=  null  &&  this.blockSize  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key!=  null  &&  this.blockSize  <  =  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key!=  null  &&  this.blockSize  <  =  0)  {	  if(this.key!=    null    &&    this.blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
166	[BUG]  [BUGGY]  if(this.blockSize!=  null  &&  this.key.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize!=  null  &&  this.key.length  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize!=  null  &&  this.key.length  >  0)  {	  if(this.key!=    null    &&    this.blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
167	[BUG]  [BUGGY]  if(this.key!=  null  &&  blockSize  >  0)  {  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key!=  null  &&  blockSize  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key!=  null  &&  blockSize  >  0)  {	  if(this.key!=    null    &&    this.blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
168	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(TWO_BYTES_BUF,  0,  BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
169	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  1);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  1);	  readFully(FOUR_BYTES_BUF,    0,    BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
170	[BUG]  [BUGGY]  readFully(BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
171	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  2);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  2);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  2);	  readFully(FOUR_BYTES_BUF,    0,    BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
172	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);	  readFully(TOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
173	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TOUR_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(TWO_BYTES_BUF,  0,  TOUR_BYTES_BUF.length);	  readFully(TOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
174	[BUG]  [BUGGY]  if(this.blockSize  ==  null  ||  this.entry!=  0)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  ==  null  ||  this.entry!=  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  ==  null  ||  this.entry!=  0)  {	  if(this.entry    ==    null    ||    this.blockSize!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
175	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.length);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
176	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.nextPosition,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.nextPosition,  TWO_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.nextPosition,  TWO_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
177	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.nextCPIOEntry.length);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.nextCPIOEntry.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.nextCPIOEntry.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
178	[BUG]  [BUGGY]  if(this.blockSize!=  0)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize!=  0)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize!=  0)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
179	[BUG]  [BUGGY]  if(this.blockSize  ==  0)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  ==  0)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  ==  0)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
180	[BUG]  [BUGGY]  if(this.blockSize  >  blockSize)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  >  blockSize)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  >  blockSize)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
181	[BUG]  [BUGGY]  if(this.blockSize  >  blockSize)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  >  blockSize)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  >  blockSize)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
182	[BUG]  [BUGGY]  if(this.blockSize  >  0)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  >  0)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  >  0)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
183	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.tmpbuf!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.tmpbuf!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
184	[BUG]  [BUGGY]  if(this.entry!=  null  &&  this.entry.length  <  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  &&  this.entry.length  <  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  &&  this.entry.length  <  0)  {	  if(this.entry!=    null    ||    this.entry.length    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
185	[BUG]  [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length  +  1);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length  +  1);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length  +  1);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
186	[BUG]  [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.blockSize,  this.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.blockSize,  this.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(TOUR_BYTES_BUF,  0,  this.blockSize,  this.length);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
187	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
188	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entryEOF)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
189	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  +  1);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  +  1);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  +  1);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
190	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  1);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  1);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  1);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
191	[BUG]  [BUGGY]  System.arraycopy(this.blockSize,  0,  FOUR_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(this.blockSize,  0,  FOUR_BYTES_BUF);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(this.blockSize,  0,  FOUR_BYTES_BUF);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
192	[BUG]  [BUGGY]  System.arraycopy(this.blockSize,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(this.blockSize,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(this.blockSize,  0,  FOUR_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
193	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize,  0);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize,  0);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize,  0);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
194	[BUG]  [BUGGY]  if(this.cpioArchiveEntry  >=  null)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.cpioArchiveEntry  >=  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.cpioArchiveEntry  >=  null)  {	  if(this.cpioArchiveEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
195	[BUG]  [BUGGY]  if(this.nextCpioEntry!=  null)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.nextCpioEntry!=  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.nextCpioEntry!=  null)  {	  if(this.nextCPIOEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
196	[BUG]  [BUGGY]  if(this.in!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.in.length);  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.in!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.in.length);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.in!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.in.length);  }	  if(this.in!=    null)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
197	[BUG]  [BUGGY]  if(this.in!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.in!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.in!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length	  if(this.in!=    null)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
198	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  +  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  +  1);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  +  1);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
199	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.length);	  readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
200	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  3);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  3);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  3);	  readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
201	[BUG]  [BUGGY]  if(this.key  ==  null  &&  this.blockSize  >  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  &&  this.blockSize  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  &&  this.blockSize  >  0)  {	  if(this.key!=    null    &&    this.blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
202	[BUG]  [BUGGY]  if(this.key  ==  null  ||  this.blockSize  >  0)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  ||  this.blockSize  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  ||  this.blockSize  >  0)  {	  if(this.key!=    null    &&    this.blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
203	[BUG]  [BUGGY]  if(this.entry!=  null  &&  this.blockSize  <  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  &&  this.blockSize  <  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  &&  this.blockSize  <  0)  {	  if(this.entry!=    null    ||    this.blockSize    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
204	[BUG]  [BUGGY]  if(this.key  ==  null  &&  this.entry  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  &&  this.entry  ==  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  &&  this.entry  ==  null)  {	  if(this.key!=    null    &&    this.entry    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
205	[BUG]  [BUGGY]  if(this.key  ==  null  ||  this.entry  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  ||  this.entry  ==  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  ||  this.entry  ==  null)  {	  if(this.key!=    null    &&    this.entry    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
206	[BUG]  [BUGGY]  if(this.key  ==  null  &&  this.entry!=  null)  {  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  &&  this.entry!=  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  &&  this.entry!=  null)  {	  if(this.key!=    null    &&    this.entry    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
207	[BUG]  [BUGGY]  readFully(this.block,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(this.block,  0,  this.blockSize);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(this.block,  0,  this.blockSize);	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
208	[BUG]  [BUGGY]  readFully(this.entryBytesRead,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(this.entryBytesRead,  0,  this.blockSize);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(this.entryBytesRead,  0,  this.blockSize);	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
209	[BUG]  [BUGGY]  readFully(THIS_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(THIS_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(THIS_BUF,  0,  TWO_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
210	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.tmpbuf!=  null)  {  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.tmpbuf!=  null)  {  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
211	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entryEOF)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
212	[BUG]  [BUGGY]  if(this.entry  ==  null  &&  this.entry.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  &&  this.entry.length  ==  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  &&  this.entry.length  ==  0)  {	  if(this.entry!=    null    &&    this.entry.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
213	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_KEY))  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_KEY))  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_KEY))  {	  if(this.entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
214	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(this.entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
215	[BUG]  [BUGGY]  if(this.key  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
216	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  this.blockSize  >  0)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  this.blockSize  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  this.blockSize  >  0)  {	  if(this.entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
217	[BUG]  [BUGGY]  if(this.out  ==  null  ||  this.entry!=  null)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.out  ==  null  ||  this.entry!=  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.out  ==  null  ||  this.entry!=  null)  {	  if(this.entry    ==    null    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
218	[BUG]  [BUGGY]  if(this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.in!=  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.in!=  null)  {	  if(this.entry    ==    null    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
219	[BUG]  [BUGGY]  if(this.entry  ==  0  ||  this.blockSize  ==  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  0  ||  this.blockSize  ==  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  0  ||  this.blockSize  ==  0)  {	  if(this.blockSize    ==    0    ||    this.entry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
220	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  this.blockSize);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  this.blockSize);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
221	[BUG]  [BUGGY]  if(this.key  ==  null  ||  this.key!=  null)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  ||  this.key!=  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  ||  this.key!=  null)  {	  if(this.key    ==    null    ||    this.key.length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
222	[BUG]  [BUGGY]  if(this.key  ==  null  ||  this.blockSize!=  0)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  ||  this.blockSize!=  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  ||  this.blockSize!=  0)  {	  if(this.key    ==    null    ||    this.key.length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
223	[BUG]  [BUGGY]  if(this.key  ==  null  ||  this.value.length!=  0)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  ||  this.value.length!=  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  ||  this.value.length!=  0)  {	  if(this.key    ==    null    ||    this.key.length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
224	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  this.blockSize  <  1)  {  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  this.blockSize  <  1)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  this.blockSize  <  1)  {	  if(this.entry    ==    null    ||    this.blockSize    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
225	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {	  if(this.entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
226	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(this.entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
227	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closeEntry())  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closeEntry())  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  closeEntry())  {	  if(this.entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
228	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_FILE))  {	  if(this.entry    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
229	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  -  1,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  -  1,  TWO_BYTES_BUF.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  -  1,  TWO_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
230	[BUG]  [BUGGY]  if(this.in!=  null)  {  System.arraycopy(SIZE_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(SIZE_BYTES_BUF,  0,  this.in.length);  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.in!=  null)  {  System.arraycopy(SIZE_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(SIZE_BYTES_BUF,  0,  this.in.length);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.in!=  null)  {  System.arraycopy(SIZE_BYTES_BUF,  0,  this.in.length);  }  else  {  System.arraycopy(SIZE_BYTES_BUF,  0,  this.in.length);  }	  if(this.in!=    null)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
231	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  1,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  1,  this.blockSize);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  1,  this.blockSize);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
232	[BUG]  [BUGGY]  if(this.entry!=  null  ||  this.key.length  <  0)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  ||  this.key.length  <  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  ||  this.key.length  <  0)  {	  if(this.key!=    null    ||    this.key.length    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
233	[BUG]  [BUGGY]  if(this.key  ==  null  ||  this.entryEOF)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  ||  this.entryEOF)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  ||  this.entryEOF)  {	  if(this.key    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
234	[BUG]  [BUGGY]  if(this.key  ==  null  ||  this.blockSize  ==  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  ||  this.blockSize  ==  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  ||  this.blockSize  ==  0)  {	  if(this.key    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
235	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  this.blockSize  <  =  1)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  this.blockSize  <  =  1)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  this.blockSize  <  =  1)  {	  if(this.entry    ==    null    ||    this.blockSize    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
236	[BUG]  [BUGGY]  if(this.nextCPIOEntry!=  null  &&  this.blockSize  >  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.nextCPIOEntry!=  null  &&  this.blockSize  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.nextCPIOEntry!=  null  &&  this.blockSize  >  0)  {	  if(this.nextCPIOEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
237	[BUG]  [BUGGY]  if(this.nextCPIOEntry!=  null  &&  this.entry.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.nextCPIOEntry!=  null  &&  this.entry.length  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.nextCPIOEntry!=  null  &&  this.entry.length  >  0)  {	  if(this.nextCPIOEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
238	[BUG]  [BUGGY]  if(this.entry!=  null  &&  this.keyWriter  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  &&  this.keyWriter  ==  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  &&  this.keyWriter  ==  null)  {	  if(this.key!=    null    &&    this.entry    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
239	[BUG]  [BUGGY]  if(this.entry!=  null  &&  this.keyOffset  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  &&  this.keyOffset  ==  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  &&  this.keyOffset  ==  null)  {	  if(this.key!=    null    &&    this.entry    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
240	[BUG]  [BUGGY]  if(this.cpioArchiveEntry!=  null  &&  this.cpioArchiveEntry.length  >  0)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.cpioArchiveEntry!=  null  &&  this.cpioArchiveEntry.length  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.cpioArchiveEntry!=  null  &&  this.cpioArchiveEntry.length  >  0)  {	  if(this.cpioArchiveEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
241	[BUG]  [BUGGY]  if(this.cpioArchiveEntry!=  null  &&  this.cpioArchiveInputStream!=  null)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.cpioArchiveEntry!=  null  &&  this.cpioArchiveInputStream!=  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.cpioArchiveEntry!=  null  &&  this.cpioArchiveInputStream!=  null)  {	  if(this.cpioArchiveEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
242	[BUG]  [BUGGY]  if(this.cpioArchiveEntry!=  null  &&  this.blockSize  >  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.cpioArchiveEntry!=  null  &&  this.blockSize  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.cpioArchiveEntry!=  null  &&  this.blockSize  >  0)  {	  if(this.cpioArchiveEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
243	[BUG]  [BUGGY]  if(this.cpioArchiveEntry!=  null  &&  this.entry.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.cpioArchiveEntry!=  null  &&  this.entry.length  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.cpioArchiveEntry!=  null  &&  this.entry.length  >  0)  {	  if(this.cpioArchiveEntry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
244	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  +  1,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  +  1,  this.blockSize);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  +  1,  this.blockSize);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
245	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(FOUR_BYTES_  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.tmpbuf!=  null)  {  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(FOUR_BYTES_  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.tmpbuf!=  null)  {  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  else  {  System.arraycopy(FOUR_BYTES_	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
246	[BUG]  [BUGGY]  if(this.blockSize  <  =  0)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.blockSize  <  =  0)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.blockSize  <  =  0)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
247	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  +  1);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  +  1);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  +  1);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
248	[BUG]  [BUGGY]  if(this.key  ==  null  &&  this.key!=  null  &&  this.key.length  >  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.key  ==  null  &&  this.key!=  null  &&  this.key.length  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.key  ==  null  &&  this.key!=  null  &&  this.key.length  >  0)  {	  if(this.key!=    null    &&    this.key.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
249	[BUG]  [BUGGY]  if(this.entry!=  null  &&  this.key.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  &&  this.key.length  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  &&  this.key.length  >  0)  {	  if(this.key!=    null    &&    this.key.length    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
250	[BUG]  [BUGGY]  if(this.entry!=  null  &&  blockSize  >  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  &&  blockSize  >  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  &&  blockSize  >  0)  {	  if(this.key!=    null    &&    this.blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
251	[BUG]  [BUGGY]  System.arraycopy(this.blockSize,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(this.blockSize,  0,  this.blockSize);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(this.blockSize,  0,  this.blockSize);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
252	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entryEOF)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
253	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  1);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  1);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  1);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  }	  if(this.entryEOF)    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
254	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  -  2);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  -  2);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  -  2);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
255	[BUG]  [BUGGY]  if(this.entryEOF)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entryEOF)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entryEOF)  {	  if(this.blockSize    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
256	[BUG]  [BUGGY]  if(this.entry!=  null  ||  blockSize  <  =  1)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  ||  blockSize  <  =  1)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  ||  blockSize  <  =  1)  {	  if(this.entry!=    null    ||    blockSize    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
257	[BUG]  [BUGGY]  if(this.entry!=  null  ||  this.key.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry!=  null  ||  this.key.length  ==  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry!=  null  ||  this.key.length  ==  0)  {	  if(this.key!=    null    ||    this.key.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
258	[BUG]  [BUGGY]  System.arraycopy(ARRAY_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  System.arraycopy(ARRAY_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	System.arraycopy(ARRAY_BYTES_BUF,  0,  this.entry.length);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
259	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  2);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  2);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  2);	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
260	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF);  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryEOF);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
261	[BUG]  [BUGGY]  if(this.entryEOF  ==  0  ||  this.blockSize  ==  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entryEOF  ==  0  ||  this.blockSize  ==  0)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entryEOF  ==  0  ||  this.blockSize  ==  0)  {	  if(this.blockSize    ==    0    ||    this.entry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
262	[BUG]  [BUGGY]  if(this.entryEOF  ==  0  ||  this.blockSize!=  null)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entryEOF  ==  0  ||  this.blockSize!=  null)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entryEOF  ==  0  ||  this.blockSize!=  null)  {	  if(this.blockSize    ==    0    ||    this.entry!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
263	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  this.entry.length  <  2)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();      [BUGGY]  if(this.entry  ==  null  ||  this.entry.length  <  2)  {  [BUGGY]      closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	188	188	1	replace	if(this.entry  ==  null  ||  this.entry.length  <  2)  {	  if(this.entry    ==    null    ||    this.entry.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
