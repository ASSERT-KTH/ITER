bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.toString());  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.toString());  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.toString());	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.toString());    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
2	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.toString(),  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.toString(),  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.toString(),  this.tmpbuf.length);	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.toString());    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
3	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.toString().equalsIgnoreCase(this.tmpbuf.toString());  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.toString().equalsIgnoreCase(this.tmpbuf.toString());  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.toString().equalsIgnoreCase(this.tmpbuf.toString());	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.toString());    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
4	[BUG]  [BUGGY]  this.entryEOF  =  null.equalsIgnoreCase(this.tmpbuf.toString());  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  null.equalsIgnoreCase(this.tmpbuf.toString());  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  null.equalsIgnoreCase(this.tmpbuf.toString());	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.toString());    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
5	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entry    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
6	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entry    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
7	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entry    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
8	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entry    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
9	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entry    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
10	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entry    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getData  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getData  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getData	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
12	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
13	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
14	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getData  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getData  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getData	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
16	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.cloneTree();  }  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.cloneTree();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.cloneTree();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
17	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData  }  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
18	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf,  this.tmpbuf.length);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
19	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length  +  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length  +  1);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
20	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length  -  1);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
21	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR,  true);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR,  true);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR,  true);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.AUTO_CLOSE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
22	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)||  isEnabled(Feature.AUTO_CLOSE_ERROR);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)||  isEnabled(Feature.AUTO_CLOSE_ERROR);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)||  isEnabled(Feature.AUTO_CLOSE_ERROR);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.AUTO_CLOSE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
23	[BUG]  [BUGGY]  this.entryEOF  =  isEnabled(Feature.AUTO_CLOSE_ERROR);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  isEnabled(Feature.AUTO_CLOSE_ERROR);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  isEnabled(Feature.AUTO_CLOSE_ERROR);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.AUTO_CLOSE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
24	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.AUTO_CLOSE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
25	[BUG]  [BUGGY]  this.entryEOF  = ",null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  = ",null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  = ",null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.AUTO_CLOSE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
26	[BUG]  [BUGGY]  this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  1);	  this.entryEOF    =    new    ByteArrayInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length  +  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length  +  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length  +  1);	  this.entryEOF    =    new    ByteArrayInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
28	[BUG]  [BUGGY]  this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  2);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  2);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  2);	  this.entryEOF    =    new    ByteArrayInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
29	[BUG]  [BUGGY]  this.entryEOF  =  new  ByteArrayInputStream(this.tmpBuf,  0,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  ByteArrayInputStream(this.tmpBuf,  0,  this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  ByteArrayInputStream(this.tmpBuf,  0,  this.tmpbuf.length  -  1);	  this.entryEOF    =    new    ByteArrayInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
30	[BUG]  [BUGGY]  this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  4);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  4);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  4);	  this.entryEOF    =    new    ByteArrayInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  this.entryEOF  =  new  ByteArrayInputStream(this.tmpBuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  ByteArrayInputStream(this.tmpBuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  ByteArrayInputStream(this.tmpBuf,  0,  this.tmpbuf.length);	  this.entryEOF    =    new    ByteArrayInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
32	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  }	  in.close();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
33	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  out.write(this.tmpbuf,  0,  this.tmpbuf.length);  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  out.write(this.tmpbuf,  0,  this.tmpbuf.length);  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  out.write(this.tmpbuf,  0,  this.tmpbuf.length);  }	  in.close();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
34	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {	  in.close();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
35	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {	  in.close();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
36	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  this.tmpbuf.close();  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  this.tmpbuf.close();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  this.tmpbuf.close();  }	  in.close();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
37	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  -  1));  closeEntry();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  -  1));  closeEntry();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  -  1));  closeEntry();	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length));    closeEntry();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
38	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  closeEntry();  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  closeEntry();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  closeEntry();  }	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length));    closeEntry();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
39	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length),  this.blockSize);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length),  this.blockSize);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length),  this.blockSize);	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length));    closeEntry();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
40	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.out,  0,  this.tmpbuf.length));  closeEntry();  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.out,  0,  this.tmpbuf.length));  closeEntry();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.out,  0,  this.tmpbuf.length));  closeEntry();	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length));    closeEntry();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
41	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  +  1));  closeEntry();  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  +  1));  closeEntry();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  +  1));  closeEntry();	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length));    closeEntry();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
42	[BUG]  [BUGGY]  this.entryEOF  |=  FOUR_BYTES_BUF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  FOUR_BYTES_BUF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  FOUR_BYTES_BUF;	  this.entryEOF    |=    null;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
43	[BUG]  [BUGGY]  this.entryEOF  |=  this.tmpbuf;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  this.tmpbuf;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  this.tmpbuf;	  this.entryEOF    |=    null;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
44	[BUG]  [BUGGY]  this.entryEOF  |=  SIX_BYTES_BUF;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  SIX_BYTES_BUF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  SIX_BYTES_BUF;	  this.entryEOF    |=    null;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
45	[BUG]  [BUGGY]  this.entryEOF  &=  null;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  null;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  null;	  this.entryEOF    |=    null;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
46	[BUG]  [BUGGY]  this.entryEOF  |=  tmpbuf;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  tmpbuf;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  tmpbuf;	  this.entryEOF    |=    null;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
47	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  +  1));  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  +  1));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  +  1));	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length    -    1));    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
48	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  -  2));  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  -  2));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  -  2));	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length    -    1));    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
49	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length),  this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length),  this.blockSize  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length),  this.blockSize  -  1);	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length    -    1));    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
50	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpBuf,  0,  this.tmpbuf.length  -  1));  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpBuf,  0,  this.tmpbuf.length  -  1));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpBuf,  0,  this.tmpbuf.length  -  1));	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length    -    1));    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
51	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length),  this.entryEOF);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length),  this.entryEOF);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length),  this.entryEOF);	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length    -    1));    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
52	[BUG]  [BUGGY]  if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmp    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
53	[BUG]  [BUGGY]  if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmp    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
54	[BUG]  [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmp    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
55	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
56	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
57	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
58	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)||  isEnabled(Feature.QUOTE_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)||  isEnabled(Feature.QUOTE_BYTES_BUF);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)||  isEnabled(Feature.QUOTE_BYTES_BUF);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_BYTES_BUF);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
59	[BUG]  [BUGGY]  this.entryEOF  =  isEnabled(Feature.QUOTE_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  isEnabled(Feature.QUOTE_BYTES_BUF);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  isEnabled(Feature.QUOTE_BYTES_BUF);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_BYTES_BUF);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
60	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_BYTES_BUF,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_BYTES_BUF,  this.blockSize);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_BYTES_BUF,  this.blockSize);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_BYTES_BUF);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
61	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf)&&  isEnabled(Feature.QUOTE_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf)&&  isEnabled(Feature.QUOTE_BYTES_BUF);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf)&&  isEnabled(Feature.QUOTE_BYTES_BUF);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_BYTES_BUF);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
62	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.blockSize);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.blockSize);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.blockSize);	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
63	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length);	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
64	[BUG]  [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf);	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
65	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length);	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
66	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.length);	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
67	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf);	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
68	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
69	[BUG]  [BUGGY]  if(entry  ==  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry  ==  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry  ==  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
73	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
75	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBytesRead    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
76	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBytesRead    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
77	[BUG]  [BUGGY]  InputStream  in)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBytesRead    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
78	[BUG]  [BUGGY]  this.entryEOF  &=  0;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  0;	  this.entryEOF    |=    0;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
79	[BUG]  [BUGGY]  this.entryEOF  |=  0L;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  0L;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  0L;	  this.entryEOF    |=    0;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
80	[BUG]  [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=(this.tmpbuf.length  -  1);	  this.entryEOF    |=    0;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
81	[BUG]  [BUGGY]  this.entryEOF  |=  2;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  2;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  2;	  this.entryEOF    |=    0;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
82	[BUG]  [BUGGY]  this.entryEOF  =  in;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  in;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  in;	  this.entryEOF    =    entry;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
83	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length  -  1);	  this.entryEOF    =    new    String(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
84	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length  +  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length  +  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length  +  1);	  this.entryEOF    =    new    String(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
85	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length  -  2);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length  -  2);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length  -  2);	  this.entryEOF    =    new    String(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
86	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpBuf,  0,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpBuf,  0,  this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpBuf,  0,  this.tmpbuf.length  -  1);	  this.entryEOF    =    new    String(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
87	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length  -  4);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length  -  4);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length  -  4);	  this.entryEOF    =    new    String(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
88	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length  +  2);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length  +  2);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length  +  2);	  this.entryEOF    =    new    String(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
89	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)/  1;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)/  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)/  1;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    0,    this.tmpbuf.length)+    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
90	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)+  2;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)+  2;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)+  2;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    0,    this.tmpbuf.length)+    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
91	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length  -  1)+  1;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length  -  1)+  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length  -  1)+  1;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    0,    this.tmpbuf.length)+    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
92	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)-  1;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)-  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)-  1;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    0,    this.tmpbuf.length)+    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
93	[BUG]  [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)+  1;  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)+  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)+  1;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    0,    this.tmpbuf.length)+    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
94	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpBuf,  0,  this.tmpbuf.length)+  1;  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpBuf,  0,  this.tmpbuf.length)+  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpBuf,  0,  this.tmpbuf.length)+  1;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    0,    this.tmpbuf.length)+    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
95	[BUG]  [BUGGY]  if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
96	[BUG]  [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
97	[BUG]  [BUGGY]  if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.entryEOF  =  false;  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.entryEOF  =  false;  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.entryEOF  =  false;  }	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
99	[BUG]  [BUGGY]  this.entryEOF  &=  1;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  1;	  this.entryEOF    |=    1;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
100	[BUG]  [BUGGY]  this.entryEOF  |=  1L;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  1L;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  1L;	  this.entryEOF    |=    1;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
101	[BUG]  [BUGGY]  this.entryEOF  |=  BYTES_BUF;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  BYTES_BUF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  BYTES_BUF;	  this.entryEOF    |=    1;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
102	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
103	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
104	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
105	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
106	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
107	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  1)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  1)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  1)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
108	[BUG]  [BUGGY]  this.EntryEOF  =  false,  this.tmpbuf.length  =  0;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  false,  this.tmpbuf.length  =  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  false,  this.tmpbuf.length  =  0;	  this.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
109	[BUG]  [BUGGY]  this.EntryEOF  =  false,  this.tmpbuf.length  >  0;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  false,  this.tmpbuf.length  >  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  false,  this.tmpbuf.length  >  0;	  this.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
110	[BUG]  [BUGGY]  this.EntryEOF  =  false,  this.tmpbuf.length  }  ;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  false,  this.tmpbuf.length  }  ;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  false,  this.tmpbuf.length  }  ;	  this.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
111	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
112	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
113	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
114	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
115	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpBuf[  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpBuf[  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpBuf[	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  ==  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  ==  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  ==	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
117	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
118	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmp  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmp  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmp	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
119	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  ==  illegal  start  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  ==  illegal  start  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  ==  illegal  start	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
120	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbu  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
121	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF!=  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF!=  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF!=	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
122	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
123	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf,  this.tmpbuf.length);	  this.entryEOF    =    new    String(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
124	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  this.blockSize);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf,  this.blockSize);	  this.entryEOF    =    new    String(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
125	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  +  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  +  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length  +  1);	  this.entryEOF    =    new    String(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
126	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpBuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpBuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpBuf,  0,  this.tmpbuf.length);	  this.entryEOF    =    new    String(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
127	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length,  this.blockSize);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length,  this.blockSize);	  this.entryEOF    =    new    String(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
128	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length  -  1);	  this.entryEOF    =    new    String(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF)  {  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF)  {  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF)  {	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
130	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
131	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
132	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
133	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
134	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
135	[BUG]  [BUGGY]  this.tryEOF  =  false;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tryEOF  =  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tryEOF  =  false;	  this.tryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
136	[BUG]  [BUGGY]  this.tryEOF  =  null;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tryEOF  =  null;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tryEOF  =  null;	  this.tryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
137	[BUG]  [BUGGY]  this.tryEOF  = " ";  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tryEOF  = " ";  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tryEOF  = " ";	  this.tryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
138	[BUG]  [BUGGY]  this.tryEOF  |=  true;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tryEOF  |=  true;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tryEOF  |=  true;	  this.tryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
139	[BUG]  [BUGGY]  this.tryEOF  :  false;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tryEOF  :  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tryEOF  :  false;	  this.tryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
140	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
141	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
142	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
143	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.closeEntry();  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.closeEntry();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.closeEntry();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
144	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.cloneTree();  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.cloneTree();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.cloneTree();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
145	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
146	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBy    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
147	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.toString().equals(this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.toString().equals(this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.toString().equals(this.tmpbuf.length);	  this.entryEOF    =   "/   ".equals(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
148	[BUG]  [BUGGY]  this.entryEOF  =   "/ ".equals(this.tmpbuf,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "/ ".equals(this.tmpbuf,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "/ ".equals(this.tmpbuf,  this.tmpbuf.length);	  this.entryEOF    =   "/   ".equals(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
149	[BUG]  [BUGGY]  this.entryEOF  =   "/ ".equals(this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "/ ".equals(this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "/ ".equals(this.tmpbuf.length  -  1);	  this.entryEOF    =   "/   ".equals(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
150	[BUG]  [BUGGY]  this.entryEOF  =   "/ ".equals(this.tmpbuf.length,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "/ ".equals(this.tmpbuf.length,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "/ ".equals(this.tmpbuf.length,  this.tmpbuf.length);	  this.entryEOF    =   "/   ".equals(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
151	[BUG]  [BUGGY]  this.entryEOF  &=  true;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  true;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  true;	  this.entryEOF    &=    false;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
152	[BUG]  [BUGGY]  this.entryEOF  &=  BYTE_BYTES_BUF;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  BYTE_BYTES_BUF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  BYTE_BYTES_BUF;	  this.entryEOF    &=    false;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
153	[BUG]  [BUGGY]  this.entryEOF  &=  BYTES_BUF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  BYTES_BUF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  BYTES_BUF;	  this.entryEOF    &=    false;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
154	[BUG]  [BUGGY]  this.tmpbuf  &=  false;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  &=  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  &=  false;	  this.entryEOF    &=    false;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
155	[BUG]  [BUGGY]  The.entryEOF  =  false;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  The.entryEOF  =  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	The.entryEOF  =  false;	  The.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
156	[BUG]  [BUGGY]  The.entryEOF  =  null;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  The.entryEOF  =  null;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	The.entryEOF  =  null;	  The.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
157	[BUG]  [BUGGY]  The.entryEOF  ||  entryEOF;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  The.entryEOF  ||  entryEOF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	The.entryEOF  ||  entryEOF;	  The.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
158	[BUG]  [BUGGY]  the.entryEOF  =  false;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  the.entryEOF  =  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	the.entryEOF  =  false;	  The.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
159	[BUG]  [BUGGY]  The.entryEOF  = " ";  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  The.entryEOF  = " ";  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	The.entryEOF  = " ";	  The.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
160	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
161	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
162	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp[  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp[  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp[	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
163	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
164	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
165	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpBuf[  [CE]  illegal  start  of  type  [FE]                                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpBuf[  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpBuf[	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
166	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getLength(),  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getLength(),  this.tmpbuf.length));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getLength(),  this.tmpbuf.length));	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength()));    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
167	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.getLength()));  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.getLength()));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.getLength()));	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength()));    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
168	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getName()));  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getName()));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getName()));	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength()));    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
169	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getLength()  +  1));  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getLength()  +  1));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getLength()  +  1));	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength()));    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
170	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getLength()  -  1));  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getLength()  -  1));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getLength()  -  1));	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength()));    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
171	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp[  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp[  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp[	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
172	[BUG]  [BUGGY]  this.tmpbuf[i]  =  entryEO  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf[i]  =  entryEO  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf[i]  =  entryEO	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEO    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
173	[BUG]  [BUGGY]  this.tmpbuf  =  new  byte[this.blockSize];  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  byte[this.blockSize];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  byte[this.blockSize];	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEO    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
174	[BUG]  [BUGGY]  this.tmpbuf  =  new  byte[FOUR_BYTES_BUF];  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  byte[FOUR_BYTES_BUF];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  byte[FOUR_BYTES_BUF];	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEO    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
175	[BUG]  [BUGGY]  this.tmpbuf  =  new  byte[FOUR_BYTES_BUF.length];  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  byte[FOUR_BYTES_BUF.length];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  byte[FOUR_BYTES_BUF.length];	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEO    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
176	[BUG]  [BUGGY]  this.tmpbuf  =  new  byte[FOUR_BYTES_BUF].read();  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  byte[FOUR_BYTES_BUF].read();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  byte[FOUR_BYTES_BUF].read();	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEO    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
177	[BUG]  [BUGGY]  this.tmpbuf[i]  =  entryEO;  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf[i]  =  entryEO;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf[i]  =  entryEO;	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEO    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
178	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryB  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryB  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryB	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryB    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
179	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  entryB  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  entryB  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  entryB	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryB    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
180	[BUG]  [BUGGY]  this.entryEOF  =  false.equals(this.tmpbuf.length)?  false  :  false;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false.equals(this.tmpbuf.length)?  false  :  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false.equals(this.tmpbuf.length)?  false  :  false;	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)?    false    :    false;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
181	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)?  false  :  true;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)?  false  :  true;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)?  false  :  true;	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)?    false    :    false;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
182	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)?  true  :  false;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)?  true  :  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)?  true  :  false;	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)?    false    :    false;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
183	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf,  this.tmpbuf.length)?  false  :  false;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf,  this.tmpbuf.length)?  false  :  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf,  this.tmpbuf.length)?  false  :  false;	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)?    false    :    false;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
184	[BUG]  [BUGGY]  this.entryEOF  =  null.equals(this.tmpbuf.length)?  false  :  false;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  null.equals(this.tmpbuf.length)?  false  :  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  null.equals(this.tmpbuf.length)?  false  :  false;	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)?    false    :    false;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
185	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  ==  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  ==  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  ==	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
186	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
187	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmp  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmp  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmp	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
188	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  ==  illegal  start  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  ==  illegal  start  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  ==  illegal  start	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
189	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
190	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbu  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
191	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF!=  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF!=  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF!=	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
192	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
193	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
194	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
195	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
196	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
197	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cp  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cp  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cp	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    Cpi    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
198	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  C  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  C  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  C	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    Cpi    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
199	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cp  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cp  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cp	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    Cpi    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
200	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpi  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpi  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpi  }	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    Cpi    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
201	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    Cpi    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
202	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpi  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpi  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpi	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    Cpi    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
203	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
204	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  1)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  1)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  1)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
205	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  ensureOpen();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  ensureOpen();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  ensureOpen();	  InputStream    in    =    new    BufferedInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
206	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  1);	  InputStream    in    =    new    BufferedInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
207	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  +  1);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  +  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  +  1);	  InputStream    in    =    new    BufferedInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
208	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  2);  ensureOpen();  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  2);  ensureOpen();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  2);  ensureOpen();	  InputStream    in    =    new    BufferedInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
209	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  +  1);  ensureOpen();  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  +  1);  ensureOpen();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  +  1);  ensureOpen();	  InputStream    in    =    new    BufferedInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
210	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  false;  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  false;  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  this.entryEOF  =  false;  }	  if(entry!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
211	[BUG]  [BUGGY]  if(entry  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch	  if(entry!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
212	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryEOF  =  false;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryEOF  =  false;  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryEOF  =  false;  }	  if(entry!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
213	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length  -  1));  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length  -  1));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length  -  1));	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
214	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length  +  1));  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length  +  1));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length  +  1));	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
215	[BUG]  [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length));	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
216	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length);	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
217	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length  -  1);	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
218	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  ==  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  ==  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  ==	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
219	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  ==  illegal  start  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  ==  illegal  start  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  ==  illegal  start	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
220	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
221	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF!=  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF!=  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF!=	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
222	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  +  2];  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  +  2];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  byte[this.tmpbuf.length  +  2];	  this.entryEOF    =    new    byte[this.tmpbuf.length];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
223	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf,  0,  this.tmpbuf.length];  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf,  0,  this.tmpbuf.length];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  byte[this.tmpbuf,  0,  this.tmpbuf.length];	  this.entryEOF    =    new    byte[this.tmpbuf.length];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
224	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  *  2];  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  *  2];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  byte[this.tmpbuf.length  *  2];	  this.entryEOF    =    new    byte[this.tmpbuf.length];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
225	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[this.tmpBuf.length  +  1];  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  byte[this.tmpBuf.length  +  1];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  byte[this.tmpBuf.length  +  1];	  this.entryEOF    =    new    byte[this.tmpbuf.length];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
226	[BUG]  [BUGGY]  this.entryEOF  |=  BYTE_BYTES_BUF  +  1;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  BYTE_BYTES_BUF  +  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  BYTE_BYTES_BUF  +  1;	  this.entryEOF    |=    BYTE_BYTES_BUF;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
227	[BUG]  [BUGGY]  this.entryEOF  |=  BYTE_BYTES_BUF,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  BYTE_BYTES_BUF,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  BYTE_BYTES_BUF,  this.tmpbuf.length);	  this.entryEOF    |=    BYTE_BYTES_BUF;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
228	[BUG]  [BUGGY]  this.entryEOF  |=  BYTE_BYTES_BUF,  this.tmpbuf.length;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  BYTE_BYTES_BUF,  this.tmpbuf.length;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  BYTE_BYTES_BUF,  this.tmpbuf.length;	  this.entryEOF    |=    BYTE_BYTES_BUF;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
229	[BUG]  [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  2?  false  :  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  2?  false  :  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=(this.tmpbuf.length  <  2?  false  :  this.tmpbuf.length);	  this.entryEOF    |=(this.tmpbuf.length    <    3)?    false    :    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
230	[BUG]  [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  1?  false  :  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  1?  false  :  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=(this.tmpbuf.length  <  1?  false  :  this.tmpbuf.length);	  this.entryEOF    |=(this.tmpbuf.length    <    3)?    false    :    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
231	[BUG]  [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  1)?  false  :  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  1)?  false  :  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=(this.tmpbuf.length  <  1)?  false  :  this.tmpbuf.length);	  this.entryEOF    |=(this.tmpbuf.length    <    3)?    false    :    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
232	[BUG]  [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  3)?  true  :  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  3)?  true  :  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=(this.tmpbuf.length  <  3)?  true  :  this.tmpbuf.length);	  this.entryEOF    |=(this.tmpbuf.length    <    3)?    false    :    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
233	[BUG]  [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  2)?  false  :  this.tmpbuf.length;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  2)?  false  :  this.tmpbuf.length;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=(this.tmpbuf.length  <  2)?  false  :  this.tmpbuf.length;	  this.entryEOF    |=(this.tmpbuf.length    <    3)?    false    :    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
234	[BUG]  [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.startsWith( "/ ")||  this.tmpbuf.endsWith( "/ "));  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.startsWith( "/ ")||  this.tmpbuf.endsWith( "/ "));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  this.tmpbuf.startsWith( "/ ")||  this.tmpbuf.endsWith( "/ "));	  Iterator.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
235	[BUG]  [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.startsWith( "/ ")||  this.tmpbuf.endsWith( ".java "));  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.startsWith( "/ ")||  this.tmpbuf.endsWith( ".java "));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  this.tmpbuf.startsWith( "/ ")||  this.tmpbuf.endsWith( ".java "));	  Iterator.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
236	[BUG]  [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.endsWith( ".java ")||  this.tmpbuf.length()  ==  0;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.endsWith( ".java ")||  this.tmpbuf.length()  ==  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  this.tmpbuf.endsWith( ".java ")||  this.tmpbuf.length()  ==  0;	  Iterator.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
237	[BUG]  [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.startsWith( "/ ")||  this.tmpbuf.length()  >  0;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.startsWith( "/ ")||  this.tmpbuf.length()  >  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  this.tmpbuf.startsWith( "/ ")||  this.tmpbuf.length()  >  0;	  Iterator.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
238	[BUG]  [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.endsWith( ".java ")?  false  :  this.tmpbuf.length;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.endsWith( ".java ")?  false  :  this.tmpbuf.length;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  this.tmpbuf.endsWith( ".java ")?  false  :  this.tmpbuf.length;	  Iterator.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
239	[BUG]  [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.startsWith( "/ ")||  this.tmpbuf.endsWith( ".js ");  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.startsWith( "/ ")||  this.tmpbuf.endsWith( ".js ");  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  this.tmpbuf.startsWith( "/ ")||  this.tmpbuf.endsWith( ".js ");	  Iterator.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
240	[BUG]  [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  2)?  true  :  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  2)?  true  :  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=(this.tmpbuf.length  <  2)?  true  :  this.tmpbuf.length);	  this.entryEOF    |=(this.tmpbuf.length    <    2)?    false    :    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
241	[BUG]  [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  2)?  false  :  this.tmpbuf.length  +  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  2)?  false  :  this.tmpbuf.length  +  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=(this.tmpbuf.length  <  2)?  false  :  this.tmpbuf.length  +  1);	  this.entryEOF    |=(this.tmpbuf.length    <    2)?    false    :    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
242	[BUG]  [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  0)?  false  :  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  0)?  false  :  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=(this.tmpbuf.length  <  0)?  false  :  this.tmpbuf.length);	  this.entryEOF    |=(this.tmpbuf.length    <    2)?    false    :    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
243	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpBu  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpBu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpBu	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpBuf[    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
244	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpBu  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpBu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpBu	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpBuf[    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
245	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpBuf[  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpBuf[  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpBuf[	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpBuf[    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
246	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
247	[BUG]  [BUGGY]  if(entry  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
248	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
249	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
250	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
251	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
252	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)||  isEnabled(Feature.AUTO_CLOSE_EXTENDS);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)||  isEnabled(Feature.AUTO_CLOSE_EXTENDS);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)||  isEnabled(Feature.AUTO_CLOSE_EXTENDS);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.AUTO_CLOSE_EXTENDS);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
253	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_EXTENDS,  true);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_EXTENDS,  true);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_EXTENDS,  true);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.AUTO_CLOSE_EXTENDS);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
254	[BUG]  [BUGGY]  this.entryEOF  =  isEnabled(Feature.AUTO_CLOSE_EXTENDS);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  isEnabled(Feature.AUTO_CLOSE_EXTENDS);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  isEnabled(Feature.AUTO_CLOSE_EXTENDS);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.AUTO_CLOSE_EXTENDS);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
255	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_EXTENDS);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_EXTENDS);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_EXTENDS);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.AUTO_CLOSE_EXTENDS);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
256	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
257	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
258	[BUG]  [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF  ==  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
259	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
260	[BUG]  [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF  ==  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
261	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  this.tmpbuf.length  >  1;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  this.tmpbuf.length  >  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  this.tmpbuf.length  >  1;	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    this.tmpbuf.length    >    0;    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
262	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  this.tmpbuf.length  <  =  0;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  this.tmpbuf.length  <  =  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  this.tmpbuf.length  <  =  0;	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    this.tmpbuf.length    >    0;    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
263	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  this.tmpbuf.length  ==  0;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  this.tmpbuf.length  ==  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  this.tmpbuf.length  ==  0;	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    this.tmpbuf.length    >    0;    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
264	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getLength(),  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getLength(),  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getLength(),  this.tmpbuf.length);	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength());    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
265	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getBytes());  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getBytes());  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getBytes());	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength());    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
266	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getLength()  +  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getLength()  +  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getLength()  +  1);	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength());    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
267	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.getLength());  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.getLength());  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.getLength());	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength());    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
268	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getName());  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getName());  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getName());	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength());    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
269	[BUG]  [BUGGY]  this.entryEOF  =  entryEOF.equalsIgnoreCase(this.tmpbuf.getLength());  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  entryEOF.equalsIgnoreCase(this.tmpbuf.getLength());  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  entryEOF.equalsIgnoreCase(this.tmpbuf.getLength());	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength());    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
270	[BUG]  [BUGGY]  this.EntryEOF  =  new  byte[this.tmpbuf.length];  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  new  byte[this.tmpbuf.length];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  new  byte[this.tmpbuf.length];	  this.EntryEOF    =   "noPMD   ";    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
271	[BUG]  [BUGGY]  this.EntryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length);	  this.EntryEOF    =   "noPMD   ";    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
272	[BUG]  [BUGGY]  this.EntryEOF  =  new  String(this.tmpbuf.length  -  1,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  new  String(this.tmpbuf.length  -  1,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  new  String(this.tmpbuf.length  -  1,  this.tmpbuf.length);	  this.EntryEOF    =   "noPMD   ";    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
273	[BUG]  [BUGGY]  this.EntryEOF  =  new  String(this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  new  String(this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  new  String(this.tmpbuf.length);	  this.EntryEOF    =   "noPMD   ";    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
274	[BUG]  [BUGGY]  this.EntryEOF  =  new  File(this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  new  File(this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  new  File(this.tmpbuf,  0,  this.tmpbuf.length);	  this.EntryEOF    =   "noPMD   ";    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
275	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpio  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpio  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpio	  if(entry!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArch    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
276	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch	  if(entry!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArch    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
277	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.entry!=  null)  {  this.entryEOF  =  false;  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  if(this.entry!=  null)  {  this.entryEOF  =  false;  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  if(this.entry!=  null)  {  this.entryEOF  =  false;  }	  if(entry!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArch    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
278	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpBuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
279	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpBuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
280	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpBuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
281	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpio  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpio  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpio	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpBuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
282	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpBuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
283	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF)  {  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF)  {  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF)  {	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
284	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
285	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
286	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
287	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
288	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
289	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
290	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
291	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
292	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
293	[BUG]  [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length  -  1));  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length  -  1));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length  -  1));	  This.entryEOF    =    this.in    ==    null?    false    :    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
294	[BUG]  [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length);	  This.entryEOF    =    this.in    ==    null?    false    :    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
295	[BUG]  [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length  +  1));  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length  +  1));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length  +  1));	  This.entryEOF    =    this.in    ==    null?    false    :    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
296	[BUG]  [BUGGY]  This.entryEOF  =  this.in!=  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in!=  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in!=  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length));	  This.entryEOF    =    this.in    ==    null?    false    :    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
297	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBy  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBy  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBy	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBy    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
298	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryB  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryB  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryB	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBy    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
299	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBy  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBy  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBy	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBy    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
300	[BUG]  [BUGGY]  if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  }	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
301	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  }	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
302	[BUG]  [BUGGY]  if(entryEOF  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
303	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
304	[BUG]  [BUGGY]  this.entryEOF  =  false;  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =	  this.entryEOF    =    true;    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
305	[BUG]  [BUGGY]  this.entryEOF  =  false;  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
306	[BUG]  [BUGGY]  this.entryEOF  =  false;  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =	  this.entryEOF    =    true;    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
307	[BUG]  [BUGGY]  this.entryEOF  =  false;  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =	  this.entryEOF    =    true;    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
308	[BUG]  [BUGGY]  this.entryEOF  =  false;  else  if(this.tmpbuf.length  >=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  else  if(this.tmpbuf.length  >=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  else  if(this.tmpbuf.length  >=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =	  this.entryEOF    =    true;    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
309	[BUG]  [BUGGY]  this.entryEOF  =  false;  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =	  this.entryEOF    =    true;    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
310	[BUG]  [BUGGY]  this.tmpbuf[i]  =  entryEOF  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf[i]  =  entryEOF  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf[i]  =  entryEOF	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
311	[BUG]  [BUGGY]  this.entryEOF  =  new  java.util.ArrayList();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  java.util.ArrayList();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  java.util.ArrayList();	  this.entryEOF    =   "java.util.ArrayList   ";    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
312	[BUG]  [BUGGY]  this.entryEOF  =  new  java.util.ArrayList(this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  java.util.ArrayList(this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  java.util.ArrayList(this.tmpbuf.length);	  this.entryEOF    =   "java.util.ArrayList   ";    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
313	[BUG]  [BUGGY]  this.entryEOF  =  new  java.util.ArrayList(this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  java.util.ArrayList(this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  java.util.ArrayList(this.tmpbuf,  0,  this.tmpbuf.length);	  this.entryEOF    =   "java.util.ArrayList   ";    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
314	[BUG]  [BUGGY]  this.entryEOF  =  new  ArrayList();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  ArrayList();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  ArrayList();	  this.entryEOF    =   "java.util.ArrayList   ";    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
315	[BUG]  [BUGGY]  this.entryEOF  =  new  java.util.ArrayList(this.tmpbuf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  java.util.ArrayList(this.tmpbuf);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  java.util.ArrayList(this.tmpbuf);	  this.entryEOF    =   "java.util.ArrayList   ";    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
316	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  ==  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  ==  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  ==	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
317	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
318	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  ==  illegal  start  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  ==  illegal  start  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  ==  illegal  start	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
319	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF!=  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF!=  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF!=	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
320	[BUG]  [BUGGY]  this.EntryEOF  =  entryEOF;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  entryEOF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  entryEOF;	  this.EntryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
321	[BUG]  [BUGGY]  this.EntryEOF  =  entry;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  entry;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  entry;	  this.EntryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
322	[BUG]  [BUGGY]  this.EntryEOF  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length);	  this.EntryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
323	[BUG]  [BUGGY]  this.EntryEOF  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length  -  1);	  this.EntryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
324	[BUG]  [BUGGY]  this.EntryEOF  =  new  byte[this.tmpbuf.length  +  1];  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  new  byte[this.tmpbuf.length  +  1];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  new  byte[this.tmpbuf.length  +  1];	  this.EntryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
325	[BUG]  [BUGGY]  this.EntryEOF  =  new  EntryEOF(this.tmpbuf);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  new  EntryEOF(this.tmpbuf);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  new  EntryEOF(this.tmpbuf);	  this.EntryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
326	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
327	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  closed  =  true;  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  closed  =  true;  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  closed  =  true;  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
328	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
329	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  closed  =  true;  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  closed  =  true;  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  closed  =  true;  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
330	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
331	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clon  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clon  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clon	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
332	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  closed  =  true  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  closed  =  true  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  closed  =  true	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
333	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone()  [CE]  illegal  start  of  type  [FE]                                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone()  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone()	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
334	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.t    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
335	[BUG]  [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length));	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
336	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length  -  1));  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length  -  1));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length  -  1));	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
337	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpBuf,  0,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpBuf,  0,  this.tmpbuf.length));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpBuf,  0,  this.tmpbuf.length));	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
338	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length  +  1));  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length  +  1));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length  +  1));	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
339	[BUG]  [BUGGY]  this.entryEOF  /=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  /=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  /=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length));	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
340	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  2);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  2);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  2);	  InputStream    in    =    new    BufferedInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
341	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpBuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpBuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpBuf.length  -  1);	  InputStream    in    =    new    BufferedInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
342	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpBuf,  0,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpBuf,  0,  this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedInputStream(this.tmpBuf,  0,  this.tmpbuf.length  -  1);	  InputStream    in    =    new    BufferedInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
343	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  4);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  4);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  4);	  InputStream    in    =    new    BufferedInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
344	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
345	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBytesRead    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
346	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entry    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
347	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entry    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
348	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entry    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
349	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entry    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
350	[BUG]  [BUGGY]  if(entry  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt	  if(entry    ==    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
351	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    <    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
352	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    <    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
353	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    <    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
354	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    <    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
355	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpio  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpio  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpio	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    <    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
356	[BUG]  [BUGGY]  this.entryEOF  =  isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  isEnabled(Feature.QUOTE_FIELD_NAMES);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_FIELD_NAMES);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
357	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)||  isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)||  isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)||  isEnabled(Feature.QUOTE_FIELD_NAMES);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_FIELD_NAMES);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
358	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_FIELD_NAMES);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
359	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_FIELD_NAMES);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
360	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  -  1));  in.close();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  -  1));  in.close();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  -  1));  in.close();	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length));    in.close();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
361	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  in.close();  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  in.close();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  in.close();  }	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length));    in.close();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
362	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.TWO_BYTES_BUF,  0,  this.tmpbuf.length));  in.close();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.TWO_BYTES_BUF,  0,  this.tmpbuf.length));  in.close();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.TWO_BYTES_BUF,  0,  this.tmpbuf.length));  in.close();	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length));    in.close();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
363	[BUG]  [BUGGY]  It.entryEOF  =  false;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  It.entryEOF  =  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	It.entryEOF  =  false;	  It.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
364	[BUG]  [BUGGY]  It.entryEOF  =  null;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  It.entryEOF  =  null;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	It.entryEOF  =  null;	  It.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
365	[BUG]  [BUGGY]  it.entryEOF  =  false;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  it.entryEOF  =  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	it.entryEOF  =  false;	  It.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
366	[BUG]  [BUGGY]  It.entryEOF  = " ";  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  It.entryEOF  = " ";  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	It.entryEOF  = " ";	  It.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
367	[BUG]  [BUGGY]  Iterator.entryEOF  =  null;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  null;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  null;	  It.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
368	[BUG]  [BUGGY]  this.entryEOF  &=  JSON_BYTES_BUF;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  JSON_BYTES_BUF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  JSON_BYTES_BUF;	  this.entryEOF    |=    JSON_BYTES_BUF;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
369	[BUG]  [BUGGY]  this.entryEOF  |=  JSON_BYTES_BUF  +  1;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JSON_BYTES_BUF  +  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JSON_BYTES_BUF  +  1;	  this.entryEOF    |=    JSON_BYTES_BUF;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
370	[BUG]  [BUGGY]  this.entryEOF  |=  JSON_BYTES_BUF,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JSON_BYTES_BUF,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JSON_BYTES_BUF,  this.tmpbuf.length);	  this.entryEOF    |=    JSON_BYTES_BUF;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
371	[BUG]  [BUGGY]  this.entryEOF  |=  JSON_BYTES_BUF,  this.tmpbuf.length;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JSON_BYTES_BUF,  this.tmpbuf.length;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JSON_BYTES_BUF,  this.tmpbuf.length;	  this.entryEOF    |=    JSON_BYTES_BUF;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
372	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt	  if(entry!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEnt    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
373	[BUG]  [BUGGY]  This.EntryEOF  =  false;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.EntryEOF  =  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.EntryEOF  =  false;	  This.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
374	[BUG]  [BUGGY]  This.EntryEOF  =  null;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.EntryEOF  =  null;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.EntryEOF  =  null;	  This.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
375	[BUG]  [BUGGY]  Iterator.EntryEOF  =  false;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.EntryEOF  =  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.EntryEOF  =  false;	  This.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
376	[BUG]  [BUGGY]  EntryEOF  =  false;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  EntryEOF  =  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	EntryEOF  =  false;	  This.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
377	[BUG]  [BUGGY]  Iterator.EntryEOF  =  true;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.EntryEOF  =  true;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.EntryEOF  =  true;	  This.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
378	[BUG]  [BUGGY]  if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
379	[BUG]  [BUGGY]  if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
380	[BUG]  [BUGGY]  if(entryEOF  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
381	[BUG]  [BUGGY]  IteratorIterator.entryEOF  =  false;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  IteratorIterator.entryEOF  =  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	IteratorIterator.entryEOF  =  false;	  Iterator.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
382	[BUG]  [BUGGY]  iterator.entryEOF  =  false;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  iterator.entryEOF  =  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	iterator.entryEOF  =  false;	  Iterator.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
383	[BUG]  [BUGGY]  Iterator.entryOF  =  false;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryOF  =  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryOF  =  false;	  Iterator.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
384	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)  }  ;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)  }  ;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)  }  ;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length)    }    ;    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
385	[BUG]  [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)  }  ;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)  }  ;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)  }  ;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length)    }    ;    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
386	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpBuf,  0,  this.tmpbuf.length)  }  ;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpBuf,  0,  this.tmpbuf.length)  }  ;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpBuf,  0,  this.tmpbuf.length)  }  ;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length)    }    ;    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
387	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  1,  this.tmpbuf.length)  }  ;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  1,  this.tmpbuf.length)  }  ;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  1,  this.tmpbuf.length)  }  ;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length)    }    ;    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
388	[BUG]  [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)  }  ;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)  }  ;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)  }  ;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length)    }    ;    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
389	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  -  1,  this.tmpbuf.length  +  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  -  1,  this.tmpbuf.length  +  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length  -  1,  this.tmpbuf.length  +  1);	  this.entryEOF    =    new    String(this.tmpbuf.length    -    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
390	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  this.tmpbuf.length  -  1,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  this.tmpbuf.length  -  1,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf,  this.tmpbuf.length  -  1,  this.tmpbuf.length);	  this.entryEOF    =    new    String(this.tmpbuf.length    -    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
391	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  -  1,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  -  1,  this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length  -  1,  this.tmpbuf.length  -  1);	  this.entryEOF    =    new    String(this.tmpbuf.length    -    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
392	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  -  1,  this.tmpbuf.length,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  -  1,  this.tmpbuf.length,  this.blockSize);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length  -  1,  this.tmpbuf.length,  this.blockSize);	  this.entryEOF    =    new    String(this.tmpbuf.length    -    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
393	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
394	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
395	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length  -  1));  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length  -  1));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length  -  1));	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
396	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length  +  1));  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length  +  1));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length  +  1));	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
397	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length  -  1);	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
398	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)+  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)+  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)+  1);	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
399	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  this.tmpbuf.length  +  1,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  this.tmpbuf.length  +  1,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf,  this.tmpbuf.length  +  1,  this.tmpbuf.length);	  this.entryEOF    =    new    String(this.tmpbuf.length    +    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
400	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  +  1,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  +  1,  this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length  +  1,  this.tmpbuf.length  -  1);	  this.entryEOF    =    new    String(this.tmpbuf.length    +    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
401	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  +  1,  this.tmpbuf.length,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  +  1,  this.tmpbuf.length,  this.blockSize);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length  +  1,  this.tmpbuf.length,  this.blockSize);	  this.entryEOF    =    new    String(this.tmpbuf.length    +    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
402	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpBuf,  this.tmpbuf.length  +  1,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpBuf,  this.tmpbuf.length  +  1,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpBuf,  this.tmpbuf.length  +  1,  this.tmpbuf.length);	  this.entryEOF    =    new    String(this.tmpbuf.length    +    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
403	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  /  1,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  /  1,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length  /  1,  this.tmpbuf.length);	  this.entryEOF    =    new    String(this.tmpbuf.length    +    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
404	[BUG]  [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length),  this.blockSize  }  ;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length),  this.blockSize  }  ;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length),  this.blockSize  }  ;	  This.entryEOF    =    this.in    ==    null?    false    :    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length)    }    ;    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
405	[BUG]  [BUGGY]  This.entryEOF  =  this.in!=  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)  }  ;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in!=  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)  }  ;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in!=  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)  }  ;	  This.entryEOF    =    this.in    ==    null?    false    :    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length)    }    ;    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
406	[BUG]  [BUGGY]  this.entryEOF  &=  TWO_BYTES_BUF;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  TWO_BYTES_BUF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  TWO_BYTES_BUF;	  this.entryEOF    |=    TWO_BYTES_BUF;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
407	[BUG]  [BUGGY]  this.entryEOF  |=  this.tmpbuf.length;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  this.tmpbuf.length;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  this.tmpbuf.length;	  this.entryEOF    |=    TWO_BYTES_BUF;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
408	[BUG]  [BUGGY]  this.entryEOF  -=  TWO_BYTES_BUF;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  -=  TWO_BYTES_BUF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  -=  TWO_BYTES_BUF;	  this.entryEOF    |=    TWO_BYTES_BUF;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
409	[BUG]  [BUGGY]  this.entryEOF  =  isEnabled(Feature.QUOTE_FIELD_NAME);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  isEnabled(Feature.QUOTE_FIELD_NAME);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  isEnabled(Feature.QUOTE_FIELD_NAME);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
410	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)||  isEnabled(Feature.QUOTE_FIELD_NAME);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)||  isEnabled(Feature.QUOTE_FIELD_NAME);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)||  isEnabled(Feature.QUOTE_FIELD_NAME);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
411	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAME,  true);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAME,  true);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAME,  true);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
412	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf)&&  isEnabled(Feature.QUOTE_FIELD_NAME);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf)&&  isEnabled(Feature.QUOTE_FIELD_NAME);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf)&&  isEnabled(Feature.QUOTE_FIELD_NAME);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
413	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length),  0);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length),  0);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length),  0);	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
414	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpBuf.length  -  1));  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpBuf.length  -  1));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpBuf.length  -  1));	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
415	[BUG]  [BUGGY]  this.entryEOF  =  TWO_BYTES_BUF;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  TWO_BYTES_BUF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  TWO_BYTES_BUF;	  this.entryEOF    =    tmpbuf;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
416	[BUG]  [BUGGY]  this.entryEOF  =  SIX_BYTES_BUF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  SIX_BYTES_BUF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  SIX_BYTES_BUF;	  this.entryEOF    =    tmpbuf;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
417	[BUG]  [BUGGY]  this.entryEOF  =  tmpbuf.length;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  tmpbuf.length;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  tmpbuf.length;	  this.entryEOF    =    tmpbuf;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
418	[BUG]  [BUGGY]  this.tmpBuf[i]  =  entryEOF  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpBuf[i]  =  entryEOF  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpBuf[i]  =  entryEOF	  this.entryEOF    =    true;    }    else    if(this.tmpBuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
419	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEnt    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
420	[BUG]  [BUGGY]  this.entryEOF  |=  NOPMD;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  NOPMD;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  NOPMD;	  this.entryEOF    |=    true;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
421	[BUG]  [BUGGY]  this.entryEOF  =  entryBytesRead.read();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  entryBytesRead.read();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  entryBytesRead.read();	  this.entryEOF    =    entryBytesRead;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
422	[BUG]  [BUGGY]  this.entryEOF  =  entryBytesRead.length;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  entryBytesRead.length;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  entryBytesRead.length;	  this.entryEOF    =    entryBytesRead;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
423	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf;	  this.entryEOF    =    entryBytesRead;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
424	[BUG]  [BUGGY]  this.tmpbuf[0]  =  entryEOF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf[0]  =  entryEOF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf[0]  =  entryEOF;	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
425	[BUG]  [BUGGY]  This.entryEOF  =  entry;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  entry;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  entry;	  This.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
426	[BUG]  [BUGGY]  This.entryEOF  =  entryEOF;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  entryEOF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  entryEOF;	  This.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
427	[BUG]  [BUGGY]  This.entryEOF  =  this;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this;	  This.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
428	[BUG]  [BUGGY]  This.entryEOF  = " ";  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  = " ";  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  = " ";	  This.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
429	[BUG]  [BUGGY]  This.entryEOF  =  EntryEOF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  EntryEOF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  EntryEOF;	  This.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
430	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this	  if(this.entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.t    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
431	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  -  1],  this.blockSize  -  1];  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  -  1],  this.blockSize  -  1];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  byte[this.tmpbuf.length  -  1],  this.blockSize  -  1];	  this.entryEOF    =    new    byte[this.tmpbuf.length    -    1];    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
432	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  -  2];  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  -  2];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  byte[this.tmpbuf.length  -  2];	  this.entryEOF    =    new    byte[this.tmpbuf.length    -    1];    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
433	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  /  1];  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  /  1];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  byte[this.tmpbuf.length  /  1];	  this.entryEOF    =    new    byte[this.tmpbuf.length    -    1];    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
434	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  *  1];  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  *  1];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  byte[this.tmpbuf.length  *  1];	  this.entryEOF    =    new    byte[this.tmpbuf.length    -    1];    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
435	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  -  1  +  1];  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  -  1  +  1];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  byte[this.tmpbuf.length  -  1  +  1];	  this.entryEOF    =    new    byte[this.tmpbuf.length    -    1];    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
436	[BUG]  [BUGGY]  if(entry  ==  null)  {  this.entryEOF  =  false;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry  ==  null)  {  this.entryEOF  =  false;  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry  ==  null)  {  this.entryEOF  =  false;  }	  if(entry    ==    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
437	[BUG]  [BUGGY]  if(entry  ==  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryEOF  =  false;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry  ==  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryEOF  =  false;  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry  ==  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryEOF  =  false;  }	  if(entry    ==    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
438	[BUG]  [BUGGY]  this.EntryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length);	  this.EntryEOF    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
439	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
440	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
441	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
442	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.closeEntry();  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.closeEntry();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.closeEntry();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
443	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.next();  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.next();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.next();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
444	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  +  1],  this.blockSize  +  1];  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  +  1],  this.blockSize  +  1];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  byte[this.tmpbuf.length  +  1],  this.blockSize  +  1];	  this.entryEOF    =    new    byte[this.tmpbuf.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
445	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  +  3];  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  +  3];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  byte[this.tmpbuf.length  +  3];	  this.entryEOF    =    new    byte[this.tmpbuf.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
446	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  +  4];  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  +  4];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  byte[this.tmpbuf.length  +  4];	  this.entryEOF    =    new    byte[this.tmpbuf.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
447	[BUG]  [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)>  1;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)>  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)>  1;	  This.entryEOF    =    this.in    ==    null?    false    :    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length)>    0;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
448	[BUG]  [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)  >=  0;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)  >=  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)  >=  0;	  This.entryEOF    =    this.in    ==    null?    false    :    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length)>    0;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
449	[BUG]  [BUGGY]  This.entryEOF  =  this.in!=  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)>  0;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in!=  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)>  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in!=  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)>  0;	  This.entryEOF    =    this.in    ==    null?    false    :    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length)>    0;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
450	[BUG]  [BUGGY]  this.EntryEOF  =  new  String[]  {   "null "  }  ;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  new  String[]  {   "null "  }  ;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  new  String[]  {   "null "  }  ;	  this.EntryEOF    =   "null   ";    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
451	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)>  0;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)>  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)>  0;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length)>    0;    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
452	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)>  1;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)>  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)>  1;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length)>    0;    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
453	[BUG]  [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)>  0;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)>  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)>  0;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length)>    0;    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
454	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpBuf,  0,  this.tmpbuf.length)>  0;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpBuf,  0,  this.tmpbuf.length)>  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpBuf,  0,  this.tmpbuf.length)>  0;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length)>    0;    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
455	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)  >=  0;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)  >=  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)  >=  0;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length)>    0;    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
456	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)  ==  0;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)  ==  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)  ==  0;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length)>    0;    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
457	[BUG]  [BUGGY]  This.entryEOF  =  this.in!=  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)+  1;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in!=  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)+  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in!=  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)+  1;	  This.entryEOF    =    this.in    ==    null?    false    :    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length)+    1;    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
458	[BUG]  [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)/  1;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)/  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)/  1;	  This.entryEOF    =    this.in    ==    null?    false    :    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length)+    1;    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
459	[BUG]  [BUGGY]  This.entryEOF  =  this.in  ==  null?  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length):  false;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in  ==  null?  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length):  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in  ==  null?  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length):  false;	  This.entryEOF    =    this.in!=    null?    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length):    false;    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
460	[BUG]  [BUGGY]  This.entryEOF  =  this.in!=  null?  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length  -  1):  false;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in!=  null?  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length  -  1):  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in!=  null?  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length  -  1):  false;	  This.entryEOF    =    this.in!=    null?    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length):    false;    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
461	[BUG]  [BUGGY]  This.entryEOF  =  this.in!=  null?  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length  +  1):  false;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in!=  null?  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length  +  1):  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in!=  null?  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length  +  1):  false;	  This.entryEOF    =    this.in!=    null?    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length):    false;    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
462	[BUG]  [BUGGY]  this.entryEOF  =  this.in!=  null?  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length):  false;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.in!=  null?  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length):  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.in!=  null?  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length):  false;	  This.entryEOF    =    this.in!=    null?    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length):    false;    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
463	[BUG]  [BUGGY]  This.entryEOF  =  this.in!=  null?  this.in.read(this.tmpBuf,  0,  this.tmpbuf.length):  false;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in!=  null?  this.in.read(this.tmpBuf,  0,  this.tmpbuf.length):  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in!=  null?  this.in.read(this.tmpBuf,  0,  this.tmpbuf.length):  false;	  This.entryEOF    =    this.in!=    null?    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length):    false;    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
464	[BUG]  [BUGGY]  this.entryEOF  =  isEnabled(Feature.QUOTE_BYTES_BUF,  this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  isEnabled(Feature.QUOTE_BYTES_BUF,  this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_BYTES_BUF);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  isEnabled(Feature.QUOTE_BYTES_BUF,  this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_BYTES_BUF);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_BYTES_BUF);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
465	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.tmpbuf.length);	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
466	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  1,  this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  1,  this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	System.arraycopy(FOUR_BYTES_BUF,  1,  this.tmpbuf,  0,  this.tmpbuf.length);	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
467	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.blockSize);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.blockSize);	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
468	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  entryEOF  =  false;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  entryEOF  =  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  entryEOF  =  false;	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
469	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  in.close();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  in.close();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  in.close();	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
470	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.tmpbuf.length  -  1);	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
471	[BUG]  [BUGGY]  this.EntryEOF  =  EntryEOF.getValue(this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  EntryEOF.getValue(this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  EntryEOF.getValue(this.tmpbuf,  0,  this.tmpbuf.length);	  this.EntryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
472	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBytesRead    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
473	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBytesRead    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
474	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.tmpBuf.length);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.tmpBuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.tmpBuf.length);	  this.entryEOF    =    true;    }    else    if(this.tmpBuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
475	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpBuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpBuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpBuf,  0,  this.tmpbuf.length);	  this.entryEOF    =    true;    }    else    if(this.tmpBuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
476	[BUG]  [BUGGY]  This.entryEOF  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length);	  This.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
477	[BUG]  [BUGGY]  This.entryEOF  =  new  byte[this.tmpbuf.length];  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  new  byte[this.tmpbuf.length];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  new  byte[this.tmpbuf.length];	  This.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
478	[BUG]  [BUGGY]  This.entryEOF  =  new  byte[this.tmpbuf.length  +  1];  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  new  byte[this.tmpbuf.length  +  1];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  new  byte[this.tmpbuf.length  +  1];	  This.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
479	[BUG]  [BUGGY]  This.entryEOF  =  new  EntryEOF(this.tmpbuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  new  EntryEOF(this.tmpbuf);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  new  EntryEOF(this.tmpbuf);	  This.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
480	[BUG]  [BUGGY]  This.entryEOF  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length  -  1);	  This.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
481	[BUG]  [BUGGY]  this.entryEOF  -=  BYTE_BYTES_BUF;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  -=  BYTE_BYTES_BUF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  -=  BYTE_BYTES_BUF;	  this.entryEOF    |=    BYTE_BYTES_BUF;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
482	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.getName().equalsIgnoreCase(this.tmpbuf.getLength()));  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.getName().equalsIgnoreCase(this.tmpbuf.getLength()));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.getName().equalsIgnoreCase(this.tmpbuf.getLength()));	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength()));    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
483	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.getString().equalsIgnoreCase(this.tmpbuf.getLength()));  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.getString().equalsIgnoreCase(this.tmpbuf.getLength()));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.getString().equalsIgnoreCase(this.tmpbuf.getLength()));	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength()));    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
484	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.equalsIgnoreCase(this.tmpbuf.getLength()));  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.equalsIgnoreCase(this.tmpbuf.getLength()));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.equalsIgnoreCase(this.tmpbuf.getLength()));	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength()));    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
485	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getBytes()));  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getBytes()));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getBytes()));	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength()));    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
486	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  1,  this.tmpbuf.length  -  1));  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  1,  this.tmpbuf.length  -  1));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  1,  this.tmpbuf.length  -  1));	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length    -    1));    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
487	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.in,  0,  this.tmpbuf.length  -  1));  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.in,  0,  this.tmpbuf.length  -  1));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.in,  0,  this.tmpbuf.length  -  1));	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length    -    1));    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
488	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  C  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  C  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  C	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
489	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp[  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp[  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp[	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpBuf[    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
490	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  closed  =  true  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  closed  =  true  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  closed  =  true	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
491	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clon  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clon  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clon	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
492	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  closed  =  true  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  closed  =  true  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  closed  =  true	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
493	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  closed  =  true  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  closed  =  true  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  closed  =  true	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
494	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
495	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
496	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
497	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
498	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
499	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
500	[BUG]  [BUGGY]  ((  CpioArchiveEntry)entry).closeEntry();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  ((  CpioArchiveEntry)entry).closeEntry();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	((  CpioArchiveEntry)entry).closeEntry();	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
501	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
502	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  if(this.entryEOF)  {  this.entryEOF  =  false;  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  if(this.entryEOF)  {  this.entryEOF  =  false;  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  if(this.entryEOF)  {  this.entryEOF  =  false;  }	  if(this.entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.t    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
503	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbu    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
504	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
505	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
506	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.substring(0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.substring(0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.substring(0,  this.tmpbuf.length);	  this.entryEOF    =   "/   ".equals(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
507	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.getName().equals(this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.getName().equals(this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.getName().equals(this.tmpbuf.length);	  this.entryEOF    =   "/   ".equals(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
508	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.length.equals(this.entryBytesRead);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.length.equals(this.entryBytesRead);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.length.equals(this.entryBytesRead);	  this.entryEOF    =   "/   ".equals(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
509	[BUG]  [BUGGY]  this.entryEOF  |=  JSON_BYTES_BUF  -  1;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JSON_BYTES_BUF  -  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JSON_BYTES_BUF  -  1;	  this.entryEOF    |=    JSON_BYTES_BUF;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
510	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
511	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entry!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entry!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
512	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
513	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
514	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  entryB  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  entryB  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  entryB	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryB    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
515	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
516	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
517	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
518	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.entryBytesRead,  0,  this.tmpbuf.length);  ensureOpen();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.entryBytesRead,  0,  this.tmpbuf.length);  ensureOpen();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedInputStream(this.entryBytesRead,  0,  this.tmpbuf.length);  ensureOpen();	  InputStream    in    =    new    BufferedInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
519	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
520	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
521	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
522	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
523	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
524	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
525	[BUG]  [BUGGY]  this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  3);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  3);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length  -  3);	  this.entryEOF    =    new    ByteArrayInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
526	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
527	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
528	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entry    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
529	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entry    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
530	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entry    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
531	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
532	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
533	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
534	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
535	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
536	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
537	[BUG]  [BUGGY]  this.EntryEOF  =  false;  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  false;  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  false;  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);	  this.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
538	[BUG]  [BUGGY]  this.EntryEOF  =  false;  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  1,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  false;  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  1,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  false;  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  1,  this.tmpbuf.length);	  this.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
539	[BUG]  [BUGGY]  this.EntryEOF  =  false;  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  false;  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  false;  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length  -  1);	  this.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
540	[BUG]  [BUGGY]  this.EntryEOF  =  false;  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length)+  1;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  false;  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length)+  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  false;  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length)+  1;	  this.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
541	[BUG]  [BUGGY]  this.EntryEOF  =  false;  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  false;  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  false;  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length));	  this.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
542	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  entry  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  entry	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
543	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)+  0;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)+  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)+  0;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    0,    this.tmpbuf.length)+    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
544	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch	  if(entry!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArch    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
545	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  C  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  C  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  C	  if(entry!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArch    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
546	[BUG]  [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length));	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
547	[BUG]  [BUGGY]  this.entryEOF  |=  NOPMD_BYTES_BUF;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  NOPMD_BYTES_BUF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  NOPMD_BYTES_BUF;	  this.entryEOF    |=    true;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
548	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedInputStream(FOUR_BYTES_BUF,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  BufferedInputStream(FOUR_BYTES_BUF,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedInputStream(FOUR_BYTES_BUF,  0,  this.tmpbuf.length);	  InputStream    in    =    new    BufferedInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
549	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  +  6];  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  +  6];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  byte[this.tmpbuf.length  +  6];	  this.entryEOF    =    new    byte[this.tmpbuf.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
550	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)+  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)+  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)+  1);	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
551	[BUG]  [BUGGY]  this.EntryEOF  =   "noPMD "  +  this.tmpbuf.length;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =   "noPMD "  +  this.tmpbuf.length;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =   "noPMD "  +  this.tmpbuf.length;	  this.EntryEOF    =   "noPMD   ";    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
552	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length  -  1)  }  ;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length  -  1)  }  ;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length  -  1)  }  ;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length)    }    ;    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
553	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)+  1  }  ;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)+  1  }  ;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)+  1  }  ;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length)    }    ;    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
554	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)!=  0;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)!=  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)!=  0;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length)    }    ;    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
555	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
556	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
557	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
558	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
559	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
560	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(ent  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(ent  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(ent	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
561	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
562	[BUG]  [BUGGY]  this.tryEOF  |=  false;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tryEOF  |=  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tryEOF  |=  false;	  this.tryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
563	[BUG]  [BUGGY]  this.entryEOF  |=  this.tmpbuf[0];  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  this.tmpbuf[0];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  this.tmpbuf[0];	  this.entryEOF    |=    null;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
564	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
565	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
566	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
567	[BUG]  [BUGGY]  if(entry  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
568	[BUG]  [BUGGY]  if(this.close)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.close)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.close)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.t    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
569	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.in,  0,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.in,  0,  this.tmpbuf.length));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.in,  0,  this.tmpbuf.length));	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
570	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.FOUR_BYTES_BUF,  0,  this.tmpbuf.length));  closeEntry();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.FOUR_BYTES_BUF,  0,  this.tmpbuf.length));  closeEntry();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.FOUR_BYTES_BUF,  0,  this.tmpbuf.length));  closeEntry();	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length));    closeEntry();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
571	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.in,  0,  this.tmpbuf.length));  closeEntry();  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.in,  0,  this.tmpbuf.length));  closeEntry();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.in,  0,  this.tmpbuf.length));  closeEntry();	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length));    closeEntry();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
572	[BUG]  [BUGGY]  Iterator  <  EntryEOF>  entries  =  new  ArrayList  <  EntryEOF>(this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator  <  EntryEOF>  entries  =  new  ArrayList  <  EntryEOF>(this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator  <  EntryEOF>  entries  =  new  ArrayList  <  EntryEOF>(this.tmpbuf.length);	  This.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
573	[BUG]  [BUGGY]  Iterator  <  EntryEOF>  entries  =  this.tmpbuf.entrySet();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator  <  EntryEOF>  entries  =  this.tmpbuf.entrySet();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator  <  EntryEOF>  entries  =  this.tmpbuf.entrySet();	  This.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
574	[BUG]  [BUGGY]  Iterator  <  EntryEOF>  entries  =  this.entryBytesRead.iterator();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator  <  EntryEOF>  entries  =  this.entryBytesRead.iterator();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator  <  EntryEOF>  entries  =  this.entryBytesRead.iterator();	  This.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
575	[BUG]  [BUGGY]  Iterator  <  EntryEOF>  entries  =  this.tmpbuf.iterator();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator  <  EntryEOF>  entries  =  this.tmpbuf.iterator();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator  <  EntryEOF>  entries  =  this.tmpbuf.iterator();	  This.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
576	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  *  1,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  *  1,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length  *  1,  this.tmpbuf.length);	  this.entryEOF    =    new    String(this.tmpbuf.length    -    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
577	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf,  this.tmpbuf.length  -  1);	  this.entryEOF    =    new    String(this.tmpbuf.length    -    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
578	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  -  2,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  -  2,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length  -  2,  this.tmpbuf.length);	  this.entryEOF    =    new    String(this.tmpbuf.length    -    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
579	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
580	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
581	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
582	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
583	[BUG]  [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	&&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
584	[BUG]  [BUGGY]  &&  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  &&  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	&&  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
585	[BUG]  [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	&&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
586	[BUG]  [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getData  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getData  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	&&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getData	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
587	[BUG]  [BUGGY]  &&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  &&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	&&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
588	[BUG]  [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	&&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
589	[BUG]  [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	&&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
590	[BUG]  [BUGGY]  This.entryEOF  =  this.in!=  null?  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length):  true;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in!=  null?  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length):  true;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in!=  null?  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length):  true;	  This.entryEOF    =    this.in!=    null?    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length):    false;    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
591	[BUG]  [BUGGY]  This.entryEOF  =  this.in!=  null?  this.in.read(this.buf,  0,  this.tmpbuf.length):  false;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in!=  null?  this.in.read(this.buf,  0,  this.tmpbuf.length):  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in!=  null?  this.in.read(this.buf,  0,  this.tmpbuf.length):  false;	  This.entryEOF    =    this.in!=    null?    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length):    false;    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
592	[BUG]  [BUGGY]  this.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)  }  ;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)  }  ;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)  }  ;	  This.entryEOF    =    this.in    ==    null?    false    :    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length)    }    ;    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
593	[BUG]  [BUGGY]  This.entryEOF  =  this.in  ==  null?  true  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)  }  ;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in  ==  null?  true  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)  }  ;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in  ==  null?  true  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)  }  ;	  This.entryEOF    =    this.in    ==    null?    false    :    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length)    }    ;    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
594	[BUG]  [BUGGY]  this.EntryEOF  =  new  String(this.tmpbuf.length  +  1,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  new  String(this.tmpbuf.length  +  1,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  new  String(this.tmpbuf.length  +  1,  this.tmpbuf.length);	  this.EntryEOF    =   "null   ";    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
595	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt	  if(entry!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEnt    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
596	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entryEOF  =  false;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entry!=  null)  {  this.entryEOF  =  false;  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entry!=  null)  {  this.entryEOF  =  false;  }	  if(entry!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEnt    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
597	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    <    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
598	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    <    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
599	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.getName().equalsIgnoreCase(this.tmpbuf.getLength());  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.getName().equalsIgnoreCase(this.tmpbuf.getLength());  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.getName().equalsIgnoreCase(this.tmpbuf.getLength());	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength());    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
600	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.equalsIgnoreCase(this.tmpbuf.getLength());  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.equalsIgnoreCase(this.tmpbuf.getLength());  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.equalsIgnoreCase(this.tmpbuf.getLength());	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength());    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
601	[BUG]  [BUGGY]  InputStream  in  =  new  CpioInputStream(this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  CpioInputStream(this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  CpioInputStream(this.tmpbuf,  0,  this.tmpbuf.length);	  in.close();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
602	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedInputStream(this.tmpbuf.length);	  in.close();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
603	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(in!=  null)  {  in.close();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(in!=  null)  {  in.close();  }	  in.close();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
604	[BUG]  [BUGGY]  in.close(this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  in.close(this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	in.close(this.tmpbuf,  0,  this.tmpbuf.length);	  in.close();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
605	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedInputStream(in,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  BufferedInputStream(in,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedInputStream(in,  this.tmpbuf.length);	  in.close();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
606	[BUG]  [BUGGY]  Iterator  <  TWO_BYTES_BUF  =  new  byte[this.tmpbuf.length];  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator  <  TWO_BYTES_BUF  =  new  byte[this.tmpbuf.length];  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator  <  TWO_BYTES_BUF  =  new  byte[this.tmpbuf.length];  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);	  This.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
607	[BUG]  [BUGGY]  Iterator  <  TWO_BYTES_BUF  =  new  byte[this.tmpbuf.length];  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  1,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator  <  TWO_BYTES_BUF  =  new  byte[this.tmpbuf.length];  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  1,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator  <  TWO_BYTES_BUF  =  new  byte[this.tmpbuf.length];  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  1,  this.tmpbuf.length);	  This.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
608	[BUG]  [BUGGY]  Iterator  <  TWO_BYTES_BUF>  entries  =  new  ArrayList  <  TWO_BYTES_BUF>(this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator  <  TWO_BYTES_BUF>  entries  =  new  ArrayList  <  TWO_BYTES_BUF>(this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator  <  TWO_BYTES_BUF>  entries  =  new  ArrayList  <  TWO_BYTES_BUF>(this.tmpbuf.length);	  This.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
609	[BUG]  [BUGGY]  Iterator  <  TWO_BYTES_BUF  =  new  byte[this.tmpbuf.length];  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  entryEOF  =  false;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator  <  TWO_BYTES_BUF  =  new  byte[this.tmpbuf.length];  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  entryEOF  =  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator  <  TWO_BYTES_BUF  =  new  byte[this.tmpbuf.length];  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  entryEOF  =  false;	  This.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
610	[BUG]  [BUGGY]  Iterator  <  TWO_BYTES_BUF>  entries  =  new  ArrayList  <  TWO_BYTES_BUF>();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator  <  TWO_BYTES_BUF>  entries  =  new  ArrayList  <  TWO_BYTES_BUF>();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator  <  TWO_BYTES_BUF>  entries  =  new  ArrayList  <  TWO_BYTES_BUF>();	  This.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
611	[BUG]  [BUGGY]  this.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length));	  This.entryEOF    =    this.in    ==    null?    false    :    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
612	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpi  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpi  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpi	  if(entry    ==    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
613	[BUG]  [BUGGY]  if(entry  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpi  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entry  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpi  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpi	  if(entry    ==    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
614	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  }	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
615	[BUG]  [BUGGY]  this.entryEOF  =  entryBytesRead  +  1;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  entryBytesRead  +  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  entryBytesRead  +  1;	  this.entryEOF    =    entryBytesRead;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
616	[BUG]  [BUGGY]  this.entryEOF  =  this.in;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.in;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.in;	  this.entryEOF    =    entryBytesRead;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
617	[BUG]  [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.length  >  0;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.length  >  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  this.tmpbuf.length  >  0;	  Iterator.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
618	[BUG]  [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.length  <  0;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.length  <  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  this.tmpbuf.length  <  0;	  Iterator.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
619	[BUG]  [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.length  }  ;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.length  }  ;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  this.tmpbuf.length  }  ;	  Iterator.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
620	[BUG]  [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.length;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.length;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  this.tmpbuf.length;	  Iterator.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
621	[BUG]  [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.length  ==  0;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  this.tmpbuf.length  ==  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  this.tmpbuf.length  ==  0;	  Iterator.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
622	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
623	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf,  this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAME);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf,  this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAME);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf,  this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAME);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
624	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAME);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAME);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAME);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
625	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpBuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
626	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpBuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
627	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpBuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
628	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  C  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  C  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  C	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpBuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
629	[BUG]  [BUGGY]  Iterator.entryEOF  = " ";  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  = " ";  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  = " ";	  Iterator.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
630	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf)&&  isEnabled(Feature.AUTO_CLOSE_ERROR);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf)&&  isEnabled(Feature.AUTO_CLOSE_ERROR);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf)&&  isEnabled(Feature.AUTO_CLOSE_ERROR);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.AUTO_CLOSE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
631	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf,  this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf,  this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf,  this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.AUTO_CLOSE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
632	[BUG]  [BUGGY]  ((  CpioArchiveEntry)entry).close();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  ((  CpioArchiveEntry)entry).close();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	((  CpioArchiveEntry)entry).close();	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
633	[BUG]  [BUGGY]  byte[]  FOUR_BYTES_BUF,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  byte[]  FOUR_BYTES_BUF,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	byte[]  FOUR_BYTES_BUF,  0,  this.tmpbuf.length);	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
634	[BUG]  [BUGGY]  byte[]  FOUR_BYTES_BUF,  TWO_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  byte[]  FOUR_BYTES_BUF,  TWO_BYTES_BUF);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	byte[]  FOUR_BYTES_BUF,  TWO_BYTES_BUF);	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
635	[BUG]  [BUGGY]  ||  entryEOF)  {  this.entryEOF  =  false;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  ||  entryEOF)  {  this.entryEOF  =  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	||  entryEOF)  {  this.entryEOF  =  false;	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
636	[BUG]  [BUGGY]  ((  CpioArchiveEntry)entry).closePath();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  ((  CpioArchiveEntry)entry).closePath();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	((  CpioArchiveEntry)entry).closePath();	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
637	[BUG]  [BUGGY]  byte[]  FOUR_BYTES_BUF,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  byte[]  FOUR_BYTES_BUF,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	byte[]  FOUR_BYTES_BUF,  this.tmpbuf.length);	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
638	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf);	  this.entryEOF    =    new    String(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
639	[BUG]  [BUGGY]  this.entryEOF  =  File.separatorChar  +  this.tmpbuf.charAt(this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  File.separatorChar  +  this.tmpbuf.charAt(this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  File.separatorChar  +  this.tmpbuf.charAt(this.tmpbuf.length  -  1);	  this.entryEOF    =   "java.util.ArrayList   ";    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
640	[BUG]  [BUGGY]  this.entryEOF  =  File.separatorChar  +  this.tmpbuf.length;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  File.separatorChar  +  this.tmpbuf.length;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  File.separatorChar  +  this.tmpbuf.length;	  this.entryEOF    =   "java.util.ArrayList   ";    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
641	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length)+  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length)+  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length)+  1);	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
642	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  this.tmpbuf.length  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  this.tmpbuf.length  +  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf,  this.tmpbuf.length  +  1);	  this.entryEOF    =    new    String(this.tmpbuf.length    +    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
643	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf,  this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf,  this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf,  this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_FIELD_NAMES);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
644	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_FIELD_NAMES);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
645	[BUG]  [BUGGY]  this.entryEOF  =  false;  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =	  this.entryEOF    =    true;    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
646	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf)&&  isEnabled(Feature.AUTO_CLOSE_EXTENDS);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf)&&  isEnabled(Feature.AUTO_CLOSE_EXTENDS);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf)&&  isEnabled(Feature.AUTO_CLOSE_EXTENDS);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.AUTO_CLOSE_EXTENDS);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
647	[BUG]  [BUGGY]  if(in!=  null)  {  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  in.close();  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(in!=  null)  {  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  in.close();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(in!=  null)  {  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  in.close();  }	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length));    in.close();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
648	[BUG]  [BUGGY]  It.entryEOF  = " ".equals(this.tmpbuf.length)?  true  :  this.tmpbuf.length;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  It.entryEOF  = " ".equals(this.tmpbuf.length)?  true  :  this.tmpbuf.length;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	It.entryEOF  = " ".equals(this.tmpbuf.length)?  true  :  this.tmpbuf.length;	  It.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
649	[BUG]  [BUGGY]  It.entryEOF  = " ".equals(this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  It.entryEOF  = " ".equals(this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	It.entryEOF  = " ".equals(this.tmpbuf.length);	  It.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
650	[BUG]  [BUGGY]  It.entryEOF  = " ".equalsIgnoreCase(this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  It.entryEOF  = " ".equalsIgnoreCase(this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	It.entryEOF  = " ".equalsIgnoreCase(this.tmpbuf.length);	  It.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
651	[BUG]  [BUGGY]  It.entryEOF  = " ".equalsIgnoreCase(this.tmpbuf.toString());  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  It.entryEOF  = " ".equalsIgnoreCase(this.tmpbuf.toString());  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	It.entryEOF  = " ".equalsIgnoreCase(this.tmpbuf.toString());	  It.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
652	[BUG]  [BUGGY]  It.entryEOF  = " ".equalsIgnoreCase(this.tmpbuf.getValue());  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  It.entryEOF  = " ".equalsIgnoreCase(this.tmpbuf.getValue());  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	It.entryEOF  = " ".equalsIgnoreCase(this.tmpbuf.getValue());	  It.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
653	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEO  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEO  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEO	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEO    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
654	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEO  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEO  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEO	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEO    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
655	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.bytesRead);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.bytesRead);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.bytesRead);	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
656	[BUG]  [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)+  2;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)+  2;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)+  2;	  This.entryEOF    =    this.in    ==    null?    false    :    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length)+    1;    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
657	[BUG]  [BUGGY]  this.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)+  1;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)+  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)+  1;	  This.entryEOF    =    this.in    ==    null?    false    :    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length)+    1;    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
658	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
659	[BUG]  [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)!=  0;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)!=  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)!=  0;	  This.entryEOF    =    this.in    ==    null?    false    :    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length)>    0;    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
660	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
661	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
662	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
663	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
664	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)get  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)get  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
665	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
666	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.equalsIgnoreCase(this.tmpbuf.toString());  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.equalsIgnoreCase(this.tmpbuf.toString());  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.equalsIgnoreCase(this.tmpbuf.toString());	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.toString());    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
667	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf,  this.tmpbuf.toString());  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf,  this.tmpbuf.toString());  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf,  this.tmpbuf.toString());	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.toString());    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
668	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmp    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
669	[BUG]  [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  4)?  false  :  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  4)?  false  :  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=(this.tmpbuf.length  <  4)?  false  :  this.tmpbuf.length);	  this.entryEOF    |=(this.tmpbuf.length    <    3)?    false    :    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
670	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryIOF  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryIOF  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryIOF	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
671	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
672	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  1,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  1,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  1,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
673	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryescaped  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryescaped  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryescaped	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
674	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entrytrap  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entrytrap  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entrytrap	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
675	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
676	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getData  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getData  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getData	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
677	[BUG]  [BUGGY]  This.entryEOF  =  this.in!=  null?  this.in.read(this.crc,  0,  this.tmpbuf.length):  false;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in!=  null?  this.in.read(this.crc,  0,  this.tmpbuf.length):  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in!=  null?  this.in.read(this.crc,  0,  this.tmpbuf.length):  false;	  This.entryEOF    =    this.in!=    null?    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length):    false;    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
678	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
679	[BUG]  [BUGGY]  this.tmpBuf[  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpBuf[  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpBuf[	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpBuf[    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
680	[BUG]  [BUGGY]  this.tmpbuf  =  new  byte[this.blockSize()  ];  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  byte[this.blockSize()  ];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  byte[this.blockSize()  ];	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
681	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
682	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
683	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)+  3;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)+  3;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)+  3;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    0,    this.tmpbuf.length)+    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
684	[BUG]  [BUGGY]  if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
685	[BUG]  [BUGGY]  if(entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
686	[BUG]  [BUGGY]  if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArch  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArch  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArch	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
687	[BUG]  [BUGGY]  if(entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
688	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[this.blockSize];  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  byte[this.blockSize];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  byte[this.blockSize];	  this.entryEOF    =    tmpbuf;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
689	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)  <  0;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)  <  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)  <  0;	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length)>    0;    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
690	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.getEntryEOF().equalsIgnoreCase(this.tmpbuf.getLength());  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.getEntryEOF().equalsIgnoreCase(this.tmpbuf.getLength());  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.getEntryEOF().equalsIgnoreCase(this.tmpbuf.getLength());	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength());    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
691	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getUpperBound());  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getUpperBound());  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equalsIgnoreCase(this.tmpbuf.getUpperBound());	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength());    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
692	[BUG]  [BUGGY]  if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
693	[BUG]  [BUGGY]  if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
694	[BUG]  [BUGGY]  if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
695	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_EXTENDS,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_EXTENDS,  this.blockSize);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_EXTENDS,  this.blockSize);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.AUTO_CLOSE_EXTENDS);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
696	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_EXTENDS,  closed);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_EXTENDS,  closed);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_EXTENDS,  closed);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.AUTO_CLOSE_EXTENDS);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
697	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmp    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
698	[BUG]  [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmp    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
699	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.getEntryEOF().equalsIgnoreCase(this.tmpbuf.getLength()));  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.getEntryEOF().equalsIgnoreCase(this.tmpbuf.getLength()));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.getEntryEOF().equalsIgnoreCase(this.tmpbuf.getLength()));	  this.entryEOF    =   "null   ".equalsIgnoreCase(this.tmpbuf.getLength()));    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
700	[BUG]  [BUGGY]  this.EntryEOF  =  new  String[this.tmpbuf.length];  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  new  String[this.tmpbuf.length];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  new  String[this.tmpbuf.length];	  this.EntryEOF    =   "null   ";    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
701	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  1)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  1)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  1)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    <    1)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
702	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  2)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  2)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  2)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    <    1)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
703	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  1)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  1)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  1)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    <    1)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
704	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  2)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  2)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  2)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    <    1)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
705	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length)+  1;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length)+  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length)+  1;	  this.entryEOF    =    new    String(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
706	[BUG]  [BUGGY]  this.EntryEOF  =  new  byte[this.blockSize];  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.EntryEOF  =  new  byte[this.blockSize];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  new  byte[this.blockSize];	  this.EntryEOF    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
707	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }	  if(entry!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
708	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.blockSize  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.blockSize  -  1);	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
709	[BUG]  [BUGGY]  this.entryEOF  =  new  ArrayList  <  CpioArchiveEntry>();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  ArrayList  <  CpioArchiveEntry>();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  ArrayList  <  CpioArchiveEntry>();	  this.entryEOF    =   "java.util.ArrayList   ";    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
710	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.entryBytesRead,  0,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.entryBytesRead,  0,  this.tmpbuf.length));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.entryBytesRead,  0,  this.tmpbuf.length));	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
711	[BUG]  [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
712	[BUG]  [BUGGY]  if(this.tmpbuf  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
713	[BUG]  [BUGGY]  if(this.tmpbuf  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
714	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue()  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue()  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue()	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
715	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.entryBytesRead,  0,  this.tmpbuf.length));  in.close();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.entryBytesRead,  0,  this.tmpbuf.length));  in.close();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.entryBytesRead,  0,  this.tmpbuf.length));  in.close();	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length));    in.close();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
716	[BUG]  [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF  ==  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
717	[BUG]  [BUGGY]  this.entryEOF  = ",null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAME);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  = ",null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAME);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  = ",null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAME);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
718	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.toString().equals(this.tmpbuf.length)?  false  :  false;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.toString().equals(this.tmpbuf.length)?  false  :  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.toString().equals(this.tmpbuf.length)?  false  :  false;	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)?    false    :    false;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
719	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.equals(this.tmpbuf.length)?  false  :  false;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.equals(this.tmpbuf.length)?  false  :  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.equals(this.tmpbuf.length)?  false  :  false;	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)?    false    :    false;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
720	[BUG]  [BUGGY]  this.entryEOF  =  new  String[this.tmpbuf.length];  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String[this.tmpbuf.length];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String[this.tmpbuf.length];	  this.entryEOF    =   "null   ";    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
721	[BUG]  [BUGGY]  this.entryEOF  =  true;  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  true;  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =	  this.entryEOF    =    true;    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
722	[BUG]  [BUGGY]  this.entryEOF  =  true;  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  true;  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =	  this.entryEOF    =    true;    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
723	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  }	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
724	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
725	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
726	[BUG]  [BUGGY]  this.entryEOF  |=  entryBytesRead;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  entryBytesRead;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  entryBytesRead;	  this.entryEOF    |=    null;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
727	[BUG]  [BUGGY]  this.entryEOF  |=  this.blockSize  -  1;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  this.blockSize  -  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  this.blockSize  -  1;	  this.entryEOF    |=    null;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
728	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
729	[BUG]  [BUGGY]  if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
730	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));	  in.close();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
731	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  this.tmpbuf.close();  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  this.tmpbuf.close();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(in!=  null)  {  in.close();  }  else  {  this.tmpbuf.close();  }	  in.close();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
732	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  1,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  1,  this.tmpbuf.length));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  1,  this.tmpbuf.length));	  in.close();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
733	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  -  1));  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  -  1));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  -  1));	  in.close();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
734	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
735	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.entryBytesRead,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.entryBytesRead,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedInputStream(this.entryBytesRead,  0,  this.tmpbuf.length);	  InputStream    in    =    new    BufferedInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
736	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.in,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.in,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedInputStream(this.in,  0,  this.tmpbuf.length);	  InputStream    in    =    new    BufferedInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
737	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length);  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length);  ensureOpen();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length);  ensureOpen();  }	  InputStream    in    =    new    BufferedInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
738	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
739	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clo  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clo  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clo	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
740	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
741	[BUG]  [BUGGY]  this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length)+  1;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length)+  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length)+  1;	  this.entryEOF    =    new    ByteArrayInputStream(this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
742	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this	  if(this.entryEOF!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
743	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR,  this.blockSize);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR,  this.blockSize);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR,  this.blockSize);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.AUTO_CLOSE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
744	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR,  closed);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR,  closed);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR,  closed);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.AUTO_CLOSE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
745	[BUG]  [BUGGY]  if(this.tmpbuf  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
746	[BUG]  [BUGGY]  if(this.tmpbuf  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
747	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.entryBytesRead,  0,  this.tmpbuf.length));  closeEntry();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.entryBytesRead,  0,  this.tmpbuf.length));  closeEntry();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.entryBytesRead,  0,  this.tmpbuf.length));  closeEntry();	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length));    closeEntry();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
748	[BUG]  [BUGGY]  The.entryEOF  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  The.entryEOF  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	The.entryEOF  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length);	  The.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
749	[BUG]  [BUGGY]  The.entryEOF  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  The.entryEOF  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	The.entryEOF  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length  -  1);	  The.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
750	[BUG]  [BUGGY]  The.entryEOF  =  new  EntryEOF(this.tmpbuf,  this.blockSize  -  1,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  The.entryEOF  =  new  EntryEOF(this.tmpbuf,  this.blockSize  -  1,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	The.entryEOF  =  new  EntryEOF(this.tmpbuf,  this.blockSize  -  1,  this.tmpbuf.length);	  The.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
751	[BUG]  [BUGGY]  The.entryEOF  =  new  EntryEOF(this.tmpbuf,  1,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  The.entryEOF  =  new  EntryEOF(this.tmpbuf,  1,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	The.entryEOF  =  new  EntryEOF(this.tmpbuf,  1,  this.tmpbuf.length);	  The.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
752	[BUG]  [BUGGY]  The.entryEOF  =  new  EntryEOF(in,  this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  The.entryEOF  =  new  EntryEOF(in,  this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	The.entryEOF  =  new  EntryEOF(in,  this.tmpbuf,  0,  this.tmpbuf.length);	  The.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
753	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
754	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
755	[BUG]  [BUGGY]  if(this.entryEOF!=  entryBytesRead)  {  this.entryEOF  =  true;  }  else  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF!=  entryBytesRead)  {  this.entryEOF  =  true;  }  else  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  entryBytesRead)  {  this.entryEOF  =  true;  }  else  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBytesRead    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
756	[BUG]  [BUGGY]  if(this.entryEOF  ==  entryBytesRead)  {  this.entryEOF  =  true;  }  else  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF  ==  entryBytesRead)  {  this.entryEOF  =  true;  }  else  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF  ==  entryBytesRead)  {  this.entryEOF  =  true;  }  else  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBytesRead    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
757	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length  -  2));  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length  -  2));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length  -  2));	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
758	[BUG]  [BUGGY]  This.entryEOF  =  new  EntryEOF(this.tmpbuf,  1,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  new  EntryEOF(this.tmpbuf,  1,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  new  EntryEOF(this.tmpbuf,  1,  this.tmpbuf.length);	  This.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
759	[BUG]  [BUGGY]  this.entryEOF  -=  JSON_BYTES_BUF;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  -=  JSON_BYTES_BUF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  -=  JSON_BYTES_BUF;	  this.entryEOF    |=    JSON_BYTES_BUF;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
760	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.equals(this.tmpbuf.length)&&  this.tmpbuf.length  >  0;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.equals(this.tmpbuf.length)&&  this.tmpbuf.length  >  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.equals(this.tmpbuf.length)&&  this.tmpbuf.length  >  0;	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    this.tmpbuf.length    >    0;    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
761	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  this.tmpbuf.length  >  2;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  this.tmpbuf.length  >  2;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  this.tmpbuf.length  >  2;	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    this.tmpbuf.length    >    0;    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
762	[BUG]  [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)!=  ;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)!=  ;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)!=  ;	  This.entryEOF    =    this.in    ==    null?    false    :    this.in.read(this.tmpbuf,    0,    this.tmpbuf.length)    }    ;    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
763	[BUG]  [BUGGY]  It.entryEOF  = "null ";  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  It.entryEOF  = "null ";  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	It.entryEOF  = "null ";	  It.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
764	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBy  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBy  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBy	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBytesRead    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
765	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
766	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)-  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)-  1);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)-  1);	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
767	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  C  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  C  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  C	  if(entryEOF)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    <    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
768	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length  -  2));  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length  -  2));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length  -  2));	  this.entryEOF    |=    JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,    0,    this.tmpbuf.length));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
769	[BUG]  [BUGGY]  Iterator.entryEOF  =  this.in!=  null?  this.in.read()  :  false;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  this.in!=  null?  this.in.read()  :  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  this.in!=  null?  this.in.read()  :  false;	  Iterator.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
770	[BUG]  [BUGGY]  Iterator.entryEOF  =  this.in  ==  null?  this.in.read()  :  false;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  this.in  ==  null?  this.in.read()  :  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  this.in  ==  null?  this.in.read()  :  false;	  Iterator.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
771	[BUG]  [BUGGY]  Iterator.entryEOF  =  this.in!=  null?  this.in.getValue()  :  false;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  this.in!=  null?  this.in.getValue()  :  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  this.in!=  null?  this.in.getValue()  :  false;	  Iterator.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
772	[BUG]  [BUGGY]  Iterator.entryEOF  =  this.in  ==  null?  this.in.getValue()  :  false;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  this.in  ==  null?  this.in.getValue()  :  false;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  this.in  ==  null?  this.in.getValue()  :  false;	  Iterator.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
773	[BUG]  [BUGGY]  this.tryEOF  &=  true;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tryEOF  &=  true;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tryEOF  &=  true;	  this.tryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
774	[BUG]  [BUGGY]  Iterator  <  TWO_BYTES_BUF,  this.tmpbuf.length)  {  this.entryEOF  =  true;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator  <  TWO_BYTES_BUF,  this.tmpbuf.length)  {  this.entryEOF  =  true;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator  <  TWO_BYTES_BUF,  this.tmpbuf.length)  {  this.entryEOF  =  true;	  This.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
775	[BUG]  [BUGGY]  Iterator  <  TWO_BYTES_BUF,  tmpbuf.length)  {  this.entryEOF  =  true;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator  <  TWO_BYTES_BUF,  tmpbuf.length)  {  this.entryEOF  =  true;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator  <  TWO_BYTES_BUF,  tmpbuf.length)  {  this.entryEOF  =  true;	  This.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
776	[BUG]  [BUGGY]  Iterator  <  TWO_BYTES_BUF  =  this.tmpbuf.entryEOF;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator  <  TWO_BYTES_BUF  =  this.tmpbuf.entryEOF;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator  <  TWO_BYTES_BUF  =  this.tmpbuf.entryEOF;	  This.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
777	[BUG]  [BUGGY]  Iterator  <  TWO_BYTES_BUF,  tmpbuf.length)  {  this.entryEOF  =  true;  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator  <  TWO_BYTES_BUF,  tmpbuf.length)  {  this.entryEOF  =  true;  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator  <  TWO_BYTES_BUF,  tmpbuf.length)  {  this.entryEOF  =  true;  }	  This.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
778	[BUG]  [BUGGY]  Iterator  <  TWO_BYTES_BUF,  this.tmpbuf.length)  {  this.entryEOF  =  true;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator  <  TWO_BYTES_BUF,  this.tmpbuf.length)  {  this.entryEOF  =  true;  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator  <  TWO_BYTES_BUF,  this.tmpbuf.length)  {  this.entryEOF  =  true;  }	  This.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
779	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_BYTES_BUF);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_BYTES_BUF);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_BYTES_BUF);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
780	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_BYTES_BUF,  closed);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_BYTES_BUF,  closed);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_BYTES_BUF,  closed);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_BYTES_BUF);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
781	[BUG]  [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  closed);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  closed);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =   "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  closed);	  this.entryEOF    =   "null   ".equals(this.tmpbuf.length)&&    isEnabled(Feature.QUOTE_FIELD_NAMES);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
782	[BUG]  [BUGGY]  Iterator.entryEOF  =  true,  this.tmpbuf.length  >  0);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  true,  this.tmpbuf.length  >  0);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  true,  this.tmpbuf.length  >  0);	  Iterator.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
783	[BUG]  [BUGGY]  Iterator.entryEOF  =  true,  this.tmpbuf.length  ==  0);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  true,  this.tmpbuf.length  ==  0);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  true,  this.tmpbuf.length  ==  0);	  Iterator.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
784	[BUG]  [BUGGY]  Iterator.entryEOF  =  true,  this.tmpbuf.length  }  ;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator.entryEOF  =  true,  this.tmpbuf.length  }  ;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  true,  this.tmpbuf.length  }  ;	  Iterator.entryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
785	[BUG]  [BUGGY]  if(entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
786	[BUG]  [BUGGY]  if(entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
787	[BUG]  [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF  ==  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
788	[BUG]  [BUGGY]  if(this.entryEOF  ==  entry)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF  ==  entry)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF  ==  entry)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
789	[BUG]  [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF  ==  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
790	[BUG]  [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF  ==  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF  ==  null)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
791	[BUG]  [BUGGY]  if(this.entryEOF  ==  entry)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF  ==  entry)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF  ==  entry)  {  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length!=  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    ==    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
792	[BUG]  [BUGGY]  this.entryEOF  =  entryBytesRead  +  this.tmpbuf.length;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  entryBytesRead  +  this.tmpbuf.length;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  entryBytesRead  +  this.tmpbuf.length;	  this.entryEOF    =    entryBytesRead;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
793	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
794	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clon  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clon  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clon	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
795	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
796	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone()  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone()  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone()	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
797	[BUG]  [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf,  this.tmpbuf.length));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf,  this.tmpbuf.length));	  this.entryEOF    &=    false;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
798	[BUG]  [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf,  this.tmpbuf.length);	  this.entryEOF    &=    false;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
799	[BUG]  [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf,  this.tmpbuf.length)>  0;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf,  this.tmpbuf.length)>  0;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf,  this.tmpbuf.length)>  0;	  this.entryEOF    &=    false;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
800	[BUG]  [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf,  this.tmpbuf.length)+  1;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf,  this.tmpbuf.length)+  1;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf,  this.tmpbuf.length)+  1;	  this.entryEOF    &=    false;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
801	[BUG]  [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOD(this.tmpbuf,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOD(this.tmpbuf,  this.tmpbuf.length));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsIOD(this.tmpbuf,  this.tmpbuf.length));	  this.entryEOF    &=    false;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
802	[BUG]  [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf);	  this.entryEOF    &=    false;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
803	[BUG]  [BUGGY]  this.tmpbuf[i]  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf[i]  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf[i]  =  new  EntryEOF(this.tmpbuf,  0,  this.tmpbuf.length);	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEO    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
804	[BUG]  [BUGGY]  Iterator  <  TWO_BYTES_BUF,  this.tmpbuf.length)  {  this.EntryEOF  =  true;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator  <  TWO_BYTES_BUF,  this.tmpbuf.length)  {  this.EntryEOF  =  true;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator  <  TWO_BYTES_BUF,  this.tmpbuf.length)  {  this.EntryEOF  =  true;	  This.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
805	[BUG]  [BUGGY]  Iterator  <  TWO_BYTES_BUF,  tmpbuf.length)  {  this.EntryEOF  =  true;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator  <  TWO_BYTES_BUF,  tmpbuf.length)  {  this.EntryEOF  =  true;  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator  <  TWO_BYTES_BUF,  tmpbuf.length)  {  this.EntryEOF  =  true;	  This.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
806	[BUG]  [BUGGY]  Iterator  <  TWO_BYTES_BUF,  this.tmpbuf  =  new  byte[this.tmpbuf.length];  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator  <  TWO_BYTES_BUF,  this.tmpbuf  =  new  byte[this.tmpbuf.length];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator  <  TWO_BYTES_BUF,  this.tmpbuf  =  new  byte[this.tmpbuf.length];	  This.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
807	[BUG]  [BUGGY]  Iterator  <  TWO_BYTES_BUF,  tmpbuf.length)  {  this.EntryEOF  =  true;  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  Iterator  <  TWO_BYTES_BUF,  tmpbuf.length)  {  this.EntryEOF  =  true;  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator  <  TWO_BYTES_BUF,  tmpbuf.length)  {  this.EntryEOF  =  true;  }	  This.EntryEOF    =    true;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
808	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  *  this.blockSize];  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  *  this.blockSize];  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  byte[this.tmpbuf.length  *  this.blockSize];	  this.entryEOF    =    new    byte[this.tmpbuf.length];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
809	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.entryBytesRead,  0,  this.tmpbuf.length  -  1));  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.entryBytesRead,  0,  this.tmpbuf.length  -  1));  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.entryBytesRead,  0,  this.tmpbuf.length  -  1));	  this.tmpbuf    =    new    BufferedReader(new    InputStreamReader(this.tmpbuf,    0,    this.tmpbuf.length    -    1));    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
810	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  1,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  1,  this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf,  1,  this.tmpbuf.length);	  this.entryEOF    =    new    String(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
811	[BUG]  [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryB  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryB  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryB	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBy    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
812	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBy  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(entryEOF)  {  this.entryEOF  =  true;  }  else  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBy  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  true;  }  else  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBy	  this.entryEOF    =    true;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBy    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
813	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(entry!=  null)  {  this.entryEOF  =  false;  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.entryEOF)  {  if(entry!=  null)  {  this.entryEOF  =  false;  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  if(entry!=  null)  {  this.entryEOF  =  false;  }	  if(entry!=    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEnt    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
814	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.equals(this.entryEOF);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.equals(this.entryEOF);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.equals(this.entryEOF);	  this.entryEOF    =   "/   ".equals(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
815	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.length  >  0?  this.entryEOF  : "/ ".equals(this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.length  >  0?  this.entryEOF  : "/ ".equals(this.tmpbuf.length);  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.length  >  0?  this.entryEOF  : "/ ".equals(this.tmpbuf.length);	  this.entryEOF    =   "/   ".equals(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
816	[BUG]  [BUGGY]  this.entryEOF  =  this.tmpbuf.toString();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  this.entryEOF  =  this.tmpbuf.toString();  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  this.tmpbuf.toString();	  this.entryEOF    =   "/   ".equals(this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
817	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  if(entryEOF)  {  this.entryEOF  =  false;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  if(entryEOF)  {  this.entryEOF  =  false;  }  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  if(entryEOF)  {  this.entryEOF  =  false;  }	  if(entry    ==    null)    {    this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
818	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone()  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }      [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone()  [BUGGY]      }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone()	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
