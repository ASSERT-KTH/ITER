projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=null;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="";
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryBytesRead
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entryEOF;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=null;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entryEOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newbyte[this.tmpbuf.length];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newByteArrayInputStream(this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newbyte[this.tmpbuf.length+1];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length-1,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmp
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entryEOF;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.t
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpBuf[
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entryEOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entryEO
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entryEOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;}elseif(this.tmpBuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entryEOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,0,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=BYTE_BYTES_BUF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length)+1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryBytesRead
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryBy
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryBytesRead
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryBy
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedInputStream(this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162in.close();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpbuf.length));in.close();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpbuf.length-1));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedInputStream(this.tmpbuf,0,this.tmpbuf.length);ensureOpen();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpbuf.length));closeEntry();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=null;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tryEOF=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=entry;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=entryEOF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="/".equals(this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=tmpbuf;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpBuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length<0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry==null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry==null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=null;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.EntryEOF=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF="";
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmp
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=null;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.t
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmp
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.t
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newbyte[this.tmpbuf.length-1];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=entryBytesRead;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){Cpi
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryB
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length+1,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=TWO_BYTES_BUF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JSON_BYTES_BUF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=null;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162The.entryEOF=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162It.entryEOF=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(i);if(entryEOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(i);if(entryEOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if(entryEOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if(entryEOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if(entryEOF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if(entryEOF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&isEnabled(Feature.QUOTE_FIELD_NAMES);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&isEnabled(Feature.AUTO_CLOSE_ERROR);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)?false:false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&isEnabled(Feature.QUOTE_FIELD_NAME);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&isEnabled(Feature.QUOTE_BYTES_BUF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&isEnabled(Feature.AUTO_CLOSE_EXTENDS);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF="null";
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF="noPMD";
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="java.util.ArrayList";
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null";
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getData
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone();closed=true;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;}elseif(this.tmpbuf.length<2){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entryEOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;}elseif(this.tmpbuf.length<1){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entryEOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length)>0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=(this.tmpbuf.length<2)?false:this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=(this.tmpbuf.length<3)?false:this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length)};
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in!=null?this.in.read(this.tmpbuf,0,this.tmpbuf.length):false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in==null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in==null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length)};
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in==null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length)>0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in==null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length)+1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&this.tmpbuf.length>0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equalsIgnoreCase(this.tmpbuf.toString());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equalsIgnoreCase(this.tmpbuf.getLength());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equalsIgnoreCase(this.tmpbuf.getLength()));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.toString());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equalsIgnoreCase(this.tmpbuf.toString(),this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.toString().equalsIgnoreCase(this.tmpbuf.toString());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=null.equalsIgnoreCase(this.tmpbuf.toString());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmp
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length!=0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.t
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getData
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.getData
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getData
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.getData
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.cloneTree();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.getData}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&isEnabled(Feature.AUTO_CLOSE_ERROR,true);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)||isEnabled(Feature.AUTO_CLOSE_ERROR);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=isEnabled(Feature.AUTO_CLOSE_ERROR);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length)&&isEnabled(Feature.AUTO_CLOSE_ERROR);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=",null".equals(this.tmpbuf.length)&&isEnabled(Feature.AUTO_CLOSE_ERROR);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newByteArrayInputStream(this.tmpbuf,0,this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newByteArrayInputStream(this.tmpbuf,0,this.tmpbuf.length+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newByteArrayInputStream(this.tmpbuf,0,this.tmpbuf.length-2);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newByteArrayInputStream(this.tmpBuf,0,this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newByteArrayInputStream(this.tmpbuf,0,this.tmpbuf.length-4);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newByteArrayInputStream(this.tmpBuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(in!=null){in.close();}else{System.arraycopy(this.tmpbuf,0,this.tmpbuf,0,this.tmpbuf.length);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(in!=null){in.close();}else{System.arraycopy(this.tmpbuf,0,this.tmpbuf,0,this.tmpbuf.length);out.write(this.tmpbuf,0,this.tmpbuf.length);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(in!=null){in.close();}else{System.arraycopy(this.tmpbuf,0,this.tmpbuf,0,this.tmpbuf.length);for(inti=0;i<this.tmpbuf.length;++i){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(in!=null){in.close();}else{System.arraycopy(this.tmpbuf,0,this.tmpbuf,0,this.tmpbuf.length);for(inti=0,len=this.tmpbuf.length;i<len;++i){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(in!=null){in.close();}else{System.arraycopy(this.tmpbuf,0,this.tmpbuf,0,this.tmpbuf.length);this.tmpbuf.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpbuf.length-1));closeEntry();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpbuf.length));closeEntry();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpbuf.length),this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.out,0,this.tmpbuf.length));closeEntry();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpbuf.length+1));closeEntry();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=FOUR_BYTES_BUF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=this.tmpbuf;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=SIX_BYTES_BUF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=null;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=tmpbuf;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpbuf.length+1));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpbuf.length-2));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpbuf.length),this.blockSize-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpBuf,0,this.tmpbuf.length-1));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpbuf.length),this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmp
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF==null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpBuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmp
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)||isEnabled(Feature.QUOTE_BYTES_BUF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=isEnabled(Feature.QUOTE_BYTES_BUF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&isEnabled(Feature.QUOTE_BYTES_BUF,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf)&&isEnabled(Feature.QUOTE_BYTES_BUF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry==null){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryBytesRead
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=0L;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=(this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=2;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=in;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf,0,this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf,0,this.tmpbuf.length+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf,0,this.tmpbuf.length-2);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpBuf,0,this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf,0,this.tmpbuf.length-4);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf,0,this.tmpbuf.length+2);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length)/1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length)+2;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length-1)+1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length)-1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length)+1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpBuf,0,this.tmpbuf.length)+1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF==null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0,len=this.tmpbuf.length;i<len;++i){this.entryEOF=false;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=1L;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=BYTES_BUF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length!=0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>=0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length==1){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=false,this.tmpbuf.length=0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=false,this.tmpbuf.length>0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=false,this.tmpbuf.length};
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmp
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.t
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpBuf[
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if(entryEOF==
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmp
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if(entryEOF==illegalstart
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if(entryEOF!=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpBuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if(entryEOF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getVal
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if(entryEOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tryEOF=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tryEOF=null;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tryEOF="";
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tryEOF|=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tryEOF:false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.closeEntry();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.cloneTree();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.get}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.toString().equals(this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="/".equals(this.tmpbuf,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="/".equals(this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="/".equals(this.tmpbuf.length,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=BYTE_BYTES_BUF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=BYTES_BUF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf&=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162The.entryEOF=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162The.entryEOF=null;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162The.entryEOF||entryEOF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162the.entryEOF=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162The.entryEOF="";
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmp
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmp[
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpBuf[
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equalsIgnoreCase(this.tmpbuf.getLength(),this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.getLength()));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equalsIgnoreCase(this.tmpbuf.getName()));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equalsIgnoreCase(this.tmpbuf.getLength()+1));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equalsIgnoreCase(this.tmpbuf.getLength()-1));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmp[
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf[i]=entryEO
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newbyte[this.blockSize];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newbyte[FOUR_BYTES_BUF];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newbyte[FOUR_BYTES_BUF.length];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newbyte[FOUR_BYTES_BUF].read();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf[i]=entryEO;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryB
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){entryB
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false.equals(this.tmpbuf.length)?false:false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)?false:true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)?true:false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf,this.tmpbuf.length)?false:false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=null.equals(this.tmpbuf.length)?false:false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(i);if(entryEOF==
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmp
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(i);if(entryEOF==illegalstart
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(i);if(entryEOF!=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){Cp
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){C
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){Cp
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){Cpi}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){Cpi
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpBuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>1){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedInputStream(this.tmpbuf,0,this.tmpbuf.length-1);ensureOpen();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedInputStream(this.tmpbuf,0,this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedInputStream(this.tmpbuf,0,this.tmpbuf.length+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedInputStream(this.tmpbuf,0,this.tmpbuf.length-2);ensureOpen();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedInputStream(this.tmpbuf,0,this.tmpbuf.length+1);ensureOpen();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){this.entryEOF=false;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry==null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryEOF=false;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,0,this.tmpbuf.length-1));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,0,this.tmpbuf.length+1));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,0,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,0,this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if(entryEOF==
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if(entryEOF==illegalstart
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if(entryEOF!=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newbyte[this.tmpbuf.length+2];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newbyte[this.tmpbuf,0,this.tmpbuf.length];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newbyte[this.tmpbuf.length*2];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newbyte[this.tmpBuf.length+1];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=BYTE_BYTES_BUF+1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=BYTE_BYTES_BUF,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=BYTE_BYTES_BUF,this.tmpbuf.length;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=(this.tmpbuf.length<2?false:this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=(this.tmpbuf.length<1?false:this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=(this.tmpbuf.length<1)?false:this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=(this.tmpbuf.length<3)?true:this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=(this.tmpbuf.length<2)?false:this.tmpbuf.length;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=this.tmpbuf.startsWith("/")||this.tmpbuf.endsWith("/"));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=this.tmpbuf.startsWith("/")||this.tmpbuf.endsWith(".java"));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=this.tmpbuf.endsWith(".java")||this.tmpbuf.length()==0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=this.tmpbuf.startsWith("/")||this.tmpbuf.length()>0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=this.tmpbuf.endsWith(".java")?false:this.tmpbuf.length;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=this.tmpbuf.startsWith("/")||this.tmpbuf.endsWith(".js");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=(this.tmpbuf.length<2)?true:this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=(this.tmpbuf.length<2)?false:this.tmpbuf.length+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=(this.tmpbuf.length<0)?false:this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpBu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpBu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpBuf[
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry==null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)||isEnabled(Feature.AUTO_CLOSE_EXTENDS);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&isEnabled(Feature.AUTO_CLOSE_EXTENDS,true);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=isEnabled(Feature.AUTO_CLOSE_EXTENDS);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length)&&isEnabled(Feature.AUTO_CLOSE_EXTENDS);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=null){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmp
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=null){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.t
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF==null){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmp
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmp
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF==null){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.t
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&this.tmpbuf.length>1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&this.tmpbuf.length<=0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&this.tmpbuf.length==0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equalsIgnoreCase(this.tmpbuf.getLength(),this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equalsIgnoreCase(this.tmpbuf.getBytes());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equalsIgnoreCase(this.tmpbuf.getLength()+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.getLength());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equalsIgnoreCase(this.tmpbuf.getName());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=entryEOF.equalsIgnoreCase(this.tmpbuf.getLength());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=newbyte[this.tmpbuf.length];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=newString(this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=newString(this.tmpbuf.length-1,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=newString(this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=newFile(this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){Cpio
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){if(this.entry!=null){this.entryEOF=false;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpBuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpBuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpBuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpBuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){Cpio
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpBuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if(entryEOF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getVal
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if(entryEOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpBuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length!=0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in==null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length-1));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in==null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in==null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length+1));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in!=null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryBy
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryB
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryBy
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF==null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0,len=this.tmpbuf.length;i<len;++i){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;elseif(this.tmpbuf.length<0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;elseif(this.tmpbuf.length>=0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;elseif(this.tmpBuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf[i]=entryEOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newjava.util.ArrayList();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newjava.util.ArrayList(this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newjava.util.ArrayList(this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newArrayList();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newjava.util.ArrayList(this.tmpbuf);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(i);if(entryEOF==
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(i);if(entryEOF==illegalstart
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(i);if(entryEOF!=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=entryEOF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=entry;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=newEntryEOF(this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=newEntryEOF(this.tmpbuf,0,this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=newbyte[this.tmpbuf.length+1];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=newEntryEOF(this.tmpbuf);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone();closed=true;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone();closed=true;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clon
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone();closed=true
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone()
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpBuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.t
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length-1));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpBuf,0,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length+1));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF/=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedInputStream(this.tmpbuf,0,this.tmpbuf.length-2);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedInputStream(this.tmpbuf,0,this.tmpBuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedInputStream(this.tmpBuf,0,this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedInputStream(this.tmpbuf,0,this.tmpbuf.length-4);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0,len=this.tmpbuf.length;i<len;++i){this.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryBytesRead
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpBuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length<0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>=0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry==null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length<0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length<0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length<0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length<0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length<0){for(inti=0,len=this.tmpbuf.length;i<len;++i){Cpio
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=isEnabled(Feature.QUOTE_FIELD_NAMES);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)||isEnabled(Feature.QUOTE_FIELD_NAMES);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf)&&isEnabled(Feature.QUOTE_FIELD_NAMES);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&isEnabled(Feature.QUOTE_FIELD_NAMES,true);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpbuf.length-1));in.close();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpbuf.length));in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.TWO_BYTES_BUF,0,this.tmpbuf.length));in.close();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162It.entryEOF=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162It.entryEOF=null;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162it.entryEOF=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162It.entryEOF="";
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=null;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=JSON_BYTES_BUF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JSON_BYTES_BUF+1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JSON_BYTES_BUF,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JSON_BYTES_BUF,this.tmpbuf.length;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.EntryEOF=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.EntryEOF=null;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.EntryEOF=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162EntryEOF=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.EntryEOF=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF==null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162IteratorIterator.entryEOF=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162iterator.entryEOF=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryOF=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length)};
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length)};
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpBuf,0,this.tmpbuf.length)};
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,1,this.tmpbuf.length)};
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length)};
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length-1,this.tmpbuf.length+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf,this.tmpbuf.length-1,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length-1,this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length-1,this.tmpbuf.length,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=null){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length-1));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length+1));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length)+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf,this.tmpbuf.length+1,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length+1,this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length+1,this.tmpbuf.length,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpBuf,this.tmpbuf.length+1,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length/1,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in==null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length),this.blockSize};
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in!=null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length)};
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=TWO_BYTES_BUF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=this.tmpbuf.length;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF-=TWO_BYTES_BUF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=isEnabled(Feature.QUOTE_FIELD_NAME);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)||isEnabled(Feature.QUOTE_FIELD_NAME);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&isEnabled(Feature.QUOTE_FIELD_NAME,true);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf)&&isEnabled(Feature.QUOTE_FIELD_NAME);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpbuf.length),0);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpBuf.length-1));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=TWO_BYTES_BUF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=SIX_BYTES_BUF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=tmpbuf.length;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpBuf[i]=entryEOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=NOPMD;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=entryBytesRead.read();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=entryBytesRead.length;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf[0]=entryEOF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=entry;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=entryEOF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF="";
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=EntryEOF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newbyte[this.tmpbuf.length-1],this.blockSize-1];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newbyte[this.tmpbuf.length-2];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newbyte[this.tmpbuf.length/1];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newbyte[this.tmpbuf.length*1];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newbyte[this.tmpbuf.length-1+1];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry==null){this.entryEOF=false;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry==null){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryEOF=false;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=newByteArrayInputStream(this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.closeEntry();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.next();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newbyte[this.tmpbuf.length+1],this.blockSize+1];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newbyte[this.tmpbuf.length+3];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newbyte[this.tmpbuf.length+4];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in==null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length)>1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in==null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length)>=0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in!=null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length)>0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=newString[]{"null"};
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length)>0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length)>1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length)>0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpBuf,0,this.tmpbuf.length)>0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length)>=0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length)==0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in!=null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length)+1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in==null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length)/1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in==null?this.in.read(this.tmpbuf,0,this.tmpbuf.length):false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in!=null?this.in.read(this.tmpbuf,0,this.tmpbuf.length-1):false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in!=null?this.in.read(this.tmpbuf,0,this.tmpbuf.length+1):false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.in!=null?this.in.read(this.tmpbuf,0,this.tmpbuf.length):false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in!=null?this.in.read(this.tmpBuf,0,this.tmpbuf.length):false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=isEnabled(Feature.QUOTE_BYTES_BUF,this.tmpbuf.length)&&isEnabled(Feature.QUOTE_BYTES_BUF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162System.arraycopy(FOUR_BYTES_BUF,0,this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162System.arraycopy(FOUR_BYTES_BUF,1,this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162System.arraycopy(FOUR_BYTES_BUF,0,this.tmpbuf,0,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162System.arraycopy(FOUR_BYTES_BUF,0,this.tmpbuf,0,this.tmpbuf.length);entryEOF=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162System.arraycopy(FOUR_BYTES_BUF,0,this.tmpbuf,0,this.tmpbuf.length);in.close();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162System.arraycopy(FOUR_BYTES_BUF,0,this.tmpbuf,0,this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=EntryEOF.getValue(this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryBytesRead
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162System.arraycopy(FOUR_BYTES_BUF,0,this.tmpbuf,0,this.tmpBuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162System.arraycopy(FOUR_BYTES_BUF,0,this.tmpBuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=newEntryEOF(this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=newbyte[this.tmpbuf.length];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=newbyte[this.tmpbuf.length+1];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=newEntryEOF(this.tmpbuf);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=newEntryEOF(this.tmpbuf,0,this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF-=BYTE_BYTES_BUF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.getName().equalsIgnoreCase(this.tmpbuf.getLength()));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.getString().equalsIgnoreCase(this.tmpbuf.getLength()));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.equalsIgnoreCase(this.tmpbuf.getLength()));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equalsIgnoreCase(this.tmpbuf.getBytes()));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpbuf,1,this.tmpbuf.length-1));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.in,0,this.tmpbuf.length-1));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){C
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmp[
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone();closed=true
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clon
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone();closed=true
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone();closed=true
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162((CpioArchiveEntry)entry).closeEntry();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){if(this.entryEOF){this.entryEOF=false;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){if(this.entryEOF!=null){this.entryEOF=false;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.t
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.substring(0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.getName().equals(this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.length.equals(this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JSON_BYTES_BUF-1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){this.entryEOF=true;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entry!=null){this.entryEOF=true;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){entryB
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=null){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedInputStream(this.entryBytesRead,0,this.tmpbuf.length);ensureOpen();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(i);if
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(i);if
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(i);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(i
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newByteArrayInputStream(this.tmpbuf,0,this.tmpbuf.length-3);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entry!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=null){this.entryEOF=false;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=false;System.arraycopy(this.tmpbuf,0,this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=false;System.arraycopy(this.tmpbuf,0,this.tmpbuf,1,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=false;System.arraycopy(this.tmpbuf,0,this.tmpbuf,0,this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=false;System.arraycopy(this.tmpbuf,0,this.tmpbuf,0,this.tmpbuf.length)+1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=false;System.arraycopy(this.tmpbuf,0,this.tmpbuf,0,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){entry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length)+0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entry!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entry!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){C
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=NOPMD_BYTES_BUF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedInputStream(FOUR_BYTES_BUF,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newbyte[this.tmpbuf.length+6];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length)+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF="noPMD"+this.tmpbuf.length;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length-1)};
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length)+1};
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length)!=0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(i);if
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(i);if
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(i);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(i
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(i);if(ent
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tryEOF|=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=this.tmpbuf[0];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry==null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.close){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.t
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.in,0,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.FOUR_BYTES_BUF,0,this.tmpbuf.length));closeEntry();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.in,0,this.tmpbuf.length));closeEntry();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator<EntryEOF>entries=newArrayList<EntryEOF>(this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator<EntryEOF>entries=this.tmpbuf.entrySet();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator<EntryEOF>entries=this.entryBytesRead.iterator();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator<EntryEOF>entries=this.tmpbuf.iterator();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length*1,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf,this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length-2,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length!=0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162&&this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162&&entryEOF){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.getData
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162&&this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162&&this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getData
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162&&entry!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.getData
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162&&this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162&&this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in!=null?this.in.read(this.tmpbuf,0,this.tmpbuf.length):true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in!=null?this.in.read(this.buf,0,this.tmpbuf.length):false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.in==null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length)};
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in==null?true:this.in.read(this.tmpbuf,0,this.tmpbuf.length)};
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=newString(this.tmpbuf.length+1,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entry!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entry!=null){this.entryEOF=false;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length<0){for(inti=0,len=this.tmpbuf.length;i<len;++i){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length<0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.getName().equalsIgnoreCase(this.tmpbuf.getLength());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.equalsIgnoreCase(this.tmpbuf.getLength());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newCpioInputStream(this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedInputStream(this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(in!=null){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162in.close(this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedInputStream(in,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator<TWO_BYTES_BUF=newbyte[this.tmpbuf.length];System.arraycopy(this.tmpbuf,0,this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator<TWO_BYTES_BUF=newbyte[this.tmpbuf.length];System.arraycopy(this.tmpbuf,0,this.tmpbuf,1,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator<TWO_BYTES_BUF>entries=newArrayList<TWO_BYTES_BUF>(this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator<TWO_BYTES_BUF=newbyte[this.tmpbuf.length];System.arraycopy(this.tmpbuf,0,this.tmpbuf,0,this.tmpbuf.length);entryEOF=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator<TWO_BYTES_BUF>entries=newArrayList<TWO_BYTES_BUF>();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.in==null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){Cpi
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entry==null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){Cpi
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=null){for(inti=0,len=this.tmpbuf.length;i<len;++i){}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=entryBytesRead+1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.in;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=this.tmpbuf.length>0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=this.tmpbuf.length<0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=this.tmpbuf.length};
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=this.tmpbuf.length;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=this.tmpbuf.length==0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf,this.tmpbuf.length)&&isEnabled(Feature.QUOTE_FIELD_NAME);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length)&&isEnabled(Feature.QUOTE_FIELD_NAME);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpBuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpBuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpBuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpBuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){C
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF="";
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf)&&isEnabled(Feature.AUTO_CLOSE_ERROR);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf,this.tmpbuf.length)&&isEnabled(Feature.AUTO_CLOSE_ERROR);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162((CpioArchiveEntry)entry).close();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162byte[]FOUR_BYTES_BUF,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162byte[]FOUR_BYTES_BUF,TWO_BYTES_BUF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162||entryEOF){this.entryEOF=false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162((CpioArchiveEntry)entry).closePath();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162byte[]FOUR_BYTES_BUF,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=File.separatorChar+this.tmpbuf.charAt(this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=File.separatorChar+this.tmpbuf.length;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,0,this.tmpbuf.length)+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf,this.tmpbuf.length+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf,this.tmpbuf.length)&&isEnabled(Feature.QUOTE_FIELD_NAMES);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length)&&isEnabled(Feature.QUOTE_FIELD_NAMES);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;elseif(this.tmpbuf.length!=0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf)&&isEnabled(Feature.AUTO_CLOSE_EXTENDS);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(in!=null){this.tmpbuf=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpbuf.length));in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162It.entryEOF="".equals(this.tmpbuf.length)?true:this.tmpbuf.length;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162It.entryEOF="".equals(this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162It.entryEOF="".equalsIgnoreCase(this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162It.entryEOF="".equalsIgnoreCase(this.tmpbuf.toString());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162It.entryEOF="".equalsIgnoreCase(this.tmpbuf.getValue());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entryEO
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entryEO
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.bytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in==null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length)+2;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.in==null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length)+1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in==null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length)!=0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.equalsIgnoreCase(this.tmpbuf.toString());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equalsIgnoreCase(this.tmpbuf,this.tmpbuf.toString());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entry!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=(this.tmpbuf.length<4)?false:this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryIOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=1,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryescaped
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentrytrap
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.getData
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getData
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in!=null?this.in.read(this.crc,0,this.tmpbuf.length):false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpBuf[
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newbyte[this.blockSize()];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entryEOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length!=0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entryEOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length)+3;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF!=illegalstartoftype){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF!=illegalstartoftype){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newbyte[this.blockSize];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length)<0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.getEntryEOF().equalsIgnoreCase(this.tmpbuf.getLength());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equalsIgnoreCase(this.tmpbuf.getUpperBound());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF!=illegalstartoftype){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF!=illegalstartoftype){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF!=illegalstartoftype){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&isEnabled(Feature.AUTO_CLOSE_EXTENDS,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&isEnabled(Feature.AUTO_CLOSE_EXTENDS,closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpBuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmp
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF==null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.getEntryEOF().equalsIgnoreCase(this.tmpbuf.getLength()));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=newString[this.tmpbuf.length];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length<1){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entryEOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length<2){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entryEOF
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length<1){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length<2){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf[i]=entry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf,0,this.tmpbuf.length)+1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.EntryEOF=newbyte[this.blockSize];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.blockSize-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newArrayList<CpioArchiveEntry>();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.entryBytesRead,0,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF==null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf==null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getVal
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf==null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue()
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.entryBytesRead,0,this.tmpbuf.length));in.close();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF==null){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=",null".equals(this.tmpbuf.length)&&isEnabled(Feature.QUOTE_FIELD_NAME);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.toString().equals(this.tmpbuf.length)?false:false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.equals(this.tmpbuf.length)?false:false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString[this.tmpbuf.length];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;elseif(this.tmpbuf.length!=0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=true;elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=null){for(inti=0,len=this.tmpbuf.length;i<len;++i){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=entryBytesRead;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=this.blockSize-1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get(
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF!=illegalstartoftype){if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;i++){CpioArchiveEntryentry=(CpioArchiveEntry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(in!=null){in.close();}else{this.tmpbuf.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedReader(newInputStreamReader(this.tmpbuf,1,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedReader(newInputStreamReader(this.tmpbuf,0,this.tmpbuf.length-1));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=null){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedInputStream(this.entryBytesRead,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162InputStreamin=newBufferedInputStream(this.in,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){InputStreamin=newBufferedInputStream(this.tmpbuf,0,this.tmpbuf.length);ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clo
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newByteArrayInputStream(this.tmpbuf,0,this.tmpbuf.length)+1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&isEnabled(Feature.AUTO_CLOSE_ERROR,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&isEnabled(Feature.AUTO_CLOSE_ERROR,closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf==null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getVal
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf==null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.entryBytesRead,0,this.tmpbuf.length));closeEntry();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162The.entryEOF=newEntryEOF(this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162The.entryEOF=newEntryEOF(this.tmpbuf,0,this.tmpbuf.length-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162The.entryEOF=newEntryEOF(this.tmpbuf,this.blockSize-1,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162The.entryEOF=newEntryEOF(this.tmpbuf,1,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162The.entryEOF=newEntryEOF(in,this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF!=entryBytesRead){this.entryEOF=true;}else{for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryBytesRead
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF==entryBytesRead){this.entryEOF=true;}else{for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryBytesRead
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,0,this.tmpbuf.length-2));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=newEntryEOF(this.tmpbuf,1,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF-=JSON_BYTES_BUF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.equals(this.tmpbuf.length)&&this.tmpbuf.length>0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&this.tmpbuf.length>2;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162This.entryEOF=this.in==null?false:this.in.read(this.tmpbuf,0,this.tmpbuf.length)!=;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162It.entryEOF="null";
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryBy
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){this.tmpbuf
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,this.tmpbuf.length)-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){this.entryEOF=false;}elseif(this.tmpbuf.length<0){for(inti=0,len=this.tmpbuf.length;i<len;++i){C
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF|=JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,0,this.tmpbuf.length-2));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=this.in!=null?this.in.read():false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=this.in==null?this.in.read():false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=this.in!=null?this.in.getValue():false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=this.in==null?this.in.getValue():false;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tryEOF&=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator<TWO_BYTES_BUF,this.tmpbuf.length){this.entryEOF=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator<TWO_BYTES_BUF,tmpbuf.length){this.entryEOF=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator<TWO_BYTES_BUF=this.tmpbuf.entryEOF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator<TWO_BYTES_BUF,tmpbuf.length){this.entryEOF=true;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator<TWO_BYTES_BUF,this.tmpbuf.length){this.entryEOF=true;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf.length)&&isEnabled(Feature.QUOTE_BYTES_BUF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&isEnabled(Feature.QUOTE_BYTES_BUF,closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF="null".equals(this.tmpbuf.length)&&isEnabled(Feature.QUOTE_FIELD_NAMES,closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=true,this.tmpbuf.length>0);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=true,this.tmpbuf.length==0);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator.entryEOF=true,this.tmpbuf.length};
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValue();if
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.getValu
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF==null){this.entryEOF=true;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF==entry){this.entryEOF=true;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF==null){this.entryEOF=true;}elseif(this.tmpbuf.length==0){for(inti=0,len=this.tmpbuf.length;i<len;++i){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF==null){this.entryEOF=true;}elseif(this.tmpbuf.length!=0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF==entry){this.entryEOF=true;}elseif(this.tmpbuf.length!=0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=entryBytesRead+this.tmpbuf.length;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clon
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone()
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf,this.tmpbuf.length)>0;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf,this.tmpbuf.length)+1;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=JsonStringEncoder.getInstance().encodeAsIOD(this.tmpbuf,this.tmpbuf.length));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF&=JsonStringEncoder.getInstance().encodeAsEOF(this.tmpbuf);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf[i]=newEntryEOF(this.tmpbuf,0,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator<TWO_BYTES_BUF,this.tmpbuf.length){this.EntryEOF=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator<TWO_BYTES_BUF,tmpbuf.length){this.EntryEOF=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator<TWO_BYTES_BUF,this.tmpbuf=newbyte[this.tmpbuf.length];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162Iterator<TWO_BYTES_BUF,tmpbuf.length){this.EntryEOF=true;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newbyte[this.tmpbuf.length*this.blockSize];
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.tmpbuf=newBufferedReader(newInputStreamReader(this.entryBytesRead,0,this.tmpbuf.length-1));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=newString(this.tmpbuf,1,this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=false;}elseif(this.tmpbuf.length>0){for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryB
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(entryEOF){this.entryEOF=true;}else{for(inti=0,len=this.tmpbuf.length;i<len;++i){CpioArchiveEntryentryBy
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.entryEOF){if(entry!=null){this.entryEOF=false;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.equals(this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.length>0?this.entryEOF:"/".equals(this.tmpbuf.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162this.entryEOF=this.tmpbuf.toString();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){if(entryEOF){this.entryEOF=false;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java162if(this.tmpbuf!=null){for(inti=0;i<this.tmpbuf.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.tmpbuf.clone()
